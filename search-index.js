var searchIndex = JSON.parse('{\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structures."],"i":[0],"f":[0],"p":[]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"p":[]},\
"cosmic_protocols":{"doc":"This crate provides bindings to the COSMIC wayland …","t":[0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,13,4,13,13,17,17,17,17,17,17,17,17,17,17,4,3,13,13,13,17,17,13,4,13,13,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,4,17,17,17,17,17,17,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,0,0,0,7,7,7,7,7,7,7,13,4,13,13,17,17,17,17,17,17,17,17,17,17,4,3,13,13,13,17,17,13,4,13,13,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,4,17,17,17,17,17,17,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,7,7,7,7,7,7,7,7,13,13,13,13,4,17,17,13,4,4,13,13,17,17,17,17,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,4,13,13,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,4,13,4,13,4,13,13,13,13,13,13,13,18,3,13,17,17,17,17,17,17,17,17,13,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,7,7,7,7,7,7,7,7,13,13,13,13,4,17,17,13,4,4,13,13,17,17,17,17,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,13,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,4,13,4,13,4,13,13,13,13,13,13,13,18,3,13,17,17,17,17,17,17,17,17,13,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,7,7,7,7,7,7,7,7,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,13,17,17,4,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,17,17,17,17,4,13,17,17,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,0,7,7,7,7,7,7,7,7,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,13,17,17,4,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,17,17,17,17,4,13,17,17,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,0,0,0,7,7,7,7,13,13,13,13,13,13,17,17,4,4,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,7,7,7,7,13,13,13,13,13,13,17,17,4,4,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,13,13,13,13,17,17,17,17,17,17,17,17,17,17,4,13,13,17,17,17,17,13,4,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,4,13,13,17,17,17,17,17,17,17,17,13,13,13,4,4,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,17,17,17,17,17,17,4,13,17,17,17,17,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,13,13,13,13,17,17,17,17,17,17,17,17,17,17,4,13,13,17,17,17,17,13,4,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,4,13,13,17,17,17,17,17,17,17,17,13,13,13,4,4,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,17,17,17,17,17,17,4,13,17,17,17,17,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["export_dmabuf","screencopy","toplevel_info","toplevel_management","workspace","v1","client","server","__interfaces","zcosmic_export_dmabuf_frame_v1","zcosmic_export_dmabuf_manager_v1","ZCOSMIC_EXPORT_DMABUF_FRAME_V1_INTERFACE","ZCOSMIC_EXPORT_DMABUF_MANAGER_V1_INTERFACE","zcosmic_export_dmabuf_frame_v1_events","zcosmic_export_dmabuf_frame_v1_interface","zcosmic_export_dmabuf_frame_v1_requests","zcosmic_export_dmabuf_manager_v1_interface","zcosmic_export_dmabuf_manager_v1_requests","Cancel","CancelReason","Destroy","Device","EVT_CANCEL_OPCODE","EVT_CANCEL_SINCE","EVT_DEVICE_OPCODE","EVT_DEVICE_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_OBJECT_OPCODE","EVT_OBJECT_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","Event","Flags","Frame","Object","Permanent","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","Resizing","Temporary","Transient","ZcosmicExportDmabufFrameV1","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","data","destroy","difference","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","version","write_request","buffer_flags","fd","flags","format","height","index","mod_high","mod_low","node","num_objects","offset","offset_x","offset_y","plane_index","reason","size","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","CaptureOutput","CaptureToplevel","CaptureWorkspace","Destroy","Event","REQ_CAPTURE_OUTPUT_OPCODE","REQ_CAPTURE_OUTPUT_SINCE","REQ_CAPTURE_TOPLEVEL_OPCODE","REQ_CAPTURE_TOPLEVEL_SINCE","REQ_CAPTURE_WORKSPACE_OPCODE","REQ_CAPTURE_WORKSPACE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicExportDmabufManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capture_output","capture_toplevel","capture_workspace","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","output","overlay_cursor","overlay_cursor","overlay_cursor","toplevel","workspace","__interfaces","zcosmic_export_dmabuf_frame_v1","zcosmic_export_dmabuf_manager_v1","ZCOSMIC_EXPORT_DMABUF_FRAME_V1_INTERFACE","ZCOSMIC_EXPORT_DMABUF_MANAGER_V1_INTERFACE","zcosmic_export_dmabuf_frame_v1_events","zcosmic_export_dmabuf_frame_v1_interface","zcosmic_export_dmabuf_frame_v1_requests","zcosmic_export_dmabuf_manager_v1_interface","zcosmic_export_dmabuf_manager_v1_requests","Cancel","CancelReason","Destroy","Device","EVT_CANCEL_OPCODE","EVT_CANCEL_SINCE","EVT_DEVICE_OPCODE","EVT_DEVICE_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_OBJECT_OPCODE","EVT_OBJECT_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","Event","Flags","Frame","Object","Permanent","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","Resizing","Temporary","Transient","ZcosmicExportDmabufFrameV1","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","data","device","difference","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","handle","hash","hash","id","insert","interface","intersection","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","ready","remove","send_event","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","version","write_event","buffer_flags","fd","flags","format","height","index","mod_high","mod_low","node","num_objects","offset","offset_x","offset_y","plane_index","reason","size","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","CaptureOutput","CaptureToplevel","CaptureWorkspace","Destroy","Event","REQ_CAPTURE_OUTPUT_OPCODE","REQ_CAPTURE_OUTPUT_SINCE","REQ_CAPTURE_TOPLEVEL_OPCODE","REQ_CAPTURE_TOPLEVEL_SINCE","REQ_CAPTURE_WORKSPACE_OPCODE","REQ_CAPTURE_WORKSPACE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicExportDmabufManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","frame","frame","frame","output","output","overlay_cursor","overlay_cursor","overlay_cursor","toplevel","workspace","v1","client","server","__interfaces","zcosmic_screencopy_manager_v1","zcosmic_screencopy_session_v1","ZCOSMIC_SCREENCOPY_MANAGER_V1_INTERFACE","ZCOSMIC_SCREENCOPY_SESSION_V1_INTERFACE","zcosmic_screencopy_manager_v1_events","zcosmic_screencopy_manager_v1_interface","zcosmic_screencopy_manager_v1_requests","zcosmic_screencopy_session_v1_events","zcosmic_screencopy_session_v1_interface","zcosmic_screencopy_session_v1_requests","Capture","CaptureOutput","CaptureToplevel","CaptureWorkspace","CursorMode","EVT_SUPPORTED_CURSOR_MODE_OPCODE","EVT_SUPPORTED_CURSOR_MODE_SINCE","Embedded","Error","Event","Hidden","InvalidCursorMode","REQ_CAPTURE_OUTPUT_OPCODE","REQ_CAPTURE_OUTPUT_SINCE","REQ_CAPTURE_TOPLEVEL_OPCODE","REQ_CAPTURE_TOPLEVEL_SINCE","REQ_CAPTURE_WORKSPACE_OPCODE","REQ_CAPTURE_WORKSPACE_SINCE","Request","SupportedCursorMode","ZcosmicScreencopyManagerV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture_output","capture_toplevel","capture_workspace","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","mode","cursor","cursor","cursor","output","output","toplevel","workspace","AttachBuffer","BufferInfo","BufferType","CaptureCursor","Commit","CommitTime","CursorEnter","CursorInfo","CursorLeave","Damage","Destroy","Dmabuf","EVT_BUFFER_INFO_OPCODE","EVT_BUFFER_INFO_SINCE","EVT_COMMIT_TIME_OPCODE","EVT_COMMIT_TIME_SINCE","EVT_CURSOR_ENTER_OPCODE","EVT_CURSOR_ENTER_SINCE","EVT_CURSOR_INFO_OPCODE","EVT_CURSOR_INFO_SINCE","EVT_CURSOR_LEAVE_OPCODE","EVT_CURSOR_LEAVE_SINCE","EVT_DAMAGE_OPCODE","EVT_DAMAGE_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_INIT_DONE_OPCODE","EVT_INIT_DONE_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","EVT_TRANSFORM_OPCODE","EVT_TRANSFORM_SINCE","Error","Event","Failed","FailureReason","InitDone","InputType","InvalidBuffer","InvalidCursorMode","InvalidOutput","InvalidSeat","InvalidSize","InvalidToplevel","InvalidWorkspace","OnDamage","Options","Pointer","REQ_ATTACH_BUFFER_OPCODE","REQ_ATTACH_BUFFER_SINCE","REQ_CAPTURE_CURSOR_OPCODE","REQ_CAPTURE_CURSOR_SINCE","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","Tablet","Transform","Unspec","WlShm","ZcosmicScreencopySessionV1","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","attach_buffer","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture_cursor","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","commit","complement","contains","data","destroy","difference","empty","eq","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","hash","hash","hash","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","version","write_request","_type","format","height","height","height","hotspot_x","hotspot_y","input_type","input_type","input_type","node","position_x","position_y","reason","seat","seat","seat","stride","transform","tv_nsec","tv_sec_hi","tv_sec_lo","width","width","width","x","y","age","buffer","node","options","seat","__interfaces","zcosmic_screencopy_manager_v1","zcosmic_screencopy_session_v1","ZCOSMIC_SCREENCOPY_MANAGER_V1_INTERFACE","ZCOSMIC_SCREENCOPY_SESSION_V1_INTERFACE","zcosmic_screencopy_manager_v1_events","zcosmic_screencopy_manager_v1_interface","zcosmic_screencopy_manager_v1_requests","zcosmic_screencopy_session_v1_events","zcosmic_screencopy_session_v1_interface","zcosmic_screencopy_session_v1_requests","Capture","CaptureOutput","CaptureToplevel","CaptureWorkspace","CursorMode","EVT_SUPPORTED_CURSOR_MODE_OPCODE","EVT_SUPPORTED_CURSOR_MODE_SINCE","Embedded","Error","Event","Hidden","InvalidCursorMode","REQ_CAPTURE_OUTPUT_OPCODE","REQ_CAPTURE_OUTPUT_SINCE","REQ_CAPTURE_TOPLEVEL_OPCODE","REQ_CAPTURE_TOPLEVEL_SINCE","REQ_CAPTURE_WORKSPACE_OPCODE","REQ_CAPTURE_WORKSPACE_SINCE","Request","SupportedCursorMode","ZcosmicScreencopyManagerV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","send_event","supported_cursor_mode","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","mode","cursor","cursor","cursor","output","output","session","session","session","toplevel","workspace","AttachBuffer","BufferInfo","BufferType","CaptureCursor","Commit","CommitTime","CursorEnter","CursorInfo","CursorLeave","Damage","Destroy","Dmabuf","EVT_BUFFER_INFO_OPCODE","EVT_BUFFER_INFO_SINCE","EVT_COMMIT_TIME_OPCODE","EVT_COMMIT_TIME_SINCE","EVT_CURSOR_ENTER_OPCODE","EVT_CURSOR_ENTER_SINCE","EVT_CURSOR_INFO_OPCODE","EVT_CURSOR_INFO_SINCE","EVT_CURSOR_LEAVE_OPCODE","EVT_CURSOR_LEAVE_SINCE","EVT_DAMAGE_OPCODE","EVT_DAMAGE_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_INIT_DONE_OPCODE","EVT_INIT_DONE_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","EVT_TRANSFORM_OPCODE","EVT_TRANSFORM_SINCE","Error","Event","Failed","FailureReason","InitDone","InputType","InvalidBuffer","InvalidCursorMode","InvalidOutput","InvalidSeat","InvalidSize","InvalidToplevel","InvalidWorkspace","OnDamage","Options","Pointer","REQ_ATTACH_BUFFER_OPCODE","REQ_ATTACH_BUFFER_SINCE","REQ_CAPTURE_CURSOR_OPCODE","REQ_CAPTURE_CURSOR_SINCE","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","Tablet","Transform","Unspec","WlShm","ZcosmicScreencopySessionV1","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_info","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","commit_time","complement","contains","cursor_enter","cursor_info","cursor_leave","damage","data","difference","empty","eq","eq","eq","eq","eq","eq","eq","extend","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","handle","hash","hash","hash","hash","hash","id","init_done","insert","interface","intersection","intersects","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","ready","remove","send_event","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","version","write_event","_type","format","height","height","height","hotspot_x","hotspot_y","input_type","input_type","input_type","node","position_x","position_y","reason","seat","seat","seat","stride","transform","tv_nsec","tv_sec_hi","tv_sec_lo","width","width","width","x","y","age","buffer","node","options","seat","session","v1","client","server","__interfaces","zcosmic_toplevel_handle_v1","zcosmic_toplevel_info_v1","ZCOSMIC_TOPLEVEL_HANDLE_V1_INTERFACE","ZCOSMIC_TOPLEVEL_INFO_V1_INTERFACE","zcosmic_toplevel_handle_v1_events","zcosmic_toplevel_handle_v1_interface","zcosmic_toplevel_handle_v1_requests","zcosmic_toplevel_info_v1_events","zcosmic_toplevel_info_v1_interface","zcosmic_toplevel_info_v1_requests","Activated","AppId","Closed","Destroy","Done","EVT_APP_ID_OPCODE","EVT_APP_ID_SINCE","EVT_CLOSED_OPCODE","EVT_CLOSED_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","EVT_TITLE_OPCODE","EVT_TITLE_SINCE","EVT_WORKSPACE_ENTER_OPCODE","EVT_WORKSPACE_ENTER_SINCE","EVT_WORKSPACE_LEAVE_OPCODE","EVT_WORKSPACE_LEAVE_SINCE","Event","Fullscreen","Maximized","Minimized","OutputEnter","OutputLeave","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","State","State","Title","WorkspaceEnter","WorkspaceLeave","ZcosmicToplevelHandleV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","app_id","output","output","state","title","workspace","workspace","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_TOPLEVEL_OPCODE","EVT_TOPLEVEL_SINCE","Event","Finished","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","Toplevel","ZcosmicToplevelInfoV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","toplevel","__interfaces","zcosmic_toplevel_handle_v1","zcosmic_toplevel_info_v1","ZCOSMIC_TOPLEVEL_HANDLE_V1_INTERFACE","ZCOSMIC_TOPLEVEL_INFO_V1_INTERFACE","zcosmic_toplevel_handle_v1_events","zcosmic_toplevel_handle_v1_interface","zcosmic_toplevel_handle_v1_requests","zcosmic_toplevel_info_v1_events","zcosmic_toplevel_info_v1_interface","zcosmic_toplevel_info_v1_requests","Activated","AppId","Closed","Destroy","Done","EVT_APP_ID_OPCODE","EVT_APP_ID_SINCE","EVT_CLOSED_OPCODE","EVT_CLOSED_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","EVT_TITLE_OPCODE","EVT_TITLE_SINCE","EVT_WORKSPACE_ENTER_OPCODE","EVT_WORKSPACE_ENTER_SINCE","EVT_WORKSPACE_LEAVE_OPCODE","EVT_WORKSPACE_LEAVE_SINCE","Event","Fullscreen","Maximized","Minimized","OutputEnter","OutputLeave","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","State","State","Title","WorkspaceEnter","WorkspaceLeave","ZcosmicToplevelHandleV1","app_id","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","closed","cmp","data","done","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","output_enter","output_leave","parse_request","partial_cmp","send_event","state","title","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","workspace_enter","workspace_leave","write_event","app_id","output","output","state","title","workspace","workspace","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_TOPLEVEL_OPCODE","EVT_TOPLEVEL_SINCE","Event","Finished","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","Toplevel","ZcosmicToplevelInfoV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","finished","fmt","fmt","fmt","from","from","from","from_id","handle","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","toplevel","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","toplevel","v1","client","server","__interfaces","zcosmic_toplevel_manager_v1","ZCOSMIC_TOPLEVEL_MANAGER_V1_INTERFACE","zcosmic_toplevel_manager_v1_events","zcosmic_toplevel_manager_v1_interface","zcosmic_toplevel_manager_v1_requests","Activate","Activate","Capabilities","Close","Close","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","Error","Event","Fullscreen","InvalidRectangle","Maximize","Minimize","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_CLOSE_OPCODE","REQ_CLOSE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_RECTANGLE_OPCODE","REQ_SET_RECTANGLE_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","REQ_UNSET_MINIMIZED_OPCODE","REQ_UNSET_MINIMIZED_SINCE","Request","SetFullscreen","SetMaximized","SetMinimized","SetRectangle","UnsetFullscreen","UnsetMaximized","UnsetMinimized","ZcosmicToplelevelManagementCapabilitiesV1","ZcosmicToplevelManagerV1","activate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","close","cmp","cmp","data","destroy","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","set_fullscreen","set_maximized","set_minimized","set_rectangle","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","unset_minimized","version","write_request","capabilities","height","output","seat","surface","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","width","x","y","__interfaces","zcosmic_toplevel_manager_v1","ZCOSMIC_TOPLEVEL_MANAGER_V1_INTERFACE","zcosmic_toplevel_manager_v1_events","zcosmic_toplevel_manager_v1_interface","zcosmic_toplevel_manager_v1_requests","Activate","Activate","Capabilities","Close","Close","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","Error","Event","Fullscreen","InvalidRectangle","Maximize","Minimize","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_CLOSE_OPCODE","REQ_CLOSE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_RECTANGLE_OPCODE","REQ_SET_RECTANGLE_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","REQ_UNSET_MINIMIZED_OPCODE","REQ_UNSET_MINIMIZED_SINCE","Request","SetFullscreen","SetMaximized","SetMinimized","SetRectangle","UnsetFullscreen","UnsetMaximized","UnsetMinimized","ZcosmicToplelevelManagementCapabilitiesV1","ZcosmicToplevelManagerV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","send_event","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","capabilities","height","output","seat","surface","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","width","x","y","v1","client","server","__interfaces","zcosmic_workspace_group_handle_v1","zcosmic_workspace_handle_v1","zcosmic_workspace_manager_v1","ZCOSMIC_WORKSPACE_GROUP_HANDLE_V1_INTERFACE","ZCOSMIC_WORKSPACE_HANDLE_V1_INTERFACE","ZCOSMIC_WORKSPACE_MANAGER_V1_INTERFACE","zcosmic_workspace_group_handle_v1_events","zcosmic_workspace_group_handle_v1_interface","zcosmic_workspace_group_handle_v1_requests","zcosmic_workspace_handle_v1_events","zcosmic_workspace_handle_v1_interface","zcosmic_workspace_handle_v1_requests","zcosmic_workspace_manager_v1_events","zcosmic_workspace_manager_v1_interface","zcosmic_workspace_manager_v1_requests","Capabilities","CreateWorkspace","CreateWorkspace","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_REMOVE_OPCODE","EVT_REMOVE_SINCE","EVT_WORKSPACE_OPCODE","EVT_WORKSPACE_SINCE","Event","OutputEnter","OutputLeave","REQ_CREATE_WORKSPACE_OPCODE","REQ_CREATE_WORKSPACE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Remove","Request","Workspace","ZcosmicWorkspaceGroupCapabilitiesV1","ZcosmicWorkspaceGroupHandleV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","create_workspace","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","capabilities","output","output","workspace","workspace","Activate","Activate","Active","Capabilities","Coordinates","Deactivate","Deactivate","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_COORDINATES_OPCODE","EVT_COORDINATES_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_REMOVE_OPCODE","EVT_REMOVE_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","Event","Hidden","Name","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_DEACTIVATE_OPCODE","REQ_DEACTIVATE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_REMOVE_OPCODE","REQ_REMOVE_SINCE","Remove","Remove","Remove","Request","State","State","Urgent","ZcosmicWorkspaceCapabilitiesV1","ZcosmicWorkspaceHandleV1","activate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","deactivate","destroy","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","remove","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","capabilities","coordinates","name","state","Commit","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_WORKSPACE_GROUP_OPCODE","EVT_WORKSPACE_GROUP_SINCE","Event","Finished","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","WorkspaceGroup","ZcosmicWorkspaceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","workspace_group","__interfaces","zcosmic_workspace_group_handle_v1","zcosmic_workspace_handle_v1","zcosmic_workspace_manager_v1","ZCOSMIC_WORKSPACE_GROUP_HANDLE_V1_INTERFACE","ZCOSMIC_WORKSPACE_HANDLE_V1_INTERFACE","ZCOSMIC_WORKSPACE_MANAGER_V1_INTERFACE","zcosmic_workspace_group_handle_v1_events","zcosmic_workspace_group_handle_v1_interface","zcosmic_workspace_group_handle_v1_requests","zcosmic_workspace_handle_v1_events","zcosmic_workspace_handle_v1_interface","zcosmic_workspace_handle_v1_requests","zcosmic_workspace_manager_v1_events","zcosmic_workspace_manager_v1_interface","zcosmic_workspace_manager_v1_requests","Capabilities","CreateWorkspace","CreateWorkspace","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_REMOVE_OPCODE","EVT_REMOVE_SINCE","EVT_WORKSPACE_OPCODE","EVT_WORKSPACE_SINCE","Event","OutputEnter","OutputLeave","REQ_CREATE_WORKSPACE_OPCODE","REQ_CREATE_WORKSPACE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Remove","Request","Workspace","ZcosmicWorkspaceGroupCapabilitiesV1","ZcosmicWorkspaceGroupHandleV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","output_enter","output_leave","parse_request","partial_cmp","remove","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","workspace","write_event","capabilities","output","output","workspace","workspace","Activate","Activate","Active","Capabilities","Coordinates","Deactivate","Deactivate","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_COORDINATES_OPCODE","EVT_COORDINATES_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_REMOVE_OPCODE","EVT_REMOVE_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","Event","Hidden","Name","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_DEACTIVATE_OPCODE","REQ_DEACTIVATE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_REMOVE_OPCODE","REQ_REMOVE_SINCE","Remove","Remove","Remove","Request","State","State","Urgent","ZcosmicWorkspaceCapabilitiesV1","ZcosmicWorkspaceHandleV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","coordinates","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","name","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","remove","send_event","state","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","capabilities","coordinates","name","state","Commit","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_WORKSPACE_GROUP_OPCODE","EVT_WORKSPACE_GROUP_SINCE","Event","Finished","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","WorkspaceGroup","ZcosmicWorkspaceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","done","eq","eq","finished","fmt","fmt","fmt","from","from","from","from_id","handle","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","workspace_group","write_event","workspace_group"],"q":["cosmic_protocols","","","","","cosmic_protocols::export_dmabuf","cosmic_protocols::export_dmabuf::v1","","cosmic_protocols::export_dmabuf::v1::client","","","cosmic_protocols::export_dmabuf::v1::client::__interfaces","","","","","","","cosmic_protocols::export_dmabuf::v1::client::zcosmic_export_dmabuf_frame_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::export_dmabuf::v1::client::zcosmic_export_dmabuf_frame_v1::Event","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::export_dmabuf::v1::client::zcosmic_export_dmabuf_manager_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::export_dmabuf::v1::client::zcosmic_export_dmabuf_manager_v1::Request","","","","","","","cosmic_protocols::export_dmabuf::v1::server","","","cosmic_protocols::export_dmabuf::v1::server::__interfaces","","","","","","","cosmic_protocols::export_dmabuf::v1::server::zcosmic_export_dmabuf_frame_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::export_dmabuf::v1::server::zcosmic_export_dmabuf_frame_v1::Event","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::export_dmabuf::v1::server::zcosmic_export_dmabuf_manager_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::export_dmabuf::v1::server::zcosmic_export_dmabuf_manager_v1::Request","","","","","","","","","","cosmic_protocols::screencopy","cosmic_protocols::screencopy::v1","","cosmic_protocols::screencopy::v1::client","","","cosmic_protocols::screencopy::v1::client::__interfaces","","","","","","","","cosmic_protocols::screencopy::v1::client::zcosmic_screencopy_manager_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::screencopy::v1::client::zcosmic_screencopy_manager_v1::Event","cosmic_protocols::screencopy::v1::client::zcosmic_screencopy_manager_v1::Request","","","","","","","cosmic_protocols::screencopy::v1::client::zcosmic_screencopy_session_vcosmic_protocols::screencopy::v1::client::zcosmic_screencopy_session_v1::Event","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::screencopy::v1::client::zcosmic_screencopy_session_v1::Request","","","","","cosmic_protocols::screencopy::v1::server","","","cosmic_protocols::screencopy::v1::server::__interfaces","","","","","","","","cosmic_protocols::screencopy::v1::server::zcosmic_screencopy_manager_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::screencopy::v1::server::zcosmic_screencopy_manager_v1::Event","cosmic_protocols::screencopy::v1::server::zcosmic_screencopy_manager_v1::Request","","","","","","","","","","cosmic_protocols::screencopy::v1::server::zcosmic_screencopy_session_vcosmic_protocols::screencopy::v1::server::zcosmic_screencopy_session_v1::Event","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::screencopy::v1::server::zcosmic_screencopy_session_v1::Request","","","","","","cosmic_protocols::toplevel_info","cosmic_protocols::toplevel_info::v1","","cosmic_protocols::toplevel_info::v1::client","","","cosmic_protocols::toplevel_info::v1::client::__interfaces","","","","","","","","cosmic_protocols::toplevel_info::v1::client::zcosmic_toplevel_handle_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::toplevel_info::v1::client::zcosmic_toplevel_handle_v1::Event","","","","","","","cosmic_protocols::toplevel_info::v1::client::zcosmic_toplevel_info_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::toplevel_info::v1::client::zcosmic_toplevel_info_v1::Event","cosmic_protocols::toplevel_info::v1::server","","","cosmic_protocols::toplevel_info::v1::server::__interfaces","","","","","","","","cosmic_protocols::toplevel_info::v1::server::zcosmic_toplevel_handle_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::toplevel_info::v1::server::zcosmic_toplevel_handle_v1::Event","","","","","","","cosmic_protocols::toplevel_info::v1::server::zcosmic_toplevel_info_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::toplevel_info::v1::server::zcosmic_toplevel_info_v1::Event","cosmic_protocols::toplevel_management","cosmic_protocols::toplevel_management::v1","","cosmic_protocols::toplevel_management::v1::client","","cosmic_protocols::toplevel_management::v1::client::__interfaces","","","","cosmic_protocols::toplevel_management::v1::client::zcosmic_toplevel_manager_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::toplevel_management::v1::client::zcosmic_toplevel_manager_v1::Event","cosmic_protocols::toplevel_management::v1::client::zcosmic_toplevel_manager_v1::Request","","","","","","","","","","","","","","","","cosmic_protocols::toplevel_management::v1::server","","cosmic_protocols::toplevel_management::v1::server::__interfaces","","","","cosmic_protocols::toplevel_management::v1::server::zcosmic_toplevel_manager_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::toplevel_management::v1::server::zcosmic_toplevel_manager_v1::Event","cosmic_protocols::toplevel_management::v1::server::zcosmic_toplevel_manager_v1::Request","","","","","","","","","","","","","","","","cosmic_protocols::workspace","cosmic_protocols::workspace::v1","","cosmic_protocols::workspace::v1::client","","","","cosmic_protocols::workspace::v1::client::__interfaces","","","","","","","","","","","","cosmic_protocols::workspace::v1::client::zcosmic_workspace_group_handle_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::workspace::v1::client::zcosmic_workspace_group_handle_v1::Event","","","","cosmic_protocols::workspace::v1::client::zcosmic_workspace_group_handle_v1::Request","cosmic_protocols::workspace::v1::client::zcosmic_workspace_handle_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::workspace::v1::client::zcosmic_workspace_handle_v1::Event","","","","cosmic_protocols::workspace::v1::client::zcosmic_workspace_manager_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::workspace::v1::client::zcosmic_workspace_manager_v1::Event","cosmic_protocols::workspace::v1::server","","","","cosmic_protocols::workspace::v1::server::__interfaces","","","","","","","","","","","","cosmic_protocols::workspace::v1::server::zcosmic_workspace_group_handle_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::workspace::v1::server::zcosmic_workspace_group_handle_v1::Event","","","","cosmic_protocols::workspace::v1::server::zcosmic_workspace_group_handle_v1::Request","cosmic_protocols::workspace::v1::server::zcosmic_workspace_handle_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::workspace::v1::server::zcosmic_workspace_handle_v1::Event","","","","cosmic_protocols::workspace::v1::server::zcosmic_workspace_manager_v1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cosmic_protocols::workspace::v1::server::zcosmic_workspace_manager_v1::Event"],"d":["Low overhead capture interface.","Capture interface.","Receive information about toplevel surfaces.","Modify state toplevel surfaces.","Receive information about and control workspaces.","","Client-side API of this protocol","Server-side API of this protocol","","a DMA-BUF frame","manager to inform clients and begin capturing","","","","","","","","indicates the frame is no longer valid","cancel reason","delete this object, used or not","device node used to allocate the buffer","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","frame flags","a frame description","an object description","fatal error, source will not produce frames","The wire opcode for this request","The minimal object version supporting this request","indicates frame is available for reading","","temporary error, source will produce more frames","temporary error, source will produce more frames","clients should copy frame before processing","a DMA-BUF frame","Returns the set containing all flags.","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","delete this object, used or not","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","flags which indicate properties (invert, interlacing), has …","fd of the current object","indicates special frame features","format of the frame (DRM_FORMAT_*)","frame height in pixels","index of the current object","drm format modifier, high","drm format modifier, low","device dev_t value","indicates how many objects (FDs) the frame has (max 4)","starting point for the data in the object’s fd","crop offset for the x axis","crop offset for the y axis","index of the plane the data in the object applies to","indicates a reason for cancelling this frame capture","size in bytes for the current object","line size in bytes","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","frame width in pixels","capture a frame from an output","capture a frame from a toplevel","capture a frame from an workspace","destroy the manager","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to inform clients and begin capturing","","","","","","","","","","","","","","capture a frame from an output","capture a frame from a toplevel","capture a frame from an workspace","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","include custom client hardware cursor on top of the frame","include custom client hardware cursor on top of the frame","include custom client hardware cursor on top of the frame","","","","a DMA-BUF frame","manager to inform clients and begin capturing","","","","","","","","indicates the frame is no longer valid","cancel reason","delete this object, used or not","device node used to allocate the buffer","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","frame flags","a frame description","an object description","fatal error, source will not produce frames","The wire opcode for this request","The minimal object version supporting this request","indicates frame is available for reading","","temporary error, source will produce more frames","temporary error, source will produce more frames","clients should copy frame before processing","a DMA-BUF frame","Returns the set containing all flags.","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","indicates the frame is no longer valid","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","device node used to allocate the buffer","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","a frame description","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","an object description","","Get the opcode number of this message","Get the opcode number of this message","","","","indicates frame is available for reading","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","flags which indicate properties (invert, interlacing), has …","fd of the current object","indicates special frame features","format of the frame (DRM_FORMAT_*)","frame height in pixels","index of the current object","drm format modifier, high","drm format modifier, low","device dev_t value","indicates how many objects (FDs) the frame has (max 4)","starting point for the data in the object’s fd","crop offset for the x axis","crop offset for the y axis","index of the plane the data in the object applies to","indicates a reason for cancelling this frame capture","size in bytes for the current object","line size in bytes","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","frame width in pixels","capture a frame from an output","capture a frame from a toplevel","capture a frame from an workspace","destroy the manager","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to inform clients and begin capturing","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","include custom client hardware cursor on top of the frame","include custom client hardware cursor on top of the frame","include custom client hardware cursor on top of the frame","","","","Client-side API of this protocol","Server-side API of this protocol","","manager to inform clients and begin capturing","a capture session","","","","","","","","","cursor is rendered separately","capture an output","capture an output","capture a workspace","","The wire opcode for this event","The minimal object version supporting this event","cursor is rendered embedded","","","cursor is hidden","the provided cursor mode is not supported","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","Advertised supported cursor modes","manager to inform clients and begin capturing","","","","","","","","","","","","","","","","","","","","","","capture an output","capture an output","capture a workspace","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","attach buffer to surface","buffer information","","create sub-session to capture cursor","commit session","indicates the commit time of the frame","cursor entered surface","cursor specific information","cursor left surface","carries the coordinates of the damaged region","delete this object","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","commit failed","","session initialisation done","","","the provided cursor mode is not supported","","","","","","","","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","indicates frame is available for reading","","","carries the transform","","","a capture session","Returns the set containing all flags.","","","","","","","","","","","","","","","","","attach buffer to surface","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","create sub-session to capture cursor","","","","","","","","","","","","","","","","","","commit session","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","delete this object","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","buffer type","buffer drm format","buffer height","current height","height of the cursor image","hotspot x coordinates","hotspot y coordinates","input type","input type","","device node","position x coordinates","position y coordinates","","","","","buffer stride","","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","buffer width","current width","width of the cursor image","damaged x coordinates","damaged y coordinates","","","device node","","","","manager to inform clients and begin capturing","a capture session","","","","","","","","","cursor is rendered separately","capture an output","capture an output","capture a workspace","","The wire opcode for this event","The minimal object version supporting this event","cursor is rendered embedded","","","cursor is hidden","the provided cursor mode is not supported","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","Advertised supported cursor modes","manager to inform clients and begin capturing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","Advertised supported cursor modes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","attach buffer to surface","buffer information","","create sub-session to capture cursor","commit session","indicates the commit time of the frame","cursor entered surface","cursor specific information","cursor left surface","carries the coordinates of the damaged region","delete this object","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","commit failed","","session initialisation done","","","the provided cursor mode is not supported","","","","","","","","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","indicates frame is available for reading","","","carries the transform","","","a capture session","Returns the set containing all flags.","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","buffer information","","","","","","","","","","","","","","","","","","indicates the commit time of the frame","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","cursor entered surface","cursor specific information","cursor left surface","carries the coordinates of the damaged region","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","commit failed","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","session initialisation done","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","indicates frame is available for reading","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","carries the transform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","buffer type","buffer drm format","buffer height","current height","height of the cursor image","hotspot x coordinates","hotspot y coordinates","input type","input type","","device node","position x coordinates","position y coordinates","","","","","buffer stride","","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","buffer width","current width","width of the cursor image","damaged x coordinates","damaged y coordinates","","","device node","","","","","Client-side API of this protocol","Server-side API of this protocol","","an open toplevel","list toplevels and properties thereof","","","","","","","","","the toplevel is active","app_id change","the toplevel has been closed","destroy the zcosmic_toplevel_handle_v1 object","all information about the toplevel has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the toplevel is fullscreen","the toplevel is maximized","the toplevel is minimized","toplevel entered an output","toplevel left an output","The wire opcode for this request","The minimal object version supporting this request","","types of states on the toplevel","the toplevel state changed","title change","toplevel entered an workspace","toplevel left an workspace","an open toplevel","","","","","","","","","","","","","","","","","","","","","","","","destroy the zcosmic_toplevel_handle_v1 object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the toplevel manager","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a toplevel has been created","list toplevels and properties thereof","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","stop sending events","","","","","","","","","","","","","","","an open toplevel","list toplevels and properties thereof","","","","","","","","","the toplevel is active","app_id change","the toplevel has been closed","destroy the zcosmic_toplevel_handle_v1 object","all information about the toplevel has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the toplevel is fullscreen","the toplevel is maximized","the toplevel is minimized","toplevel entered an output","toplevel left an output","The wire opcode for this request","The minimal object version supporting this request","","types of states on the toplevel","the toplevel state changed","title change","toplevel entered an workspace","toplevel left an workspace","an open toplevel","app_id change","","","","","","","","","","","","","","","","","","","","","the toplevel has been closed","","","all information about the toplevel has been sent","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","toplevel entered an output","toplevel left an output","","","","the toplevel state changed","title change","","","","","","","","","","","","","","","","","toplevel entered an workspace","toplevel left an workspace","","","","","","","","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the toplevel manager","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a toplevel has been created","list toplevels and properties thereof","","","","","","","","","","","","","","","","","","the compositor has finished with the toplevel manager","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","a toplevel has been created","","","","","","","","","","","","","","Client-side API of this protocol","Server-side API of this protocol","","control open apps","","","","","activate request is available","request that a toplevel be activated","compositor capabilities","close request is available","request that a toplevel be closed","destroy the zcosmic_toplevel_manager_v1","The wire opcode for this event","The minimal object version supporting this event","","","set_fullscreen and unset_fullscreen requests are available","the provided rectangle is invalid","set_maximized and unset_maximized requests are available","set_minimized and unset_minimized requests are available","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","request that a toplevel be fullscreened","request that a toplevel be maximized","request that a toplevel be minimized","designate a rectangle to represent a toplevel","request that a toplevel be unfullscreened","request that a toplevel be unmaximized","request that a toplevel be unminimized","","control open apps","request that a toplevel be activated","","","","","","","","","","","","","","","","","","","","","","","","","","","","request that a toplevel be closed","","","","destroy the zcosmic_toplevel_manager_v1","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","request that a toplevel be fullscreened","request that a toplevel be maximized","request that a toplevel be minimized","designate a rectangle to represent a toplevel","","","","","","","","","","","","","","","","","","","","","request that a toplevel be unfullscreened","request that a toplevel be unmaximized","request that a toplevel be unminimized","","","array of 32-bit capabilities","","","","","","","","","","","","","","","","","","control open apps","","","","","activate request is available","request that a toplevel be activated","compositor capabilities","close request is available","request that a toplevel be closed","destroy the zcosmic_toplevel_manager_v1","The wire opcode for this event","The minimal object version supporting this event","","","set_fullscreen and unset_fullscreen requests are available","the provided rectangle is invalid","set_maximized and unset_maximized requests are available","set_minimized and unset_minimized requests are available","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","request that a toplevel be fullscreened","request that a toplevel be maximized","request that a toplevel be minimized","designate a rectangle to represent a toplevel","request that a toplevel be unfullscreened","request that a toplevel be unmaximized","request that a toplevel be unminimized","","control open apps","","","","","","","","","","","","","","","","","","","","","compositor capabilities","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","array of 32-bit capabilities","","","","","","","","","","","","","","","","","","Client-side API of this protocol","Server-side API of this protocol","","a workspace group assigned to a set of outputs","a workspace handing a group of surfaces","list and control workspaces","","","","","","","","","","","","","compositor capabilities","create_workspace request is available","create a new workspace","destroy the zcosmic_workspace_group_handle_v1 object","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","output assigned to workspace group","output removed from workspace group","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","this workspace group has been destroyed","","workspace added to workspace group","","a workspace group assigned to a set of outputs","","","","","","","","","","","","","","","","","","","","","","","create a new workspace","","destroy the zcosmic_workspace_group_handle_v1 object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","array of 32-bit capabilities","","","","","activate request is available","activate the workspace","the workspace is active","compositor capabilities","workspace coordinates changed","deactivate request is available","activate the workspace","destroy the zcosmic_workspace_handle_v1 object","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the workspace is not visible","workspace name changed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","remove request is available","remove the workspace","this workspace has been destroyed","","types of states on the workspace","the state of the workspace changed","the workspace requests attention","","a workspace handing a group of surfaces","activate the workspace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","activate the workspace","destroy the zcosmic_workspace_handle_v1 object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","remove the workspace","","","","","","","","","","","","","","","","","","","","","","","","","array of 32-bit capabilities","","","","all requests about the workspaces have been sent","all information about the workspace groups has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the workspace_manager","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a workspace group has been created","list and control workspaces","","","","","","","","","","","","","","","","all requests about the workspaces have been sent","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","stop sending events","","","","","","","","","","","","","","","a workspace group assigned to a set of outputs","a workspace handing a group of surfaces","list and control workspaces","","","","","","","","","","","","","compositor capabilities","create_workspace request is available","create a new workspace","destroy the zcosmic_workspace_group_handle_v1 object","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","output assigned to workspace group","output removed from workspace group","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","this workspace group has been destroyed","","workspace added to workspace group","","a workspace group assigned to a set of outputs","","","","","","","","","","","","","","","","","compositor capabilities","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","output assigned to workspace group","output removed from workspace group","","","this workspace group has been destroyed","","","","","","","","","","","","","","","","","","workspace added to workspace group","","array of 32-bit capabilities","","","","","activate request is available","activate the workspace","the workspace is active","compositor capabilities","workspace coordinates changed","deactivate request is available","activate the workspace","destroy the zcosmic_workspace_handle_v1 object","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the workspace is not visible","workspace name changed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","remove request is available","remove the workspace","this workspace has been destroyed","","types of states on the workspace","the state of the workspace changed","the workspace requests attention","","a workspace handing a group of surfaces","","","","","","","","","","","","","","","","","","","","","compositor capabilities","","","","","","","","","workspace coordinates changed","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","workspace name changed","","Get the opcode number of this message","Get the opcode number of this message","","","","this workspace has been destroyed","","the state of the workspace changed","","","","","","","","","","","","","","","","","","","","","","","array of 32-bit capabilities","","","","all requests about the workspaces have been sent","all information about the workspace groups has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the workspace_manager","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a workspace group has been created","list and control workspaces","","","","","","","","","","","","","","","","all information about the workspace groups has been sent","","","the compositor has finished with the workspace_manager","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","a workspace group has been created","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,14,15,0,0,0,0,0,0,0,0,0,0,0,0,15,15,6,0,0,15,0,6,6,1,0,1,1,6,14,15,3,1,6,14,15,3,3,1,1,1,1,1,1,1,1,6,14,15,3,1,6,14,15,3,1,6,3,1,6,3,1,6,1,1,3,3,1,1,1,6,3,3,1,1,1,1,1,1,6,14,15,3,1,6,14,15,3,1,1,1,3,1,1,6,3,3,1,3,1,1,1,6,14,15,3,1,6,14,15,3,1,6,14,15,3,1,6,14,15,3,1,1,1,3,14,15,3,1,6,1,3,3,1,1,1,1,1,6,3,1,1,1,6,6,14,15,3,1,6,14,15,3,1,6,14,15,3,1,3,3,138,139,138,138,138,139,138,138,140,138,139,138,138,139,141,139,139,142,142,142,138,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,40,41,32,40,41,32,32,40,41,32,40,41,32,32,32,32,32,32,32,32,32,32,40,41,32,40,41,32,32,32,32,32,40,41,32,40,41,32,40,41,32,40,41,32,32,40,41,32,32,32,32,40,41,32,40,41,32,40,41,32,32,32,143,144,143,144,145,145,144,0,0,0,0,0,0,0,0,0,0,49,0,48,49,0,0,0,0,0,0,0,0,0,0,0,0,49,49,44,0,0,49,0,44,44,42,0,42,42,44,48,49,43,42,44,48,49,43,42,42,42,42,42,42,42,42,44,48,49,43,42,44,48,49,43,43,42,44,43,42,44,43,42,44,42,42,43,43,42,42,42,44,43,43,42,42,42,42,42,42,44,48,49,43,43,42,44,48,49,43,42,42,42,43,42,43,42,44,43,42,43,42,42,42,44,48,49,43,42,44,48,49,43,42,44,48,49,43,42,44,48,49,43,42,42,42,43,43,48,49,43,42,44,43,42,43,42,42,42,42,42,44,43,42,42,42,44,44,48,49,43,42,44,48,49,43,42,44,48,49,43,42,43,43,146,147,146,146,146,147,146,146,148,146,147,146,146,147,149,147,147,150,150,150,146,57,57,57,57,0,0,0,0,0,0,0,0,0,0,0,57,58,56,57,58,56,57,58,56,57,58,56,56,56,56,56,56,57,58,56,57,58,56,56,56,56,56,57,58,56,57,58,56,57,58,56,57,58,56,56,57,58,56,56,56,57,58,56,57,58,56,57,58,56,56,56,151,152,153,151,152,151,152,153,153,152,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,63,63,63,0,0,0,60,0,0,60,62,0,0,0,0,0,0,0,64,0,62,60,63,64,59,62,60,63,64,59,59,62,60,63,64,59,62,60,63,64,59,59,59,59,62,60,59,62,60,59,62,60,59,62,60,59,59,62,60,63,64,59,62,60,63,64,59,59,62,60,59,59,59,62,60,63,64,59,62,60,63,64,59,62,60,63,64,59,62,60,63,64,59,59,63,64,59,62,60,59,59,62,60,59,62,62,60,60,63,64,59,62,60,63,64,59,62,60,63,64,59,59,59,154,155,156,157,155,156,157,156,73,74,0,73,73,74,74,74,74,74,73,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,74,0,70,69,70,70,70,70,70,65,0,71,0,0,0,0,0,0,0,0,74,0,71,74,70,72,0,65,69,70,65,71,72,73,74,61,69,70,65,71,72,73,74,61,61,61,65,65,65,65,65,65,65,69,70,65,71,72,73,74,61,69,70,65,71,72,73,74,61,61,69,70,65,71,72,61,69,70,65,71,72,61,69,70,65,71,72,61,65,65,61,61,65,65,69,70,65,71,72,61,61,65,69,70,65,65,65,65,65,71,72,73,74,61,69,70,65,71,72,73,74,61,65,65,65,61,65,69,70,65,71,72,61,61,65,61,65,65,69,70,65,71,72,73,74,61,69,70,65,71,72,73,74,61,69,70,65,71,72,73,74,61,69,70,65,71,72,73,74,61,65,65,65,61,73,74,61,69,70,65,71,72,65,61,61,65,65,65,65,69,70,65,71,72,61,65,69,69,70,70,65,65,71,71,72,72,73,74,61,69,70,65,71,72,73,74,61,69,70,65,71,72,73,74,61,65,61,61,158,158,158,159,160,160,160,161,162,160,158,160,160,163,161,162,160,158,164,165,165,165,158,159,160,159,159,166,166,166,167,168,0,0,0,0,0,0,0,0,0,0,0,76,78,78,78,0,0,0,76,0,0,76,75,0,0,0,0,0,0,0,79,0,75,76,78,79,77,75,76,78,79,77,75,76,78,79,77,75,76,78,79,77,75,76,77,75,76,77,75,76,77,75,76,77,77,75,76,78,79,77,75,76,78,79,77,77,77,75,76,77,77,75,76,78,79,77,75,76,78,79,77,75,76,78,79,77,75,76,78,79,77,77,78,79,77,75,76,77,77,75,76,77,75,75,76,76,78,79,77,75,76,78,79,77,75,76,78,79,77,77,77,169,170,171,172,170,171,170,171,172,172,171,87,88,0,87,87,88,88,88,88,88,87,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,0,88,0,84,83,84,84,84,84,84,80,0,85,0,0,0,0,0,0,0,0,88,0,85,88,84,82,0,80,83,84,80,85,82,87,88,81,83,84,80,85,82,87,88,81,80,80,80,80,80,80,80,83,84,80,85,82,87,88,81,83,84,80,85,82,87,88,81,81,83,84,80,85,82,81,83,84,80,85,82,81,83,84,80,85,82,81,80,80,81,81,81,81,81,80,80,83,84,80,85,82,81,81,80,81,83,84,80,80,80,80,80,85,82,87,88,81,83,84,80,85,82,87,88,81,80,80,80,81,80,81,83,84,80,85,82,81,81,80,81,80,80,83,84,80,85,82,87,88,81,83,84,80,85,82,87,88,81,83,84,80,85,82,87,88,81,83,84,80,85,82,87,88,81,80,80,80,81,87,88,81,83,84,80,85,82,81,80,81,80,80,80,80,83,84,80,85,82,81,80,81,83,83,84,84,80,80,85,85,82,82,87,88,81,83,84,80,85,82,87,88,81,83,84,80,85,82,87,88,81,80,81,81,173,173,173,174,175,175,175,176,177,175,173,175,175,178,176,177,175,173,179,180,180,180,173,174,175,174,174,181,181,181,182,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,92,92,91,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,90,90,92,92,0,0,0,0,92,92,92,92,0,90,91,92,38,90,91,92,38,38,90,91,92,38,90,91,92,38,90,38,90,38,90,38,38,90,38,38,90,91,92,38,90,91,92,38,38,90,38,38,38,90,91,92,38,90,91,92,38,90,91,92,38,90,91,92,38,38,91,92,38,90,38,38,90,38,90,90,91,92,38,90,91,92,38,90,91,92,38,38,38,184,185,186,187,188,189,190,0,0,0,0,0,95,0,0,0,94,95,0,94,95,93,94,95,93,93,94,95,93,94,95,93,93,93,93,93,93,94,95,93,94,95,93,93,93,93,93,94,95,93,94,95,93,94,95,93,94,95,93,93,94,95,93,93,93,93,93,94,95,93,94,95,93,94,95,93,93,93,191,0,0,0,0,0,0,0,0,0,0,0,97,99,99,98,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,97,97,99,99,0,0,0,0,99,99,99,99,0,96,97,98,99,96,97,98,99,96,97,98,99,96,97,98,99,96,97,96,97,96,96,97,96,96,97,96,96,97,98,99,96,97,98,99,96,96,96,97,96,96,97,98,99,96,97,98,99,96,97,98,99,96,97,98,99,96,96,98,99,96,96,96,97,96,96,96,97,96,97,97,98,99,96,97,98,99,96,97,98,99,96,96,96,96,96,192,193,194,195,196,197,198,0,0,0,0,0,104,0,0,0,103,104,0,103,104,102,103,104,102,103,104,102,103,104,102,102,102,102,102,102,102,103,104,102,103,104,102,102,102,102,102,103,104,102,103,104,102,103,104,102,103,104,102,102,103,104,102,102,102,102,103,104,102,103,104,102,103,104,102,102,102,199,0,0,0,0,0,0,0,0,0,106,108,109,106,108,108,0,0,0,0,106,107,106,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,108,108,108,108,108,108,0,0,105,106,107,108,109,105,106,107,108,109,105,105,106,107,108,109,105,106,107,108,109,105,106,107,105,106,107,105,105,106,107,105,105,106,107,105,105,106,107,108,109,105,106,107,108,109,105,105,106,107,105,105,105,106,107,108,109,105,106,107,108,109,105,106,107,108,109,105,106,107,108,109,105,105,108,109,105,106,107,105,105,105,105,105,105,106,107,105,106,106,107,107,108,109,105,106,107,108,109,105,106,107,108,109,105,105,105,105,105,105,200,201,202,203,201,204,203,205,206,207,208,202,209,201,201,201,201,0,0,0,0,0,0,112,114,115,112,114,114,0,0,0,0,112,113,112,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,114,114,114,0,0,112,113,114,115,111,112,113,114,115,111,112,113,114,115,111,112,113,114,115,111,111,112,113,111,112,113,111,112,113,111,112,113,111,111,112,113,114,115,111,112,113,114,115,111,111,111,112,113,111,111,112,113,114,115,111,112,113,114,115,111,112,113,114,115,111,112,113,114,115,111,111,114,115,111,112,113,111,112,113,111,112,112,113,113,114,115,111,112,113,114,115,111,112,113,114,115,111,111,111,210,211,212,213,211,214,213,215,216,217,218,212,219,211,211,211,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,117,118,118,0,0,0,0,0,0,0,0,0,0,0,119,119,0,0,0,0,119,0,119,0,0,117,118,119,116,117,118,119,116,116,117,118,119,116,117,118,119,116,117,116,117,116,117,116,116,116,117,116,116,117,118,119,116,117,118,119,116,116,117,116,116,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,116,118,119,116,117,116,116,117,116,117,117,118,119,116,117,118,119,116,117,118,119,116,116,116,220,221,222,223,224,121,122,120,123,123,121,122,122,0,0,0,0,0,0,0,0,0,0,0,120,123,0,0,0,0,0,0,0,0,121,122,123,0,0,123,120,0,0,39,120,121,122,123,39,120,121,122,123,39,39,120,121,122,123,39,120,121,122,123,39,120,121,39,120,121,39,120,121,39,39,39,120,121,39,39,120,121,122,123,39,120,121,122,123,39,39,120,121,39,39,39,120,121,122,123,39,120,121,122,123,39,120,121,122,123,39,120,121,122,123,39,39,122,123,39,120,121,39,39,39,120,121,39,120,120,121,121,122,123,39,120,121,122,123,39,120,121,122,123,39,39,39,225,226,227,228,125,126,0,0,0,0,0,0,0,126,0,0,0,0,0,125,126,0,125,126,124,125,126,124,124,125,126,124,125,126,124,124,124,124,124,124,124,125,126,124,125,126,124,124,124,124,124,125,126,124,125,126,124,125,126,124,125,126,124,124,125,126,124,124,124,124,124,125,126,124,125,126,124,125,126,124,124,124,229,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,128,129,129,0,0,0,0,0,0,0,0,0,0,0,130,130,0,0,0,0,130,0,130,0,0,128,129,130,127,128,129,130,127,128,129,130,127,128,129,130,127,127,128,127,128,127,128,127,128,127,127,128,129,130,127,128,129,130,127,127,127,128,127,127,128,129,130,127,128,129,130,127,128,129,130,127,128,129,130,127,127,129,130,127,127,127,128,127,127,128,127,128,128,129,130,127,128,129,130,127,128,129,130,127,127,127,127,230,231,232,233,234,132,133,131,134,134,132,133,133,0,0,0,0,0,0,0,0,0,0,0,131,134,0,0,0,0,0,0,0,0,132,133,134,0,0,134,131,0,0,131,132,133,134,101,131,132,133,134,101,131,132,133,134,101,131,132,133,134,101,101,131,132,101,131,132,101,131,132,101,101,131,132,101,101,131,132,133,134,101,131,132,133,134,101,101,101,131,132,101,101,131,132,133,134,101,131,132,133,134,101,131,132,133,134,101,131,132,133,134,101,101,101,133,134,101,131,132,101,101,101,131,132,101,131,131,132,132,133,134,101,131,132,133,134,101,131,132,133,134,101,101,101,235,236,237,238,136,137,0,0,0,0,0,0,0,137,0,0,0,0,0,136,137,0,136,137,135,136,137,135,136,137,135,136,137,135,135,135,135,135,135,135,135,136,137,135,136,137,135,135,135,135,135,136,137,135,136,137,135,136,137,135,136,137,135,135,136,137,135,135,135,136,137,135,136,137,135,136,137,135,135,135,135,239],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3,4],[[1,1],1],[[1,1]],[[1,1],1],[[1,1]],[1,5],[[1,1],1],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[6,6],[3,3],[[]],[[]],[[]],[[1,1],7],[[6,6],7],[1,1],[[1,1],8],[3,9],[3],[[1,1],1],[[],1],[[1,1],8],[[6,6],8],[[3,3],8],[[3,10],8],[[1,11]],[[1,12],13],[[1,12],13],[[1,12],13],[[1,12],13],[[1,12],13],[[6,12],13],[[14,12],13],[[15,12],13],[[3,12],13],[[]],[[]],[[]],[[]],[[]],[5,[[9,[1]]]],[5,1],[5,1],[[16,17],[[19,[3,18]]]],[11,1],[1],[6],[3,17],[4,3],[[1,1]],[[],20],[[1,1],1],[[1,1],8],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[1,8],[1,8],[1,1],[3,[[9,[23]]]],[14,25],[15,25],[[16,[27,[17,26]]],[[19,[28]]]],[[1,1],[[9,[7]]]],[[6,6],[[9,[7]]]],[[1,1]],[[3,[23,[29]]],[[19,[30,18]]]],[3,[[19,[18]]]],[[1,1,8]],[[1,1],1],[[1,1]],[[1,1],1],[[]],[[]],[[]],[[1,1]],[5,[[19,[1]]]],[[],19],[5,[[19,[6]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[[],31],[[1,1],1],[3,5],[[3,16],[[19,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[32,4],[[]],[[]],[[]],[[]],[[]],[[]],[[32,33,34,35,[0,[36,37]]],3],[[32,33,38,35,[0,[36,37]]],3],[[32,33,39,34,35,[0,[36,37]]],3],[32,32],[[]],[32,9],[32],[[32,10],8],[[32,32],8],[[40,12],13],[[41,12],13],[[32,12],13],[[]],[[]],[[]],[[16,17],[[19,[32,18]]]],[32,17],[4,32],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[32,[[9,[23]]]],[40,25],[41,25],[[16,[27,[17,26]]],[[19,[28]]]],[[32,[23,[29]]],[[19,[30,18]]]],[32,[[19,[18]]]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[32,5],[[32,16],[[19,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],42],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[42,42],42],[[42,42]],[[42,42],42],[[42,42]],[42,5],[[42,42],42],[[42,42]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[43,44]],[42,42],[44,44],[43,43],[[]],[[]],[[]],[[42,42],7],[[44,44],7],[42,42],[[42,42],8],[43,9],[[43,[46,[45]]]],[[42,42],42],[[],42],[[42,42],8],[[44,44],8],[[43,47],8],[[43,43],8],[[42,11]],[[42,12],13],[[42,12],13],[[42,12],13],[[42,12],13],[[42,12],13],[[44,12],13],[[48,12],13],[[49,12],13],[[43,12],13],[[43,5,5,5,5,5,42,5,5,5,5]],[[]],[[]],[[]],[[]],[[]],[5,[[9,[42]]]],[5,42],[5,42],[[50,51],[[19,[43,52]]]],[11,42],[43,53],[42],[44],[43,51],[[42,42]],[[],20],[[42,42],42],[[42,42],8],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[42,8],[42,8],[42,42],[[43,5,54,5,5,5,5]],[43,[[9,[23]]]],[48,25],[49,25],[[50,[27,[51,26]]],[[19,[55]]]],[[42,42],[[9,[7]]]],[[44,44],[[9,[7]]]],[[43,5,5,5]],[[42,42]],[43,[[19,[52]]]],[[42,42,8]],[[42,42],42],[[42,42]],[[42,42],42],[[]],[[]],[[]],[[42,42]],[[],19],[5,[[19,[42]]]],[[],19],[5,[[19,[44]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[[],31],[[42,42],42],[43,5],[[43,50],[[19,[[27,[51,54]],52]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[56,56],[[]],[56,9],[[56,56],8],[[56,47],8],[[57,12],13],[[58,12],13],[[56,12],13],[[]],[[]],[[]],[[50,51],[[19,[56,52]]]],[56,53],[56,51],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[56,[[9,[23]]]],[57,25],[58,25],[[50,[27,[51,26]]],[[19,[55]]]],[56,[[19,[52]]]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[56,5],[[56,50],[[19,[[27,[51,54]],52]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[59,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[59,34,60,35,[0,[36,37]]],61],[[59,38,60,35,[0,[36,37]]],61],[[59,39,34,60,35,[0,[36,37]]],61],[62,62],[60,60],[59,59],[[]],[[]],[[]],[[62,62],7],[[60,60],7],[59,9],[[62,62],8],[[60,60],8],[[59,59],8],[[59,10],8],[[62,12],13],[[60,12],13],[[63,12],13],[[64,12],13],[[59,12],13],[[]],[[]],[[]],[[]],[[]],[[16,17],[[19,[59,18]]]],[62],[60],[59,17],[4,59],[[],20],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[59,[[9,[23]]]],[63,25],[64,25],[[16,[27,[17,26]]],[[19,[28]]]],[[62,62],[[9,[7]]]],[[60,60],[[9,[7]]]],[[59,[23,[29]]],[[19,[30,18]]]],[59,[[19,[18]]]],[[]],[[]],[[]],[[],19],[5,[[19,[62]]]],[[],19],[5,[[19,[60]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[[],31],[59,5],[[59,16],[[19,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],65],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[61,66,[9,[67]],5]],[61,4],[[65,65],65],[[65,65]],[[65,65],65],[[65,65]],[65,5],[[65,65],65],[[65,65]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[61,68,35,[0,[36,37]]],61],[69,69],[70,70],[65,65],[71,71],[72,72],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[69,69],7],[[70,70],7],[[65,65],7],[[71,71],7],[[72,72],7],[[61,65]],[65,65],[[65,65],8],[61,9],[61],[[65,65],65],[[],65],[[69,69],8],[[70,70],8],[[65,65],8],[[71,71],8],[[72,72],8],[[61,61],8],[[61,10],8],[[65,11]],[[69,12],13],[[70,12],13],[[65,12],13],[[65,12],13],[[65,12],13],[[65,12],13],[[65,12],13],[[71,12],13],[[72,12],13],[[73,12],13],[[74,12],13],[[61,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[9,[65]]]],[5,65],[5,65],[[16,17],[[19,[61,18]]]],[11,65],[69],[70],[65],[71],[72],[61,17],[4,61],[[65,65]],[[],20],[[65,65],65],[[65,65],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[65,8],[65,8],[65,65],[61,[[9,[23]]]],[73,25],[74,25],[[16,[27,[17,26]]],[[19,[28]]]],[[69,69],[[9,[7]]]],[[70,70],[[9,[7]]]],[[65,65],[[9,[7]]]],[[71,71],[[9,[7]]]],[[72,72],[[9,[7]]]],[[65,65]],[[61,[23,[29]]],[[19,[30,18]]]],[61,[[19,[18]]]],[[65,65,8]],[[65,65],65],[[65,65]],[[65,65],65],[[]],[[]],[[]],[[]],[[]],[[]],[[65,65]],[5,[[19,[69]]]],[[],19],[[],19],[5,[[19,[70]]]],[[],19],[5,[[19,[65]]]],[[],19],[5,[[19,[71]]]],[5,[[19,[72]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[65,65],65],[61,5],[[61,16],[[19,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[76,76],[77,77],[[]],[[]],[[]],[[75,75],7],[[76,76],7],[77,9],[[75,75],8],[[76,76],8],[[77,77],8],[[77,47],8],[[75,12],13],[[76,12],13],[[78,12],13],[[79,12],13],[[77,12],13],[[]],[[]],[[]],[[]],[[]],[[50,51],[[19,[77,52]]]],[77,53],[75],[76],[77,51],[[],20],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[77,[[9,[23]]]],[78,25],[79,25],[[50,[27,[51,26]]],[[19,[55]]]],[[75,75],[[9,[7]]]],[[76,76],[[9,[7]]]],[77,[[19,[52]]]],[[77,76]],[[]],[[]],[[]],[5,[[19,[75]]]],[[],19],[[],19],[5,[[19,[76]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[[],31],[77,5],[[77,50],[[19,[[27,[51,54]],52]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],80],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[80,80],80],[[80,80]],[[80,80],80],[[80,80]],[80,5],[[80,80],80],[[80,80]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[81,82,[9,[67]],5,5,5,5]],[83,83],[84,84],[80,80],[85,85],[82,82],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[[83,83],7],[[84,84],7],[[80,80],7],[[85,85],7],[[82,82],7],[[81,5,5,5]],[80,80],[[80,80],8],[[81,86,85]],[[81,86,85,33,33,33,33,33,33]],[[81,86,85]],[[81,5,5,5,5]],[81,9],[[80,80],80],[[],80],[[83,83],8],[[84,84],8],[[80,80],8],[[85,85],8],[[82,82],8],[[81,47],8],[[81,81],8],[[80,11]],[[81,84]],[[83,12],13],[[84,12],13],[[80,12],13],[[80,12],13],[[80,12],13],[[80,12],13],[[80,12],13],[[85,12],13],[[82,12],13],[[87,12],13],[[88,12],13],[[81,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[9,[80]]]],[5,80],[5,80],[[50,51],[[19,[81,52]]]],[11,80],[81,53],[83],[84],[80],[85],[82],[81,51],[81],[[80,80]],[[],20],[[80,80],80],[[80,80],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[80,8],[80,8],[80,80],[81,[[9,[23]]]],[87,25],[88,25],[[50,[27,[51,26]]],[[19,[55]]]],[[83,83],[[9,[7]]]],[[84,84],[[9,[7]]]],[[80,80],[[9,[7]]]],[[85,85],[[9,[7]]]],[[82,82],[[9,[7]]]],[81],[[80,80]],[81,[[19,[52]]]],[[80,80,8]],[[80,80],80],[[80,80]],[[80,80],80],[[]],[[]],[[]],[[]],[[]],[[]],[[80,80]],[[81,89]],[[],19],[5,[[19,[83]]]],[[],19],[5,[[19,[84]]]],[[],19],[5,[[19,[80]]]],[5,[[19,[85]]]],[[],19],[[],19],[5,[[19,[82]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[80,80],80],[81,5],[[81,50],[[19,[[27,[51,54]],52]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[38,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,90],[38,38],[[]],[[]],[[90,90],7],[38,9],[38],[[90,90],8],[[38,10],8],[[38,38],8],[[90,12],13],[[91,12],13],[[92,12],13],[[38,12],13],[[]],[[]],[[]],[[]],[[16,17],[[19,[38,18]]]],[90],[38,17],[4,38],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[38,[[9,[23]]]],[91,25],[92,25],[[16,[27,[17,26]]],[[19,[28]]]],[[90,90],[[9,[7]]]],[[38,[23,[29]]],[[19,[30,18]]]],[38,[[19,[18]]]],[[]],[[]],[5,[[19,[90]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[38,5],[[38,16],[[19,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[93,4],[[]],[[]],[[]],[[]],[[]],[[]],[93,93],[[]],[93,9],[[93,93],8],[[93,10],8],[[94,12],13],[[95,12],13],[[93,12],13],[[]],[[]],[[]],[[16,17],[[19,[93,18]]]],[93,17],[4,93],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[93,[[9,[23]]]],[94,25],[95,25],[[16,[27,[17,26]]],[[19,[28]]]],[[93,[23,[29]]],[[19,[30,18]]]],[93,[[19,[18]]]],[93],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[93,5],[[93,16],[[19,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[96,67]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,97],[96,96],[[]],[[]],[96],[[97,97],7],[96,9],[96],[[97,97],8],[[96,96],8],[[96,47],8],[[97,12],13],[[98,12],13],[[99,12],13],[[96,12],13],[[]],[[]],[[]],[[]],[[50,51],[[19,[96,52]]]],[96,53],[97],[96,51],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[96,[[9,[23]]]],[98,25],[99,25],[[96,100]],[[96,100]],[[50,[27,[51,26]]],[[19,[55]]]],[[97,97],[[9,[7]]]],[96,[[19,[52]]]],[[96,[46,[45]]]],[[96,67]],[[]],[[]],[[],19],[5,[[19,[97]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[96,5],[[96,101]],[[96,101]],[[96,50],[[19,[[27,[51,54]],52]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[102,102],[[]],[102,9],[[102,102],8],[[102,47],8],[102],[[103,12],13],[[104,12],13],[[102,12],13],[[]],[[]],[[]],[[50,51],[[19,[102,52]]]],[102,53],[102,51],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[102,[[9,[23]]]],[103,25],[104,25],[[50,[27,[51,26]]],[[19,[55]]]],[102,[[19,[52]]]],[[]],[[102,96]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[102,5],[[102,50],[[19,[[27,[51,54]],52]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[105,38,68]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[105,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[106,106],[107,107],[105,105],[[]],[[]],[[]],[[105,38]],[[106,106],7],[[107,107],7],[105,9],[105],[[106,106],8],[[107,107],8],[[105,10],8],[[105,105],8],[[106,12],13],[[107,12],13],[[108,12],13],[[109,12],13],[[105,12],13],[[]],[[]],[[]],[[]],[[]],[[16,17],[[19,[105,18]]]],[106],[107],[105,17],[4,105],[[],20],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[105,[[9,[23]]]],[108,25],[109,25],[[16,[27,[17,26]]],[[19,[28]]]],[[106,106],[[9,[7]]]],[[107,107],[[9,[7]]]],[[105,[23,[29]]],[[19,[30,18]]]],[105,[[19,[18]]]],[[105,38,[9,[34]]]],[[105,38]],[[105,38]],[[105,38,110,33,33,33,33]],[[]],[[]],[[]],[5,[[19,[106]]]],[[],19],[5,[[19,[107]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[[],31],[[105,38]],[[105,38]],[[105,38]],[105,5],[[105,16],[[19,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[111,[46,[45]]]],[112,112],[113,113],[111,111],[[]],[[]],[[]],[[112,112],7],[[113,113],7],[111,9],[[112,112],8],[[113,113],8],[[111,47],8],[[111,111],8],[[112,12],13],[[113,12],13],[[114,12],13],[[115,12],13],[[111,12],13],[[]],[[]],[[]],[[]],[[]],[[50,51],[[19,[111,52]]]],[111,53],[112],[113],[111,51],[[],20],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[111,[[9,[23]]]],[114,25],[115,25],[[50,[27,[51,26]]],[[19,[55]]]],[[112,112],[[9,[7]]]],[[113,113],[[9,[7]]]],[111,[[19,[52]]]],[[]],[[]],[[]],[[],19],[5,[[19,[112]]]],[5,[[19,[113]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[[],31],[111,5],[[111,50],[[19,[[27,[51,54]],52]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[116,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[117,117],[116,116],[[]],[[]],[[117,117],7],[[116,67]],[116,9],[116],[[117,117],8],[[116,10],8],[[116,116],8],[[117,12],13],[[118,12],13],[[119,12],13],[[116,12],13],[[]],[[]],[[]],[[]],[[16,17],[[19,[116,18]]]],[117],[116,17],[4,116],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[116,[[9,[23]]]],[118,25],[119,25],[[16,[27,[17,26]]],[[19,[28]]]],[[117,117],[[9,[7]]]],[[116,[23,[29]]],[[19,[30,18]]]],[116,[[19,[18]]]],[[]],[[]],[[],19],[5,[[19,[117]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[116,5],[[116,16],[[19,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[39],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[39,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120,120],[121,121],[39,39],[[]],[[]],[[]],[[120,120],7],[[121,121],7],[39,9],[39],[39],[[120,120],8],[[121,121],8],[[39,10],8],[[39,39],8],[[120,12],13],[[121,12],13],[[122,12],13],[[123,12],13],[[39,12],13],[[]],[[]],[[]],[[]],[[]],[[16,17],[[19,[39,18]]]],[120],[121],[39,17],[4,39],[[],20],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[39,[[9,[23]]]],[122,25],[123,25],[[16,[27,[17,26]]],[[19,[28]]]],[[120,120],[[9,[7]]]],[[121,121],[[9,[7]]]],[39],[[39,[23,[29]]],[[19,[30,18]]]],[39,[[19,[18]]]],[[]],[[]],[[]],[[],19],[5,[[19,[120]]]],[5,[[19,[121]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[[],31],[39,5],[[39,16],[[19,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[124,4],[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[[]],[124],[124,9],[[124,10],8],[[124,124],8],[[125,12],13],[[126,12],13],[[124,12],13],[[]],[[]],[[]],[[16,17],[[19,[124,18]]]],[124,17],[4,124],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[124,[[9,[23]]]],[125,25],[126,25],[[16,[27,[17,26]]],[[19,[28]]]],[[124,[23,[29]]],[[19,[30,18]]]],[124,[[19,[18]]]],[124],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[124,5],[[124,16],[[19,[18]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[127,[46,[45]]]],[128,128],[127,127],[[]],[[]],[[128,128],7],[127,9],[[128,128],8],[[127,47],8],[[127,127],8],[[128,12],13],[[129,12],13],[[130,12],13],[[127,12],13],[[]],[[]],[[]],[[]],[[50,51],[[19,[127,52]]]],[127,53],[128],[127,51],[[],20],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[127,[[9,[23]]]],[129,25],[130,25],[[127,100]],[[127,100]],[[50,[27,[51,26]]],[[19,[55]]]],[[128,128],[[9,[7]]]],[127],[127,[[19,[52]]]],[[]],[[]],[[],19],[5,[[19,[128]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[127,5],[[127,101]],[[127,50],[[19,[[27,[51,54]],52]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[101,[46,[45]]]],[131,131],[132,132],[101,101],[[]],[[]],[[]],[[131,131],7],[[132,132],7],[[101,[46,[45]]]],[101,9],[[131,131],8],[[132,132],8],[[101,101],8],[[101,47],8],[[131,12],13],[[132,12],13],[[133,12],13],[[134,12],13],[[101,12],13],[[]],[[]],[[]],[[]],[[]],[[50,51],[[19,[101,52]]]],[101,53],[131],[132],[101,51],[[],20],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[[101,67]],[101,[[9,[23]]]],[133,25],[134,25],[[50,[27,[51,26]]],[[19,[55]]]],[[131,131],[[9,[7]]]],[[132,132],[[9,[7]]]],[101],[101,[[19,[52]]]],[[101,[46,[45]]]],[[]],[[]],[[]],[5,[[19,[131]]]],[[],19],[5,[[19,[132]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[[],31],[[],31],[101,5],[[101,50],[[19,[[27,[51,54]],52]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[135,135],[[]],[135,9],[135],[[135,135],8],[[135,47],8],[135],[[136,12],13],[[137,12],13],[[135,12],13],[[]],[[]],[[]],[[50,51],[[19,[135,52]]]],[135,53],[135,51],[[],20],[[]],[[]],[[]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[[[22,[21]]],[[22,[2,21]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[23,[[23,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[135,[[9,[23]]]],[136,25],[137,25],[[50,[27,[51,26]]],[[19,[55]]]],[135,[[19,[52]]]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],31],[[],31],[[],31],[135,5],[[135,127]],[[135,50],[[19,[[27,[51,54]],52]]]],0],"p":[[3,"Flags"],[8,"Any"],[3,"ZcosmicExportDmabufFrameV1"],[3,"WeakBackend"],[15,"u32"],[4,"CancelReason"],[4,"Ordering"],[15,"bool"],[4,"Option"],[3,"Weak"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"Request"],[4,"Event"],[3,"Connection"],[3,"ObjectId"],[3,"InvalidId"],[4,"Result"],[3,"Interface"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"u16"],[3,"OwnedFd"],[3,"Message"],[4,"DispatchError"],[8,"ObjectData"],[8,"Proxy"],[3,"TypeId"],[3,"ZcosmicExportDmabufManagerV1"],[15,"i32"],[3,"WlOutput"],[3,"QueueHandle"],[8,"Send"],[8,"Sync"],[3,"ZcosmicToplevelHandleV1"],[3,"ZcosmicWorkspaceHandleV1"],[4,"Request"],[4,"Event"],[3,"Flags"],[3,"ZcosmicExportDmabufFrameV1"],[4,"CancelReason"],[15,"u8"],[3,"Vec"],[3,"Weak"],[4,"Request"],[4,"Event"],[3,"DisplayHandle"],[3,"ObjectId"],[3,"InvalidId"],[3,"WeakHandle"],[6,"RawFd"],[4,"DispatchError"],[3,"ZcosmicExportDmabufManagerV1"],[4,"Request"],[4,"Event"],[3,"ZcosmicScreencopyManagerV1"],[4,"CursorMode"],[3,"ZcosmicScreencopySessionV1"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"Options"],[3,"WlBuffer"],[3,"String"],[3,"WlSeat"],[4,"Error"],[4,"FailureReason"],[4,"InputType"],[4,"BufferType"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"CursorMode"],[3,"ZcosmicScreencopyManagerV1"],[4,"Request"],[4,"Event"],[3,"Options"],[3,"ZcosmicScreencopySessionV1"],[4,"BufferType"],[4,"Error"],[4,"FailureReason"],[4,"InputType"],[3,"WlSeat"],[4,"Request"],[4,"Event"],[4,"Transform"],[4,"State"],[4,"Request"],[4,"Event"],[3,"ZcosmicToplevelInfoV1"],[4,"Request"],[4,"Event"],[3,"ZcosmicToplevelHandleV1"],[4,"State"],[4,"Request"],[4,"Event"],[3,"WlOutput"],[3,"ZcosmicWorkspaceHandleV1"],[3,"ZcosmicToplevelInfoV1"],[4,"Request"],[4,"Event"],[3,"ZcosmicToplevelManagerV1"],[4,"ZcosmicToplelevelManagementCapabilitiesV1"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlSurface"],[3,"ZcosmicToplevelManagerV1"],[4,"ZcosmicToplelevelManagementCapabilitiesV1"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZcosmicWorkspaceGroupHandleV1"],[4,"ZcosmicWorkspaceGroupCapabilitiesV1"],[4,"Request"],[4,"Event"],[4,"State"],[4,"ZcosmicWorkspaceCapabilitiesV1"],[4,"Request"],[4,"Event"],[3,"ZcosmicWorkspaceManagerV1"],[4,"Request"],[4,"Event"],[3,"ZcosmicWorkspaceGroupHandleV1"],[4,"ZcosmicWorkspaceGroupCapabilitiesV1"],[4,"Request"],[4,"Event"],[4,"State"],[4,"ZcosmicWorkspaceCapabilitiesV1"],[4,"Request"],[4,"Event"],[3,"ZcosmicWorkspaceManagerV1"],[4,"Request"],[4,"Event"],[13,"Frame"],[13,"Object"],[13,"Device"],[13,"Cancel"],[13,"Ready"],[13,"CaptureOutput"],[13,"CaptureWorkspace"],[13,"CaptureToplevel"],[13,"Frame"],[13,"Object"],[13,"Device"],[13,"Cancel"],[13,"Ready"],[13,"CaptureOutput"],[13,"CaptureWorkspace"],[13,"CaptureToplevel"],[13,"SupportedCursorMode"],[13,"CaptureOutput"],[13,"CaptureWorkspace"],[13,"CaptureToplevel"],[13,"BufferInfo"],[13,"Damage"],[13,"CursorInfo"],[13,"CursorEnter"],[13,"CursorLeave"],[13,"Failed"],[13,"Transform"],[13,"CommitTime"],[13,"AttachBuffer"],[13,"Commit"],[13,"CaptureCursor"],[13,"SupportedCursorMode"],[13,"CaptureOutput"],[13,"CaptureWorkspace"],[13,"CaptureToplevel"],[13,"BufferInfo"],[13,"Damage"],[13,"CursorInfo"],[13,"CursorEnter"],[13,"CursorLeave"],[13,"Failed"],[13,"Transform"],[13,"CommitTime"],[13,"AttachBuffer"],[13,"Commit"],[13,"CaptureCursor"],[13,"AppId"],[13,"OutputEnter"],[13,"OutputLeave"],[13,"State"],[13,"Title"],[13,"WorkspaceEnter"],[13,"WorkspaceLeave"],[13,"Toplevel"],[13,"AppId"],[13,"OutputEnter"],[13,"OutputLeave"],[13,"State"],[13,"Title"],[13,"WorkspaceEnter"],[13,"WorkspaceLeave"],[13,"Toplevel"],[13,"Capabilities"],[13,"SetRectangle"],[13,"SetFullscreen"],[13,"Activate"],[13,"Close"],[13,"SetMaximized"],[13,"UnsetMaximized"],[13,"SetMinimized"],[13,"UnsetMinimized"],[13,"UnsetFullscreen"],[13,"Capabilities"],[13,"SetRectangle"],[13,"SetFullscreen"],[13,"Activate"],[13,"Close"],[13,"SetMaximized"],[13,"UnsetMaximized"],[13,"SetMinimized"],[13,"UnsetMinimized"],[13,"UnsetFullscreen"],[13,"Capabilities"],[13,"OutputEnter"],[13,"OutputLeave"],[13,"Workspace"],[13,"CreateWorkspace"],[13,"Capabilities"],[13,"Coordinates"],[13,"Name"],[13,"State"],[13,"WorkspaceGroup"],[13,"Capabilities"],[13,"OutputEnter"],[13,"OutputLeave"],[13,"Workspace"],[13,"CreateWorkspace"],[13,"Capabilities"],[13,"Coordinates"],[13,"Name"],[13,"State"],[13,"WorkspaceGroup"]]},\
"dlib":{"doc":"dlib is a small crate providing macros to make easy the …","t":[13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,11,11,11,11,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12],"n":["CantOpen","CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlError","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","LibLoadingError","LoadLibraryExW","LoadLibraryExWUnknown","MissingSymbol","borrow","borrow","borrow_mut","borrow_mut","external_library","ffi_dispatch","ffi_dispatch_static","fmt","fmt","fmt","fmt","from","from","into","into","provide","provide","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","desc","desc","desc","source","source","source","source","source","source"],"q":["dlib","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dlib::DlError","","dlib::LibLoadingError","","","","","","","",""],"d":["The requested library would not be opened","Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","An error generated when failing to load a library","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","Errors.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Some required symbol was missing in the library","","","","","Main macro of this library, used to generate the the FFI …","Macro for generically invoking a FFI function","Macro for generically accessing a FFI static","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error."],"i":[1,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,0,4,4,1,1,4,1,4,0,0,0,1,1,4,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,12,13,14,15,16,17,18,19,20,21,22],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[[1,2],3],[[1,2],3],[[4,2],[[6,[5]]]],[[4,2],[[6,[5]]]],[[]],[[]],[[]],[[]],[7],[7],[1,[[9,[8]]]],[4,[[9,[8]]]],[[],10],[[],10],[[],6],[[],6],[[],6],[[],6],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0],"p":[[4,"DlError"],[3,"Formatter"],[6,"Result"],[4,"LibLoadingError"],[3,"Error"],[4,"Result"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[13,"CantOpen"],[13,"MissingSymbol"],[13,"DlOpen"],[13,"DlSym"],[13,"DlClose"],[13,"LoadLibraryExW"],[13,"GetModuleHandleExW"],[13,"GetProcAddress"],[13,"FreeLibrary"],[13,"CreateCString"],[13,"CreateCStringWithTrailing"]]},\
"downcast_rs":{"doc":"Build status Latest version Documentation","t":[8,8,10,10,14,10,10,10],"n":["Downcast","DowncastSync","as_any","as_any_mut","impl_downcast","into_any","into_any_arc","into_any_rc"],"q":["downcast_rs","","","","","","",""],"d":["Supports conversion to <code>Any</code>. Traits to be extended by …","Extends <code>Downcast</code> to support <code>Sync</code> traits that thus support …","Convert <code>&amp;Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This is …","Convert <code>&amp;mut Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This …","Adds downcasting support to traits that extend …","Convert <code>Box&lt;dyn Trait&gt;</code> (where <code>Trait: Downcast</code>) to …","Convert <code>Arc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Arc&lt;Any&gt;</code>. …","Convert <code>Rc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Rc&lt;Any&gt;</code>. …"],"i":[0,0,5,5,0,5,6,5],"f":[0,0,[[],1],[[],1],0,[2,[[2,[1]]]],[3,[[3,[1]]]],[4,[[4,[1]]]]],"p":[[8,"Any"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Downcast"],[8,"DowncastSync"]]},\
"io_lifetimes":{"doc":"Experimental new types and traits to replace the <code>Raw</code> …","t":[8,8,8,3,6,6,8,8,8,8,8,8,3,6,6,10,11,11,10,10,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,10,10,11,11,11,10,11,11,10,10,11,11,11,10,11,11,0,11,11,11,11,11,11,11,11,11,0,17,17,17,17,17,17,5,5,5,8,8,8,8,8,8,6,6,10,10,10,10,10,10,3,8,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AsFd","AsFilelike","AsSocketlike","BorrowedFd","BorrowedFilelike","BorrowedSocketlike","FromFd","FromFilelike","FromSocketlike","IntoFd","IntoFilelike","IntoSocketlike","OwnedFd","OwnedFilelike","OwnedSocketlike","as_fd","as_fd","as_fd","as_filelike","as_filelike_view","as_raw_fd","as_raw_fd","as_raw_filelike","as_raw_filelike","as_raw_socketlike","as_raw_socketlike","as_socketlike","as_socketlike_view","borrow","borrow","borrow_mut","borrow_mut","borrow_raw","clone","clone_into","drop","example_ffi","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fd","from_filelike","from_into_fd","from_into_fd","from_into_filelike","from_into_socketlike","from_raw_fd","from_raw_filelike","from_raw_socketlike","from_socketlike","into","into","into_fd","into_filelike","into_raw_fd","into_raw_filelike","into_raw_socketlike","into_socketlike","is_terminal","is_terminal","raw","to_owned","try_clone","try_clone_to_owned","try_from","try_from","try_into","try_into","type_id","type_id","views","O_CLOEXEC","O_CREAT","O_RDONLY","O_RDWR","O_TRUNC","O_WRONLY","open","read","write","AsRawFilelike","AsRawSocketlike","FromRawFilelike","FromRawSocketlike","IntoRawFilelike","IntoRawSocketlike","RawFilelike","RawSocketlike","as_raw_filelike","as_raw_socketlike","from_raw_filelike","from_raw_socketlike","into_raw_filelike","into_raw_socketlike","FilelikeView","FilelikeViewType","SocketlikeView","SocketlikeViewType","borrow","borrow","borrow_mut","borrow_mut","deref","deref","drop","drop","fmt","fmt","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","view_raw","view_raw"],"q":["io_lifetimes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","io_lifetimes::example_ffi","","","","","","","","","io_lifetimes::raw","","","","","","","","","","","","","","io_lifetimes::views","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A trait to borrow the file descriptor from an underlying …","A portable trait to borrow a reference from an underlying …","A portable trait to borrow a reference from an underlying …","A borrowed file descriptor.","A reference to a filelike object.","A reference to a socketlike object.","A trait to express the ability to construct an object from …","A portable trait to express the ability to construct an …","A portable trait to express the ability to construct an …","A trait to express the ability to consume an object and …","A portable trait to express the ability to consume an …","A portable trait to express the ability to consume an …","An owned file descriptor.","An owned filelike object.","An owned socketlike object.","Borrows the file descriptor.","","","Borrows the reference.","Return a borrowing view of a resource which dereferences …","","","","","","","Borrows the reference.","Return a borrowing view of a resource which dereferences …","","","","","Return a <code>BorrowedFd</code> holding the given raw file descriptor.","","","","This is just a sample of what FFI using this crate can …","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","Constructs a new instance of <code>Self</code> from the given file …","Constructs a new instance of <code>Self</code> from the given filelike …","Constructs a new instance of <code>Self</code> from the given file …","Constructs a new instance of <code>Self</code> from the given file …","Constructs a new instance of <code>Self</code> from the given filelike …","Constructs a new instance of <code>Self</code> from the given …","Constructs a new instance of <code>Self</code> from the given raw file …","","","Constructs a new instance of <code>Self</code> from the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this object, returning the underlying file …","Consumes this object, returning the underlying filelike …","","","","Consumes this object, returning the underlying socketlike …","","","Portability abstractions over <code>Raw*</code>.","","Creates a new <code>OwnedFd</code> instance that shares the same …","Creates a new <code>OwnedFd</code> instance that shares the same …","","","","","","","Typed views using temporary objects.","","","","","","","","","","A portable trait to obtain the raw value of an underlying …","This is a portability abstraction over Unix-like <code>AsRawFd</code> …","This is a portability abstraction over Unix-like <code>FromRawFd</code> …","This is a portability abstraction over Unix-like <code>FromRawFd</code> …","This is a portability abstraction over Unix-like <code>IntoRawFd</code> …","This is a portability abstraction over Unix-like <code>IntoRawFd</code> …","A raw filelike object.","A raw socketlike object.","Returns the raw value.","Returns the raw value.","Constructs <code>Self</code> from the raw value.","Constructs <code>Self</code> from the raw value.","Returns the raw value.","Returns the raw value.","A non-owning view of a resource which dereferences to a …","Declare that a type is safe to use in a <code>FilelikeView</code>.","A non-owning view of a resource which dereferences to a …","Declare that a type is safe to use in a <code>SocketlikeView</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Construct a temporary <code>Target</code> from raw and wrap it in a …","Construct a temporary <code>Target</code> from raw and wrap it in a …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,2,1,36,36,2,1,2,1,2,1,37,37,2,1,2,1,1,1,1,2,0,2,1,2,2,2,2,2,2,2,2,2,2,2,2,1,38,39,38,38,39,40,2,2,2,40,2,1,41,26,2,2,2,27,2,1,0,1,2,1,2,1,2,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,44,45,46,47,0,0,0,0,5,9,5,9,5,9,5,9,5,9,5,9,5,9,5,9,5,9,5,9,5,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[1,1],[[],3],[[],[[5,[4]]]],[2,6],[1,6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],[[9,[8]]]],[[]],[[]],[[]],[[]],[6,1],[1,1],[[]],[2],0,[[2,10],[[12,[11]]]],[[1,10],[[12,[11]]]],[[]],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[23,2],[[]],[2],[24],[[[25,[2]]]],[[[25,[2]]]],[26],[27],[6,2],[6],[6],[28],[[]],[[]],[[],2],[[],24],[2,6],[[],6],[[],6],[[],28],[2,29],[1,29],0,[[]],[2,[[12,[2,30]]]],[1,[[12,[2,30]]]],[[],12],[[],12],[[],12],[[],12],[[],31],[[],31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],32],[[],33],[32],[33],[[],32],[[],33],0,0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]]],[[[9,[8]]]],[[[5,[4]]]],[[[9,[8]]]],[[[5,[4]],10],34],[[[9,[8]],10],34],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],31],[[],31],[32,[[5,[4]]]],[33,[[9,[8]]]]],"p":[[3,"BorrowedFd"],[3,"OwnedFd"],[6,"BorrowedFilelike"],[8,"FilelikeViewType"],[3,"FilelikeView"],[15,"i32"],[6,"BorrowedSocketlike"],[8,"SocketlikeViewType"],[3,"SocketlikeView"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"UdpSocket"],[3,"TcpStream"],[3,"UnixDatagram"],[3,"ChildStdout"],[3,"UnixStream"],[3,"PidFd"],[3,"ChildStdin"],[3,"UnixListener"],[3,"ChildStderr"],[3,"File"],[3,"TcpListener"],[6,"OwnedFilelike"],[8,"Into"],[8,"IntoFilelike"],[8,"IntoSocketlike"],[6,"OwnedSocketlike"],[15,"bool"],[3,"Error"],[3,"TypeId"],[6,"RawFilelike"],[6,"RawSocketlike"],[6,"Result"],[8,"AsFd"],[8,"AsFilelike"],[8,"AsSocketlike"],[8,"FromFd"],[8,"FromFilelike"],[8,"FromSocketlike"],[8,"IntoFd"],[8,"AsRawFilelike"],[8,"AsRawSocketlike"],[8,"FromRawFilelike"],[8,"FromRawSocketlike"],[8,"IntoRawFilelike"],[8,"IntoRawSocketlike"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","tn":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABS_CNT","ABS_MAX","ACCOUNTING","ADDR_COMPAT_LAYOUT","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","ADDR_NO_RANDOMIZE","ADFS_SUPER_MAGIC","ADJ_ESTERROR","ADJ_FREQUENCY","ADJ_MAXERROR","ADJ_MICRO","ADJ_NANO","ADJ_OFFSET","ADJ_OFFSET_SINGLESHOT","ADJ_OFFSET_SS_READ","ADJ_SETOFFSET","ADJ_STATUS","ADJ_TAI","ADJ_TICK","ADJ_TIMECONST","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KEY","AF_LLC","AF_LOCAL","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","AIO_ALLDONE","AIO_CANCELED","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_V4MAPPED","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_SET_IV","ALG_SET_KEY","ALG_SET_OP","ALT_DIGITS","AM_STR","ARPD_FLUSH","ARPD_LOOKUP","ARPD_UPDATE","ARPHRD_ADAPT","ARPHRD_APPLETLK","ARPHRD_ARCNET","ARPHRD_ASH","ARPHRD_ATM","ARPHRD_AX25","ARPHRD_BIF","ARPHRD_CAN","ARPHRD_CHAOS","ARPHRD_CISCO","ARPHRD_CSLIP","ARPHRD_CSLIP6","ARPHRD_DDCMP","ARPHRD_DLCI","ARPHRD_ECONET","ARPHRD_EETHER","ARPHRD_ETHER","ARPHRD_EUI64","ARPHRD_FCAL","ARPHRD_FCFABRIC","ARPHRD_FCPL","ARPHRD_FCPP","ARPHRD_FDDI","ARPHRD_FRAD","ARPHRD_HDLC","ARPHRD_HIPPI","ARPHRD_HWX25","ARPHRD_IEEE1394","ARPHRD_IEEE802","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_IEEE802_TR","ARPHRD_INFINIBAND","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_IRDA","ARPHRD_LAPB","ARPHRD_LOCALTLK","ARPHRD_LOOPBACK","ARPHRD_METRICOM","ARPHRD_NETROM","ARPHRD_NONE","ARPHRD_PIMREG","ARPHRD_PPP","ARPHRD_PRONET","ARPHRD_RAWHDLC","ARPHRD_ROSE","ARPHRD_RSRVD","ARPHRD_SIT","ARPHRD_SKIP","ARPHRD_SLIP","ARPHRD_SLIP6","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_VOID","ARPHRD_X25","ARPOP_InREPLY","ARPOP_InREQUEST","ARPOP_NAK","ARPOP_REPLY","ARPOP_REQUEST","ARPOP_RREPLY","ARPOP_RREQUEST","ATF_COM","ATF_DONTPUB","ATF_MAGIC","ATF_NETMASK","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_REMOVEDIR","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_SYSINFO_EHDR","AT_UID","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BINDERFS_SUPER_MAGIC","BLKIOMIN","BLKIOOPT","BLKPBSZGET","BLKSSZGET","BOOT_TIME","BOTHER","BPF_ABS","BPF_ADD","BPF_ALU","BPF_AND","BPF_B","BPF_DIV","BPF_FS_MAGIC","BPF_H","BPF_IMM","BPF_IND","BPF_JA","BPF_JEQ","BPF_JGE","BPF_JGT","BPF_JMP","BPF_JSET","BPF_JUMP","BPF_K","BPF_LD","BPF_LDX","BPF_LEN","BPF_LL_OFF","BPF_LSH","BPF_MAXINSNS","BPF_MEM","BPF_MEMWORDS","BPF_MISC","BPF_MISCOP","BPF_MOD","BPF_MSH","BPF_MUL","BPF_NEG","BPF_NET_OFF","BPF_OR","BPF_RET","BPF_RSH","BPF_RVAL","BPF_ST","BPF_STMT","BPF_STX","BPF_SUB","BPF_W","BPF_X","BPF_XOR","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BUFSIZ","BUS_ADRALN","BUS_ADRERR","BUS_MCEERR_AO","BUS_MCEERR_AR","BUS_OBJERR","CANFD_BRS","CANFD_ESI","CANFD_MAX_DLC","CANFD_MAX_DLEN","CANFD_MTU","CAN_BCM","CAN_EFF_FLAG","CAN_EFF_ID_BITS","CAN_EFF_MASK","CAN_ERR_FLAG","CAN_ERR_MASK","CAN_INV_FILTER","CAN_ISOTP","CAN_J1939","CAN_MAX_DLC","CAN_MAX_DLEN","CAN_MCNET","CAN_MTU","CAN_NPROTO","CAN_RAW","CAN_RAW_ERR_FILTER","CAN_RAW_FD_FRAMES","CAN_RAW_FILTER","CAN_RAW_FILTER_MAX","CAN_RAW_JOIN_FILTERS","CAN_RAW_LOOPBACK","CAN_RAW_RECV_OWN_MSGS","CAN_RTR_FLAG","CAN_SFF_ID_BITS","CAN_SFF_MASK","CAN_TP16","CAN_TP20","CBAUD","CBAUDEX","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CLOSE_RANGE_CLOEXEC","CLOSE_RANGE_UNSHARE","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CMSPAR","CODA_SUPER_MAGIC","CODESET","CPU_ALLOC_SIZE","CPU_CLR","CPU_COUNT","CPU_COUNT_S","CPU_EQUAL","CPU_ISSET","CPU_SET","CPU_SETSIZE","CPU_ZERO","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_MCAST_GRP_ID","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_OPS","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_UNSPEC","CTRL_ATTR_VERSION","CTRL_CMD_DELFAMILY","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_DELOPS","CTRL_CMD_GETFAMILY","CTRL_CMD_GETMCAST_GRP","CTRL_CMD_GETOPS","CTRL_CMD_NEWFAMILY","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_NEWOPS","CTRL_CMD_UNSPEC","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DCCP_SERVICE_LIST_MAX_LEN","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_TX_CCID","DEAD_PROCESS","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","DIR","DS","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","ECRYPTFS_SUPER_MAGIC","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFLAGS","EFS_SUPER_MAGIC","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EI_ABIVERSION","EI_CLASS","EI_DATA","EI_MAG0","EI_MAG1","EI_MAG2","EI_MAG3","EI_NIDENT","EI_OSABI","EI_PAD","EI_VERSION","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELFCLASS32","ELFCLASS64","ELFCLASSNONE","ELFCLASSNUM","ELFDATA2LSB","ELFDATA2MSB","ELFDATANONE","ELFDATANUM","ELFMAG0","ELFMAG1","ELFMAG2","ELFMAG3","ELFOSABI_AIX","ELFOSABI_ARM","ELFOSABI_ARM_AEABI","ELFOSABI_FREEBSD","ELFOSABI_GNU","ELFOSABI_HPUX","ELFOSABI_IRIX","ELFOSABI_LINUX","ELFOSABI_MODESTO","ELFOSABI_NETBSD","ELFOSABI_NONE","ELFOSABI_OPENBSD","ELFOSABI_SOLARIS","ELFOSABI_STANDALONE","ELFOSABI_SYSV","ELFOSABI_TRU64","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","EM_386","EM_68HC05","EM_68HC08","EM_68HC11","EM_68HC12","EM_68HC16","EM_68K","EM_860","EM_88K","EM_960","EM_AARCH64","EM_ALPHA","EM_ARC","EM_ARC_A5","EM_ARM","EM_AVR","EM_COLDFIRE","EM_CRIS","EM_D10V","EM_D30V","EM_FAKE_ALPHA","EM_FIREPATH","EM_FR20","EM_FR30","EM_FX66","EM_H8S","EM_H8_300","EM_H8_300H","EM_H8_500","EM_HUANY","EM_IA_64","EM_JAVELIN","EM_M32","EM_M32R","EM_ME16","EM_MIPS","EM_MIPS_RS3_LE","EM_MIPS_X","EM_MMA","EM_MMIX","EM_MN10200","EM_MN10300","EM_NCPU","EM_NDR1","EM_NONE","EM_OPENRISC","EM_PARISC","EM_PCP","EM_PDSP","EM_PJ","EM_PPC","EM_PPC64","EM_PRISM","EM_RCE","EM_RH32","EM_S370","EM_S390","EM_SH","EM_SPARC","EM_SPARC32PLUS","EM_SPARCV9","EM_ST100","EM_ST19","EM_ST7","EM_ST9PLUS","EM_STARCORE","EM_SVX","EM_TILEGX","EM_TILEPRO","EM_TINYJ","EM_TRICORE","EM_V800","EM_V850","EM_VAX","EM_VPP500","EM_X86_64","EM_XTENSA","EM_ZSP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOATTR","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ES","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CANFD","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_ECONET","ETH_P_EDSA","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MACSEC","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MVRP","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_ZLEN","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","ET_CORE","ET_DYN","ET_EXEC","ET_HIOS","ET_HIPROC","ET_LOOS","ET_LOPROC","ET_NONE","ET_NUM","ET_REL","EUCLEAN","EUNATCH","EUSERS","EV_CNT","EV_CURRENT","EV_MAX","EV_NONE","EV_NUM","EWOULDBLOCK","EXDEV","EXFULL","EXIT_FAILURE","EXIT_SUCCESS","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","Elf32_Addr","Elf32_Chdr","Elf32_Ehdr","Elf32_Half","Elf32_Off","Elf32_Phdr","Elf32_Section","Elf32_Shdr","Elf32_Sym","Elf32_Word","Elf64_Addr","Elf64_Chdr","Elf64_Ehdr","Elf64_Half","Elf64_Off","Elf64_Phdr","Elf64_Section","Elf64_Shdr","Elf64_Sxword","Elf64_Sym","Elf64_Word","Elf64_Xword","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FANOTIFY_METADATA_VERSION","FAN_ACCESS","FAN_ACCESS_PERM","FAN_ALLOW","FAN_CLASS_CONTENT","FAN_CLASS_NOTIF","FAN_CLASS_PRE_CONTENT","FAN_CLOEXEC","FAN_CLOSE","FAN_CLOSE_NOWRITE","FAN_CLOSE_WRITE","FAN_DENY","FAN_EVENT_ON_CHILD","FAN_MARK_ADD","FAN_MARK_DONT_FOLLOW","FAN_MARK_FILESYSTEM","FAN_MARK_FLUSH","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_ONLYDIR","FAN_MARK_REMOVE","FAN_MODIFY","FAN_NOFD","FAN_NONBLOCK","FAN_ONDIR","FAN_OPEN","FAN_OPEN_PERM","FAN_Q_OVERFLOW","FAN_UNLIMITED_MARKS","FAN_UNLIMITED_QUEUE","FDPIC_FUNCPTRS","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FF_CNT","FF_MAX","FICLONE","FICLONERANGE","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIONBIO","FIONCLEX","FIONREAD","FIOQSIZE","FLUSHO","FOPEN_MAX","FS","FS_BASE","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_LOCK_PI2","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_TRYLOCK_PI","FUTEX_UNLOCK_PI","FUTEX_WAIT","FUTEX_WAIT_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_OP","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETPIPE_SZ","F_GET_SEALS","F_LOCK","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_RDLCK","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETPIPE_SZ","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","GENL_ID_PMCRAID","GENL_ID_VFS_DQUOT","GENL_MAX_ID","GENL_MIN_ID","GENL_NAMSIZ","GENL_UNS_ADMIN_PERM","GLOB_ABORTED","GLOB_APPEND","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GRND_INSECURE","GRND_NONBLOCK","GRND_RANDOM","GRPQUOTA","GS","GS_BASE","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","IBSHIFT","ICANON","ICRNL","IEXTEN","IFA_ADDRESS","IFA_ANYCAST","IFA_BROADCAST","IFA_CACHEINFO","IFA_FLAGS","IFA_F_DADFAILED","IFA_F_DEPRECATED","IFA_F_HOMEADDRESS","IFA_F_MANAGETEMPADDR","IFA_F_MCAUTOJOIN","IFA_F_NODAD","IFA_F_NOPREFIXROUTE","IFA_F_OPTIMISTIC","IFA_F_PERMANENT","IFA_F_SECONDARY","IFA_F_STABLE_PRIVACY","IFA_F_TEMPORARY","IFA_F_TENTATIVE","IFA_LABEL","IFA_LOCAL","IFA_MULTICAST","IFA_UNSPEC","IFF_ALLMULTI","IFF_ATTACH_QUEUE","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DETACH_QUEUE","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_MULTI_QUEUE","IFF_NOARP","IFF_NOFILTER","IFF_NOTRAILERS","IFF_NO_PI","IFF_ONE_QUEUE","IFF_PERSIST","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_TAP","IFF_TUN","IFF_TUN_EXCL","IFF_UP","IFF_VNET_HDR","IFLA_ADDRESS","IFLA_AF_SPEC","IFLA_ALT_IFNAME","IFLA_BROADCAST","IFLA_CARRIER","IFLA_CARRIER_CHANGES","IFLA_CARRIER_DOWN_COUNT","IFLA_CARRIER_UP_COUNT","IFLA_COST","IFLA_EVENT","IFLA_EXT_MASK","IFLA_GROUP","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_IFALIAS","IFLA_IFNAME","IFLA_IF_NETNSID","IFLA_INFO_DATA","IFLA_INFO_KIND","IFLA_INFO_SLAVE_DATA","IFLA_INFO_SLAVE_KIND","IFLA_INFO_UNSPEC","IFLA_INFO_XSTATS","IFLA_LINK","IFLA_LINKINFO","IFLA_LINKMODE","IFLA_LINK_NETNSID","IFLA_MAP","IFLA_MASTER","IFLA_MAX_MTU","IFLA_MIN_MTU","IFLA_MTU","IFLA_NET_NS_FD","IFLA_NET_NS_PID","IFLA_NEW_IFINDEX","IFLA_NEW_NETNSID","IFLA_NUM_RX_QUEUES","IFLA_NUM_TX_QUEUES","IFLA_NUM_VF","IFLA_OPERSTATE","IFLA_PAD","IFLA_PERM_ADDRESS","IFLA_PHYS_PORT_ID","IFLA_PHYS_PORT_NAME","IFLA_PHYS_SWITCH_ID","IFLA_PORT_SELF","IFLA_PRIORITY","IFLA_PROMISCUITY","IFLA_PROP_LIST","IFLA_PROTINFO","IFLA_PROTO_DOWN","IFLA_PROTO_DOWN_REASON","IFLA_QDISC","IFLA_STATS","IFLA_STATS64","IFLA_TARGET_NETNSID","IFLA_TXQLEN","IFLA_UNSPEC","IFLA_VFINFO_LIST","IFLA_VF_PORTS","IFLA_WEIGHT","IFLA_WIRELESS","IFLA_XDP","IFNAMSIZ","IF_NAMESIZE","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INPUT_PROP_CNT","INPUT_PROP_MAX","INT_MAX","INT_MIN","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_EXCL_UNLINK","IN_IGNORED","IN_ISDIR","IN_MASK_ADD","IN_MASK_CREATE","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IP6T_SO_ORIGINAL_DST","IPC_CREAT","IPC_EXCL","IPC_INFO","IPC_NOWAIT","IPC_PRIVATE","IPC_RMID","IPC_SET","IPC_STAT","IPDEFTTL","IPOPT_CLASS","IPOPT_CLASS_MASK","IPOPT_CONTROL","IPOPT_COPIED","IPOPT_COPY","IPOPT_END","IPOPT_EOL","IPOPT_LSRR","IPOPT_MEASUREMENT","IPOPT_MINOFF","IPOPT_NOOP","IPOPT_NOP","IPOPT_NUMBER","IPOPT_NUMBER_MASK","IPOPT_OFFSET","IPOPT_OLEN","IPOPT_OPTVAL","IPOPT_RA","IPOPT_RESERVED1","IPOPT_RESERVED2","IPOPT_RR","IPOPT_SEC","IPOPT_SID","IPOPT_SSRR","IPOPT_TIMESTAMP","IPOPT_TS","IPOPT_TS_PRESPEC","IPOPT_TS_TSANDADDR","IPOPT_TS_TSONLY","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IPTOS_ECN","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOT_ECT","IPTOS_LOWDELAY","IPTOS_MINCOST","IPTOS_PREC","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASH","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_MASK","IPTOS_PREC_NETCONTROL","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_RELIABILITY","IPTOS_THROUGHPUT","IPTOS_TOS","IPTOS_TOS_MASK","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADDR_PREFERENCES","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_AUTOFLOWLABEL","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_FLOWINFO","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_FLOWINFO_SEND","IPV6_FLOWLABEL_MGR","IPV6_FREEBIND","IPV6_HDRINCL","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_MINHOPCOUNT","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_ALL","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_ORIGDSTADDR","IPV6_PATHMTU","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_NONCGA","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_TMP","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVFRAGSIZE","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVORIGDSTADDR","IPV6_RECVPATHMTU","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_ROUTER_ALERT_ISOLATE","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IPV6_TCLASS","IPV6_TRANSPARENT","IPV6_UNICAST_HOPS","IPV6_UNICAST_IF","IPV6_V6ONLY","IPV6_XFRM_POLICY","IPVERSION","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BIND_ADDRESS_NO_PORT","IP_BLOCK_SOURCE","IP_CHECKSUM","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_FREEBIND","IP_HDRINCL","IP_IPSEC_POLICY","IP_MINTTL","IP_MSFILTER","IP_MTU","IP_MTU_DISCOVER","IP_MULTICAST_ALL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_NODEFRAG","IP_OPTIONS","IP_ORIGDSTADDR","IP_PASSSEC","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVFRAGSIZE","IP_RECVOPTS","IP_RECVORIGDSTADDR","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_ROUTER_ALERT","IP_TOS","IP_TRANSPARENT","IP_TTL","IP_UNBLOCK_SOURCE","IP_UNICAST_IF","IP_XFRM_POLICY","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","J1939_EE_INFO_NONE","J1939_EE_INFO_RX_ABORT","J1939_EE_INFO_RX_DPO","J1939_EE_INFO_RX_RTS","J1939_EE_INFO_TX_ABORT","J1939_FILTER_MAX","J1939_IDLE_ADDR","J1939_MAX_UNICAST_ADDR","J1939_NLA_BYTES_ACKED","J1939_NLA_DEST_ADDR","J1939_NLA_DEST_NAME","J1939_NLA_PAD","J1939_NLA_PGN","J1939_NLA_SRC_ADDR","J1939_NLA_SRC_NAME","J1939_NLA_TOTAL_SIZE","J1939_NO_ADDR","J1939_NO_NAME","J1939_NO_PGN","J1939_PGN_ADDRESS_CLAIMED","J1939_PGN_ADDRESS_COMMANDED","J1939_PGN_MAX","J1939_PGN_PDU1_MAX","J1939_PGN_REQUEST","JFFS2_SUPER_MAGIC","KERNEL_VERSION","KEYCTL_ASSUME_AUTHORITY","KEYCTL_CAPABILITIES","KEYCTL_CAPS0_BIG_KEY","KEYCTL_CAPS0_CAPABILITIES","KEYCTL_CAPS0_DIFFIE_HELLMAN","KEYCTL_CAPS0_INVALIDATE","KEYCTL_CAPS0_MOVE","KEYCTL_CAPS0_PERSISTENT_KEYRINGS","KEYCTL_CAPS0_PUBLIC_KEY","KEYCTL_CAPS0_RESTRICT_KEYRING","KEYCTL_CAPS1_NS_KEYRING_NAME","KEYCTL_CAPS1_NS_KEY_TAG","KEYCTL_CHOWN","KEYCTL_CLEAR","KEYCTL_DESCRIBE","KEYCTL_DH_COMPUTE","KEYCTL_GET_KEYRING_ID","KEYCTL_GET_PERSISTENT","KEYCTL_GET_SECURITY","KEYCTL_INSTANTIATE","KEYCTL_INSTANTIATE_IOV","KEYCTL_INVALIDATE","KEYCTL_JOIN_SESSION_KEYRING","KEYCTL_LINK","KEYCTL_MOVE","KEYCTL_NEGATE","KEYCTL_PKEY_DECRYPT","KEYCTL_PKEY_ENCRYPT","KEYCTL_PKEY_QUERY","KEYCTL_PKEY_SIGN","KEYCTL_PKEY_VERIFY","KEYCTL_READ","KEYCTL_REJECT","KEYCTL_RESTRICT_KEYRING","KEYCTL_REVOKE","KEYCTL_SEARCH","KEYCTL_SESSION_TO_PARENT","KEYCTL_SETPERM","KEYCTL_SET_REQKEY_KEYRING","KEYCTL_SET_TIMEOUT","KEYCTL_SUPPORTS_DECRYPT","KEYCTL_SUPPORTS_ENCRYPT","KEYCTL_SUPPORTS_SIGN","KEYCTL_SUPPORTS_VERIFY","KEYCTL_UNLINK","KEYCTL_UPDATE","KEY_CNT","KEY_MAX","KEY_REQKEY_DEFL_DEFAULT","KEY_REQKEY_DEFL_GROUP_KEYRING","KEY_REQKEY_DEFL_NO_CHANGE","KEY_REQKEY_DEFL_PROCESS_KEYRING","KEY_REQKEY_DEFL_REQUESTOR_KEYRING","KEY_REQKEY_DEFL_SESSION_KEYRING","KEY_REQKEY_DEFL_THREAD_KEYRING","KEY_REQKEY_DEFL_USER_KEYRING","KEY_REQKEY_DEFL_USER_SESSION_KEYRING","KEY_SPEC_GROUP_KEYRING","KEY_SPEC_PROCESS_KEYRING","KEY_SPEC_REQKEY_AUTH_KEY","KEY_SPEC_REQUESTOR_KEYRING","KEY_SPEC_SESSION_KEYRING","KEY_SPEC_THREAD_KEYRING","KEY_SPEC_USER_KEYRING","KEY_SPEC_USER_SESSION_KEYRING","LC_ADDRESS","LC_ADDRESS_MASK","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_IDENTIFICATION","LC_IDENTIFICATION_MASK","LC_MEASUREMENT","LC_MEASUREMENT_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NAME","LC_NAME_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_PAPER","LC_PAPER_MASK","LC_TELEPHONE","LC_TELEPHONE_MASK","LC_TIME","LC_TIME_MASK","LED_CNT","LED_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LM_ID_BASE","LM_ID_NEWLM","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_KERN","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","Lmid_t","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAXTC","MAXTTL","MAX_ADDR_LEN","MAX_IPOPTLEN","MAX_LINKS","MCAST_BLOCK_SOURCE","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","MCAST_UNBLOCK_SOURCE","MCL_CURRENT","MCL_FUTURE","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_HUGETLB","MFD_HUGE_16GB","MFD_HUGE_16MB","MFD_HUGE_1GB","MFD_HUGE_1MB","MFD_HUGE_256MB","MFD_HUGE_2GB","MFD_HUGE_2MB","MFD_HUGE_32MB","MFD_HUGE_512KB","MFD_HUGE_512MB","MFD_HUGE_64KB","MFD_HUGE_8MB","MFD_HUGE_MASK","MFD_HUGE_SHIFT","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_ONFAULT","MMAP_PAGE_ZERO","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MPOL_BIND","MPOL_DEFAULT","MPOL_F_NUMA_BALANCING","MPOL_F_RELATIVE_NODES","MPOL_F_STATIC_NODES","MPOL_INTERLEAVE","MPOL_LOCAL","MPOL_PREFERRED","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSC_CNT","MSC_MAX","MSDOS_SUPER_MAGIC","MSG_CMSG_CLOEXEC","MSG_CONFIRM","MSG_COPY","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_EXCEPT","MSG_FASTOPEN","MSG_FIN","MSG_INFO","MSG_MORE","MSG_NOERROR","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_RST","MSG_STAT","MSG_SYN","MSG_TRUNC","MSG_TRYHARD","MSG_WAITALL","MSG_WAITFORONE","MSG_ZEROCOPY","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOSUID","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","M_ARENA_MAX","M_ARENA_TEST","M_CHECK_ACTION","M_GRAIN","M_KEEP","M_MMAP_MAX","M_MMAP_THRESHOLD","M_MXFAST","M_NLBLKS","M_PERTURB","M_TOP_PAD","M_TRIM_THRESHOLD","NCCS","NCP_SUPER_MAGIC","NDA_CACHEINFO","NDA_DST","NDA_IFINDEX","NDA_LINK_NETNSID","NDA_LLADDR","NDA_MASTER","NDA_PORT","NDA_PROBES","NDA_SRC_VNI","NDA_UNSPEC","NDA_VLAN","NDA_VNI","NETLINK_ADD_MEMBERSHIP","NETLINK_AUDIT","NETLINK_BROADCAST_ERROR","NETLINK_CAP_ACK","NETLINK_CONNECTOR","NETLINK_CRYPTO","NETLINK_DNRTMSG","NETLINK_DROP_MEMBERSHIP","NETLINK_ECRYPTFS","NETLINK_EXT_ACK","NETLINK_FIB_LOOKUP","NETLINK_FIREWALL","NETLINK_GENERIC","NETLINK_GET_STRICT_CHK","NETLINK_INET_DIAG","NETLINK_IP6_FW","NETLINK_ISCSI","NETLINK_KOBJECT_UEVENT","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_NETFILTER","NETLINK_NFLOG","NETLINK_NO_ENOBUFS","NETLINK_PKTINFO","NETLINK_RDMA","NETLINK_ROUTE","NETLINK_RX_RING","NETLINK_SCSITRANSPORT","NETLINK_SELINUX","NETLINK_SOCK_DIAG","NETLINK_TX_RING","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_XFRM","NEW_TIME","NFNETLINK_V0","NFNLGRP_ACCT_QUOTA","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_NFTABLES","NFNLGRP_NFTRACE","NFNLGRP_NONE","NFNL_BATCH_GENID","NFNL_BATCH_UNSPEC","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_COUNT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_HOOK","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_NONE","NFNL_SUBSYS_OSF","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_DECNET","NFPROTO_INET","NFPROTO_IPV4","NFPROTO_IPV6","NFPROTO_NETDEV","NFPROTO_NUMPROTO","NFPROTO_UNSPEC","NFQA_CAP_LEN","NFQA_CFG_CMD","NFQA_CFG_FLAGS","NFQA_CFG_F_CONNTRACK","NFQA_CFG_F_FAIL_OPEN","NFQA_CFG_F_GSO","NFQA_CFG_F_MAX","NFQA_CFG_F_SECCTX","NFQA_CFG_F_UID_GID","NFQA_CFG_MASK","NFQA_CFG_PARAMS","NFQA_CFG_QUEUE_MAXLEN","NFQA_CFG_UNSPEC","NFQA_CT","NFQA_CT_INFO","NFQA_EXP","NFQA_GID","NFQA_HWADDR","NFQA_IFINDEX_INDEV","NFQA_IFINDEX_OUTDEV","NFQA_IFINDEX_PHYSINDEV","NFQA_IFINDEX_PHYSOUTDEV","NFQA_L2HDR","NFQA_MARK","NFQA_PACKET_HDR","NFQA_PAYLOAD","NFQA_PRIORITY","NFQA_SECCTX","NFQA_SKB_CSUMNOTREADY","NFQA_SKB_CSUM_NOTVERIFIED","NFQA_SKB_GSO","NFQA_SKB_INFO","NFQA_TIMESTAMP","NFQA_UID","NFQA_UNSPEC","NFQA_VERDICT_HDR","NFQA_VLAN","NFQA_VLAN_PROTO","NFQA_VLAN_TCI","NFQA_VLAN_UNSPEC","NFQNL_CFG_CMD_BIND","NFQNL_CFG_CMD_NONE","NFQNL_CFG_CMD_PF_BIND","NFQNL_CFG_CMD_PF_UNBIND","NFQNL_CFG_CMD_UNBIND","NFQNL_COPY_META","NFQNL_COPY_NONE","NFQNL_COPY_PACKET","NFQNL_MSG_CONFIG","NFQNL_MSG_PACKET","NFQNL_MSG_VERDICT","NFQNL_MSG_VERDICT_BATCH","NFS_SUPER_MAGIC","NFT_BREAK","NFT_BYTEORDER_HTON","NFT_BYTEORDER_NTOH","NFT_CHAIN_MAXNAMELEN","NFT_CMP_EQ","NFT_CMP_GT","NFT_CMP_GTE","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_NEQ","NFT_CONTINUE","NFT_CT_BYTES","NFT_CT_DIRECTION","NFT_CT_DST","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_LABELS","NFT_CT_MARK","NFT_CT_PKTS","NFT_CT_PROTOCOL","NFT_CT_PROTO_DST","NFT_CT_PROTO_SRC","NFT_CT_SECMARK","NFT_CT_SRC","NFT_CT_STATE","NFT_CT_STATUS","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE","NFT_DATA_VALUE_MAXLEN","NFT_DATA_VERDICT","NFT_DYNSET_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_GOTO","NFT_JUMP","NFT_LIMIT_F_INV","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LOOKUP_F_INV","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_CGROUP","NFT_META_CPU","NFT_META_IIF","NFT_META_IIFGROUP","NFT_META_IIFNAME","NFT_META_IIFTYPE","NFT_META_L4PROTO","NFT_META_LEN","NFT_META_MARK","NFT_META_NFPROTO","NFT_META_NFTRACE","NFT_META_OIF","NFT_META_OIFGROUP","NFT_META_OIFNAME","NFT_META_OIFTYPE","NFT_META_PKTTYPE","NFT_META_PRANDOM","NFT_META_PRIORITY","NFT_META_PROTOCOL","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_SKGID","NFT_META_SKUID","NFT_MSG_DELCHAIN","NFT_MSG_DELOBJ","NFT_MSG_DELRULE","NFT_MSG_DELSET","NFT_MSG_DELSETELEM","NFT_MSG_DELTABLE","NFT_MSG_GETCHAIN","NFT_MSG_GETGEN","NFT_MSG_GETOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_GETRULE","NFT_MSG_GETSET","NFT_MSG_GETSETELEM","NFT_MSG_GETTABLE","NFT_MSG_MAX","NFT_MSG_NEWCHAIN","NFT_MSG_NEWGEN","NFT_MSG_NEWOBJ","NFT_MSG_NEWRULE","NFT_MSG_NEWSET","NFT_MSG_NEWSETELEM","NFT_MSG_NEWTABLE","NFT_MSG_TRACE","NFT_NAT_DNAT","NFT_NAT_SNAT","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","NFT_OBJ_MAXNAMELEN","NFT_PAYLOAD_CSUM_INET","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG32_SIZE","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","NFT_REG_SIZE","NFT_REG_VERDICT","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_RETURN","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_ELEM_INTERVAL_END","NFT_SET_EVAL","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_MAXNAMELEN","NFT_SET_POL_MEMORY","NFT_SET_POL_PERFORMANCE","NFT_SET_TIMEOUT","NFT_TABLE_MAXNAMELEN","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_TRACETYPE_UNSPEC","NFT_USERDATA_MAXLEN","NFULA_CFG_CMD","NFULA_CFG_FLAGS","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_QTHRESH","NFULA_CFG_TIMEOUT","NFULA_CFG_UNSPEC","NFULA_CT","NFULA_CT_INFO","NFULA_GID","NFULA_HWADDR","NFULA_HWHEADER","NFULA_HWLEN","NFULA_HWTYPE","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_L2HDR","NFULA_MARK","NFULA_PACKET_HDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_TIMESTAMP","NFULA_UID","NFULA_UNSPEC","NFULA_VLAN","NFULA_VLAN_PROTO","NFULA_VLAN_TCI","NFULA_VLAN_UNSPEC","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_F_CONNTRACK","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_COPY_META","NFULNL_COPY_NONE","NFULNL_COPY_PACKET","NFULNL_MSG_CONFIG","NFULNL_MSG_PACKET","NF_ACCEPT","NF_DROP","NF_INET_FORWARD","NF_INET_LOCAL_IN","NF_INET_LOCAL_OUT","NF_INET_NUMHOOKS","NF_INET_POST_ROUTING","NF_INET_PRE_ROUTING","NF_IP6_FORWARD","NF_IP6_LOCAL_IN","NF_IP6_LOCAL_OUT","NF_IP6_NUMHOOKS","NF_IP6_POST_ROUTING","NF_IP6_PRE_ROUTING","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_FILTER","NF_IP6_PRI_FIRST","NF_IP6_PRI_LAST","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_RAW","NF_IP6_PRI_SECURITY","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_SELINUX_LAST","NF_IP_FORWARD","NF_IP_LOCAL_IN","NF_IP_LOCAL_OUT","NF_IP_NUMHOOKS","NF_IP_POST_ROUTING","NF_IP_PRE_ROUTING","NF_IP_PRI_CONNTRACK","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_FILTER","NF_IP_PRI_FIRST","NF_IP_PRI_LAST","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_NAT_SRC","NF_IP_PRI_RAW","NF_IP_PRI_SECURITY","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_SELINUX_LAST","NF_MAX_VERDICT","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NF_QUEUE","NF_REPEAT","NF_STOLEN","NF_STOP","NF_VERDICT_BITS","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_MASK","NF_VERDICT_QBITS","NF_VERDICT_QMASK","NILFS_SUPER_MAGIC","NI_DGRAM","NI_MAXHOST","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSERV","NL0","NL1","NLA_ALIGN","NLA_ALIGNTO","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","NLDLY","NLMSG_DONE","NLMSG_ERROR","NLMSG_MIN_TYPE","NLMSG_NOOP","NLMSG_OVERRUN","NLM_F_ACK","NLM_F_APPEND","NLM_F_ATOMIC","NLM_F_CREATE","NLM_F_DUMP","NLM_F_DUMP_FILTERED","NLM_F_DUMP_INTR","NLM_F_ECHO","NLM_F_EXCL","NLM_F_MATCH","NLM_F_MULTI","NLM_F_REPLACE","NLM_F_REQUEST","NLM_F_ROOT","NOEXPR","NOFLSH","NOSTR","NSFS_MAGIC","NTF_EXT_LEARNED","NTF_MASTER","NTF_OFFLOADED","NTF_PROXY","NTF_ROUTER","NTF_SELF","NTF_USE","NTP_API","NT_ASRS","NT_AUXV","NT_FPREGSET","NT_GWINDOWS","NT_LWPSINFO","NT_LWPSTATUS","NT_PLATFORM","NT_PRCRED","NT_PRFPREG","NT_PRFPXREG","NT_PRPSINFO","NT_PRSTATUS","NT_PRXREG","NT_PSINFO","NT_PSTATUS","NT_TASKSTRUCT","NT_UTSNAME","NUD_DELAY","NUD_FAILED","NUD_INCOMPLETE","NUD_NOARP","NUD_NONE","NUD_PERMANENT","NUD_PROBE","NUD_REACHABLE","NUD_STALE","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","OLD_TIME","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPOST","ORIG_RAX","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_ALLMULTI","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_UNICAST","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_ALG","PF_APPLETALK","PF_ASH","PF_ATMPVC","PF_ATMSVC","PF_AX25","PF_BLUETOOTH","PF_BRIDGE","PF_CAIF","PF_CAN","PF_DECnet","PF_ECONET","PF_IB","PF_IEEE802154","PF_INET","PF_INET6","PF_IPX","PF_IRDA","PF_ISDN","PF_IUCV","PF_KEY","PF_LLC","PF_LOCAL","PF_MASKOS","PF_MASKPROC","PF_MPLS","PF_NETBEUI","PF_NETLINK","PF_NETROM","PF_NFC","PF_PACKET","PF_PHONET","PF_PPPOX","PF_R","PF_RDS","PF_ROSE","PF_ROUTE","PF_RXRPC","PF_SECURITY","PF_SNA","PF_TIPC","PF_UNIX","PF_UNSPEC","PF_VSOCK","PF_W","PF_WANPIPE","PF_X","PF_X25","PF_XDP","PIDFD_NONBLOCK","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","POSIX_SPAWN_SETSID","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_USEVFORK","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_WRITE","PR_CAPBSET_DROP","PR_CAPBSET_READ","PR_CAP_AMBIENT","PR_CAP_AMBIENT_CLEAR_ALL","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_RAISE","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_FP_EXC_ASYNC","PR_FP_EXC_DISABLED","PR_FP_EXC_DIV","PR_FP_EXC_INV","PR_FP_EXC_NONRECOV","PR_FP_EXC_OVF","PR_FP_EXC_PRECISE","PR_FP_EXC_RES","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_UND","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_GET_CHILD_SUBREAPER","PR_GET_DUMPABLE","PR_GET_ENDIAN","PR_GET_FPEMU","PR_GET_FPEXC","PR_GET_FP_MODE","PR_GET_KEEPCAPS","PR_GET_NAME","PR_GET_NO_NEW_PRIVS","PR_GET_PDEATHSIG","PR_GET_SECCOMP","PR_GET_SECUREBITS","PR_GET_SPECULATION_CTRL","PR_GET_THP_DISABLE","PR_GET_TID_ADDRESS","PR_GET_TIMERSLACK","PR_GET_TIMING","PR_GET_TSC","PR_GET_UNALIGN","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_EARLY","PR_MCE_KILL_GET","PR_MCE_KILL_LATE","PR_MCE_KILL_SET","PR_MPX_DISABLE_MANAGEMENT","PR_MPX_ENABLE_MANAGEMENT","PR_SET_CHILD_SUBREAPER","PR_SET_DUMPABLE","PR_SET_ENDIAN","PR_SET_FPEMU","PR_SET_FPEXC","PR_SET_FP_MODE","PR_SET_KEEPCAPS","PR_SET_MM","PR_SET_MM_ARG_END","PR_SET_MM_ARG_START","PR_SET_MM_AUXV","PR_SET_MM_BRK","PR_SET_MM_END_CODE","PR_SET_MM_END_DATA","PR_SET_MM_ENV_END","PR_SET_MM_ENV_START","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_MM_START_BRK","PR_SET_MM_START_CODE","PR_SET_MM_START_DATA","PR_SET_MM_START_STACK","PR_SET_NAME","PR_SET_NO_NEW_PRIVS","PR_SET_PDEATHSIG","PR_SET_PTRACER","PR_SET_SECCOMP","PR_SET_SECUREBITS","PR_SET_SPECULATION_CTRL","PR_SET_THP_DISABLE","PR_SET_TIMERSLACK","PR_SET_TIMING","PR_SET_TSC","PR_SET_UNALIGN","PR_SET_VMA","PR_SET_VMA_ANON_NAME","PR_SPEC_DISABLE","PR_SPEC_DISABLE_NOEXEC","PR_SPEC_ENABLE","PR_SPEC_FORCE_DISABLE","PR_SPEC_INDIRECT_BRANCH","PR_SPEC_NOT_AFFECTED","PR_SPEC_PRCTL","PR_SPEC_STORE_BYPASS","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_MUTEX_ADAPTIVE_NP","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_MUTEX_ROBUST","PTHREAD_MUTEX_STALLED","PTHREAD_PRIO_INHERIT","PTHREAD_PRIO_NONE","PTHREAD_PRIO_PROTECT","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PTRACE_ATTACH","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_SECCOMP","PTRACE_EVENT_STOP","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETREGSET","PTRACE_GETSIGINFO","PTRACE_GET_RSEQ_CONFIGURATION","PTRACE_GET_SYSCALL_INFO","PTRACE_INTERRUPT","PTRACE_KILL","PTRACE_LISTEN","PTRACE_O_EXITKILL","PTRACE_O_MASK","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKSIGINFO","PTRACE_PEEKSIGINFO_SHARED","PTRACE_PEEKTEXT","PTRACE_PEEKUSER","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSER","PTRACE_SEIZE","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETREGSET","PTRACE_SETSIGINFO","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","PT_DYNAMIC","PT_GNU_EH_FRAME","PT_GNU_RELRO","PT_GNU_STACK","PT_HIOS","PT_HIPROC","PT_HISUNW","PT_INTERP","PT_LOAD","PT_LOOS","PT_LOPROC","PT_LOSUNW","PT_NOTE","PT_NULL","PT_NUM","PT_PHDR","PT_SHLIB","PT_SUNWBSS","PT_SUNWSTACK","PT_TLS","P_ALL","P_PGID","P_PID","P_PIDFD","QCMD","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_ALL","QIF_BLIMITS","QIF_BTIME","QIF_ILIMITS","QIF_INODES","QIF_ITIME","QIF_LIMITS","QIF_SPACE","QIF_TIMES","QIF_USAGE","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","Q_GETFMT","Q_GETINFO","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETINFO","Q_SETQUOTA","Q_SYNC","R10","R11","R12","R13","R14","R15","R8","R9","RADIXCHAR","RAND_MAX","RAX","RBP","RBX","RB_AUTOBOOT","RB_DISABLE_CAD","RB_ENABLE_CAD","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_SW_SUSPEND","RCX","RDI","RDTGROUP_SUPER_MAGIC","RDX","READ_IMPLIES_EXEC","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_CR2","REG_CSGSFS","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EEND","REG_EESCAPE","REG_EFL","REG_ENOSYS","REG_EPAREN","REG_ERANGE","REG_ERPAREN","REG_ERR","REG_ESIZE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_NEWLINE","REG_NOMATCH","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_OLDMASK","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_R8","REG_R9","REG_RAX","REG_RBP","REG_RBX","REG_RCX","REG_RDI","REG_RDX","REG_RIP","REG_RSI","REG_RSP","REG_STARTEND","REG_TRAPNO","REISERFS_SUPER_MAGIC","REL_CNT","REL_MAX","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","REP_CNT","REP_MAX","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RIP","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RLIM_SAVED_CUR","RLIM_SAVED_MAX","RSI","RSP","RTA_CACHEINFO","RTA_DST","RTA_ENCAP","RTA_ENCAP_TYPE","RTA_EXPIRES","RTA_FLOW","RTA_GATEWAY","RTA_IIF","RTA_MARK","RTA_METRICS","RTA_MFC_STATS","RTA_MP_ALGO","RTA_MULTIPATH","RTA_NEWDST","RTA_OIF","RTA_PAD","RTA_PREF","RTA_PREFSRC","RTA_PRIORITY","RTA_PROTOINFO","RTA_SESSION","RTA_SRC","RTA_TABLE","RTA_TTL_PROPAGATE","RTA_UID","RTA_UNSPEC","RTA_VIA","RTCF_DIRECTSRC","RTCF_DOREDIRECT","RTCF_LOG","RTCF_MASQ","RTCF_NAT","RTCF_VALVE","RTF_ADDRCLASSMASK","RTF_ADDRCONF","RTF_ALLONLINK","RTF_BROADCAST","RTF_CACHE","RTF_DEFAULT","RTF_DYNAMIC","RTF_FLOW","RTF_GATEWAY","RTF_HOST","RTF_INTERFACE","RTF_IRTT","RTF_LINKRT","RTF_LOCAL","RTF_MODIFIED","RTF_MSS","RTF_MTU","RTF_MULTICAST","RTF_NAT","RTF_NOFORWARD","RTF_NONEXTHOP","RTF_NOPMTUDISC","RTF_POLICY","RTF_REINSTATE","RTF_REJECT","RTF_STATIC","RTF_THROW","RTF_UP","RTF_WINDOW","RTF_XRESOLVE","RTLD_DEEPBIND","RTLD_DEFAULT","RTLD_DI_CONFIGADDR","RTLD_DI_LINKMAP","RTLD_DI_LMID","RTLD_DI_ORIGIN","RTLD_DI_PROFILENAME","RTLD_DI_PROFILEOUT","RTLD_DI_SERINFO","RTLD_DI_SERINFOSIZE","RTLD_DI_TLS_DATA","RTLD_DI_TLS_MODID","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTMGRP_DECnet_IFADDR","RTMGRP_DECnet_ROUTE","RTMGRP_IPV4_IFADDR","RTMGRP_IPV4_MROUTE","RTMGRP_IPV4_ROUTE","RTMGRP_IPV4_RULE","RTMGRP_IPV6_IFADDR","RTMGRP_IPV6_IFINFO","RTMGRP_IPV6_MROUTE","RTMGRP_IPV6_PREFIX","RTMGRP_IPV6_ROUTE","RTMGRP_LINK","RTMGRP_NEIGH","RTMGRP_NOTIFY","RTMGRP_TC","RTMSG_AR_FAILED","RTMSG_CONTROL","RTMSG_DELDEVICE","RTMSG_DELROUTE","RTMSG_DELRULE","RTMSG_NEWDEVICE","RTMSG_NEWROUTE","RTMSG_NEWRULE","RTMSG_OVERRUN","RTM_DELACTION","RTM_DELADDR","RTM_DELADDRLABEL","RTM_DELLINK","RTM_DELMDB","RTM_DELNEIGH","RTM_DELNETCONF","RTM_DELNSID","RTM_DELQDISC","RTM_DELROUTE","RTM_DELRULE","RTM_DELTCLASS","RTM_DELTFILTER","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_FIB_MATCH","RTM_F_LOOKUP_TABLE","RTM_F_NOTIFY","RTM_F_PREFIX","RTM_GETACTION","RTM_GETADDR","RTM_GETADDRLABEL","RTM_GETANYCAST","RTM_GETDCB","RTM_GETLINK","RTM_GETMDB","RTM_GETMULTICAST","RTM_GETNEIGH","RTM_GETNEIGHTBL","RTM_GETNETCONF","RTM_GETNSID","RTM_GETQDISC","RTM_GETROUTE","RTM_GETRULE","RTM_GETSTATS","RTM_GETTCLASS","RTM_GETTFILTER","RTM_NEWACTION","RTM_NEWADDR","RTM_NEWADDRLABEL","RTM_NEWCACHEREPORT","RTM_NEWLINK","RTM_NEWMDB","RTM_NEWNDUSEROPT","RTM_NEWNEIGH","RTM_NEWNEIGHTBL","RTM_NEWNETCONF","RTM_NEWNSID","RTM_NEWPREFIX","RTM_NEWQDISC","RTM_NEWROUTE","RTM_NEWRULE","RTM_NEWSTATS","RTM_NEWTCLASS","RTM_NEWTFILTER","RTM_SETDCB","RTM_SETLINK","RTM_SETNEIGHTBL","RTNLGRP_BRVLAN","RTNLGRP_DCB","RTNLGRP_DECnet_IFADDR","RTNLGRP_DECnet_ROUTE","RTNLGRP_DECnet_RULE","RTNLGRP_IPV4_IFADDR","RTNLGRP_IPV4_MROUTE","RTNLGRP_IPV4_MROUTE_R","RTNLGRP_IPV4_NETCONF","RTNLGRP_IPV4_ROUTE","RTNLGRP_IPV4_RULE","RTNLGRP_IPV6_IFADDR","RTNLGRP_IPV6_IFINFO","RTNLGRP_IPV6_MROUTE","RTNLGRP_IPV6_MROUTE_R","RTNLGRP_IPV6_NETCONF","RTNLGRP_IPV6_PREFIX","RTNLGRP_IPV6_ROUTE","RTNLGRP_IPV6_RULE","RTNLGRP_LINK","RTNLGRP_MCTP_IFADDR","RTNLGRP_MDB","RTNLGRP_MPLS_NETCONF","RTNLGRP_MPLS_ROUTE","RTNLGRP_ND_USEROPT","RTNLGRP_NEIGH","RTNLGRP_NEXTHOP","RTNLGRP_NONE","RTNLGRP_NOP2","RTNLGRP_NOP4","RTNLGRP_NOTIFY","RTNLGRP_NSID","RTNLGRP_PHONET_IFADDR","RTNLGRP_PHONET_ROUTE","RTNLGRP_STATS","RTNLGRP_TC","RTNLGRP_TUNNEL","RTN_ANYCAST","RTN_BLACKHOLE","RTN_BROADCAST","RTN_LOCAL","RTN_MULTICAST","RTN_NAT","RTN_PROHIBIT","RTN_THROW","RTN_UNICAST","RTN_UNREACHABLE","RTN_UNSPEC","RTN_XRESOLVE","RTPROT_BOOT","RTPROT_KERNEL","RTPROT_REDIRECT","RTPROT_STATIC","RTPROT_UNSPEC","RT_ADDRCLASS","RT_CLASS_DEFAULT","RT_CLASS_LOCAL","RT_CLASS_MAIN","RT_CLASS_MAX","RT_CLASS_UNSPEC","RT_LOCALADDR","RT_SCOPE_HOST","RT_SCOPE_LINK","RT_SCOPE_NOWHERE","RT_SCOPE_SITE","RT_SCOPE_UNIVERSE","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_LOCAL","RT_TABLE_MAIN","RT_TABLE_UNSPEC","RT_TOS","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","R_OK","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCHED_BATCH","SCHED_FIFO","SCHED_IDLE","SCHED_OTHER","SCHED_RESET_ON_FORK","SCHED_RR","SCM_CREDENTIALS","SCM_J1939_DEST_ADDR","SCM_J1939_DEST_NAME","SCM_J1939_ERRQUEUE","SCM_J1939_PRIO","SCM_RIGHTS","SCM_TIMESTAMP","SCM_TIMESTAMPING","SCM_TIMESTAMPING_OPT_STATS","SCM_TIMESTAMPING_PKTINFO","SCM_TIMESTAMPNS","SCM_TXTIME","SCM_WIFI_STATUS","SECCOMP_FILTER_FLAG_LOG","SECCOMP_FILTER_FLAG_SPEC_ALLOW","SECCOMP_FILTER_FLAG_TSYNC","SECCOMP_GET_ACTION_AVAIL","SECCOMP_GET_NOTIF_SIZES","SECCOMP_MODE_DISABLED","SECCOMP_MODE_FILTER","SECCOMP_MODE_STRICT","SECCOMP_RET_ACTION","SECCOMP_RET_ACTION_FULL","SECCOMP_RET_ALLOW","SECCOMP_RET_DATA","SECCOMP_RET_ERRNO","SECCOMP_RET_KILL","SECCOMP_RET_KILL_PROCESS","SECCOMP_RET_KILL_THREAD","SECCOMP_RET_LOG","SECCOMP_RET_TRACE","SECCOMP_RET_TRAP","SECCOMP_SET_MODE_FILTER","SECCOMP_SET_MODE_STRICT","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SELFMAG","SELINUX_MAGIC","SEM_FAILED","SFD_CLOEXEC","SFD_NONBLOCK","SHM_EXEC","SHM_HUGETLB","SHM_LOCK","SHM_NORESERVE","SHM_R","SHM_RDONLY","SHM_REMAP","SHM_RND","SHM_UNLOCK","SHM_W","SHORT_INODE","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMAX","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCADDMULTI","SIOCADDRT","SIOCDARP","SIOCDELMULTI","SIOCDELRT","SIOCDIFADDR","SIOCDRARP","SIOCETHTOOL","SIOCGARP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGMIIPHY","SIOCGMIIREG","SIOCGRARP","SIOCGSKNS","SIOCOUTQNSD","SIOCSARP","SIOCSIFADDR","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSMIIREG","SIOCSRARP","SIOCWANDEV","SIOGIFINDEX","SI_LOAD_SHIFT","SKF_AD_ALU_XOR_X","SKF_AD_CPU","SKF_AD_HATYPE","SKF_AD_IFINDEX","SKF_AD_MARK","SKF_AD_MAX","SKF_AD_NLATTR","SKF_AD_NLATTR_NEST","SKF_AD_OFF","SKF_AD_PAY_OFFSET","SKF_AD_PKTTYPE","SKF_AD_PROTOCOL","SKF_AD_QUEUE","SKF_AD_RANDOM","SKF_AD_RXHASH","SKF_AD_VLAN_TAG","SKF_AD_VLAN_TAG_PRESENT","SKF_AD_VLAN_TPID","SKF_LL_OFF","SKF_NET_OFF","SK_MEMINFO_BACKLOG","SK_MEMINFO_DROPS","SK_MEMINFO_FWD_ALLOC","SK_MEMINFO_OPTMEM","SK_MEMINFO_RCVBUF","SK_MEMINFO_RMEM_ALLOC","SK_MEMINFO_SNDBUF","SK_MEMINFO_WMEM_ALLOC","SK_MEMINFO_WMEM_QUEUED","SMACK_MAGIC","SMB_SUPER_MAGIC","SND_CNT","SND_MAX","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOF_TIMESTAMPING_OPT_CMSG","SOF_TIMESTAMPING_OPT_ID","SOF_TIMESTAMPING_OPT_PKTINFO","SOF_TIMESTAMPING_OPT_STATS","SOF_TIMESTAMPING_OPT_TSONLY","SOF_TIMESTAMPING_OPT_TX_SWHW","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_TX_ACK","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SCHED","SOF_TIMESTAMPING_TX_SOFTWARE","SOF_TXTIME_DEADLINE_MODE","SOF_TXTIME_REPORT_ERRORS","SOL_AAL","SOL_ALG","SOL_ATM","SOL_BLUETOOTH","SOL_CAIF","SOL_CAN_BASE","SOL_CAN_J1939","SOL_CAN_RAW","SOL_DCCP","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IRDA","SOL_IUCV","SOL_LLC","SOL_NETBEUI","SOL_NETLINK","SOL_NFC","SOL_PACKET","SOL_PNPIPE","SOL_PPPOL2TP","SOL_RAW","SOL_RDS","SOL_RXRPC","SOL_SOCKET","SOL_TCP","SOL_TIPC","SOL_UDP","SOL_X25","SOL_XDP","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_BPF","SO_ATTACH_FILTER","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_BINDTODEVICE","SO_BINDTOIFINDEX","SO_BPF_EXTENSIONS","SO_BROADCAST","SO_BSDCOMPAT","SO_BUSY_POLL","SO_CNX_ADVICE","SO_COOKIE","SO_DEBUG","SO_DETACH_BPF","SO_DETACH_FILTER","SO_DETACH_REUSEPORT_BPF","SO_DOMAIN","SO_DONTROUTE","SO_EE_OFFENDER","SO_EE_ORIGIN_ICMP","SO_EE_ORIGIN_ICMP6","SO_EE_ORIGIN_LOCAL","SO_EE_ORIGIN_NONE","SO_EE_ORIGIN_TIMESTAMPING","SO_EE_ORIGIN_TXSTATUS","SO_ERROR","SO_GET_FILTER","SO_INCOMING_CPU","SO_INCOMING_NAPI_ID","SO_J1939_ERRQUEUE","SO_J1939_FILTER","SO_J1939_PROMISC","SO_J1939_SEND_PRIO","SO_KEEPALIVE","SO_LINGER","SO_LOCK_FILTER","SO_MARK","SO_MAX_PACING_RATE","SO_MEMINFO","SO_NOFCS","SO_NO_CHECK","SO_OOBINLINE","SO_ORIGINAL_DST","SO_PASSCRED","SO_PASSSEC","SO_PEEK_OFF","SO_PEERCRED","SO_PEERGROUPS","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_RCVTIMEO_NEW","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SELECT_ERR_QUEUE","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_SNDTIMEO_NEW","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPING_NEW","SO_TIMESTAMPNS","SO_TIMESTAMPNS_NEW","SO_TIMESTAMP_NEW","SO_TXTIME","SO_TYPE","SO_WIFI_STATUS","SO_ZEROCOPY","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SS","SS_DISABLE","SS_ONSTACK","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_DAX","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_MOUNT_ROOT","STATX_ATTR_NODUMP","STATX_ATTR_VERITY","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","STICKY_TIMEOUTS","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","SW_CNT","SW_MAX","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYN_CNT","SYN_MAX","SYSFS_MAGIC","SYS__sysctl","SYS_accept","SYS_accept4","SYS_access","SYS_acct","SYS_add_key","SYS_adjtimex","SYS_afs_syscall","SYS_alarm","SYS_arch_prctl","SYS_bind","SYS_bpf","SYS_brk","SYS_capget","SYS_capset","SYS_chdir","SYS_chmod","SYS_chown","SYS_chroot","SYS_clock_adjtime","SYS_clock_getres","SYS_clock_gettime","SYS_clock_nanosleep","SYS_clock_settime","SYS_clone","SYS_clone3","SYS_close","SYS_close_range","SYS_connect","SYS_copy_file_range","SYS_creat","SYS_create_module","SYS_delete_module","SYS_dup","SYS_dup2","SYS_dup3","SYS_epoll_create","SYS_epoll_create1","SYS_epoll_ctl","SYS_epoll_ctl_old","SYS_epoll_pwait","SYS_epoll_pwait2","SYS_epoll_wait","SYS_epoll_wait_old","SYS_eventfd","SYS_eventfd2","SYS_execve","SYS_execveat","SYS_exit","SYS_exit_group","SYS_faccessat","SYS_faccessat2","SYS_fadvise64","SYS_fallocate","SYS_fanotify_init","SYS_fanotify_mark","SYS_fchdir","SYS_fchmod","SYS_fchmodat","SYS_fchown","SYS_fchownat","SYS_fcntl","SYS_fdatasync","SYS_fgetxattr","SYS_finit_module","SYS_flistxattr","SYS_flock","SYS_fork","SYS_fremovexattr","SYS_fsconfig","SYS_fsetxattr","SYS_fsmount","SYS_fsopen","SYS_fspick","SYS_fstat","SYS_fstatfs","SYS_fsync","SYS_ftruncate","SYS_futex","SYS_futex_waitv","SYS_futimesat","SYS_get_kernel_syms","SYS_get_mempolicy","SYS_get_robust_list","SYS_get_thread_area","SYS_getcpu","SYS_getcwd","SYS_getdents","SYS_getdents64","SYS_getegid","SYS_geteuid","SYS_getgid","SYS_getgroups","SYS_getitimer","SYS_getpeername","SYS_getpgid","SYS_getpgrp","SYS_getpid","SYS_getpmsg","SYS_getppid","SYS_getpriority","SYS_getrandom","SYS_getresgid","SYS_getresuid","SYS_getrlimit","SYS_getrusage","SYS_getsid","SYS_getsockname","SYS_getsockopt","SYS_gettid","SYS_gettimeofday","SYS_getuid","SYS_getxattr","SYS_init_module","SYS_inotify_add_watch","SYS_inotify_init","SYS_inotify_init1","SYS_inotify_rm_watch","SYS_io_cancel","SYS_io_destroy","SYS_io_getevents","SYS_io_setup","SYS_io_submit","SYS_io_uring_enter","SYS_io_uring_register","SYS_io_uring_setup","SYS_ioctl","SYS_ioperm","SYS_iopl","SYS_ioprio_get","SYS_ioprio_set","SYS_kcmp","SYS_kexec_file_load","SYS_kexec_load","SYS_keyctl","SYS_kill","SYS_landlock_add_rule","SYS_landlock_create_ruleset","SYS_landlock_restrict_self","SYS_lchown","SYS_lgetxattr","SYS_link","SYS_linkat","SYS_listen","SYS_listxattr","SYS_llistxattr","SYS_lookup_dcookie","SYS_lremovexattr","SYS_lseek","SYS_lsetxattr","SYS_lstat","SYS_madvise","SYS_mbind","SYS_membarrier","SYS_memfd_create","SYS_memfd_secret","SYS_migrate_pages","SYS_mincore","SYS_mkdir","SYS_mkdirat","SYS_mknod","SYS_mknodat","SYS_mlock","SYS_mlock2","SYS_mlockall","SYS_mmap","SYS_modify_ldt","SYS_mount","SYS_mount_setattr","SYS_move_mount","SYS_move_pages","SYS_mprotect","SYS_mq_getsetattr","SYS_mq_notify","SYS_mq_open","SYS_mq_timedreceive","SYS_mq_timedsend","SYS_mq_unlink","SYS_mremap","SYS_msgctl","SYS_msgget","SYS_msgrcv","SYS_msgsnd","SYS_msync","SYS_munlock","SYS_munlockall","SYS_munmap","SYS_name_to_handle_at","SYS_nanosleep","SYS_newfstatat","SYS_nfsservctl","SYS_open","SYS_open_by_handle_at","SYS_open_tree","SYS_openat","SYS_openat2","SYS_pause","SYS_perf_event_open","SYS_personality","SYS_pidfd_getfd","SYS_pidfd_open","SYS_pidfd_send_signal","SYS_pipe","SYS_pipe2","SYS_pivot_root","SYS_pkey_alloc","SYS_pkey_free","SYS_pkey_mprotect","SYS_poll","SYS_ppoll","SYS_prctl","SYS_pread64","SYS_preadv","SYS_preadv2","SYS_prlimit64","SYS_process_madvise","SYS_process_mrelease","SYS_process_vm_readv","SYS_process_vm_writev","SYS_pselect6","SYS_ptrace","SYS_putpmsg","SYS_pwrite64","SYS_pwritev","SYS_pwritev2","SYS_query_module","SYS_quotactl","SYS_quotactl_fd","SYS_read","SYS_readahead","SYS_readlink","SYS_readlinkat","SYS_readv","SYS_reboot","SYS_recvfrom","SYS_recvmmsg","SYS_recvmsg","SYS_remap_file_pages","SYS_removexattr","SYS_rename","SYS_renameat","SYS_renameat2","SYS_request_key","SYS_restart_syscall","SYS_rmdir","SYS_rseq","SYS_rt_sigaction","SYS_rt_sigpending","SYS_rt_sigprocmask","SYS_rt_sigqueueinfo","SYS_rt_sigreturn","SYS_rt_sigsuspend","SYS_rt_sigtimedwait","SYS_rt_tgsigqueueinfo","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_getaffinity","SYS_sched_getattr","SYS_sched_getparam","SYS_sched_getscheduler","SYS_sched_rr_get_interval","SYS_sched_setaffinity","SYS_sched_setattr","SYS_sched_setparam","SYS_sched_setscheduler","SYS_sched_yield","SYS_seccomp","SYS_security","SYS_select","SYS_semctl","SYS_semget","SYS_semop","SYS_semtimedop","SYS_sendfile","SYS_sendmmsg","SYS_sendmsg","SYS_sendto","SYS_set_mempolicy","SYS_set_mempolicy_home_node","SYS_set_robust_list","SYS_set_thread_area","SYS_set_tid_address","SYS_setdomainname","SYS_setfsgid","SYS_setfsuid","SYS_setgid","SYS_setgroups","SYS_sethostname","SYS_setitimer","SYS_setns","SYS_setpgid","SYS_setpriority","SYS_setregid","SYS_setresgid","SYS_setresuid","SYS_setreuid","SYS_setrlimit","SYS_setsid","SYS_setsockopt","SYS_settimeofday","SYS_setuid","SYS_setxattr","SYS_shmat","SYS_shmctl","SYS_shmdt","SYS_shmget","SYS_shutdown","SYS_sigaltstack","SYS_signalfd","SYS_signalfd4","SYS_socket","SYS_socketpair","SYS_splice","SYS_stat","SYS_statfs","SYS_statx","SYS_swapoff","SYS_swapon","SYS_symlink","SYS_symlinkat","SYS_sync","SYS_sync_file_range","SYS_syncfs","SYS_sysfs","SYS_sysinfo","SYS_syslog","SYS_tee","SYS_tgkill","SYS_time","SYS_timer_create","SYS_timer_delete","SYS_timer_getoverrun","SYS_timer_gettime","SYS_timer_settime","SYS_timerfd_create","SYS_timerfd_gettime","SYS_timerfd_settime","SYS_times","SYS_tkill","SYS_truncate","SYS_tuxcall","SYS_umask","SYS_umount2","SYS_uname","SYS_unlink","SYS_unlinkat","SYS_unshare","SYS_uselib","SYS_userfaultfd","SYS_ustat","SYS_utime","SYS_utimensat","SYS_utimes","SYS_vfork","SYS_vhangup","SYS_vmsplice","SYS_vserver","SYS_wait4","SYS_waitid","SYS_write","SYS_writev","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCA_CHAIN","TCA_DUMP_INVISIBLE","TCA_FCNT","TCA_HW_OFFLOAD","TCA_KIND","TCA_OPTIONS","TCA_PAD","TCA_RATE","TCA_STAB","TCA_STATS","TCA_STATS2","TCA_UNSPEC","TCA_XSTATS","TCFLSH","TCGETA","TCGETS","TCGETS2","TCGETX","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_CC_INFO","TCP_CM_INQ","TCP_CONGESTION","TCP_COOKIE_TRANSACTIONS","TCP_CORK","TCP_DEFER_ACCEPT","TCP_FASTOPEN","TCP_FASTOPEN_CONNECT","TCP_FASTOPEN_KEY","TCP_FASTOPEN_NO_COOKIE","TCP_INFO","TCP_INQ","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MD5SIG","TCP_MD5SIG_EXT","TCP_NODELAY","TCP_NOTSENT_LOWAT","TCP_QUEUE_SEQ","TCP_QUICKACK","TCP_REPAIR","TCP_REPAIR_OPTIONS","TCP_REPAIR_QUEUE","TCP_REPAIR_WINDOW","TCP_SAVED_SYN","TCP_SAVE_SYN","TCP_SYNCNT","TCP_THIN_DUPACK","TCP_THIN_LINEAR_TIMEOUTS","TCP_TIMESTAMP","TCP_ULP","TCP_USER_TIMEOUT","TCP_WINDOW_CLAMP","TCP_ZEROCOPY_RECEIVE","TCSADRAIN","TCSAFLUSH","TCSANOW","TCSBRK","TCSBRKP","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCSETX","TCSETXF","TCSETXW","TCXONC","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","TFD_TIMER_CANCEL_ON_SET","THOUSEP","TIMER_ABSTIME","TIME_BAD","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGDEV","TIOCGETD","TIOCGEXCL","TIOCGICOUNT","TIOCGLCKTRMIOS","TIOCGPGRP","TIOCGPKT","TIOCGPTLCK","TIOCGPTN","TIOCGPTPEER","TIOCGRS485","TIOCGSERIAL","TIOCGSID","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMIWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCSBRK","TIOCSCTTY","TIOCSERCONFIG","TIOCSERGETLSR","TIOCSERGETMULTI","TIOCSERGSTRUCT","TIOCSERGWILD","TIOCSERSETMULTI","TIOCSERSWILD","TIOCSETD","TIOCSIG","TIOCSLCKTRMIOS","TIOCSPGRP","TIOCSPTLCK","TIOCSRS485","TIOCSSERIAL","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TIOCVHANGUP","TMPFS_MAGIC","TMP_MAX","TOSTOP","TRACEFS_MAGIC","TUN_READQ_SIZE","TUN_TAP_DEV","TUN_TUN_DEV","TUN_TYPE_MASK","T_FMT","T_FMT_AMPM","UDF_SUPER_MAGIC","UDP_CORK","UDP_ENCAP","UDP_GRO","UDP_NO_CHECK6_RX","UDP_NO_CHECK6_TX","UDP_SEGMENT","UINPUT_MAX_NAME_SIZE","UINPUT_VERSION","UIO_MAXIOV","UMOUNT_NOFOLLOW","UNAME26","USBDEVICE_SUPER_MAGIC","USER_PROCESS","USRQUOTA","UTIME_NOW","UTIME_OMIT","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMADDR_CID_ANY","VMADDR_CID_HOST","VMADDR_CID_HYPERVISOR","VMADDR_CID_LOCAL","VMADDR_CID_RESERVED","VMADDR_PORT_ANY","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WHOLE_SECONDS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_EXITCODE","W_OK","W_STOPCODE","XATTR_CREATE","XATTR_REPLACE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","YESEXPR","YESSTR","_IOFBF","_IOLBF","_IONBF","_PC_2_SYMLINKS","_PC_ALLOC_SIZE_MIN","_PC_ASYNC_IO","_PC_CHOWN_RESTRICTED","_PC_FILESIZEBITS","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_PRIO_IO","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_SOCK_MAXBUF","_PC_SYMLINK_MAX","_PC_SYNC_IO","_PC_VDISABLE","_POSIX_VDISABLE","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_C_VERSION","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BASE","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHARCLASS_NAME_MAX","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DELAYTIMER_MAX","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_EQUIV_CLASS_MAX","_SC_EXPR_NEST_MAX","_SC_FD_MGMT","_SC_FIFO","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_INT_MAX","_SC_INT_MIN","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_LONG_BIT","_SC_MAPPED_FILES","_SC_MB_LEN_MAX","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_MULTI_PROCESS","_SC_NETWORKING","_SC_NGROUPS_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PII","_SC_PII_INTERNET","_SC_PII_INTERNET_DGRAM","_SC_PII_INTERNET_STREAM","_SC_PII_OSI","_SC_PII_OSI_CLTS","_SC_PII_OSI_COTS","_SC_PII_OSI_M","_SC_PII_SOCKET","_SC_PII_XTI","_SC_PIPE","_SC_POLL","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_REGEX_VERSION","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SELECT","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_SIGNALS","_SC_SIGQUEUE_MAX","_SC_SINGLE_PROCESS","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SSIZE_MAX","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_T_IOV_MAX","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_UIO_MAXIOV","_SC_ULONG_MAX","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_USHRT_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_WORD_BIT","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__NFT_REG_MAX","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__UT_HOSTSIZE","__UT_LINESIZE","__UT_NAMESIZE","__WALL","__WCLONE","__WNOTHREAD","__c_anonymous_ifr_ifru","__c_anonymous_ifru_map","__c_anonymous_ptrace_syscall_info_data","__c_anonymous_ptrace_syscall_info_entry","__c_anonymous_ptrace_syscall_info_exit","__c_anonymous_ptrace_syscall_info_seccomp","__c_anonymous_sockaddr_can_can_addr","__c_anonymous_sockaddr_can_j1939","__c_anonymous_sockaddr_can_tp","__errno_location","__exit_status","__fsword_t","__glibc_reserved1","__glibc_reserved2","__glibc_reserved3","__glibc_reserved4","__key","__priority_which_t","__rlimit_resource_t","__s16","__s32","__s64","__seq","__statx_timestamp_pad1","__syscall_ulong_t","__timeval","__u16","__u32","__u64","__u8","__unused1","__unused10","__unused11","__unused2","__unused3","__unused4","__unused5","__unused6","__unused7","__unused8","__unused9","_exit","_f","_libc_fpstate","_libc_fpxreg","_libc_xmmreg","_st","_xmm","abort","abs","absflat","absfuzz","absinfo","absmax","absmin","accept","accept4","access","acct","actime","addmntent","addr","addr","addr_mask","addrinfo","adjtime","adjtimex","af_alg_iv","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arch","arch","arena","arena","args","args","args","arp_dev","arp_flags","arp_flags","arp_ha","arp_ha","arp_netmask","arp_netmask","arp_pa","arp_pa","arpd_request","arphdr","arpreq","arpreq_old","asctime_r","atexit","atof","atoi","atol","atoll","attack_length","attack_level","backtrace","base_addr","bind","blkcnt64_t","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","bsearch","bufferram","bustype","button","c_cc","c_cc","c_cflag","c_cflag","c_char","c_double","c_float","c_iflag","c_iflag","c_int","c_ispeed","c_ispeed","c_lflag","c_lflag","c_line","c_line","c_long","c_longlong","c_oflag","c_oflag","c_ospeed","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","can_addr","can_dlc","can_err_mask_t","can_family","can_filter","can_frame","can_id","can_id","can_id","can_ifindex","can_mask","canfd_frame","canid_t","cc_t","center","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","cgroup","ch_addralign","ch_addralign","ch_reserved","ch_size","ch_size","ch_type","ch_type","chdir","child_tid","chmod","chown","chroot","clearenv","clearerr","clock_adjtime","clock_getcpuclockid","clock_getres","clock_gettime","clock_nanosleep","clock_settime","clock_t","clockid","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_args","close","closedir","closelog","cmd","cmsg_len","cmsg_level","cmsg_type","cmsghdr","code","code","code","codes_ptr","codes_size","connect","constant","cookie","copy_file_range","cpu_set_t","creat","creat64","cs","ctermid","ctime_r","cuid","currency_symbol","custom_data","custom_len","cwd","cwd","d_ino","d_ino","d_name","d_name","d_off","d_off","d_reclen","d_reclen","d_type","d_type","daemon","data","data","deadband","decimal_point","delay","dest_offset","dev","dev_t","difftime","direction","dirent","dirent64","dirfd","dirname","dl_iterate_phdr","dl_phdr_info","dladdr","dladdr1","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlinfo","dlmopen","dlopen","dlpi_addr","dlpi_adds","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_subs","dlpi_tls_data","dlpi_tls_modid","dlsym","dma","domainname","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curinodes","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_valid","dqblk","drand48","ds","dup","dup2","dup3","duplocale","e_ehsize","e_ehsize","e_entry","e_entry","e_exit","e_flags","e_flags","e_ident","e_ident","e_machine","e_machine","e_phentsize","e_phentsize","e_phnum","e_phnum","e_phoff","e_phoff","e_shentsize","e_shentsize","e_shnum","e_shnum","e_shoff","e_shoff","e_shstrndx","e_shstrndx","e_termination","e_type","e_type","e_version","e_version","eaccess","ee_code","ee_data","ee_errno","ee_info","ee_origin","ee_pad","ee_type","effect","effect_id","eflags","element","end_level","endgrent","endmntent","endpwent","endservent","endspent","endutxent","entry","envelope","envelope","envelope","epoll_create","epoll_create1","epoll_ctl","epoll_event","epoll_pwait","epoll_wait","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erand48","errcnt","error","es","esterror","esterror","euidaccess","event_len","eventfd","events","events","execl","execle","execlp","execv","execve","execvp","execvpe","exit","exit","exit_signal","explicit_bzero","exponent","f_bavail","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_bsize","f_favail","f_favail","f_ffree","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_files","f_flag","f_flag","f_flags","f_frsize","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namemax","f_namemax","f_spare","f_type","f_type","faccessat","fade_length","fade_level","fallocate","fallocate64","fanotify_event_metadata","fanotify_init","fanotify_mark","fanotify_response","fchdir","fchmod","fchmodat","fchown","fchownat","fclose","fcntl","fd","fd","fd","fd_set","fdatasync","fdopen","fdopendir","feof","ferror","fexecve","ff_condition_effect","ff_constant_effect","ff_effect","ff_effects_max","ff_effects_max","ff_envelope","ff_periodic_effect","ff_ramp_effect","ff_replay","ff_rumble_effect","ff_trigger","fflush","fgetc","fgetgrent_r","fgetpos","fgetpos64","fgetpwent_r","fgets","fgetspent_r","fgetxattr","file_clone_range","fileno","filter","flag","flags","flags","flags","flags","flags","flags","flags","flat","flistxattr","flock","flock","flock64","fmemopen","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fop","fop","fopen","fopen64","fordblks","fordblks","fork","forkpty","fpathconf","fpos64_t","fpos_t","fpregs","fprintf","fputc","fputs","frac_digits","fread","fread_unlocked","free","freeaddrinfo","freehigh","freeifaddrs","freelocale","freeram","freeswap","fremovexattr","freopen","freopen64","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fs_base","fsblkcnt_t","fscanf","fseek","fseeko","fseeko64","fsetpos","fsetpos64","fsetxattr","fsfilcnt_t","fsid_t","fsmblks","fsmblks","fstat","fstat64","fstatat","fstatat64","fstatfs","fstatfs64","fstatvfs","fstatvfs64","fsync","ftell","ftello","ftello64","ftok","ftruncate","ftruncate64","ftw","ftw","futimens","futimes","fuzz","fwrite","gai_strerror","genlmsghdr","getaddrinfo","getauxval","getchar","getchar_unlocked","getcontext","getcwd","getdomainname","getdtablesize","getegid","getentropy","getenv","geteuid","getgid","getgrent","getgrent_r","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","getifaddrs","getline","getloadavg","getlogin","getmntent","getnameinfo","getopt","getopt_long","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprotobyname","getprotobynumber","getpt","getpwent","getpwent_r","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrandom","getresgid","getresuid","getrlimit","getrlimit64","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","getspent","getspent_r","getspnam","getspnam_r","gettid","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid","gid_t","gl_flags","gl_flags","gl_offs","gl_offs","gl_pathc","gl_pathc","gl_pathv","gl_pathv","glob","glob64","glob64_t","glob_t","globfree","globfree64","gmtime","gmtime_r","gnu_basename","gnu_get_libc_release","gnu_get_libc_version","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","greg_t","gregs","group","group","grouping","gs","gs_base","h_addr_list","h_addrtype","h_aliases","h_length","h_name","ha","has_arg","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hasmntopt","hblkhd","hblkhd","hblks","hblks","hostent","hstrerror","i387","iconv","iconv_close","iconv_open","iconv_t","id","id","id","id_t","idtype_t","if_freenameindex","if_index","if_indextoname","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_flags","ifa_ifu","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifr6_addr","ifr6_ifindex","ifr6_prefixlen","ifr_ifru","ifr_name","ifreq","ifru_addr","ifru_broadaddr","ifru_data","ifru_dstaddr","ifru_flags","ifru_hwaddr","ifru_ifindex","ifru_map","ifru_metric","ifru_mtu","ifru_netmask","ifru_newname","ifru_slave","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_ifreq","in6_pktinfo","in6_rtmsg","in_addr","in_addr_t","in_pktinfo","in_port_t","index","initgroups","ino64_t","ino_t","inotify_add_watch","inotify_event","inotify_init","inotify_init1","inotify_rm_watch","input_absinfo","input_event","input_id","input_keymap_entry","input_mask","instruction_pointer","instruction_pointer","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","interval","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","ioctl","ioperm","iopl","iov_base","iov_len","iovec","ip","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","irq","is_error","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_interval","it_value","it_value","itimerspec","itimerval","iv","ivlen","j1939","j1939_filter","jf","jitcnt","jitter","jrand48","jt","k","keepcost","keepcost","key_t","keycode","kill","killpg","l_len","l_len","l_linger","l_onoff","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","labs","lchown","lcong48","lconv","left_coeff","left_saturation","len","len","len","len","length","level","lgetxattr","linger","link","linkat","lio_listio","listen","listxattr","llistxattr","loads","locale_t","localeconv","localtime","localtime_r","lockf","loff_t","login_tty","lrand48","lremovexattr","lseek","lseek64","lsetxattr","lstat","lstat64","lutimes","machine","madvise","magic","magnitude","major","makecontext","makedev","mallinfo","mallinfo","mallinfo2","mallinfo2","malloc","malloc_info","malloc_trim","malloc_usable_size","mallopt","mask","mask","max_align_t","maxerror","maxerror","maximum","mcontext_t","mem_end","mem_start","mem_unit","memalign","memchr","memcmp","memcpy","memfd_create","memmem","memmove","memrchr","memset","metadata_len","mincore","minimum","minor","mkdir","mkdirat","mkdtemp","mkfifo","mkfifoat","mknod","mknodat","mkostemp","mkostemps","mkstemp","mkstemps","mktime","mlock","mlock2","mlockall","mmap","mmap64","mmsghdr","mnt_dir","mnt_freq","mnt_fsname","mnt_opts","mnt_passno","mnt_type","mntent","mode","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mq_attr","mq_close","mq_curmsgs","mq_flags","mq_getattr","mq_maxmsg","mq_msgsize","mq_open","mq_receive","mq_send","mq_setattr","mq_timedreceive","mq_timedsend","mq_unlink","mqd_t","mr_address","mr_alen","mr_ifindex","mr_type","mrand48","mremap","msg","msg_control","msg_controllen","msg_ctime","msg_flags","msg_hdr","msg_iov","msg_iovlen","msg_len","msg_lrpid","msg_lspid","msg_name","msg_namelen","msg_perm","msg_qbytes","msg_qnum","msg_rtime","msg_stime","msgctl","msgget","msghdr","msginfo","msglen_t","msgmap","msgmax","msgmnb","msgmni","msgpool","msgqnum_t","msgrcv","msgseg","msgsnd","msgssz","msgtql","msqid_ds","msync","munlock","munlockall","munmap","mxcr_mask","mxcr_mask","mxcsr","mxcsr","n_cs_precedes","n_sep_by_space","n_sign_posn","name","name","name","name","name","name_mask","name_t","nanosleep","negative_sign","newlocale","nfds_t","nice","nl_family","nl_groups","nl_item","nl_langinfo","nl_langinfo_l","nl_mmap_hdr","nl_mmap_req","nl_pid","nl_pktinfo","nla_len","nla_type","nlattr","nlink_t","nlmsg_flags","nlmsg_len","nlmsg_pid","nlmsg_seq","nlmsg_type","nlmsgerr","nlmsghdr","nm_block_nr","nm_block_size","nm_frame_nr","nm_frame_size","nm_gid","nm_group","nm_len","nm_pid","nm_status","nm_uid","nodename","nr","nr","nr","nr","nrand48","ntp_adjtime","ntp_gettime","ntptimeval","off","off64_t","off_t","offset","offset","old","op","open","open64","open_how","open_memstream","open_wmemstream","openat","openat64","opendir","openlog","openpty","option","ordblks","ordblks","orig_rax","p_aliases","p_align","p_align","p_cs_precedes","p_filesz","p_filesz","p_flags","p_flags","p_memsz","p_memsz","p_name","p_offset","p_offset","p_paddr","p_paddr","p_proto","p_sep_by_space","p_sign_posn","p_type","p_type","p_vaddr","p_vaddr","packet_mreq","pad","pad","pad","parent_tid","passwd","pathconf","pause","pclose","period","perror","personality","pgn","pgn","pgn_mask","pgn_t","phase","pid","pid","pid_t","pidfd","pipe","pipe2","poll","pollfd","popen","port","positive_sign","posix_basename","posix_fadvise","posix_fadvise64","posix_fallocate","posix_fallocate64","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addopen","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getschedparam","posix_spawnattr_getschedpolicy","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setschedparam","posix_spawnattr_setschedpolicy","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppoll","ppsfreq","prctl","pread","pread64","preadv","preadv2","preadv64","preadv64v2","precision","printf","priority_t","prlimit","prlimit64","process_vm_readv","process_vm_writev","procs","product","protoent","pselect","pthread_atfork","pthread_attr_destroy","pthread_attr_getaffinity_np","pthread_attr_getguardsize","pthread_attr_getstack","pthread_attr_init","pthread_attr_setaffinity_np","pthread_attr_setdetachstate","pthread_attr_setstacksize","pthread_attr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getclock","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setclock","pthread_condattr_setpshared","pthread_condattr_t","pthread_create","pthread_detach","pthread_exit","pthread_getaffinity_np","pthread_getattr_np","pthread_getcpuclockid","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mutex_consistent","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_timedlock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getprotocol","pthread_mutexattr_getpshared","pthread_mutexattr_getrobust","pthread_mutexattr_init","pthread_mutexattr_setprotocol","pthread_mutexattr_setpshared","pthread_mutexattr_setrobust","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getkind_np","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setkind_np","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_setaffinity_np","pthread_setname_np","pthread_setschedparam","pthread_setschedprio","pthread_setspecific","pthread_sigmask","pthread_sigqueue","pthread_spin_destroy","pthread_spin_init","pthread_spin_lock","pthread_spin_trylock","pthread_spin_unlock","pthread_spinlock_t","pthread_t","ptrace","ptrace_peeksiginfo_args","ptrace_rseq_configuration","ptrace_syscall_info","ptrdiff_t","ptsname","ptsname_r","putchar","putchar_unlocked","putenv","puts","pututxline","pw_dir","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwrite64","pwritev","pwritev2","pwritev64","pwritev64v2","qsort","qsort_r","quotactl","r10","r11","r12","r13","r14","r15","r8","r9","raise","rand","rax","rbp","rbx","rcx","rdi","rdp","rdp","rdx","read","readahead","readdir","readdir64","readdir64_r","readdir_r","readlink","readlinkat","readv","realloc","reallocarray","realpath","reboot","recv","recvfrom","recvmmsg","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","regs","release","remap_file_pages","remove","removexattr","rename","renameat","renameat2","replay","req","request_id","request_id","res_init","reserved","reserved","resolution","resolve","response","ret_data","retval","retval","revents","rewind","rewinddir","right_coeff","right_saturation","rip","rip","rip","rlim64_t","rlim_cur","rlim_cur","rlim_max","rlim_max","rlim_t","rlimit","rlimit64","rm_eo","rm_so","rmdir","rseq_abi_pointer","rseq_abi_size","rsi","rsp","rt_class","rt_dev","rt_dst","rt_flags","rt_gateway","rt_genmask","rt_irtt","rt_metric","rt_mtu","rt_pad1","rt_pad2","rt_pad3","rt_pad4","rt_tos","rt_window","rtentry","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","rx_id","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_family","sa_family_t","sa_flags","sa_mask","sa_restorer","sa_sigaction","salg_family","salg_feat","salg_mask","salg_name","salg_type","sbrk","scancode","scanf","sched_get_priority_max","sched_get_priority_min","sched_getaffinity","sched_getcpu","sched_getparam","sched_getscheduler","sched_param","sched_priority","sched_rr_get_interval","sched_setaffinity","sched_setparam","sched_setscheduler","sched_yield","seccomp","seccomp_data","seccomp_data","seccomp_notif","seccomp_notif_resp","seccomp_notif_sizes","seed48","seekdir","select","sem_close","sem_ctime","sem_destroy","sem_flg","sem_getvalue","sem_init","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_perm","sem_post","sem_t","sem_timedwait","sem_trywait","sem_unlink","sem_wait","semaem","sembuf","semctl","semget","semid_ds","seminfo","semmap","semmni","semmns","semmnu","semmsl","semop","semopm","semume","semusz","semvmx","send","sendfile","sendfile64","sendmmsg","sendmsg","sendto","servent","set_tid","set_tid_size","setbuf","setcontext","setdomainname","setegid","setenv","seteuid","setfsgid","setfsuid","setgid","setgrent","setgroups","sethostid","sethostname","setlocale","setlogmask","setmntent","setns","setpgid","setpriority","setpwent","setregid","setresgid","setresuid","setreuid","setrlimit","setrlimit64","setservent","setsid","setsockopt","setspent","settimeofday","setuid","setutxent","setvbuf","setxattr","sgetspent_r","sh_addr","sh_addr","sh_addralign","sh_addralign","sh_entsize","sh_entsize","sh_flags","sh_flags","sh_info","sh_info","sh_link","sh_link","sh_name","sh_name","sh_offset","sh_offset","sh_size","sh_size","sh_type","sh_type","sharedram","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_code","si_errno","si_pid","si_signo","si_status","si_stime","si_uid","si_utime","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_thread_id","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","signal","signalfd","signalfd_siginfo","signature","significand","sigpending","sigprocmask","sigset_t","sigsuspend","sigtimedwait","sigval","sigwait","sigwaitinfo","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","sival_ptr","size_t","sleep","sll_addr","sll_family","sll_halen","sll_hatype","sll_ifindex","sll_pkttype","sll_protocol","smblks","smblks","snprintf","sock_extended_err","sock_filter","sock_fprog","sock_txtime","sockaddr","sockaddr_alg","sockaddr_can","sockaddr_in","sockaddr_in6","sockaddr_ll","sockaddr_nl","sockaddr_storage","sockaddr_un","sockaddr_vm","socket","socketpair","socklen_t","sp_expire","sp_flag","sp_inact","sp_lstchg","sp_max","sp_min","sp_namp","sp_pwdp","sp_warn","speed_t","splice","sprintf","spwd","srand","srand48","src_fd","src_length","src_offset","ss","ss_family","ss_flags","ss_size","ss_sp","sscanf","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","ssize_t","st_atime","st_atime","st_atime_nsec","st_atime_nsec","st_blksize","st_blksize","st_blocks","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_info","st_info","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_mtime_nsec","st_name","st_name","st_nlink","st_nlink","st_other","st_other","st_rdev","st_rdev","st_shndx","st_shndx","st_size","st_size","st_size","st_size","st_space","st_uid","st_uid","st_value","st_value","stabil","stack","stack_pointer","stack_size","stack_t","stamp","start_code","start_level","start_stack","stat","stat","stat64","stat64","statfs","statfs","statfs64","statfs64","status","statvfs","statvfs","statvfs64","statvfs64","statx","statx","statx_timestamp","stbcnt","stpcpy","stpncpy","strcasecmp","strcasestr","strcat","strchr","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strftime","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strong_magnitude","strpbrk","strptime","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtok_r","strtol","strtoll","strtoul","strtoull","strxfrm","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sun_family","sun_path","suseconds_t","sval","svm_cid","svm_family","svm_port","svm_reserved1","svm_zero","swapcontext","swapoff","swapon","swd","swd","symlink","symlinkat","sync","sync_file_range","syncfs","syscall","sysconf","sysctl","sysinfo","sysinfo","syslog","sysname","system","tai","tai","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","tee","telldir","termios","termios2","thousands_sep","tick","time","time","time","time","time_t","timegm","timer_create","timer_delete","timer_getoverrun","timer_gettime","timer_settime","timer_t","timerfd_create","timerfd_gettime","timerfd_settime","times","timespec","timeval","timex","timezone","tls","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpfile64","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","totalhigh","totalram","totalswap","toupper","tp","trigger","truncate","truncate64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tx_id","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u64","u_ar0","u_comm","u_debugreg","u_dsize","u_fpstate","u_fpvalid","u_ssize","u_tsize","uc_flags","uc_link","uc_mcontext","uc_sigmask","uc_stack","ucontext_t","ucred","uid","uid","uid_t","uinput_abs_setup","uinput_ff_erase","uinput_ff_upload","uinput_setup","uinput_user_dev","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","umount","umount2","uname","ungetc","unlink","unlinkat","unlockpt","unsetenv","unshare","uordblks","uordblks","updated","uptime","useconds_t","uselocale","user","user_fpregs_struct","user_regs_struct","usleep","usmblks","usmblks","ut_addr_v6","ut_exit","ut_host","ut_id","ut_line","ut_pid","ut_session","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpname","utmpx","utmpxname","utsname","val","value","value","vendor","vers","version","version","version","vfork","vhangup","vmsplice","wait","wait4","waitid","waitpid","waveform","wchar_t","wcslen","wcstombs","wd","weak_magnitude","winsize","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xmm_space"],"q":["libcdmaximum number of services provided on the same listening …uth Header","","IP Payload Comp. Protocol","DCCP","IP6 destination option","exterior gateway protocol","encapsulation header","IP6 Encap Sec. Payload","IP6 fragmentation header","General Routing Encap.","Hop-by-hop option header","","","xns idp","group mgmt protocol","","for compatibility","","","","","Multipath TCP","","IP6 no next header","Protocol indep. multicast","pup","raw IP packet","IP6 routing header","resource reservation","SCTP","","tp-4 w/ class negotiationhe <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of thisquivalent to C’s <code>void</code> type when used as a pointereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GNU version of <code>basename(3)</code>, defined in <code>string.h</codeinterface name, e.g. “en0”","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","POSIX version of <code>basename(3)</code>, defined in <code>libgen.h</codehe 64-bit libc on Solaris and illumos only has readdir_r. …if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,3],4],0,0,0,0,0,0,0,0,0,0,[2,2],0,0,0,0,0,0,0,0,[2,2],0,[[1,2],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,6],[7,5],[8,8],[[7,5],5],[8,8],0,0,0,[9,10],[[11,12]],[12,9],[[11,12],9],[[12,12],13],[[11,12],13],[[11,12]],0,[12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,14]],[[9,14],13],[[9,14]],0,[14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,[15,15],0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,16,16],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],0,0,0,0,0,[16,13],0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[17,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,13],0,[9,9],0,[9,13],[9,13],[9,13],[9,13],0,0,0,[9,9],[9,9],0,[[9,9],9],0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[18,18],[44,44],[45,45],[46,46],[47,47],[14,14],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[12,12],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[17,17],[114,114],[115,115],[116,116],[117,117],[4,4],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[7,7],[5,5],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[20,20],13],[[21,21],13],[[22,22],13],[[23,23],13],[[24,24],13],[[25,25],13],[[26,26],13],[[27,27],13],[[28,28],13],[[29,29],13],[[30,30],13],[[31,31],13],[[32,32],13],[[33,33],13],[[34,34],13],[[35,35],13],[[36,36],13],[[40,40],13],[[41,41],13],[[42,42],13],[[43,43],13],[[18,18],13],[[44,44],13],[[45,45],13],[[46,46],13],[[47,47],13],[[14,14],13],[[48,48],13],[[49,49],13],[[50,50],13],[[51,51],13],[[52,52],13],[[53,53],13],[[54,54],13],[[55,55],13],[[56,56],13],[[57,57],13],[[58,58],13],[[59,59],13],[[60,60],13],[[61,61],13],[[62,62],13],[[63,63],13],[[65,65],13],[[66,66],13],[[67,67],13],[[68,68],13],[[69,69],13],[[70,70],13],[[71,71],13],[[72,72],13],[[73,73],13],[[12,12],13],[[74,74],13],[[75,75],13],[[76,76],13],[[77,77],13],[[78,78],13],[[79,79],13],[[80,80],13],[[81,81],13],[[82,82],13],[[83,83],13],[[84,84],13],[[85,85],13],[[86,86],13],[[87,87],13],[[88,88],13],[[89,89],13],[[90,90],13],[[91,91],13],[[92,92],13],[[93,93],13],[[94,94],13],[[95,95],13],[[96,96],13],[[97,97],13],[[98,98],13],[[99,99],13],[[100,100],13],[[101,101],13],[[102,102],13],[[103,103],13],[[104,104],13],[[105,105],13],[[106,106],13],[[107,107],13],[[108,108],13],[[109,109],13],[[110,110],13],[[111,111],13],[[112,112],13],[[113,113],13],[[17,17],13],[[114,114],13],[[115,115],13],[[116,116],13],[[117,117],13],[[4,4],13],[[118,118],13],[[119,119],13],[[120,120],13],[[121,121],13],[[122,122],13],[[123,123],13],[[124,124],13],[[125,125],13],[[126,126],13],[[127,127],13],[[128,128],13],[[129,129],13],[[130,130],13],[[131,131],13],[[132,132],13],[[133,133],13],[[134,134],13],[[140,140],13],[[141,141],13],[[142,142],13],[[143,143],13],[[144,144],13],[[145,145],13],[[7,7],13],[[5,5],13],[[146,146],13],[[147,147],13],[[148,148],13],[[149,149],13],[[150,150],13],[[151,151],13],[[152,152],13],[[153,153],13],[[154,154],13],[[155,155],13],[[156,156],13],[[157,157],13],[[158,158],13],[[159,159],13],[[160,160],13],[[161,161],13],[[162,162],13],[[163,163],13],[[164,164],13],[[165,165],13],[[166,166],13],[[167,167],13],[[168,168],13],[[169,169],13],[[170,170],13],[[171,171],13],[[172,172],13],[[173,173],13],[[174,174],13],[[175,175],13],[[176,176],13],[[177,177],13],[[178,178],13],[[179,179],13],[[180,180],13],[[181,181],13],[[182,182],13],[[183,183],13],[[184,184],13],[[185,185],13],[[186,186],13],[[187,187],13],[[188,188],13],[[189,189],13],[[190,190],13],[[191,191],13],[[192,192],13],[[193,193],13],[[195,195],13],[[196,196],13],[[197,197],13],[[198,198],13],[[199,199],13],[[200,200],13],[[201,201],13],[[202,202],13],[[203,203],13],[[204,204],13],[[207,207],13],[[208,208],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,209],210],[[20,209],210],[[21,209],210],[[22,209],210],[[23,209],210],[[24,209],210],[[25,209],210],[[26,209],210],[[27,209],210],[[28,209],210],[[29,209],210],[[30,209],210],[[31,209],210],[[32,209],210],[[33,209],210],[[34,209],210],[[35,209],210],[[36,209],210],[[37,209],210],[[38,209],210],[[39,209],210],[[40,209],210],[[41,209],210],[[42,209],210],[[43,209],210],[[18,209],210],[[44,209],210],[[45,209],210],[[46,209],210],[[47,209],210],[[14,209],210],[[48,209],210],[[49,209],210],[[50,209],210],[[51,209],210],[[52,209],210],[[53,209],210],[[54,209],210],[[55,209],210],[[56,209],210],[[57,209],210],[[58,209],210],[[59,209],210],[[60,209],210],[[61,209],210],[[62,209],210],[[63,209],210],[[64,209],210],[[65,209],210],[[66,209],210],[[67,209],210],[[68,209],210],[[69,209],210],[[70,209],210],[[71,209],210],[[72,209],210],[[73,209],210],[[12,209],210],[[74,209],210],[[75,209],210],[[76,209],210],[[77,209],210],[[78,209],210],[[79,209],210],[[80,209],210],[[81,209],210],[[82,209],210],[[83,209],210],[[84,209],210],[[85,209],210],[[86,209],210],[[87,209],210],[[88,209],210],[[89,209],210],[[90,209],210],[[91,209],210],[[92,209],210],[[93,209],210],[[94,209],210],[[95,209],210],[[96,209],210],[[97,209],210],[[98,209],210],[[99,209],210],[[100,209],210],[[101,209],210],[[102,209],210],[[103,209],210],[[104,209],210],[[105,209],210],[[106,209],210],[[107,209],210],[[108,209],210],[[109,209],210],[[110,209],210],[[111,209],210],[[112,209],210],[[113,209],210],[[17,209],210],[[114,209],210],[[115,209],210],[[116,209],210],[[117,209],210],[[4,209],210],[[118,209],210],[[119,209],210],[[211,209],[[213,[212]]]],[[120,209],210],[[121,209],210],[[122,209],210],[[123,209],210],[[124,209],210],[[125,209],210],[[126,209],210],[[127,209],210],[[128,209],210],[[129,209],210],[[130,209],210],[[131,209],210],[[132,209],210],[[133,209],210],[[134,209],210],[[135,209],210],[[136,209],210],[[140,209],210],[[141,209],210],[[142,209],210],[[143,209],210],[[144,209],210],[[145,209],210],[[7,209],210],[[5,209],210],[[146,209],210],[[147,209],210],[[148,209],210],[[149,209],210],[[150,209],210],[[151,209],210],[[152,209],210],[[153,209],210],[[154,209],210],[[155,209],210],[[156,209],210],[[157,209],210],[[158,209],210],[[159,209],210],[[160,209],210],[[161,209],210],[[162,209],210],[[163,209],210],[[164,209],210],[[165,209],210],[[166,209],210],[[167,209],210],[[168,209],210],[[169,209],210],[[170,209],210],[[171,209],210],[[172,209],210],[[173,209],210],[[174,209],210],[[175,209],210],[[176,209],210],[[177,209],210],[[178,209],210],[[179,209],210],[[180,209],210],[[181,209],210],[[182,209],210],[[183,209],210],[[184,209],210],[[185,209],210],[[186,209],210],[[187,209],210],[[188,209],210],[[189,209],210],[[190,209],210],[[191,209],210],[[192,209],210],[[193,209],210],[[195,209],210],[[196,209],210],[[197,209],210],[[198,209],210],[[199,209],210],[[200,209],210],[[201,209],210],[[202,209],210],[[203,209],210],[[204,209],210],[[207,209],210],[[208,209],210],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[40],[41],[42],[43],[18],[44],[45],[46],[47],[14],[48],[49],[50],[51],[52],[53],[54],[55],[56],[57],[58],[59],[60],[61],[62],[63],[65],[66],[67],[68],[69],[70],[71],[72],[73],[12],[74],[75],[76],[77],[78],[79],[80],[81],[82],[83],[84],[85],[86],[87],[88],[89],[90],[91],[92],[93],[94],[95],[96],[97],[98],[99],[100],[101],[102],[103],[104],[105],[106],[107],[108],[109],[110],[111],[112],[113],[17],[114],[115],[116],[117],[4],[118],[119],[120],[121],[122],[123],[124],[125],[126],[127],[128],[129],[130],[131],[132],[133],[134],[140],[141],[142],[143],[144],[145],[7],[5],[146],[147],[148],[149],[150],[151],[152],[153],[154],[155],[156],[157],[158],[159],[160],[161],[162],[163],[164],[165],[166],[167],[168],[169],[170],[171],[172],[173],[174],[175],[176],[177],[178],[179],[180],[181],[182],[183],[184],[185],[186],[187],[188],[189],[190],[191],[192],[193],[195],[196],[197],[198],[199],[200],[201],[202],[203],[204],[207],[208],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[214,8],0,[[8,8],214],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[214,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[174,211],0,0,[174,215],0,[174,9],[174,216],[174,217],[174,216],[174,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],[[],213],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],[[],218],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[6,"__u16"],[6,"__u32"],[6,"__u8"],[3,"sock_filter"],[3,"cmsghdr"],[6,"c_uchar"],[3,"msghdr"],[6,"c_uint"],[6,"c_int"],[6,"size_t"],[15,"usize"],[3,"cpu_set_t"],[15,"bool"],[3,"fd_set"],[15,"u8"],[15,"u32"],[3,"sock_extended_err"],[3,"sockaddr"],[4,"DIR"],[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreqn"],[3,"ip_mreq_source"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"in6_rtmsg"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[4,"fpos64_t"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"fsid_t"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"uinput_abs_setup"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"j1939_filter"],[3,"sock_fprog"],[3,"seccomp_data"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nlattr"],[3,"file_clone_range"],[3,"__c_anonymous_ifru_map"],[3,"in6_ifreq"],[3,"option"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"uinput_user_dev"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_ifr_ifru"],[3,"ifreq"],[3,"sock_txtime"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"termios"],[3,"mallinfo"],[3,"mallinfo2"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"regex_t"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"seminfo"],[3,"ptrace_peeksiginfo_args"],[3,"__c_anonymous_ptrace_syscall_info_entry"],[3,"__c_anonymous_ptrace_syscall_info_exit"],[3,"__c_anonymous_ptrace_syscall_info_seccomp"],[3,"ptrace_syscall_info"],[19,"__c_anonymous_ptrace_syscall_info_data"],[3,"utmpx"],[3,"sigset_t"],[3,"sysinfo"],[3,"msqid_ds"],[3,"semid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"seccomp_notif_sizes"],[3,"ptrace_rseq_configuration"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"max_align_t"],[3,"clone_args"],[3,"sem_t"],[3,"termios2"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"fanotify_event_metadata"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"can_frame"],[3,"canfd_frame"],[3,"open_how"],[3,"in6_addr"],[3,"Formatter"],[6,"Result"],[4,"c_void"],[3,"Error"],[4,"Result"],[6,"dev_t"],[6,"pid_t"],[6,"c_long"],[6,"uid_t"],[3,"TypeId"]]},\
"libloading":{"doc":"Bindings around the platform’s dynamic library loading …","t":[13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,3,13,13,3,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,17,17,17,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","Error","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","Library","LoadLibraryExW","LoadLibraryExWUnknown","Symbol","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","changelog","clone","clone_into","close","deref","fmt","fmt","fmt","fmt","from","from","from","from","from_raw","get","into","into","into","into_raw","library_filename","lift_option","new","os","provide","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","desc","desc","desc","source","source","source","source","source","source","r0_3_0","r0_3_1","r0_3_2","r0_3_3","r0_3_4","r0_4_0","r0_4_1","r0_4_2","r0_4_3","r0_5_0","r0_5_1","r0_5_2","r0_6_0","r0_6_1","r0_6_2","r0_6_3","r0_6_4","r0_6_5","r0_6_6","r0_6_7","r0_7_0","r0_7_1","r0_7_2","r0_7_3","r0_7_4","unix","Library","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NOW","Symbol","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","close","deref","drop","fmt","fmt","from","from","from","from_raw","get","get_singlethreaded","into","into","into_raw","into_raw","lift_option","new","open","this","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["libloading","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libloading::Error","","","","","","","","","libloading::changelog","","","","","","","","","","","","","","","","","","","","","","","","","libloading::os","libloading::os::unix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","Errors.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","A loaded dynamic library.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Symbol from a library.","","","","","","","The change log.","","","Unload the library.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Wrap the <code>os::platform::Symbol</code> into this safe wrapper.","Get a pointer to a function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the wrapped <code>os::platform::Symbol</code>.","Converts a library name to a filename generally …","Lift Option out of the symbol.","Find and load a dynamic library.","Unsafe but flexible platform-specific bindings to dynamic …","","","","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","Release 0.3.0 (2016-07-27)","Release 0.3.1 (2016-10-01)","Release 0.3.2 (2017-02-10)","Release 0.3.3 (2017-03-25)","Release 0.3.4 (2017-03-25)","Release 0.4.0 (2017-05-01)","Release 0.4.1 (2017-08-29)","Release 0.4.2 (2017-09-24)","Release 0.4.3 (2017-12-07)","Release 0.5.0 (2018-01-11)","Release 0.5.1 (2019-06-01)","Release 0.5.2 (2019-07-07)","Release 0.6.0 (2020-04-05)","Release 0.6.1 (2020-04-15)","Release 0.6.2 (2020-05-06)","Release 0.6.3 (2020-08-22)","Release 0.6.4 (2020-10-10)","Release 0.6.5 (2020-10-23)","Release 0.6.6 (2020-12-03)","Release 0.6.7 (2021-01-14)","Release 0.7.0 (2021-02-06)","Release 0.7.1 (2021-10-09)","Release 0.7.2 (2021-11-14)","Release 0.7.3 (2022-01-15)","Release 0.7.4 (2022-11-07)","UNIX implementation of dynamic library loading.","A platform-specific counterpart of the cross-platform …","Make loaded symbols available for resolution globally.","Perform lazy binding.","Load symbols into an isolated namespace.","Perform eager binding.","Symbol from a library.","","","","","","","Unload the library.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Convert a raw handle returned by <code>dlopen</code>-family of calls to …","Get a pointer to a function or static variable by symbol …","Get a pointer to function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the <code>Library</code> to a raw handle.","Convert the loaded <code>Symbol</code> into a raw pointer.","Lift Option out of the symbol.","Find and eagerly load a shared library (module).","Find and load an executable object file (shared library).","Load the <code>Library</code> representing the current executable.","","","","","","",""],"i":[3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,0,3,3,0,2,1,3,2,1,3,0,1,1,2,1,2,1,3,3,2,2,1,3,1,2,2,1,3,1,0,1,2,0,3,3,1,3,2,1,3,2,1,3,2,1,3,19,20,21,22,23,24,25,26,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,7,8,8,8,7,8,7,7,8,7,7,8,7,7,7,7,8,7,8,8,7,7,7,8,7,8,7,8,7,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[[]],[2,[[4,[3]]]],[1],[[2,5],6],[[1,5],6],[[3,5],6],[[3,5],6],[[]],[7,2],[[]],[[]],[8,1],[2,[[4,[1,3]]]],[[]],[[]],[[]],[1,8],[[[10,[9]]],11],[[[1,[12]]],[[12,[1]]]],[[[10,[9]]],[[4,[2,3]]]],0,[13],[3,[[12,[14]]]],[[]],[[],15],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[8,8],[[]],[7,[[4,[3]]]],[8],[7],[[7,5],6],[[8,5],6],[[]],[2,7],[[]],[17,7],[7,[[4,[8,3]]]],[7,[[4,[8,3]]]],[[]],[[]],[7,17],[8,17],[[[8,[12]]],[[12,[8]]]],[[[10,[9]]],[[4,[7,3]]]],[[12,18],[[4,[7,3]]]],[[],7],[[]],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16]],"p":[[3,"Symbol"],[3,"Library"],[4,"Error"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Library"],[3,"Symbol"],[3,"OsStr"],[8,"AsRef"],[3,"OsString"],[4,"Option"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"],[6,"c_void"],[6,"c_int"],[13,"DlOpen"],[13,"DlSym"],[13,"DlClose"],[13,"LoadLibraryExW"],[13,"GetModuleHandleExW"],[13,"GetProcAddress"],[13,"FreeLibrary"],[13,"CreateCString"],[13,"CreateCStringWithTrailing"]]},\
"log":{"doc":"A lightweight logging facade.","t":[13,13,13,13,13,13,4,4,8,3,3,13,3,3,3,17,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,10,11,11,11,11,11,11,11,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14],"n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","le","le","le","le","level","level","level","level","line","line","log","log","log_enabled","logger","lt","lt","lt","lt","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":["logd":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","","","","","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","","","","","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,3,7,1,8,4,6,1,8,4,6,8,7,0,19,4,4,6,6,8,7,11,0,1,3,1,3,19,4,4,6,6,1,3,8,7,15,15,11,11,4,6,1,3,8,7,15,11,4,6,4,4,6,6,4,4,6,6,4,6,8,7,0,4,6,1,3,8,7,15,11,4,6,4,4,6,6,1,3,8,7,1,3,19,0,0,0,4,4,6,6,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[8,10],[[4,6],10],[[4,4],10],[[6,6],10],[[6,4],10],[[8,8],10],[[7,7],10],[[11,11],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[]],[[4,13],14],[[4,13],14],[[6,13],14],[[6,13],14],[[1,13],14],[[3,13],14],[[8,13],14],[[7,13],14],[[15,13],14],[[15,13],14],[[11,13],14],[[11,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[16,[4]]]],[5,[[16,[6]]]],[[4,4],10],[[4,6],10],[[6,6],10],[[6,4],10],[[4,4],10],[[4,6],10],[[6,6],10],[[6,4],10],[4],[6],[8],[7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[4,4],10],[[4,6],10],[[6,6],10],[[6,4],10],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[18]]]],[[3,[12,[18]]],3],[1],0,0,[[],19],[[4,4],10],[[4,6],10],[[6,4],10],[[6,6],10],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,6],[[12,[9]]]],[[4,4],[[12,[9]]]],[[6,6],[[12,[9]]]],[[6,4],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[19,[[16,[15]]]],[19,[[16,[15]]]],[6],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0],"p":[[3,"Record"],[3,"Arguments"],[3,"RecordBuilder"],[4,"Level"],[15,"str"],[4,"LevelFilter"],[3,"MetadataBuilder"],[3,"Metadata"],[4,"Ordering"],[15,"bool"],[3,"ParseLevelError"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"SetLoggerError"],[4,"Result"],[8,"Iterator"],[15,"u32"],[8,"Log"],[3,"TypeId"]]},\
"memchr":{"doc":"This library provides heavily optimized routines for …","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,0,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,3,3,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Memchr","Memchr2","Memchr3","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","into_iter","into_iter","into_iter","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memmem","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","new","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Auto","FindIter","FindRevIter","Finder","FinderBuilder","FinderRev","None","Prefilter","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_forward","build_reverse","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","find","find","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_owned","into_owned","into_owned","into_owned","needle","needle","new","new","new","next","next","prefilter","rfind","rfind","rfind_iter","rfind_iter","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["memchr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","memchr::memmem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator for <code>memchr</code>.","An iterator for <code>memchr2</code>.","An iterator for <code>memchr3</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Search for the first occurrence of a byte in a slice.","Like <code>memchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","This module provides forward and reverse substring search …","Search for the last occurrence of a byte in a slice.","Like <code>memrchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memrchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","Creates a new iterator that yields all positions of needle …","Creates a new iterator that yields all positions of needle …","Create a new <code>Memchr3</code> that’s initialized to zero with a …","","","","","","","","","","","","","","","","","","","Automatically detect whether a heuristic prefilter should …","An iterator over non-overlapping substring matches.","An iterator over non-overlapping substring matches in …","A single substring searcher fixed to a particular needle.","A builder for constructing non-default forward or reverse …","A single substring reverse searcher fixed to a particular …","Never used a prefilter in substring search.","Prefilter controls whether heuristics are used to …","Convert this finder into its borrowed variant.","Convert this finder into its borrowed variant.","","","","","","","","","","","","","Build a forward finder using the given needle from the …","Build a reverse finder using the given needle from the …","","","","","","","","","","","Returns the index of the first occurrence of the given …","Returns the index of the first occurrence of this needle …","Returns an iterator over all non-overlapping occurrences …","Returns an iterator over all occurrences of a substring in …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this iterator into its owned variant, such that it …","Convert this iterator into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Returns the needle that this finder searches for.","Returns the needle that this finder searches for.","Create a new finder for the given needle.","Create a new reverse finder for the given needle.","Create a new finder builder with default settings.","","","Configure the prefilter setting for the finder.","Returns the index of the last occurrence of the given …","Returns the index of the last occurrence of this needle in …","Returns a reverse iterator over all non-overlapping …","Returns a reverse iterator over all occurrences of a …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,13,0,0,0,0,0,13,0,10,11,13,14,17,10,11,12,13,14,17,10,11,12,12,12,13,10,11,12,13,10,11,12,13,12,0,10,0,10,13,14,17,10,11,12,13,14,17,10,11,12,13,14,17,10,11,12,14,17,14,17,10,11,10,11,10,11,12,14,17,12,0,11,0,11,13,10,11,12,13,14,17,10,11,12,13,14,17,10,11,12,13,14,17,10,11,12],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[[1,1],[[3,[2]]]],[[1,1],4],[[1,1,1],[[3,[2]]]],[[1,1,1],5],[1,6],0,[1,[[3,[2]]]],[[1,1],[[3,[2]]]],[[1,1],[[7,[4]]]],[[1,1,1],[[3,[2]]]],[[1,1,1],[[7,[5]]]],[1,[[7,[6]]]],[1,6],[[1,1],4],[[1,1,1],5],[6,[[3,[2]]]],[4,[[3,[2]]]],[5,[[3,[2]]]],[6,3],[4,3],[5,3],[6],[4],[5],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,10],[12,11],[13,13],[10,10],[11,11],[12,12],[[]],[[]],[[]],[[]],[[],13],[[],12],[[],[[3,[2]]]],[10,[[3,[2]]]],[[],14],[10,14],[[13,15],16],[[14,15],16],[[17,15],16],[[10,15],16],[[11,15],16],[[12,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,14],[17,17],[10,10],[11,11],[10],[11],[[],10],[[],11],[[],12],[14,[[3,[2]]]],[17,[[3,[2]]]],[[12,13],12],[[],[[3,[2]]]],[[11,18],[[3,[2]]]],[[],17],[11,17],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9]],"p":[[15,"u8"],[15,"usize"],[4,"Option"],[3,"Memchr2"],[3,"Memchr3"],[3,"Memchr"],[3,"Rev"],[4,"Result"],[3,"TypeId"],[3,"Finder"],[3,"FinderRev"],[3,"FinderBuilder"],[4,"Prefilter"],[3,"FindIter"],[3,"Formatter"],[6,"Result"],[3,"FindRevIter"],[8,"AsRef"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and …","t":[14,14,14,14,14,14,14],"n":["offset_of","offset_of_tuple","offset_of_union","raw_field","raw_field_tuple","raw_field_union","span_of"],"q":["memoffset","","","","","",""],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Calculates the offset of the specified union member from …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0],"p":[]},\
"nix":{"doc":"Rust friendly bindings to the various *nix system …","t":[6,8,6,14,0,0,10,10,2,0,0,0,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,4,8,13,11,11,11,11,11,11,11,5,11,11,11,5,11,11,11,11,11,10,11,11,11,11,11,11,18,18,18,18,18,3,18,18,18,18,18,18,18,13,13,13,13,13,13,13,13,13,13,13,18,18,18,18,13,13,13,13,13,3,4,3,4,13,13,13,13,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,13,13,13,13,13,4,18,18,18,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,18,18,18,18,18,18,18,18,18,18,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,13,13,13,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,4,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,4,13,13,13,13,8,13,13,13,13,3,13,13,13,13,13,13,18,18,18,18,18,18,18,18,18,18,13,3,3,3,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,18,18,18,18,18,18,18,18,13,13,13,13,13,13,13,13,13,8,4,13,4,3,4,4,8,19,13,13,3,3,13,13,13,13,13,3,3,13,16,16,13,13,3,13,13,13,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,12,12,6,5,5,5,5,10,11,11,11,5,5,11,11,11,3,3,5,3,5,5,0,12,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,5,13,13,3,13,13,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,6,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,5,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,5,11,11,11,11,5,11,11,11,11,11,11,11,11,3,18,18,18,18,18,18,18,18,18,18,18,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,10,11,11,11,10,11,11,10,11,11,11,11,10,11,11,11,11,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,11,11,11,11,11,11,11,11,5,3,18,4,13,13,18,13,13,13,13,13,13,13,4,18,4,18,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,5,11,11,11,11,5,5,5,5,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,11,5,5,5,5,11,11,5,11,11,5,11,5,5,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5],"n":["Error","NixPath","Result","cmsg_space","errno","fcntl","is_empty","len","libc","poll","sys","unistd","with_nix_path","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","Errno","ErrnoSentinel","UnknownErrno","borrow","borrow_mut","clear","clone","clone_into","desc","eq","errno","fmt","fmt","from","from_i32","from_i32","into","last","provide","result","sentinel","to_owned","to_string","try_from","try_from","try_into","type_id","AT_EMPTY_PATH","AT_NO_AUTOMOUNT","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AtFlags","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FD_CLOEXEC","F_ADD_SEALS","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLK","F_GETPIPE_SZ","F_GET_SEALS","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETPIPE_SZ","FallocateFlags","FcntlArg","FdFlag","FlockArg","LockExclusive","LockExclusiveNonblock","LockShared","LockSharedNonblock","OFlag","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","PosixFadviseAdvice","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","RenameFlags","SealFlag","Unlock","UnlockNonblock","all","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","fallocate","fcntl","flock","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","not","not","not","not","not","not","open","openat","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","posix_fadvise","posix_fallocate","readlink","readlinkat","remove","remove","remove","remove","remove","remove","renameat","renameat2","set","set","set","set","set","set","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","0","0","0","0","0","0","0","0","0","0","0","0","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDNORM","POLLWRBAND","POLLWRNORM","PollFd","PollFlags","all","all","any","as_raw_fd","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","events","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","new","not","partial_cmp","poll","remove","revents","set","set_events","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","epoll","eventfd","memfd","select","signal","socket","stat","statfs","statvfs","sysinfo","time","uio","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EpollCreateFlags","EpollCtlAdd","EpollCtlDel","EpollCtlMod","EpollEvent","EpollFlags","EpollOp","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","data","difference","difference","empty","empty","empty","epoll_create","epoll_create1","epoll_ctl","epoll_wait","eq","eq","eq","eq","events","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EfdFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","eventfd","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","MFD_ALLOW_SEALING","MFD_CLOEXEC","MemFdCreateFlag","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","memfd_create","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","FD_SETSIZE","FdSet","Fds","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","contains","default","eq","fds","fmt","fmt","from","from","hash","highest","insert","into","into","into_iter","new","next","next_back","remove","select","size_hint","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AddressFamily","Alg","Alg","AlgAddr","AlgSetAeadAssoclen","AlgSetIv","AlgSetOp","AppleTalk","Ash","AtmPvc","AtmSvc","Ax25","Bluetooth","Both","Bridge","Caif","Can","CmsgIterator","ControlMessage","ControlMessageOwned","Datagram","Decnet","Econet","EthAll","GetSockOpt","Ib","Ieee802154","Inet","Inet6","IoSliceIterator","Ipx","Irda","Isdn","Iucv","Key","Llc","MSG_CMSG_CLOEXEC","MSG_CTRUNC","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_TRUNC","MSG_WAITALL","Mpls","MsgFlags","MultiHeaders","MultiResults","NetBeui","NetRom","Netlink","Netlink","NetlinkAddr","NetlinkAudit","NetlinkCrypto","NetlinkDECNetRoutingMessage","NetlinkFIBLookup","NetlinkIPv6Firewall","NetlinkISCSI","NetlinkKObjectUEvent","NetlinkNetFilter","NetlinkRDMA","NetlinkRoute","NetlinkSCSITransport","NetlinkSELinux","NetlinkSockDiag","NetlinkUserSock","Nfc","Packet","Phonet","Pppox","Raw","Raw","Rdm","Rds","Read","RecvMsg","Rose","RxRpc","RxqOvfl","RxqOvfl","SOCK_CLOEXEC","SOCK_NONBLOCK","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SOFTWARE","ScmCredentials","ScmCredentials","ScmRights","ScmRights","ScmTimestamp","ScmTimestampns","ScmTimestampsns","Security","SeqPacket","SetSockOpt","Shutdown","Sna","SockAddr","SockFlag","SockProtocol","SockType","SockaddrLike","SockaddrStorage","Stream","Tcp","TimestampingFlag","Timestamps","Tipc","TxTime","Udp","Unix","Unix","UnixAddr","UnixCredentials","Unspec","Val","Val","Vsock","Vsock","VsockAddr","Wanpipe","Write","X25","accept","accept4","address","alg_name","alg_type","all","all","all","as_abstract","as_alg_addr","as_alg_addr_mut","as_ffi_pair","as_mut_ptr","as_netlink_addr","as_netlink_addr_mut","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_unix_addr","as_unix_addr_mut","as_vsock_addr","as_vsock_addr_mut","bind","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cid","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmsg_len","cmsg_level","cmsg_type","cmsghdr","cmsgs","complement","complement","complement","connect","contains","contains","contains","default","difference","difference","difference","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","family","family","family","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_i32","from_iter","from_iter","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","get","getpeername","getsockname","getsockopt","gid","groups","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hw_raw","hw_trans","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","iovs","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_unnamed","len","len","len","len","listen","msg_control","msg_controllen","msg_flags","msg_iov","msg_iovlen","msg_name","msg_namelen","msghdr","new","new","new","new","new","new_abstract","new_alg","new_netlink","new_unix","new_unnamed","new_vsock","next","next","next","not","not","not","partial_cmp","partial_cmp","partial_cmp","path","path_len","pid","pid","port","preallocate","recv","recvfrom","recvmmsg","recvmsg","remove","remove","remove","sa_data","sa_family","sa_family_t","send","sendmmsg","sendmsg","sendto","set","set","set","set","setsockopt","shutdown","size","size","size","sockaddr","sockaddr_storage","sockaddr_storage_to_addr","sockaddr_un","socket","socketpair","sockopt","ss_family","sub","sub","sub","sub_assign","sub_assign","sub_assign","sun_family","sun_path","symmetric_difference","symmetric_difference","symmetric_difference","system","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","union","union","union","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AcceptConn","AlgSetAeadAuthSize","AlgSetKey","BindToDevice","Broadcast","DontRoute","Ip6tOriginalDst","IpMtu","Ipv4RecvErr","Ipv4Ttl","Ipv6DontFrag","Ipv6RecvErr","Ipv6Ttl","KeepAlive","Linger","Mark","OobInline","PassCred","PeerCredentials","RcvBuf","RcvBufForce","ReceiveTimeout","ReceiveTimestamp","ReceiveTimestampns","ReuseAddr","ReusePort","RxqOvfl","SendTimeout","SndBuf","SndBufForce","SockType","SocketError","TcpMaxSeg","TcpRepair","Timestamping","TxTime","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FchmodatFlags","FileStat","FileStat","FollowSymlink","FollowSymlink","Mode","NoFollowSymlink","NoFollowSymlink","SFlag","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","UtimensatFlags","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","dev_t","difference","difference","empty","empty","eq","eq","eq","extend","extend","fchmod","fchmodat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","fstat","fstatat","futimens","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","is_all","is_all","is_empty","is_empty","lstat","lutimes","major","makedev","minor","mkdirat","mknod","mknodat","mode_t","not","not","partial_cmp","partial_cmp","remove","remove","set","set","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_gid","st_ino","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_rdev","st_size","st_uid","stat","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","umask","union","union","utimensat","utimes","0","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AUTOFS_SUPER_MAGIC","BPF_FS_MAGIC","BTRFS_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CODA_SUPER_MAGIC","CRAMFS_MAGIC","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","ECRYPTFS_SUPER_MAGIC","EFS_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","F2FS_SUPER_MAGIC","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FsType","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","ISOFS_SUPER_MAGIC","JFFS2_SUPER_MAGIC","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MSDOS_SUPER_MAGIC","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","NILFS_SUPER_MAGIC","NSFS_MAGIC","OCFS2_SUPER_MAGIC","OPENPROM_SUPER_MAGIC","OVERLAYFS_SUPER_MAGIC","PROC_SUPER_MAGIC","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","RDTGROUP_SUPER_MAGIC","REISERFS_SUPER_MAGIC","SECURITYFS_MAGIC","SELINUX_MAGIC","SMACK_MAGIC","SMB_SUPER_MAGIC","SYSFS_MAGIC","Statfs","TMPFS_MAGIC","TRACEFS_MAGIC","UDF_SUPER_MAGIC","USBDEVICE_SUPER_MAGIC","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","block_size","blocks","blocks_available","blocks_free","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","files","files_free","filesystem_id","filesystem_type","flags","fmt","fmt","from","from","fsid_t","fstatfs","into","into","maximum_name_length","optimal_transfer_size","statfs","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","FsFlags","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","Statvfs","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","block_size","blocks","blocks_available","blocks_free","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","default","difference","empty","eq","eq","extend","files","files_available","files_free","filesystem_id","flags","fmt","fmt","fmt","fmt","fmt","fmt","fragment_size","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","fstatvfs","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","name_max","not","partial_cmp","remove","set","statvfs","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","SysInfo","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hash","into","load_average","process_count","ram_total","ram_unused","swap_free","swap_total","sysinfo","to_owned","try_from","try_into","type_id","uptime","TimeSpec","TimeVal","TimeValLike","add","add","as_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","div","div","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_duration","from_timespec","hash","hash","hours","into","into","microseconds","microseconds","microseconds","milliseconds","milliseconds","milliseconds","minutes","mul","mul","nanoseconds","nanoseconds","nanoseconds","neg","neg","new","new","num_hours","num_microseconds","num_microseconds","num_microseconds","num_milliseconds","num_milliseconds","num_milliseconds","num_minutes","num_nanoseconds","num_nanoseconds","num_nanoseconds","num_seconds","num_seconds","num_seconds","partial_cmp","partial_cmp","seconds","seconds","seconds","sub","sub","suseconds_t","time_t","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","zero","IoVec","RemoteIoVec","as_slice","base","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","from_mut_slice","from_slice","hash","hash","into","into","len","pread","preadv","pwrite","pwritev","readv","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","writev","AccessFlags","F_OK","LinkatFlags","NoRemoveDir","NoSymlinkFollow","R_OK","RemoveDir","SeekCur","SeekData","SeekEnd","SeekHole","SeekSet","SymlinkFollow","UnlinkatFlags","W_OK","Whence","X_OK","access","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chdir","chroot","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","cmp","complement","contains","difference","dup","dup2","dup3","eaccess","empty","eq","extend","faccessat","fchdir","fdatasync","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","fsync","ftruncate","getcwd","hash","insert","intersection","intersects","into","into","into","into","is_all","is_empty","isatty","linkat","lseek","lseek64","mkdir","mkfifo","mkfifoat","mkstemp","not","partial_cmp","pipe","pipe2","pivot_root","read","remove","set","sleep","sub","sub_assign","symlinkat","symmetric_difference","sync","syncfs","to_owned","to_owned","to_owned","to_owned","toggle","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","unlink","unlinkat","write"],"q":["nix","","","","","","","","","","","","","nix::errno","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::fcntlnix::fcntl::FcntlArg","","","","","","","","","","","","nix::poll","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys","","","","","","","","","","","","nix::sys::epoll","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::eventfd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::memfd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::select","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::socket::ControlMessage","","","","","","","nix::sys::socket::ControlMessageOwned","","","","","","nix::sys::socket::SockAddr","","","","nix::sys::socket::sockoptnix::sys::statnix::sys::statfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::statvfs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::sysinfo","","","","","","","","","","","","","","","","","","","","","","nix::sys::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::sys::uio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","nix::unistd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Nix’s main error type.","Common trait used to represent file system paths by many …","Nix Result Type","Create a buffer large enough for storing some control …","","","Is the path empty?","Length of the path in bytes","","Wait for events to trigger on specific file descriptors","Mostly platform-specific functionality","Safe wrappers around functions found in libc “unistd.h”…","Execute a function with this path as a <code>CStr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The sentinel value indicates that a function failed and …","","","","","","","","","Returns the platform-specific value of errno","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns <code>Ok(value)</code> if it does not contain the sentinel …","","","","","","","","","","","","","","Removes byte range from a file without leaving a hole.","Increases file space by inserting a hole within the file …","File size is not changed.","Deallocates space by creating a hole.","Shared file data extants are made private to the file.","Zeroes space in specified byte range.","The file descriptor will automatically be closed during a …","","","","","","","","","","","","The size of the file cannot be increased.","Prevents further calls to <code>fcntl()</code> with <code>F_ADD_SEALS</code>.","The file cannot be reduced in size.","The file contents cannot be modified.","","","","","","Mode argument flags for fallocate determining operation …","","Additional configuration flags for <code>fcntl</code>’s <code>F_SETFD</code>.","","","","","","Configuration options for opened files.","Mask for the access mode of the file.","Open the file in append-only mode.","Generate a signal when input or output becomes possible.","Closes the file descriptor once an <code>execve</code> call is made.","Create the file if it does not exist.","Try to minimize cache effects of the I/O for this file.","If the specified path isn’t a directory, fail.","Implicitly follow each <code>write()</code> with an <code>fdatasync()</code>.","Error out if a file was not created.","Same as <code>O_SYNC</code>.","Allow files whose sizes can’t be represented in an <code>off_t</code> …","Same as <code>O_NONBLOCK</code>.","Do not update the file last access time during <code>read(2)</code>s.","Don’t attach the device as the process’ controlling …","<code>open()</code> will fail if the given path is a symbolic link.","When possible, open the file in nonblocking mode.","Obtain a file descriptor for low-level access.","Only allow reading.","Allow both reading and writing.","Similar to <code>O_DSYNC</code> but applies to <code>read</code>s instead.","Implicitly follow each <code>write()</code> with an <code>fsync()</code>.","Create an unnamed temporary file.","Truncate an existing regular file to 0 length if it allows …","Only allow writing.","","","","","","","","","","","","Additional flags for file sealing, which allows for …","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Manipulates file space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","Error condition (only returned in <code>PollFd::revents</code>; ignored …","Hang up (only returned in <code>PollFd::revents</code>; ignored in …","There is data to read.","Invalid request: <code>fd</code> not open (only returned in …","Writing is now possible, though a write larger that the …","There is some exceptional condition on the file descriptor.","Priority band data can be read (generally unused on Linux).","Equivalent to <code>POLLIN</code>","Priority data may be written.","Equivalent to <code>POLLOUT</code>","This is a wrapper around <code>libc::pollfd</code>.","These flags define the different events that can be …","Returns if all the events of interest occured in the last …","Returns the set containing all flags.","Returns if any of the events of interest occured in the …","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","The events of interest for this <code>PollFd</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new <code>PollFd</code> specifying the events of interest for …","Returns the complement of this set of flags.","","<code>poll</code> waits for one of a set of file descriptors to become …","Removes the specified flags in-place.","Returns the events that occurred in the last call to <code>poll</code> …","Inserts or removes the specified flags depending on the …","Modify the events of interest for this <code>PollFd</code>.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Interfaces for managing memory-backed files.","Portably monitor a group of file descriptors for readiness.","Operating system signals.","Socket interface functions","","Get filesystem statistics, non-portably","Get filesystem statistics","","","Vectored I/O","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Allow sealing operations on this file.","Set the close-on-exec (<code>FD_CLOEXEC</code>) flag on the new file …","Options that change the behavior of <code>memfd_create</code>.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates an anonymous file that lives in memory, and return …","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Contains a set of file descriptors used by <code>select</code>","Iterator over <code>FdSet</code>.","","","","","Remove all file descriptors from this <code>FdSet</code>.","","","Test an <code>FdSet</code> for the presence of a certain file …","","","Returns an iterator over the file descriptors in the set.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Finds the highest file descriptor in the set.","Add a file descriptor to an <code>FdSet</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create an empty <code>FdSet</code>","","","Remove a file descriptor from an <code>FdSet</code>","Monitors file descriptors for readiness","","","","","","","","","These constants specify the protocol family to be used in …","","Interface to kernel crypto API","Socket address for the Linux kernel crypto API","Set the length of associated authentication data (AAD) …","Set IV for <code>AF_ALG</code> crypto API.","Set crypto operation for <code>AF_ALG</code> crypto API. It may be one …","AppleTalk","","Access to raw ATM PVCs","Access to ATM Switched Virtual Circuits","Amateur radio AX.25 protocol","Bluetooth low-level socket protocol","Further receptions and transmissions will be disallowed.","Can’t be used for creating sockets; mostly used for …","Ericsson’s Communication CPU to Application CPU …","Controller Area Network automotive bus protocol","","A type-safe zero-copy wrapper around a single control …","A type-safe wrapper around a single control message, as …","Supports datagrams (connectionless, unreliable messages of …","DECet protocol sockets.","Acorn Econet protocol","Non-DIX type protocol number defined for the Ethernet IEEE …","Represents a socket option that can be retrieved.","InfiniBand native addressing","IEEE 802.15.4 WPAN (wireless personal area network) raw …","IPv4 Internet protocols (see <code>ip(7)</code>)","IPv6 Internet protocols (see <code>ipv6(7)</code>)","","IPX - Novell protocols","Socket interface over IrDA","New “modular ISDN” driver interface protocol","IUCV (inter-user communication vehicle) z/VM protocol for …","Key management protocol.","Logical link control (IEEE 802.2 LLC) protocol","Set the <code>close-on-exec</code> flag for the file descriptor …","Receive flags: Control Data was discarded (buffer too …","Enables nonblocking operation; if the operation would …","Terminates a record (when this notion is supported, as for …","This flag specifies that queued errors should be received …","Requests not to send <code>SIGPIPE</code> errors when the other end …","Sends or requests out-of-band data on sockets that support …","Peeks at an incoming message. The data is treated as …","For raw (<code>Packet</code>), Internet datagram (since Linux …","Receive operation blocks until the full amount of data can …","Multiprotocol Label Switching","Flags for send/recv and their relatives","Preallocated structures needed for <code>recvmmsg</code> and <code>sendmmsg</code> …","Iterator over results of <code>recvmmsg</code>/<code>sendmmsg</code>","Reserved for “802.2LLC project”; never used.","AX.25 packet layer protocol. (see netrom(4))","","Kernel user interface device (see <code>netlink(7)</code>)","Address for the Linux kernel user interface device.","Auditing (ref)","Netlink interface to request information about ciphers …","DECnet routing messages (ref)","Access to FIB lookup from user space (ref)","Transport IPv6 packets from netfilter to user space.  Used …","Open-iSCSI (ref)","Kernel messages to user space (ref)","Netfilter subsystem (ref)","Infiniband RDMA (ref)","Receives routing and link updates and may be used to …","SCSI Transports (ref)","SELinux event notifications. (ref)","Query information about sockets of various protocol …","Reserved for user-mode socket protocols (ref)","Near field communication","Low level packet interface (see <code>packet(7)</code>)","Nokia cellular modem IPC/RPC interface","Generic PPP transport layer, for setting up L2 tunnels …","Provides raw network protocol access.","Raw sockets (raw(7))","Provides a reliable datagram layer that does not guarantee …","Reliable Datagram Sockets (RDS) protocol","Further receptions will be disallowed.","Contains outcome of sending or receiving a message","RATS (Radio Amateur Telecommunications Society) Open …","Rx, Andrew File System remote procedure call protocol","SO_RXQ_OVFL indicates that an unsigned 32 bit value …","SO_RXQ_OVFL indicates that an unsigned 32 bit value …","Set close-on-exec on the new descriptor","Set non-blocking mode on the new socket","Report hardware timestamps as generated by …","Collect receiving timestamps as reported by hardware","Collect receiving timestamps as reported by software","Report any software timestamps when available.","Collect transmiting timestamps as reported by hardware","Collect transmiting timestamps as reported by software","Received version of <code>ControlMessage::ScmCredentials</code>","A message of type <code>SCM_CREDENTIALS</code>, containing the pid, uid …","Received version of <code>ControlMessage::ScmRights</code>","A message of type <code>SCM_RIGHTS</code>, containing an array of file …","A message of type <code>SCM_TIMESTAMP</code>, containing the time the …","Nanoseconds resolution timestamp","A set of nanosecond resolution timestamps","This was a short-lived (between Linux 2.1.30 and …","Provides a sequenced, reliable, two-way connection- based …","Represents a socket option that can be set.","","IBM SNA","Represents a socket address","Additional socket options","Constants used in <code>socket</code> and <code>socketpair</code> to specify the …","These constants are used to specify the communication …","Anything that, in C, can be cast back and forth to <code>sockaddr</code>…","A container for any sockaddr type","Provides sequenced, reliable, two-way, connection- based …","TCP protocol (ip(7))","Configuration flags for <code>SO_TIMESTAMPING</code> interface","For representing packet timestamps via <code>SO_TIMESTAMPING</code> …","TIPC, “cluster domain sockets” protocol","Configure the transmission time of packets.","UDP protocol (ip(7))","","Local communication (see <code>unix(7)</code>)","A wrapper around <code>sockaddr_un</code>.","Unix credentials of the sending process.","Unspecified address family, (see <code>getaddrinfo(3)</code>)","","","","VMWare VSockets protocol for hypervisor-guest interaction.","Socket address for VMWare VSockets protocol","Legacy protocol for wide area network (WAN) connectivity …","Further  transmissions will be disallowed.","ITU-T X.25 / ISO-8208 protocol (see <code>x25(7)</code>)","Accept a connection on a socket","Accept a connection on a socket","","Return the socket’s cipher name, for example <code>sha1</code>.","Return the socket’s cipher type, for example <code>hash</code> or <code>aead</code>…","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","If this address represents an abstract socket, return its …","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Conversion from nix’s SockAddr type to the underlying …","Returns a mutable pointer to the raw <code>sockaddr_un</code> struct","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Returns a raw pointer to the inner structure.  Useful for …","Returns a raw pointer to the inner structure.  Useful for …","Returns a pointer to the raw <code>sockaddr_un</code> struct","","","","","Downcast to an immutable <code>[UnixAddr]</code> reference.","Downcast to a mutable <code>[UnixAddr]</code> reference.","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Bind a name to a socket","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Context Identifier (CID)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate over the valid control messages pointed to by this …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Initiate a connection on a socket","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the address family of this socket","Return the address family of this socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Create a new <code>AddressFamily</code> from an integer value retrieved …","","","","Unsafe constructor from a variable length source","","","","","","Look up the value of this socket option on the given …","Get the address of the peer connected to the socket <code>fd</code>.","Get the current address to which the socket <code>fd</code> is bound.","Get the current value for the requested socket option","Returns the group identifier","Return the socket’s multicast groups mask","","","","","","","","","","","","","","","","","","hardware based timestamp","legacy timestamp, usually empty","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Iterate over the filled io slices pointed by this msghdr","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Check if this address is an “unnamed” unix socket …","Return the length of valid data in the sockaddr structure.","Return the length of valid data in the sockaddr structure.","","","Listen for connections on a socket","","","","","","","","","Create a new sockaddr_un representing a filesystem path.","Construct a new socket address from its port ID and …","Construct an <code>AF_ALG</code> socket from its cipher name and type.","Construct a <code>VsockAddr</code> from its raw fields.","Creates a new instance with the credentials of the current …","Create a new <code>sockaddr_un</code> representing an address in the “…","","","","Create a new <code>sockaddr_un</code> representing an “unnamed” …","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","If this address represents a filesystem path, return that …","Returns the addrlen of this socket - …","Return the socket’s port ID.","Returns the process identifier","Port number","Preallocate structure used by <code>recvmmsg</code> and <code>sendmmsg</code> takes …","Receive data from a connection-oriented socket. Returns …","Receive data from a connectionless or connection-oriented …","An extension of recvmsg that allows the caller to receive …","Receive message in scatter-gather vectors from a socket, …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","Send data to a connection-oriented socket. Returns the …","An extension of <code>sendmsg</code> that allows the caller to transmit …","Send data in scatter-gather vectors to a socket, possibly …","Send a message to a socket","Set the value of this socket option on the given socket.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the value for the requested socket option","Shut down part of a full-duplex connection.","Return the available space in the structure","Return the available space in the structure","","","","Return the appropriate <code>SockAddr</code> type from a …","","Create an endpoint for communication","Create a pair of connected sockets","Socket options as used by <code>setsockopt</code> and <code>getsockopt</code>.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","software based timestamp, usually one containing data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user identifier","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","Returns a value indicating whether or not this socket has …","","","Bind this socket to a particular device like “eth0”.","Set or get the broadcast flag.","Set or get the don’t route flag.","","Fetch the current system-estimated Path MTU.","Enable extended reliable error message passing.","Set or retrieve the current time-to-live field that is …","Set “don’t fragment packet” flag on the IPv6 packet.","Control receiving of asynchronous error options.","Set the unicast hop limit for the socket.","Enable sending of keep-alive messages on …","When enabled,  a close(2) or shutdown(2) will not return …","Set the mark for each packet sent through this socket …","If this option is enabled, out-of-band data is directly …","Enable or disable the receiving of the <code>SCM_CREDENTIALS</code> …","Return the credentials of the foreign process connected to …","Sets or gets the maximum socket receive buffer in bytes.","Using this socket option, a privileged (<code>CAP_NET_ADMIN</code>) …","Specify the receiving timeout until reporting an error.","Enable or disable the receiving of the <code>SO_TIMESTAMP</code> …","Enable or disable the receiving of the <code>SO_TIMESTAMPNS</code> …","Enables local address reuse","Permits multiple AF_INET or AF_INET6 sockets to be bound …","Indicates that an unsigned 32-bit value ancillary message …","Specify the sending timeout until reporting an error.","Sets or gets the maximum socket send buffer in bytes.","Using this socket option, a privileged (<code>CAP_NET_ADMIN</code>)  …","Gets the socket type as an integer.","Get and clear the pending socket error.","The maximum segment size for outgoing TCP packets.","","Specifies exact type of timestamping information collected …","Configures the behavior of time-based transmission of …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flags for <code>fchmodat</code> function.","","","","","“File mode / permissions” flags.","","","“File type” flags for <code>mknod</code> and related functions.","","","","","","","","","Read fr group.","Read for other.","Read for owner.","Read write and execute for group.","Read, write and execute for other.","Read, write and execute for owner.","Set group id on execution.","Set user id on execution.","","Write for group.","Write for other.","Write for owner.","Execute for group.","Execute for other.","Execute for owner.","Flags for <code>utimensat</code> function.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","Change the file permission bits of the file specified by a …","Change the file permission bits.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Change the access and modification times of the file …","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Change the access and modification times of a file without …","","","","","Create a special or ordinary file, by pathname.","Create a special or ordinary file, relative to a given …","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Change the access and modification times of a file.","Change the access and modification times of a file.","","","","","","","","","","","","","","","","","","","","","","Describes the file system type as known by the operating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a mounted file system","","","","","","","Size of a block","Total data blocks in filesystem","Free blocks available to unprivileged user","Free blocks in filesystem","","","","","","","","","","Total file nodes in filesystem","Free file nodes in filesystem","Filesystem ID","Magic code defining system type","Get the mount flags","","","Returns the argument unchanged.","Returns the argument unchanged.","Identifies a mounted file system","Describes a mounted file system.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Maximum length of filenames","Optimal transfer block size","Describes a mounted file system.","","","","","","","","","File system mount Flags","Append-only file","Immutable file","Allow mandatory locks on the filesystem","Do not update access times on files","Do not interpret character or block-special devices","Do not update access times on files","Do not allow execution of binaries on the filesystem","Do not allow the set-uid bits to have an effect","Read Only","Update access time relative to modify/change time","All IO should be done synchronously","Write on file/directory/symlink","Wrapper around the POSIX <code>statvfs</code> struct","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","get the file system block size","Get the number of blocks.","Get the number of free blocks for unprivileged users","Get the number of free blocks in the file system","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","Get the total number of file inodes","Get the number of free file inodes for unprivileged users","Get the number of free file inodes","Get the file system id","Get the mount flags","","","","","","","Get the fundamental file system block size","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Return a <code>Statvfs</code> object with information about <code>fd</code>","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Get the maximum filename length","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Return a <code>Statvfs</code> object with information about the <code>path</code>","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","System info structure returned by <code>sysinfo</code>.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns the load average tuple.","Current number of processes.","Returns the total amount of installed RAM in Bytes.","Returns the amount of completely unused RAM in Bytes.","Returns the amount of unused swap memory in Bytes.","Returns the amount of swap memory in Bytes.","Returns system information.","","","","","Returns the time since system boot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Makes a new <code>TimeSpec</code> with given number of microseconds.","Makes a new <code>TimeVal</code> with given number of microseconds.","","","","","","","","Makes a new <code>TimeSpec</code> with given number of nanoseconds.","Makes a new <code>TimeVal</code> with given number of nanoseconds.  …","","","Construct a new <code>TimeSpec</code> from its components","Construct a new <code>TimeVal</code> from its components","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A vector of buffers.","A slice of memory in a remote process, starting at address …","View the <code>IoVec</code> as a Rust slice.","The starting address of this slice (<code>iov_base</code>).","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>IoVec</code> from a mutable Rust slice.","Create an <code>IoVec</code> from a Rust slice.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The number of bytes in this slice (<code>iov_len</code>).","Low-level read from a file, with specified offset.","Read from <code>fd</code> at <code>offset</code> filling buffers in <code>iov</code>.","Low-level write to a file, with specified offset.","Write to <code>fd</code> at <code>offset</code> from buffers in <code>iov</code>.","Low-level vectored read from a raw file descriptor","","","","","","","","","Low-level vectored write to a raw file descriptor","Options for access()","Test for existence of file.","Flags for <code>linkat</code> function.","","","Test for read permission.","","Specify an offset relative to the current file location.","Specify an offset relative to the next location in the …","Specify an offset relative to the end of the file.","Specify an offset relative to the next hole in the file …","Specify an offset relative to the start of the file.","","Flags for <code>unlinkat</code> function.","Test for write permission.","Directive that tells <code>lseek</code> and <code>lseek64</code> what the offset is …","Test for execute (search) permission.","Checks the file named by <code>path</code> for accessibility according …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","Change the current working directory of the calling …","","","","","","","","","","Close a raw file descriptor","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Create a copy of the specified file descriptor (see dup(2)…","Create a copy of the specified file descriptor using the …","Create a new copy of the specified file descriptor using …","Checks the file named by <code>path</code> for accessibility according …","Returns an empty set of flags.","","","Checks the file named by <code>path</code> for accessibility according …","Change the current working directory of the process to the …","Synchronize the data of a file","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Synchronize changes to a file","Truncate a file to a specified length","Returns the current directory as a <code>PathBuf</code>","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Link one file to another file","Move the read/write file offset.","","Creates new directory <code>path</code> with access rights <code>mode</code>.  (see …","Creates new fifo special file (named pipe) with path <code>path</code> …","Creates new fifo special file (named pipe) with path <code>path</code> …","Creates a regular file which persists even after process …","Returns the complement of this set of flags.","","Create an interprocess channel.","Like <code>pipe</code>, but allows setting certain file descriptor …","","Read from a raw file descriptor.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Suspend execution for an interval of time","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Creates a symbolic link at <code>path2</code> which points to <code>path1</code>.","Returns the symmetric difference between the flags in <code>self</code> …","Commit filesystem caches to disk","Commit filesystem caches containing file referred to by …","","","","","Toggles the specified flags in-place.","Truncate a file to a specified length","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Remove a directory entry","Remove a directory entry","Write to a raw file descriptor."],"i":[0,0,0,0,0,0,170,170,0,0,0,0,170,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,4,4,4,4,4,4,4,4,0,4,4,4,0,4,4,4,4,4,10,4,4,4,4,4,4,16,16,16,16,16,0,21,21,21,21,21,21,20,27,27,27,27,27,27,27,27,27,27,27,19,19,19,19,27,27,27,27,27,0,0,0,0,24,24,24,24,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,25,25,25,25,25,25,0,18,18,18,0,0,24,24,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,27,24,21,25,16,17,18,19,20,27,24,21,25,16,17,18,19,20,24,21,25,16,17,18,19,20,24,21,25,16,17,18,19,20,21,25,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,27,24,21,25,16,17,18,19,20,21,0,0,0,16,16,16,16,16,17,17,17,17,17,18,18,18,18,18,19,19,19,19,19,20,20,20,20,20,27,24,21,21,21,21,21,25,16,17,18,19,20,27,24,21,25,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,27,24,21,25,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,27,24,21,25,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,0,0,16,17,18,19,20,21,25,0,0,0,0,16,17,18,19,20,21,0,0,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,24,21,25,16,17,18,19,20,21,16,17,18,19,20,27,24,21,25,16,17,18,19,20,27,24,21,25,16,17,18,19,20,27,24,21,25,16,17,18,19,20,21,171,172,173,174,175,176,177,178,179,180,181,182,35,35,35,35,35,35,35,35,35,35,0,0,34,35,34,34,35,35,35,35,35,35,35,34,35,34,35,34,35,34,35,35,35,35,35,35,34,35,34,35,34,35,35,35,35,35,34,35,35,35,35,35,34,35,35,35,35,34,35,35,35,34,35,35,0,35,34,35,34,35,35,35,34,35,35,34,35,34,35,34,35,35,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,0,39,39,39,0,0,0,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,39,38,40,37,39,38,40,37,39,38,40,37,39,38,40,37,38,37,38,37,38,40,37,38,37,38,40,0,0,0,0,37,39,38,40,40,37,38,37,37,37,37,37,39,38,38,38,38,38,40,37,39,38,40,37,38,37,38,37,38,37,38,37,39,38,40,37,38,37,38,37,38,37,39,38,40,37,38,37,38,40,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,39,38,40,37,38,37,39,38,40,37,39,38,40,37,39,38,40,37,38,43,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,45,45,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,47,48,47,48,47,47,47,47,47,47,47,47,48,47,48,47,47,47,47,48,48,47,48,48,47,0,48,47,47,48,47,48,47,48,0,55,75,0,72,72,72,75,75,75,75,75,75,73,75,75,75,0,0,0,65,75,75,66,0,75,75,75,75,0,75,75,75,75,75,75,52,52,52,52,52,52,52,52,52,52,75,0,0,0,75,75,55,75,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,75,75,75,75,65,66,65,75,73,0,75,75,70,72,49,49,51,51,51,51,51,51,70,72,70,72,70,70,70,75,65,0,0,75,0,0,0,0,0,0,65,66,0,0,75,72,66,55,75,0,0,75,85,92,55,75,0,75,73,75,0,0,68,50,50,51,49,52,53,54,54,55,53,54,54,63,63,53,53,57,50,61,54,54,54,54,0,51,49,52,51,49,52,51,49,52,51,49,52,51,49,52,51,49,52,51,49,52,58,56,64,53,54,57,50,61,65,66,51,49,52,68,69,70,71,72,80,81,82,73,74,55,75,76,77,58,56,64,53,54,57,50,61,65,66,51,49,52,68,69,70,71,72,80,81,82,73,74,55,75,76,77,68,61,58,56,64,53,54,57,50,61,65,66,51,49,52,68,69,70,71,72,73,74,55,75,76,77,58,56,64,53,54,57,50,61,65,66,51,49,52,68,69,70,71,72,73,74,55,75,76,77,51,49,52,77,77,77,0,68,51,49,52,0,51,49,52,74,51,49,52,51,49,52,58,56,64,53,54,57,50,61,65,66,51,49,52,68,69,70,71,72,73,74,55,75,76,77,51,49,52,63,63,55,68,58,56,64,53,53,54,54,57,57,50,50,61,61,65,66,51,51,51,51,51,49,49,49,49,49,52,52,52,52,52,68,69,70,71,72,80,81,82,73,74,55,55,75,76,77,58,56,64,53,54,57,50,61,65,66,51,49,52,68,69,70,71,72,80,81,82,73,74,74,55,75,76,77,51,49,52,51,49,52,51,49,52,75,51,49,52,63,53,54,57,50,61,85,0,0,0,74,57,58,56,64,53,54,57,50,61,66,51,49,52,73,55,75,76,77,71,71,51,49,52,51,49,52,51,49,52,58,56,64,53,54,57,50,61,65,66,51,49,52,68,69,70,71,72,80,81,82,73,74,55,75,76,77,69,81,82,68,51,49,52,51,49,52,53,63,63,53,54,0,76,76,76,76,76,76,76,0,53,57,50,61,74,53,55,55,55,53,55,69,81,82,51,49,52,51,49,52,53,53,57,74,61,80,0,0,0,0,51,49,52,58,58,0,0,0,0,0,92,51,49,52,0,0,63,63,53,0,0,0,0,0,0,0,64,51,49,52,51,49,52,56,56,51,49,52,71,58,56,64,53,54,57,50,61,65,66,51,49,52,68,69,70,71,72,73,74,55,75,76,77,55,53,54,57,50,61,55,51,49,52,58,56,64,53,54,57,50,61,65,65,66,51,49,52,68,69,70,71,72,80,81,82,73,74,55,75,76,77,58,56,64,53,54,57,50,61,65,66,51,49,52,68,69,70,71,72,80,81,82,73,74,55,75,76,77,58,56,64,53,54,57,50,61,65,66,51,49,52,68,69,70,71,72,80,81,82,73,74,55,75,76,77,74,51,49,52,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,129,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,95,96,97,98,99,100,101,103,104,106,107,108,109,110,113,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,0,0,0,139,140,0,139,140,0,137,137,137,137,137,137,137,137,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,137,32,137,32,137,32,137,32,137,32,137,32,137,32,137,32,137,32,139,140,136,137,32,139,140,136,137,32,139,140,136,137,32,139,140,136,137,32,137,32,137,32,0,137,32,137,32,137,32,136,137,32,0,0,137,137,137,137,137,32,32,32,32,32,139,140,136,137,32,139,140,136,137,32,137,32,137,32,137,32,0,0,0,137,32,136,137,32,137,32,137,32,137,32,139,140,136,137,32,137,32,0,0,0,0,0,0,0,0,0,137,32,137,32,137,32,137,32,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,137,32,137,32,137,32,137,32,139,140,136,137,32,137,32,139,140,136,137,32,139,140,136,137,32,139,140,136,0,137,32,0,0,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,142,142,142,142,144,142,144,142,144,142,144,144,142,142,142,142,142,142,144,142,144,0,0,142,144,142,142,0,142,144,142,144,142,144,142,144,0,146,146,146,146,146,146,146,146,146,146,146,146,0,146,146,146,146,146,146,146,146,148,148,148,148,146,148,146,148,146,148,146,148,146,146,146,146,146,146,146,148,146,148,148,148,148,148,146,146,146,146,146,148,148,146,148,146,146,146,146,0,146,148,146,146,146,146,148,146,146,148,146,146,146,146,0,146,146,146,146,148,146,146,148,146,148,146,148,146,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,0,151,151,151,151,151,0,0,0,91,132,91,132,91,132,91,132,91,132,91,132,91,132,91,132,91,132,91,132,91,91,132,132,91,91,91,132,132,91,91,91,132,200,91,132,200,91,132,200,91,132,200,91,132,200,91,132,91,132,91,132,200,200,91,132,200,91,132,200,200,91,132,200,91,132,91,132,200,91,132,91,132,0,0,91,132,91,132,91,132,91,132,91,91,132,132,91,132,200,0,0,160,161,161,160,161,160,161,160,161,160,161,160,161,160,161,160,160,160,161,160,161,160,161,0,0,0,0,0,161,160,161,160,161,160,161,160,0,0,163,0,166,165,163,166,164,164,164,164,164,165,0,163,0,163,0,163,163,163,163,163,163,163,163,164,165,166,163,164,165,166,163,0,0,164,165,166,163,164,165,166,163,0,163,163,163,163,0,0,0,0,163,163,163,0,0,0,164,165,166,163,163,163,163,163,164,165,166,163,163,163,163,163,0,0,0,163,163,163,163,164,165,166,163,163,163,0,0,0,0,0,0,0,0,163,163,0,0,0,0,163,163,0,163,163,0,163,0,0,164,165,166,163,163,0,164,165,166,163,164,165,166,163,164,165,166,163,163,0,0,0],"f":[0,0,0,0,0,0,[[],1],[[],2],0,0,0,0,[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[4,4],[[]],[4,5],[[4,4],1],[[],6],[[4,7],8],[[4,7],8],[[]],[6,4],[6,4],[[]],[[],4],[9],[[[0,[10,[11,[[0,[10,[11,[[0,[10,[11,[[0,[10,[11,[[0,[10,11]]]]]]]]]]]]]]]]]]],[[3,[[0,[10,[11,[[0,[10,[11,[[0,[10,[11,[[0,[10,11]]]]]]]]]]]]]]]]]],[[]],[[]],[[],12],[[],13],[14,[[13,[4,14]]]],[[],13],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[[],17],[[],18],[[],19],[[],20],[[],21],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[20,20],20],[[21,21],21],[[16,16]],[[17,17]],[[18,18]],[[19,19]],[[20,20]],[[21,21]],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[20,20],20],[[21,21],21],[[16,16]],[[17,17]],[[18,18]],[[19,19]],[[20,20]],[[21,21]],[16,22],[17,22],[18,23],[19,22],[20,22],[21,22],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[20,20],20],[[21,21],21],[[16,16]],[[17,17]],[[18,18]],[[19,19]],[[20,20]],[[21,21]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,16],[17,17],[18,18],[19,19],[20,20],[24,24],[21,21],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,16],26],[[17,17],26],[[18,18],26],[[19,19],26],[[20,20],26],[[21,21],26],[[25,25],26],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[[16,16],1],[[17,17],1],[[18,18],1],[[19,19],1],[[20,20],1],[[21,21],1],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[20,20],20],[[21,21],21],[[],16],[[],17],[[],18],[[],19],[[],20],[[],21],[[16,16],1],[[17,17],1],[[18,18],1],[[19,19],1],[[20,20],1],[[27,27],1],[[24,24],1],[[21,21],1],[[25,25],1],[[16,28]],[[17,28]],[[18,28]],[[19,28]],[[20,28]],[[21,28]],[[29,21,30,30],3],[[29,27],[[3,[22]]]],[[29,24],3],[[16,7],8],[[16,7],8],[[16,7],8],[[16,7],8],[[16,7],8],[[17,7],8],[[17,7],8],[[17,7],8],[[17,7],8],[[17,7],8],[[18,7],8],[[18,7],8],[[18,7],8],[[18,7],8],[[18,7],8],[[19,7],8],[[19,7],8],[[19,7],8],[[19,7],8],[[19,7],8],[[20,7],8],[[20,7],8],[[20,7],8],[[20,7],8],[[20,7],8],[[27,7],8],[[24,7],8],[[21,7],8],[[21,7],8],[[21,7],8],[[21,7],8],[[21,7],8],[[25,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,[[31,[16]]]],[22,[[31,[17]]]],[23,[[31,[18]]]],[22,[[31,[19]]]],[22,[[31,[20]]]],[22,[[31,[21]]]],[22,16],[22,17],[23,18],[22,19],[22,20],[22,21],[22,16],[22,17],[23,18],[22,19],[22,20],[22,21],[28,16],[28,17],[28,18],[28,19],[28,20],[28,21],[16],[17],[18],[19],[20],[27],[24],[21],[25],[[16,16]],[[17,17]],[[18,18]],[[19,19]],[[20,20]],[[21,21]],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[20,20],20],[[21,21],21],[[16,16],1],[[17,17],1],[[18,18],1],[[19,19],1],[[20,20],1],[[21,21],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,1],[17,1],[18,1],[19,1],[20,1],[21,1],[16,1],[17,1],[18,1],[19,1],[20,1],[21,1],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[[17,32],[[3,[29]]]],[[29,17,32],[[3,[29]]]],[[16,16],[[31,[26]]]],[[17,17],[[31,[26]]]],[[18,18],[[31,[26]]]],[[19,19],[[31,[26]]]],[[20,20],[[31,[26]]]],[[21,21],[[31,[26]]]],[[25,25],[[31,[26]]]],[[29,30,30,25],3],[[29,30,30],3],[[],[[3,[33]]]],[29,[[3,[33]]]],[[16,16]],[[17,17]],[[18,18]],[[19,19]],[[20,20]],[[21,21]],[[[31,[29]],[31,[29]]],3],[[[31,[29]],[31,[29]],18],3],[[16,16,1]],[[17,17,1]],[[18,18,1]],[[19,19,1]],[[20,20,1]],[[21,21,1]],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[20,20],20],[[21,21],21],[[16,16]],[[17,17]],[[18,18]],[[19,19]],[[20,20]],[[21,21]],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[20,20],20],[[21,21],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,16]],[[17,17]],[[18,18]],[[19,19]],[[20,20]],[[21,21]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[16,16],16],[[17,17],17],[[18,18],18],[[19,19],19],[[20,20],20],[[21,21],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[34,[[31,[1]]]],[[],35],[34,[[31,[1]]]],[34,29],[[35,35],35],[[35,35]],[[35,35],35],[[35,35]],[35,36],[[35,35],35],[[35,35]],[[]],[[]],[[]],[[]],[34,34],[35,35],[[]],[[]],[[35,35],26],[35,35],[[35,35],1],[[35,35],35],[[],35],[[34,34],1],[[35,35],1],[34,35],[[35,28]],[[34,7],8],[[35,7],8],[[35,7],8],[[35,7],8],[[35,7],8],[[35,7],8],[[]],[[]],[36,[[31,[35]]]],[36,35],[36,35],[28,35],[34],[35],[[35,35]],[[35,35],35],[[35,35],1],[[]],[[]],[35,1],[35,1],[[29,35],34],[35,35],[[35,35],[[31,[26]]]],[22,[[3,[22]]]],[[35,35]],[34,[[31,[35]]]],[[35,35,1]],[[34,35]],[[35,35],35],[[35,35]],[[35,35],35],[[]],[[]],[[35,35]],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[35,35],35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],37],[[],38],[[37,37],37],[[38,38],38],[[37,37]],[[38,38]],[[37,37],37],[[38,38],38],[[37,37]],[[38,38]],[37,22],[38,22],[[37,37],37],[[38,38],38],[[37,37]],[[38,38]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,37],[39,39],[38,38],[40,40],[[]],[[]],[[]],[[]],[[37,37],26],[[38,38],26],[37,37],[38,38],[[37,37],1],[[38,38],1],[40,41],[[37,37],37],[[38,38],38],[[],37],[[],38],[[],40],[[],[[3,[29]]]],[38,[[3,[29]]]],[[29,39,29],3],[[29,42],[[3,[2]]]],[[37,37],1],[[39,39],1],[[38,38],1],[[40,40],1],[40,37],[[37,28]],[[38,28]],[[37,7],8],[[37,7],8],[[37,7],8],[[37,7],8],[[37,7],8],[[39,7],8],[[38,7],8],[[38,7],8],[[38,7],8],[[38,7],8],[[38,7],8],[[40,7],8],[[]],[[]],[[]],[[]],[22,[[31,[37]]]],[22,[[31,[38]]]],[22,37],[22,38],[22,37],[22,38],[28,37],[28,38],[37],[39],[38],[40],[[37,37]],[[38,38]],[[37,37],37],[[38,38],38],[[37,37],1],[[38,38],1],[[]],[[]],[[]],[[]],[37,1],[38,1],[37,1],[38,1],[[37,41],40],[37,37],[38,38],[[37,37],[[31,[26]]]],[[38,38],[[31,[26]]]],[[37,37]],[[38,38]],[[37,37,1]],[[38,38,1]],[[37,37],37],[[38,38],38],[[37,37]],[[38,38]],[[37,37],37],[[38,38],38],[[]],[[]],[[]],[[]],[[37,37]],[[38,38]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[],15],[[],15],[[37,37],37],[[38,38],38],0,0,0,0,[[],43],[[43,43],43],[[43,43]],[[43,43],43],[[43,43]],[43,22],[[43,43],43],[[43,43]],[[]],[[]],[43,43],[[]],[[43,43],26],[43,43],[[43,43],1],[[43,43],43],[[],43],[[43,43],1],[[44,43],[[3,[29]]]],[[43,28]],[[43,7],8],[[43,7],8],[[43,7],8],[[43,7],8],[[43,7],8],[[]],[22,[[31,[43]]]],[22,43],[22,43],[28,43],[43],[[43,43]],[[43,43],43],[[43,43],1],[[]],[43,1],[43,1],[43,43],[[43,43],[[31,[26]]]],[[43,43]],[[43,43,1]],[[43,43],43],[[43,43]],[[43,43],43],[[]],[[43,43]],[[],13],[[],13],[[],15],[[43,43],43],0,0,0,[[],45],[[45,45],45],[[45,45]],[[45,45],45],[[45,45]],[45,44],[[45,45],45],[[45,45]],[[]],[[]],[45,45],[[]],[[45,45],26],[45,45],[[45,45],1],[[45,45],45],[[],45],[[45,45],1],[[45,28]],[[45,7],8],[[45,7],8],[[45,7],8],[[45,7],8],[[45,7],8],[[]],[44,[[31,[45]]]],[44,45],[44,45],[28,45],[45],[[45,45]],[[45,45],45],[[45,45],1],[[]],[45,1],[45,1],[[46,45],[[3,[29]]]],[45,45],[[45,45],[[31,[26]]]],[[45,45]],[[45,45,1]],[[45,45],45],[[45,45]],[[45,45],45],[[]],[[45,45]],[[],13],[[],13],[[],15],[[45,45],45],0,0,0,[[]],[[]],[[]],[[]],[47],[47,47],[[]],[[47,29],1],[[],47],[[47,47],1],[[47,[31,[29]]],48],[[47,7],8],[[48,7],8],[[]],[[]],[47],[47,[[31,[29]]]],[[47,29]],[[]],[[]],[[]],[[],47],[48,[[31,[29]]]],[48,[[31,[29]]]],[[47,29]],[[],[[3,[22]]]],[48],[[]],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[29,[[3,[29]]]],[[29,49],[[3,[29]]]],0,[50,46],[50,46],[[],51],[[],49],[[],52],[53,31],[54,[[31,[50]]]],[54,[[31,[50]]]],[55],[53,56],[54,[[31,[57]]]],[54,[[31,[57]]]],[[],58],[[],58],[53,56],[53,56],[57,59],[50,60],[61,62],[54,[[31,[53]]]],[54,[[31,[53]]]],[54,[[31,[61]]]],[54,[[31,[61]]]],[[29,63],3],[[51,51],51],[[49,49],49],[[52,52],52],[[51,51]],[[49,49]],[[52,52]],[[51,51],51],[[49,49],49],[[52,52],52],[[51,51]],[[49,49]],[[52,52]],[51,44],[49,22],[52,22],[[51,51],51],[[49,49],49],[[52,52],52],[[51,51]],[[49,49]],[[52,52]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[61,23],[58,58],[56,56],[64,64],[53,53],[54,54],[57,57],[50,50],[61,61],[65,65],[66,66],[51,51],[49,49],[52,52],[[[68,[67]]],[[68,[67]]]],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[55,55],[75,75],[76,76],[77,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[51,51],26],[[49,49],26],[[52,52],26],0,0,0,0,[68,69],[51,51],[49,49],[52,52],[[29,63],3],[[51,51],1],[[49,49],1],[[52,52],1],[[],74],[[51,51],51],[[49,49],49],[[52,52],52],[[],51],[[],49],[[],52],[[58,58],1],[[56,56],1],[[64,64],1],[[53,53],1],[[54,54],1],[[57,57],1],[[50,50],1],[[61,61],1],[[65,65],1],[[66,66],1],[[51,51],1],[[49,49],1],[[52,52],1],[[[68,[11]],68],1],[[69,69],1],[[70,70],1],[[71,71],1],[[72,72],1],[[73,73],1],[[74,74],1],[[55,55],1],[[75,75],1],[[76,76],1],[[77,77],1],[[51,28]],[[49,28]],[[52,28]],[[],[[31,[75]]]],[[],[[31,[75]]]],[55,75],0,[[58,7],[[13,[78]]]],[[56,7],[[13,[78]]]],[[64,7],[[13,[78]]]],[[53,7],8],[[53,7],8],[[54,7],8],[[54,7],8],[[57,7],8],[[57,7],8],[[50,7],8],[[50,7],8],[[61,7],8],[[61,7],8],[[65,7],8],[[66,7],8],[[51,7],8],[[51,7],8],[[51,7],8],[[51,7],8],[[51,7],8],[[49,7],8],[[49,7],8],[[49,7],8],[[49,7],8],[[49,7],8],[[52,7],8],[[52,7],8],[[52,7],8],[[52,7],8],[[52,7],8],[[[68,[79]],7],8],[[69,7],8],[[70,7],8],[[71,7],8],[[72,7],8],[[[80,[79]],7],8],[[[81,[79]],7],8],[[82,7],8],[[73,7],8],[[74,7],8],[[55,7],8],[[55,7],8],[[75,7],8],[[76,7],[[13,[78]]]],[[77,7],[[13,[78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,74],[[]],[[]],[[]],[[]],[[]],[44,[[31,[51]]]],[22,[[31,[49]]]],[22,[[31,[52]]]],[44,51],[22,49],[22,52],[44,51],[22,49],[22,52],[6,[[31,[75]]]],[28,51],[28,49],[28,52],[[58,[31,[84]]],31],[[58,[31,[84]]],[[31,[53]]]],[[58,[31,[84]]],[[31,[54]]]],[[58,[31,[84]]],[[31,[57]]]],[[58,[31,[84]]],[[31,[50]]]],[[58,[31,[84]]],[[31,[61]]]],[29,3],[29,[[3,[63]]]],[29,[[3,[63]]]],[[29,85],3],[74,86],[57,23],[58],[56],[64],[53],[54],[57],[50],[61],[66],[51],[49],[52],[73],[55],[75],[76],[77],0,0,[[51,51]],[[49,49]],[[52,52]],[[51,51],51],[[49,49],49],[[52,52],52],[[51,51],1],[[49,49],1],[[52,52],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,82],[51,1],[49,1],[52,1],[51,1],[49,1],[52,1],[53,1],[[],84],[[],84],[53,84],[54,84],[[29,2],3],0,0,0,0,0,0,0,0,[[],[[3,[53]]]],[[23,23],57],[[5,5],50],[[23,23],61],[[],74],[[],[[3,[53]]]],[[5,5],55],[[23,23],55],[[],[[3,[55]]]],[[],53],[[23,23],55],[69,[[31,[70]]]],[81,31],[82,31],[51,51],[49,49],[52,52],[[51,51],[[31,[26]]]],[[49,49],[[31,[26]]]],[[52,52],[[31,[26]]]],[53,[[31,[87]]]],[53,2],[57,23],[74,88],[61,23],[[2,[31,[[90,[89]]]]],80],[[29,52],[[3,[2]]]],[29,3],[[29,80,52,[31,[91]]],[[3,[81]]]],[[29,[31,[90]],52],[[3,[68]]]],[[51,51]],[[49,49]],[[52,52]],0,0,0,[[29,52],[[3,[2]]]],[[29,80,52],[[3,[81]]]],[[29,52,31],[[3,[2]]]],[[29,63,52],[[3,[2]]]],[29,3],[[51,51,1]],[[49,49,1]],[[52,52,1]],[[29,92],3],[[29,73],3],[[],84],[[],84],[[],84],0,0,[[64,2],[[3,[55]]]],0,[[75,65,49,[93,[[31,[66]]]]],[[3,[29]]]],[[75,65,[93,[[31,[66]]]],49],3],0,0,[[51,51],51],[[49,49],49],[[52,52],52],[[51,51]],[[49,49]],[[52,52]],0,0,[[51,51],51],[[49,49],49],[[52,52],52],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[51,51]],[[49,49]],[[52,52]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[6,[[3,[65]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[74,94],[[51,51],51],[[49,49],49],[[52,52],52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[[[129,[67]]],[[129,[67]]]],[130,130],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],129],[[95,95],1],[[96,96],1],[[97,97],1],[[98,98],1],[[99,99],1],[[100,100],1],[[101,101],1],[[102,102],1],[[103,103],1],[[104,104],1],[[105,105],1],[[106,106],1],[[107,107],1],[[108,108],1],[[109,109],1],[[110,110],1],[[111,111],1],[[112,112],1],[[113,113],1],[[114,114],1],[[115,115],1],[[116,116],1],[[117,117],1],[[118,118],1],[[119,119],1],[[120,120],1],[[121,121],1],[[122,122],1],[[123,123],1],[[124,124],1],[[125,125],1],[[126,126],1],[[127,127],1],[[130,130],1],[[95,7],8],[[96,7],8],[[97,7],8],[[98,7],8],[[99,7],8],[[100,7],8],[[101,7],8],[[102,7],8],[[103,7],8],[[104,7],8],[[105,7],8],[[106,7],8],[[107,7],8],[[108,7],8],[[109,7],8],[[110,7],8],[[111,7],8],[[112,7],8],[[113,7],8],[[114,7],8],[[115,7],8],[[116,7],8],[[117,7],8],[[118,7],8],[[119,7],8],[[120,7],8],[[121,7],8],[[122,7],8],[[123,7],8],[[124,7],8],[[125,7],8],[[126,7],8],[[127,7],8],[[128,7],8],[[[129,[79]],7],8],[[130,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[95,29],[[3,[1]]]],[[96,29],[[3,[1]]]],[[97,29],[[3,[131]]]],[[98,29],[[3,[132]]]],[[99,29],[[3,[132]]]],[[100,29],[[3,[1]]]],[[101,29],[[3,[1]]]],[[102,29],[[3,[6]]]],[[103,29],[[3,[1]]]],[[104,29],[[3,[1]]]],[[105,29],[[3,[74]]]],[[106,29],[[3,[23]]]],[[107,29],[[3,[2]]]],[[108,29],[[3,[2]]]],[[111,29],[[3,[65]]]],[[112,29],[[3,[1]]]],[[113,29],[[3,[33]]]],[[114,29],[[3,[133]]]],[[115,29],[[3,[51]]]],[[116,29],[[3,[1]]]],[[117,29],[[3,[1]]]],[[118,29],[[3,[23]]]],[[119,29],[[3,[1]]]],[[120,29],[[3,[134]]]],[[121,29],[[3,[22]]]],[[122,29],[[3,[1]]]],[[123,29],[[3,[1]]]],[[124,29],[[3,[22]]]],[[125,29],[[3,[22]]]],[[126,29],[[3,[22]]]],[[127,29],[[3,[1]]]],[[130,29],[[3,[23]]]],[95],[96],[97],[98],[99],[100],[101],[102],[103],[104],[105],[106],[107],[108],[109],[110],[111],[112],[113],[114],[115],[116],[117],[118],[119],[120],[121],[122],[123],[124],[125],[126],[127],[130],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[95,29,1],3],[[96,29,1],3],[[97,29,131],3],[[98,29,132],3],[[99,29,132],3],[[100,29,1],3],[[101,29,1],3],[[103,29,1],3],[[104,29,1],3],[[106,29,23],3],[[107,29,2],3],[[108,29,2],3],[[109,29,2],3],[[110,29,2],3],[[113,29,33],3],[[115,29,51],3],[[116,29,1],3],[[117,29,1],3],[[118,29,23],3],[[119,29,1],3],[[120,29,134],3],[[121,29,22],3],[[122,29,1],3],[[123,29,1],3],[[125,29,22],3],[[126,29,22],3],[[127,29,1],3],[[128,29,2],3],[[129,29],3],[[130,29,23],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,[[135,136],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],137],[[],32],[[137,137],137],[[32,32],32],[[137,137]],[[32,32]],[[137,137],137],[[32,32],32],[[137,137]],[[32,32]],[137,138],[32,138],[[137,137],137],[[32,32],32],[[137,137]],[[32,32]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137,137],[32,32],[139,139],[140,140],[136,136],[[]],[[]],[[]],[[]],[[]],[[137,137],26],[[32,32],26],[137,137],[32,32],[[137,137],1],[[32,32],1],0,[[137,137],137],[[32,32],32],[[],137],[[],32],[[137,137],1],[[32,32],1],[[136,136],1],[[137,28]],[[32,28]],[[29,32],3],[[[31,[29]],32,139],3],[[137,7],8],[[137,7],8],[[137,7],8],[[137,7],8],[[137,7],8],[[32,7],8],[[32,7],8],[[32,7],8],[[32,7],8],[[32,7],8],[[139,7],8],[[140,7],8],[[136,7],[[13,[78]]]],[[]],[[]],[[]],[[]],[[]],[138,[[31,[137]]]],[138,[[31,[32]]]],[138,137],[138,32],[138,137],[138,32],[28,137],[28,32],[29,[[3,[136]]]],[[29,16],[[3,[136]]]],[[29,91,91],3],[137],[32],[136],[[137,137]],[[32,32]],[[137,137],137],[[32,32],32],[[137,137],1],[[32,32],1],[[]],[[]],[[]],[[]],[[]],[137,1],[32,1],[137,1],[32,1],[[],[[3,[136]]]],[[132,132],3],[141,41],[[41,41],141],[141,41],[[29,32],3],[[137,32,141],3],[[29,137,32,141],3],0,[137,137],[32,32],[[137,137],[[31,[26]]]],[[32,32],[[31,[26]]]],[[137,137]],[[32,32]],[[137,137,1]],[[32,32,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[3,[136]]]],[[137,137],137],[[32,32],32],[[137,137]],[[32,32]],[[137,137],137],[[32,32],32],[[]],[[]],[[]],[[]],[[]],[[137,137]],[[32,32]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[],15],[[],15],[[],15],[32,32],[[137,137],137],[[32,32],32],[[[31,[29]],91,91,140],3],[[132,132],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[142,143],[142,41],[142,41],[142,41],[[]],[[]],[[]],[[]],[142,142],[144,144],[[]],[[]],[[144,144],1],[142,41],[142,41],[142,145],[142,144],[142,146],[[142,7],8],[[144,7],8],[[]],[[]],0,[[],[[3,[142]]]],[[]],[[]],[142,143],[142,143],[[],[[3,[142]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],146],[[146,146],146],[[146,146]],[[146,146],146],[[146,146]],[146,147],[[146,146],146],[[146,146]],[148,147],[148,149],[148,149],[148,149],[[]],[[]],[[]],[[]],[146,146],[148,148],[[]],[[]],[[146,146],26],[146,146],[[146,146],1],[[],146],[[146,146],146],[[],146],[[146,146],1],[[148,148],1],[[146,28]],[148,150],[148,150],[148,150],[148,147],[148,146],[[146,7],8],[[146,7],8],[[146,7],8],[[146,7],8],[[146,7],8],[[148,7],8],[148,147],[[]],[[]],[147,[[31,[146]]]],[147,146],[147,146],[28,146],[[],[[3,[148]]]],[146],[148],[[146,146]],[[146,146],146],[[146,146],1],[[]],[[]],[146,1],[146,1],[148,147],[146,146],[[146,146],[[31,[26]]]],[[146,146]],[[146,146,1]],[[],[[3,[148]]]],[[146,146],146],[[146,146]],[[146,146],146],[[]],[[]],[[146,146]],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[146,146],146],0,[[]],[[]],[151,151],[[]],[[151,151],1],[[151,7],8],[[]],[151],[[]],[151],[151,152],[151,41],[151,41],[151,41],[151,41],[[],[[3,[151]]]],[[]],[[],13],[[],13],[[],15],[151,153],0,0,0,[[91,91],91],[[132,132],132],[91,154],[132,155],[91,154],[132,155],[[]],[[]],[[]],[[]],[91,91],[132,132],[[]],[[]],[[91,91],26],[[132,132],26],[[91,6],91],[[132,6],132],[[91,91],1],[[132,132],1],[[91,7],8],[[91,7],8],[[132,7],8],[[132,7],8],[153,91],[154,91],[[]],[[]],[155,132],[153,91],[154,91],[91],[132],[156],[[]],[[]],[156],[156,91],[156,132],[156],[156,91],[156,132],[156],[[91,6],91],[[132,6],132],[156],[156,91],[156,132],[91,91],[132,132],[[157,158],91],[[157,159],132],[[],156],[[],156],[91,156],[132,156],[[],156],[91,156],[132,156],[[],156],[[],156],[91,156],[132,156],[[],156],[91,156],[132,156],[[91,91],[[31,[26]]]],[[132,132],[[31,[26]]]],[156],[156,91],[156,132],[[91,91],91],[[132,132],132],0,0,[[]],[[]],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[91,158],[91,157],[132,157],[132,159],[[],15],[[],15],[[]],0,0,[160],0,[[]],[[]],[[]],[[]],[161,161],[[[160,[67]]],[[160,[67]]]],[[]],[[]],[[161,161],1],[[[160,[11]],160],1],[[161,7],8],[[[160,[79]],7],8],[[]],[[]],[[],160],[[],160],[161],[[[160,[162]]]],[[]],[[]],0,[[29,30],[[3,[2]]]],[[29,30],[[3,[2]]]],[[29,30],[[3,[2]]]],[[29,30],[[3,[2]]]],[29,[[3,[2]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[29,[[3,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[163,3],[[],163],[[163,163],163],[[163,163]],[[163,163],163],[[163,163]],[163,22],[[163,163],163],[[163,163]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[164,164],[165,165],[166,166],[163,163],[[]],[[]],[[]],[[]],[29,3],[[163,163],26],[163,163],[[163,163],1],[[163,163],163],[29,[[3,[29]]]],[[29,29],[[3,[29]]]],[[29,29,17],[[3,[29]]]],[163,3],[[],163],[[163,163],1],[[163,28]],[[[31,[29]],163,16],3],[29,3],[29,3],[[164,7],8],[[165,7],8],[[166,7],8],[[163,7],8],[[163,7],8],[[163,7],8],[[163,7],8],[[163,7],8],[[]],[[]],[[]],[[]],[22,[[31,[163]]]],[22,163],[22,163],[28,163],[29,3],[[29,30],3],[[],[[3,[167]]]],[163],[[163,163]],[[163,163],163],[[163,163],1],[[]],[[]],[[]],[[]],[163,1],[163,1],[29,[[3,[1]]]],[[[31,[29]],[31,[29]],165],3],[[29,30,164],[[3,[30]]]],[[29,168,164],[[3,[168]]]],[32,3],[32,3],[[[31,[29]],32],3],[[],3],[163,163],[[163,163],[[31,[26]]]],[[],[[13,[169]]]],[17,3],[[],3],[29,[[3,[2]]]],[[163,163]],[[163,163,1]],[44,44],[[163,163],163],[[163,163]],[[[31,[29]]],3],[[163,163],163],[[]],[29,3],[[]],[[]],[[]],[[]],[[163,163]],[30,3],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],15],[[],15],[[],15],[[],15],[[163,163],163],[[],3],[[[31,[29]],166],3],[29,[[3,[2]]]]],"p":[[15,"bool"],[15,"usize"],[6,"Result"],[4,"Errno"],[15,"str"],[15,"i32"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[8,"ErrnoSentinel"],[8,"PartialEq"],[3,"String"],[4,"Result"],[3,"Error"],[3,"TypeId"],[3,"AtFlags"],[3,"OFlag"],[3,"RenameFlags"],[3,"SealFlag"],[3,"FdFlag"],[3,"FallocateFlags"],[6,"c_int"],[15,"u32"],[4,"FlockArg"],[4,"PosixFadviseAdvice"],[4,"Ordering"],[4,"FcntlArg"],[8,"IntoIterator"],[6,"RawFd"],[6,"off_t"],[4,"Option"],[3,"Mode"],[3,"OsString"],[3,"PollFd"],[3,"PollFlags"],[6,"c_short"],[3,"EpollFlags"],[3,"EpollCreateFlags"],[4,"EpollOp"],[3,"EpollEvent"],[15,"u64"],[15,"isize"],[3,"EfdFlags"],[6,"c_uint"],[3,"MemFdCreateFlag"],[3,"CStr"],[3,"FdSet"],[3,"Fds"],[3,"SockFlag"],[3,"AlgAddr"],[3,"TimestampingFlag"],[3,"MsgFlags"],[3,"UnixAddr"],[19,"SockaddrStorage"],[4,"SockAddr"],[3,"sockaddr_un"],[3,"NetlinkAddr"],[3,"sockaddr"],[3,"sockaddr_nl"],[3,"sockaddr_alg"],[3,"VsockAddr"],[3,"sockaddr_vm"],[8,"SockaddrLike"],[3,"sockaddr_storage"],[4,"SockType"],[4,"SockProtocol"],[8,"Clone"],[3,"RecvMsg"],[3,"CmsgIterator"],[4,"ControlMessageOwned"],[3,"Timestamps"],[4,"ControlMessage"],[4,"Shutdown"],[3,"UnixCredentials"],[4,"AddressFamily"],[3,"msghdr"],[3,"cmsghdr"],[3,"Error"],[8,"Debug"],[3,"MultiHeaders"],[3,"MultiResults"],[3,"IoSliceIterator"],[3,"ucred"],[6,"socklen_t"],[8,"GetSockOpt"],[6,"gid_t"],[3,"Path"],[6,"pid_t"],[15,"u8"],[3,"Vec"],[3,"TimeSpec"],[8,"SetSockOpt"],[8,"Into"],[6,"uid_t"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"Linger"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"DontRoute"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpRepair"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"BindToDevice"],[3,"Ip6tOriginalDst"],[3,"Timestamping"],[3,"ReceiveTimestamp"],[3,"ReceiveTimestampns"],[3,"Mark"],[3,"PassCred"],[3,"TxTime"],[3,"RxqOvfl"],[3,"Ipv4RecvErr"],[3,"Ipv6RecvErr"],[3,"IpMtu"],[3,"Ipv4Ttl"],[3,"Ipv6Ttl"],[3,"Ipv6DontFrag"],[3,"AlgSetAeadAuthSize"],[3,"AlgSetKey"],[3,"TcpMaxSeg"],[3,"linger"],[3,"TimeVal"],[3,"sockaddr_in6"],[3,"sock_txtime"],[15,"i8"],[3,"FileStat"],[3,"SFlag"],[6,"mode_t"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[6,"dev_t"],[3,"Statfs"],[6,"__fsword_t"],[3,"FsType"],[6,"fsid_t"],[3,"FsFlags"],[6,"c_ulong"],[3,"Statvfs"],[6,"fsblkcnt_t"],[6,"fsfilcnt_t"],[3,"SysInfo"],[15,"u16"],[3,"Duration"],[3,"timespec"],[3,"timeval"],[15,"i64"],[6,"time_t"],[6,"c_long"],[6,"suseconds_t"],[3,"IoVec"],[3,"RemoteIoVec"],[8,"Hash"],[3,"AccessFlags"],[4,"Whence"],[4,"LinkatFlags"],[4,"UnlinkatFlags"],[3,"PathBuf"],[6,"off64_t"],[6,"Error"],[8,"NixPath"],[13,"F_DUPFD"],[13,"F_DUPFD_CLOEXEC"],[13,"F_SETFD"],[13,"F_SETFL"],[13,"F_SETLK"],[13,"F_SETLKW"],[13,"F_GETLK"],[13,"F_OFD_SETLK"],[13,"F_OFD_SETLKW"],[13,"F_OFD_GETLK"],[13,"F_ADD_SEALS"],[13,"F_SETPIPE_SZ"],[13,"ScmRights"],[13,"ScmCredentials"],[13,"AlgSetIv"],[13,"AlgSetOp"],[13,"AlgSetAeadAssoclen"],[13,"RxqOvfl"],[13,"TxTime"],[13,"ScmRights"],[13,"ScmCredentials"],[13,"ScmTimestamp"],[13,"ScmTimestampsns"],[13,"ScmTimestampns"],[13,"RxqOvfl"],[13,"Unix"],[13,"Netlink"],[13,"Alg"],[13,"Vsock"],[8,"TimeValLike"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":[13,13,13,4,3,13,3,13,13,3,3,13,13,13,3,13,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delimiter","eq","eq","eq","eq","extend","extend","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","provide","resolved_at","set_span","set_span","set_span","set_span","set_span","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","0","0","0","0","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":["proc_macroproc_macro2::TokenTree","","","","proc_macro2::token_stream","","","","","","","","","","","","","","",""],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns the delimiter of this <code>Group</code>","","","","","","","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[9,8,8,0,0,6,0,6,9,0,0,6,8,8,0,6,0,0,0,0,1,16,5,4,6,7,8,1,9,10,3,16,5,4,6,7,8,1,9,10,3,3,4,3,5,4,6,7,8,1,9,10,3,5,4,6,7,8,1,9,10,3,10,5,7,8,9,10,10,5,5,3,3,3,3,16,16,5,5,4,6,6,7,7,8,1,1,9,10,10,3,3,16,5,5,5,4,4,6,6,6,6,6,7,8,1,9,10,3,5,5,5,3,10,3,3,3,3,3,3,3,3,3,3,16,5,4,6,7,8,1,9,10,3,5,5,3,3,4,4,4,5,7,1,10,10,10,16,4,6,7,1,10,3,1,16,6,7,1,10,3,7,7,7,3,3,5,4,6,7,8,1,9,10,3,16,5,6,7,1,10,3,0,16,5,4,6,7,8,1,9,10,3,16,5,4,6,7,8,1,9,10,3,16,5,4,6,7,8,1,9,10,3,3,3,3,3,3,3,3,3,3,3,4,3,3,41,42,43,44,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],4],[2,3],[5,5],[4,4],[6,6],[7,7],[8,8],[1,1],[9,9],[10,10],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,10],11],[[],5],[7,8],[[8,8],12],[[9,9],12],[10,12],[[10,10],12],[[5,13]],[[5,13]],[14,3],[14,3],[15,3],[15,3],[[16,17],18],[[16,17],18],[[5,17],18],[[5,17],18],[[4,17],18],[[6,17],18],[[6,17],18],[[7,17],18],[[7,17],18],[[8,17],18],[[1,17],18],[[1,17],18],[[9,17],18],[[10,17],18],[[10,17],18],[[3,17],18],[[3,17],18],[[]],[19,5],[6,5],[[]],[20,4],[[]],[10,6],[3,6],[1,6],[7,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,5],[13,5],[21,[[22,[5,16]]]],[21,[[22,[3,16]]]],[10],[23,3],[23,3],[24,3],[24,3],[25,3],[25,3],[26,3],[26,3],[27,3],[27,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,28],[5,12],[29,3],[29,3],[[4,4],[[30,[4]]]],[[4,4],4],[[],4],[[],5],[[8,5],7],[[2,9],1],[[21,4],10],[[21,4],10],[[10,10],[[30,[11]]]],[31],[[4,4],4],[[6,4]],[[7,4]],[[1,4]],[[10,4]],[[3,4]],[1,9],[16,4],[6,4],[7,4],[1,4],[10,4],[3,4],[7,4],[7,4],[7,5],[21,3],[[3,[33,[32]]],[[30,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[36,3],[36,3],[37,3],[37,3],[38,3],[38,3],[39,3],[39,3],[40,3],[40,3],[4,20],[32,3],[32,3],0,0,0,0,0,0,[[]],[[]],[28,28],[[]],[[28,17],18],[[]],[[]],[[]],[28,[[30,[6]]]],[28],[[]],[[],22],[[],22],[[],35]],"p":[[3,"Punct"],[15,"char"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[15,"bool"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[15,"str"],[4,"Result"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"Demand"],[15,"usize"],[8,"RangeBounds"],[3,"String"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"],[13,"Group"],[13,"Ident"],[13,"Punct"],[13,"Literal"]]},\
"quick_xml":{"doc":"High performance XML reader/writer.","t":[3,13,4,13,13,13,3,6,13,13,13,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,5,5,5,5,3,3,3,3,3,13,13,13,13,13,13,13,4,13,13,13,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,4,4,3,3,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["ElementWriter","EndEventMismatch","Error","EscapeError","InvalidAttr","Io","Reader","Result","TextNotFound","UnexpectedBang","UnexpectedEof","UnexpectedToken","Utf8","Writer","XmlDeclWithoutVersion","attribute_namespace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_position","check_comments","check_end_names","clone","clone","clone_into","clone_into","create_element","decode","decode_without_bom","decoder","escape","event_namespace","events","expand_empty_elements","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_file","from_reader","from_str","get_mut","get_ref","inner","into","into","into","into","into_inner","into_inner","new","new_with_indent","provide","read_event","read_event_unbuffered","read_namespaced_event","read_text","read_to_end","read_to_end_unbuffered","source","to_owned","to_owned","to_string","trim_markup_names_in_closing_tags","trim_text","trim_text_end","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_attribute","with_attributes","write","write_cdata_content","write_empty","write_event","write_indent","write_inner_content","write_pi_content","write_text_content","0","0","0","0","0","0","0","0","expected","found","escape","partial_escape","unescape","unescape_with","BytesCData","BytesDecl","BytesEnd","BytesStart","BytesText","CData","Comment","Decl","DocType","Empty","End","Eof","Event","PI","Start","Text","as_ref","attributes","attributes","attributes_raw","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrowed","borrowed","borrowed_name","clear_attributes","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","encoding","eq","eq","eq","eq","eq","eq","escape","escaped","extend_attributes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_escaped","from_escaped_str","from_plain","from_plain_str","from_start","from_str","html_attributes","into","into","into","into","into","into","into_inner","into_inner","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","local_name","local_name","name","name","new","new","owned","owned","owned_name","partial_escape","push_attribute","set_name","standalone","to_borrowed","to_end","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_get_attribute","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unescape_and_decode","unescape_and_decode","unescape_and_decode_with_custom_entities","unescape_and_decode_with_custom_entities","unescape_and_decode_without_bom","unescape_and_decode_without_bom_with_custom_entities","unescaped","unescaped","unescaped_with_custom_entities","unescaped_with_custom_entities","version","with_attributes","0","0","0","0","0","0","0","0","0","Attr","AttrError","Attribute","Attributes","DoubleQ","Duplicated","Empty","ExpectedEq","ExpectedQuote","ExpectedValue","SingleQ","Unquoted","UnquotedValue","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","html","into","into","into","into","into_iter","key","key","map","new","next","partial_cmp","provide","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unescape_and_decode_value","unescape_and_decode_value_with_custom_entities","unescape_and_decode_without_bom","unescape_and_decode_without_bom_with_custom_entities","unescaped_value","unescaped_value_with_custom_entities","value","value","with_checks","0","0","0","0","1","1","1","0","0","0","0","0","1","1"],"q":["quick_xml","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quick_xml::Error","","","","","","","","","","quick_xml::escape","","","","quick_xml::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quick_xml::events::Event","","","","","","","","","quick_xml::events::attributes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quick_xml::events::attributes::Attr","","","","","","","quick_xml::events::attributes::AttrError","","","","","",""],"d":["A struct to write an element. Contains methods to add …","End event mismatch","The error type used by this crate.","Escape error","Attribute parsing error","IO error","A low level encoding-agnostic XML event reader.","A specialized <code>Result</code> type where the error is hard-wired to …","Text not found, expected <code>Event::Text</code>","Unexpected &lt;!&gt;","Unexpected End of File","Unexpected token","Utf8 error","XML writer.","<code>Event::XmlDecl</code> must start with <em>version</em> attribute","Resolves a potentially qualified <strong>attribute name</strong> into …","","","","","","","","","Gets the current byte position in the input data.","Changes whether comments should be validated.","Changes whether mismatched closing tag names should be …","","","","","Provides a simple, high-level API for writing XML elements.","Decodes a UTF8 slice regardless of XML declaration.","Decodes a UTF8 slice without BOM (Byte order mark) …","Get utf8 decoder","Manage xml character escapes","Resolves a potentially qualified <strong>event name</strong> into …","Defines zero-copy XML events used throughout this library.","Changes whether empty elements should be split into an <code>Open</code>…","","","Returns the argument unchanged.","Creates a new <code>Error::Io</code> from the given error","Returns the argument unchanged.","","Creates a new <code>Error::Utf8</code> from the given error","Returns the argument unchanged.","Returns the argument unchanged.","Creates an XML reader from a slice of bytes.","Creates an XML reader from a file path.","Creates a <code>Reader</code> that reads from a reader implementing …","Creates an XML reader from a string slice.","Gets a mutable reference to the underlying reader.","Gets a reference to the underlying reader.","Get inner writer, keeping ownership","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes <code>Reader</code> returning the underlying reader","Consumes this <code>Writer</code>, returning the underlying writer.","Creates a Writer from a generic Write","Creates a Writer with configured whitespace indents from a …","","Reads the next <code>Event</code>.","Read an event that borrows from the input rather than a …","Reads the next event and resolves its namespace (if …","Reads optional text between start and end tags.","Reads until end element is found","Reads until end element is found","","","","","Changes whether trailing whitespaces after the markup name …","Changes whether whitespace before and after character data …","Changes whether whitespace after character data should be …","","","","","","","","","","","","","Adds an attribute to this element.","Add additional attributes to this element using an …","Writes bytes","Write a CData event <code>&lt;![CDATA[...]]&gt;</code> inside the current …","Write an empty (self-closing) tag.","Writes the given event to the underlying writer.","Manually write a newline and indentation at the proper …","Create a new scope for writing XML inside the current …","Write a processing instruction <code>&lt;?...?&gt;</code> inside the current …","Write some text inside the current element.","","","","","","","","","Expected end event","Found end event","Escapes a <code>&amp;[u8]</code> and replaces all xml special characters (&lt;…","Should only be used for escaping text content. In xml text …","Unescape a <code>&amp;[u8]</code> and replaces all xml escaped characters (…","Unescape a <code>&amp;[u8]</code> and replaces all xml escaped characters (…","CDATA content contains unescaped data from the reader. If …","An XML declaration (<code>Event::Decl</code>).","A struct to manage <code>Event::End</code> events","Opening tag data (<code>Event::Start</code>), with optional attributes.","Data from various events (most notably, <code>Event::Text</code>) that …","CData <code>&lt;![CDATA[...]]&gt;</code>.","Comment <code>&lt;!-- ... --&gt;</code>.","XML declaration <code>&lt;?xml ...?&gt;</code>.","Doctype <code>&lt;!DOCTYPE ...&gt;</code>.","Empty element tag (with attributes) <code>&lt;tag attr=&quot;value&quot; /&gt;</code>.","End tag <code>&lt;/tag&gt;</code>.","End of XML document.","Event emitted by <code>Reader::read_event</code>.","Processing instruction <code>&lt;?...?&gt;</code>.","Start tag (with attributes) <code>&lt;tag attr=&quot;value&quot;&gt;</code>.","Character data between <code>Start</code> and <code>End</code> element.","","Xml Attributes module","Returns an iterator over the attributes of this tag.","Gets the undecoded raw string with the attributes of this …","","","","","","","","","","","","","Creates a new <code>BytesStart</code> from the given content (name + …","Creates a new <code>BytesEnd</code> borrowing a slice","Creates a new <code>BytesStart</code> from the given name.","Remove all attributes from the ByteStart","","","","","","","","","","","","","","","","","","","Gets xml encoding, excluding quotes (<code>&#39;</code> or <code>&quot;</code>).","","","","","","","Converts this CDATA content to an escaped version, that …","Gets escaped content.","Add additional attributes to this tag using an iterator.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>BytesText</code> from an escaped byte sequence.","Creates a new <code>BytesText</code> from an escaped string.","Creates a new <code>BytesText</code> from a byte sequence. The byte …","Creates a new <code>BytesText</code> from a string. The string is …","Creates a <code>BytesDecl</code> from a <code>BytesStart</code>","Creates a new <code>BytesCData</code> from a string","Returns an iterator over the HTML-like attributes of this …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extracts the inner <code>Cow</code> from the <code>BytesText</code> event container.","Extracts the inner <code>Cow</code> from the <code>BytesCData</code> event container.","Converts the event into an owned event.","Converts the event into an owned event.","Converts the event into an owned event.","Ensures that all data is owned to extend the object’s …","Ensures that all data is owned to extend the object’s …","Converts the event to an owned version, untied to the …","Gets the undecoded raw local tag name (excluding …","local name (excluding namespace) as &amp;u8 (without eventual …","Gets the undecoded raw tag name as a <code>&amp;[u8]</code>.","Gets <code>BytesEnd</code> event name","Constructs a new <code>XmlDecl</code> from the (mandatory) <em>version</em> …","Creates a new <code>BytesCData</code> from a byte sequence.","Creates a new <code>BytesStart</code> from the given content (name + …","Creates a new <code>BytesEnd</code> owning its name","Creates a new <code>BytesStart</code> from the given name","Converts this CDATA content to an escaped version, that …","Adds an attribute to this element.","Edit the name of the BytesStart in-place","Gets xml standalone, excluding quotes (<code>&#39;</code> or <code>&quot;</code>).","Converts the event into a borrowed event. Most useful when …","Creates new paired close tag","","Converts the event into an owned event without taking …","","","","","","","","","","","","Try to get an attribute","","","","","","","","","","","","","Returns the unescaped and decoded string value.","helper method to unescape then decode self using the …","Returns the unescaped and decoded string value with custom …","helper method to unescape then decode self using the …","helper method to unescape then decode self using the …","helper method to unescape then decode self using the …","Gets the unescaped tag name.","gets escaped content","Gets the unescaped tag name, using custom entities.","gets escaped content with custom entities","Gets xml version, excluding quotes (<code>&#39;</code> or <code>&quot;</code>).","Consumes <code>self</code> and yield a new <code>BytesStart</code> with additional …","","","","","","","","","","A struct representing a key/value XML or HTML attribute.","Errors that can be raised during parsing attributes.","A struct representing a key/value XML attribute.","Iterator over XML attributes.","Attribute with value enclosed in double quotes (<code>&quot;</code>). …","An attribute with the same name was already encountered. …","Attribute without value. Attribute key provided. This is …","Attribute key was not followed by <code>=</code>, position relative to …","Attribute value was not finished with a matching quote, …","Attribute value was not found after <code>=</code>, position relative …","Attribute with value enclosed in single quotes (<code>&#39;</code>). …","Attribute with value not enclosed in quotes. Attribute key …","Attribute value is not quoted, position relative to the …","","","","","","","","","","","","","","","","","","","","","","","","Creates new attribute from raw bytes. Does not apply any …","Returns the argument unchanged.","","Creates new attribute from text representation. Key is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new attribute iterator from a buffer, allowing …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the key value","The key to uniquely define the attribute.","Maps an <code>Attr&lt;T&gt;</code> to <code>Attr&lt;U&gt;</code> by applying a function to a …","Creates a new attribute iterator from a buffer.","","","","","","","","","","","","","","","","","","","","Decode then unescapes the value","Decode then unescapes the value with custom entities","helper method to unescape then decode self using the …","helper method to unescape then decode self using the …","Returns the unescaped value.","Returns the unescaped value, using custom entities.","Returns the attribute value. For <code>Self::Empty</code> variant an …","The raw value of the attribute.","Changes whether attributes should be checked for …","","","","","","","","","","","","","",""],"i":[0,11,0,11,11,11,0,0,11,11,11,11,11,0,11,2,8,11,2,7,8,11,2,7,2,2,2,2,7,2,7,7,2,2,2,0,2,0,2,11,11,8,11,11,11,11,2,7,2,2,2,2,2,2,7,8,11,2,7,2,7,7,7,11,2,2,2,2,2,2,11,2,7,11,2,2,2,8,11,2,7,8,11,2,7,8,11,2,7,8,8,7,8,8,7,7,8,8,8,47,48,49,50,51,52,53,54,55,55,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,0,24,24,24,24,0,34,34,34,37,36,31,30,24,34,37,36,31,30,24,34,36,34,34,34,37,36,31,30,24,34,37,36,31,30,24,34,37,36,31,30,24,37,34,37,36,31,30,24,30,31,34,34,37,36,31,30,24,34,37,36,31,30,24,31,31,31,31,37,30,34,34,37,36,31,30,24,31,30,34,37,36,31,30,24,34,36,34,36,37,30,34,36,34,30,34,34,37,34,34,34,34,37,36,31,30,24,34,37,36,31,30,24,34,34,37,36,31,30,24,34,37,36,31,30,24,34,31,34,31,31,31,34,31,34,31,37,34,56,57,58,59,60,61,62,63,64,0,0,0,0,41,15,41,15,15,15,41,41,15,40,35,15,41,40,35,15,41,40,35,41,40,35,41,41,40,15,41,40,35,15,15,41,40,40,40,40,35,15,41,41,35,40,35,15,41,35,41,40,41,35,35,41,15,40,35,41,15,40,35,15,41,40,35,15,41,40,35,15,41,40,40,40,40,40,40,41,40,35,65,66,67,68,65,66,67,69,70,71,72,73,72,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],3],[[[2,[1]],4],2],[[[2,[1]],4],2],[[[2,[[0,[5,1]]]]],[[2,[[0,[5,1]]]]]],[[[7,[[0,[5,6]]]]],[[7,[[0,[5,6]]]]]],[[]],[[]],[[[7,[6]]],[[8,[6]]]],[[[2,[1]]],[[10,[9]]]],[[[2,[1]]],[[10,[9]]]],0,0,[[[2,[1]]]],0,[[[2,[1]],4],2],[[11,12],13],[[11,12],13],[[]],[14,11],[[]],[15,11],[16,11],[[]],[[]],[[],2],[[[18,[17]]],[[10,[[2,[[20,[19]]]]]]]],[1,[[2,[1]]]],[9,2],[[[2,[1]]]],[[[2,[1]]]],[[[7,[6]]]],[[]],[[]],[[]],[[]],[[[2,[1]]],1],[[[7,[6]]],6],[6,[[7,[6]]]],[[6,21,3],[[7,[6]]]],[22],[[[2,[1]],23],[[10,[24]]]],[2,[[10,[24]]]],[[[2,[1]],23,23],10],[[[2,[1]],18,23],[[10,[25]]]],[[[2,[1]],18,23],10],[[2,18],10],[11,[[27,[26]]]],[[]],[[]],[[],25],[[[2,[1]],4],2],[[[2,[1]],4],2],[[[2,[1]],4],2],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[],29],[[[8,[6]]],[[8,[6]]]],[[[8,[6]]],[[8,[6]]]],[[[7,[6]]],10],[[[8,[6]],30],[[10,[7]]]],[[[8,[6]]],[[10,[7]]]],[[[7,[6]],[18,[24]]],10],[[[7,[6]]],10],[[[8,[6]]],[[10,[7]]]],[[[8,[6]],31],[[10,[7]]]],[[[8,[6]],31],[[10,[7]]]],0,0,0,0,0,0,0,0,0,0,[[],32],[[],32],[[],[[28,[32,0]]]],[33,[[28,[32,0]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[24,24],0,[34,35],[34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,34],[[],36],[[],34],[34,34],[34,34],[37,37],[36,36],[31,31],[30,30],[24,24],[[]],[[]],[[]],[[]],[[]],[[]],[34],[37],[36],[31],[30],[24],[37,[[27,[[10,[32]]]]]],[[34,34],4],[[37,37],4],[[36,36],4],[[31,31],4],[[30,30],4],[[24,24],4],[30,31],[31],[34,34],[[34,12],13],[[37,12],13],[[36,12],13],[[31,12],13],[[30,12],13],[[24,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[32]]],31],[[[38,[[32,[9]]]]],31],[[],31],[9,31],[34,37],[9,30],[34,35],[[]],[[]],[[]],[[]],[[]],[[]],[31,32],[30,32],[34,34],[37,37],[36,36],[31,31],[30,30],[24,24],[34],[36],[34],[36],[[27,27],37],[[[38,[32]]],30],[[[38,[[23,[21]]]],3],34],[[[23,[21]]],36],[[[38,[[23,[21]]]]],34],[30,31],[34],[34,34],[37,[[27,[[10,[32]]]]]],[34,34],[34,36],[[]],[34,34],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[34,[0,[18,39]]],[[10,[[27,[40]]]]]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[34,2],[[10,[25]]]],[[31,2],[[10,[25]]]],[[34,2,33],[[10,[25]]]],[[31,2,33],[[10,[25]]]],[[31,2],[[10,[25]]]],[[31,2,33],[[10,[25]]]],[34,[[10,[32]]]],[31,[[10,[32]]]],[[34,33],[[10,[32]]]],[[31,33],[[10,[32]]]],[37,[[10,[32]]]],[34,34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,40],[35,35],[[[41,[5]]],[[41,[5]]]],[[]],[[]],[[]],[[[41,[42]],41],43],[[40,40],4],[[15,15],4],[[[41,[44]],41],4],[[40,12],13],[[35,12],13],[[15,12],13],[[15,12],13],[[[41,[18]],12],13],[[],40],[[]],[41,40],[[],40],[[]],[[]],[[]],[[[41,[45]]]],[3,35],[[]],[[]],[[]],[[]],[[]],[41],0,[41,41],[3,35],[35,27],[[[41,[46]],41],[[27,[43]]]],[22],[[]],[[]],[[]],[[],25],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[],29],[[],29],[[40,2],[[10,[25]]]],[[40,2,33],[[10,[25]]]],[[40,2],[[10,[25]]]],[[40,2,33],[[10,[25]]]],[40,[[10,[32]]]],[[40,33],[[10,[32]]]],[41],0,[[35,4],35],0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[8,"BufRead"],[3,"Reader"],[15,"usize"],[15,"bool"],[8,"Clone"],[8,"Write"],[3,"Writer"],[3,"ElementWriter"],[15,"str"],[6,"Result"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"AttrError"],[3,"Utf8Error"],[3,"Path"],[8,"AsRef"],[3,"File"],[3,"BufReader"],[15,"u8"],[3,"Demand"],[3,"Vec"],[4,"Event"],[3,"String"],[8,"Error"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"BytesCData"],[3,"BytesText"],[4,"Cow"],[3,"HashMap"],[3,"BytesStart"],[3,"Attributes"],[3,"BytesEnd"],[3,"BytesDecl"],[8,"Into"],[8,"Sized"],[3,"Attribute"],[4,"Attr"],[8,"Ord"],[4,"Ordering"],[8,"PartialEq"],[8,"Hash"],[8,"PartialOrd"],[13,"Io"],[13,"Utf8"],[13,"UnexpectedEof"],[13,"UnexpectedToken"],[13,"UnexpectedBang"],[13,"XmlDeclWithoutVersion"],[13,"InvalidAttr"],[13,"EscapeError"],[13,"EndEventMismatch"],[13,"Start"],[13,"End"],[13,"Empty"],[13,"Text"],[13,"Comment"],[13,"CData"],[13,"Decl"],[13,"PI"],[13,"DocType"],[13,"DoubleQ"],[13,"SingleQ"],[13,"Unquoted"],[13,"Empty"],[13,"ExpectedEq"],[13,"ExpectedValue"],[13,"UnquotedValue"],[13,"ExpectedQuote"],[13,"Duplicated"]]},\
"quote":{"doc":"github crates-io docs-rs","t":[8,8,8,10,10,10,10,10,14,11,11,14,14,11,11,11,11,10],"n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":["quote","","","","","","","","","","","","","","","","",""],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,6,6,6,6,7,0,8,8,0,0,7,7,8,8,8],"f":[0,0,0,[[]],[[]],[[]],[[]],[1,2],0,[[],3],[[],3],0,0,[[],[[5,[4]]]],[[],[[5,[4]]]],[[],3],[[],3],[3]],"p":[[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"scoped_tls":{"doc":"Scoped thread-local storage","t":[3,11,11,11,11,11,14,11,11,11,11,11],"n":["ScopedKey","borrow","borrow_mut","from","into","is_set","scoped_thread_local","set","try_from","try_into","type_id","with"],"q":["scoped_tls","","","","","","","","","","",""],"d":["Type representing a thread local storage key corresponding …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Test whether this TLS key has been <code>set</code> for the current …","The macro. See the module level documentation for the …","Inserts a value into this scoped thread local storage slot …","","","","Gets a value out of this scoped variable."],"i":[0,1,1,1,1,1,0,1,1,1,1,1],"f":[0,[[]],[[]],[[]],[[]],[1,2],0,[1],[[],3],[[],3],[[],4],[1]],"p":[[3,"ScopedKey"],[15,"bool"],[4,"Result"],[3,"TypeId"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":[13,8,13,4,3,3,16,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,14,14,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_const","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","new_const","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","smallvec_inline","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":["smallvec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smallvec::CollectionAllocErr"],"d":["The allocator return an error","Types that can be used as the backing store for a SmallVec","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","The array passed as an argument is moved to be an inline …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the SmallVec into an <code>A</code> if possible. Otherwise …","","","","","","Convert a SmallVec to a Vec, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","Construct an empty vector.","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Creates an inline <code>SmallVec</code> containing the arguments. This …","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[12,0,12,0,0,0,1,0,0,2,2,2,2,3,2,2,2,3,7,2,2,3,12,7,2,2,3,12,2,2,2,3,2,2,3,2,2,2,2,2,2,2,2,7,2,3,2,2,2,7,2,3,12,12,7,2,2,2,2,2,3,12,12,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,2,3,12,2,2,7,2,2,2,3,2,2,7,2,2,2,7,3,7,3,2,2,2,2,2,2,2,2,2,2,2,2,1,7,3,0,0,2,2,2,3,24,12,2,7,2,3,12,2,7,2,3,12,2,2,7,2,3,12,2,25],"f":[0,0,0,0,0,0,0,0,0,[[[2,[1]],2]],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[[3,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[[3,[1]]]],[[]],[[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]]],[[]],[[]],[[[2,[1]]],4],[[[2,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[3,[[0,[1,5]]]]],[[3,[[0,[1,5]]]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[[2,[1]],2],6],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[],[[2,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]]],[[7,[1]]]],[[[7,[1]]]],[[[2,[1]]]],[[[3,[1]]]],[[[2,[1]],2],8],[[[2,[1]],9]],[[[2,[1]]]],[[[7,[1]],10],11],[[[2,[1]],10],11],[[[3,[1]],10],11],[[12,10],11],[[12,10],11],[[]],[13,[[2,[1]]]],[[]],[14],[1,[[2,[1]]]],[[],[[2,[1]]]],[[]],[15,12],[[]],[1,[[2,[1]]]],[[1,4],[[2,[1]]]],[[[16,[1]],4],[[2,[1]]]],[[],2],[4,[[2,[1]]]],[9,[[2,[1]]]],[[4,4],[[2,[1]]]],[[],[[2,[1]]]],[13,[[2,[1]]]],[[[2,[1]],4]],[[[2,[1]]]],[[[2,[1]],17]],[[[2,[1]],17]],[[[2,[1]]],4],[[[2,[1]],4]],[[[2,[1]],4]],[[[2,[1]],4,9]],[[]],[[]],[[]],[[]],[[[2,[1]]],18],[[[2,[1]]],[[19,[1,[2,[1]]]]]],[[]],[2],[2],[[[2,[1]]]],[[]],[[[2,[1]]],13],[[[2,[1]]],8],[[[7,[1]]],4],[[[2,[1]]],4],[[],[[2,[1]]]],[[],2],[[[7,[1]]],20],[[[3,[1]]],20],[[[7,[1]]],20],[[[3,[1]]],20],[[[2,[1]],2],[[20,[6]]]],[[[2,[1]]],20],[[[2,[1]]]],[[[2,[1]],4]],[[[2,[1]],4]],[[[2,[1]],4]],[[[2,[1]],4]],[[[2,[1]],4]],[[[2,[1]],21]],[[[2,[1]],21]],[[[2,[1]],4]],[[[2,[1]]]],[[],4],[[[7,[1]]]],[[[3,[1]]]],0,0,[[[2,[1]]],8],[[[2,[1]],4]],[[]],[[]],[[],2],[[],22],[[[2,[1]],4]],[[],19],[[],19],[[],19],[[],19],[[[2,[1]],4],[[19,[12]]]],[[],19],[[],19],[[],19],[[],19],[[[2,[1]],4],[[19,[12]]]],[[[2,[1]],4],[[19,[12]]]],[[],23],[[],23],[[],23],[[],23],[4,[[2,[1]]]],0],"p":[[8,"Array"],[3,"SmallVec"],[3,"IntoIter"],[15,"usize"],[8,"Clone"],[4,"Ordering"],[3,"Drain"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"CollectionAllocErr"],[3,"Vec"],[15,"never"],[6,"LayoutErr"],[19,"MaybeUninit"],[8,"SliceIndex"],[3,"Box"],[4,"Result"],[4,"Option"],[8,"FnMut"],[3,"String"],[3,"TypeId"],[8,"ToSmallVec"],[13,"AllocErr"]]},\
"static_assertions":{"doc":"Banner","t":[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14],"n":["assert_cfg","assert_eq_align","assert_eq_size","assert_eq_size_ptr","assert_eq_size_val","assert_fields","assert_impl_all","assert_impl_any","assert_impl_one","assert_not_impl_all","assert_not_impl_any","assert_obj_safe","assert_trait_sub_all","assert_trait_super_all","assert_type_eq_all","assert_type_ne_all","const_assert","const_assert_eq","const_assert_ne"],"q":["static_assertions","","","","","","","","","","","","","","","","","",""],"d":["Asserts that a given configuration is set.","Asserts that types are equal in alignment.","Asserts that types are equal in size.","Asserts that values pointed to are equal in size.","Asserts that values are equal in size.","Asserts that the type has the given fields.","Asserts that the type implements <em>all</em> of the given traits.","Asserts that the type implements <em>any</em> of the given traits.","Asserts that the type implements exactly one in a set of …","Asserts that the type does <strong>not</strong> implement <em>all</em> of the given …","Asserts that the type does <strong>not</strong> implement <em>any</em> of the given …","Asserts that the traits support dynamic dispatch (…","Asserts that the trait is a child of all of the other …","Asserts that the trait is a parent of all of the other …","Asserts that <em>all</em> types in a list are equal to each other.","Asserts that <em>all</em> types are <strong>not</strong> equal to each other.","Asserts that constant expressions evaluate to <code>true</code>.","Asserts that constants are equal in value.","Asserts that constants are <strong>not</strong> equal in value."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":[5,5],"n":["is_xid_continue","is_xid_start"],"q":["unicode_ident",""],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"p":[[15,"char"],[15,"bool"]]},\
"wayland_backend":{"doc":"Backend API for wayland crates","tn":["client","message","protocol","rs","server","ANONYMOUS_INTERFACE","AllowNull","Argument","ArgumentType","Array","Array","Fd","Fd","Fixed","Fixed","INLINE_ARGS","Int","Int","Interface","Message","MessageDesc","NewId","NewId","No","Object","Object","ObjectInfo","ProtocolError","Str","Str","Uint","Uint","Unknown","Value","WEnum","WEnumError","Yes","a","arg_interfaces","args","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_ptr","child_interface","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","eq","eq","eq","eq","eq","event_count","events","events","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_type","h","i","id","interface","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","is_destructor","map_fd","message","n","name","name","name","name","o","object_id","object_interface","opcode","provide","provide","request_count","requests","requests","s","same_interface","same_type","sender_id","signature","signature","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","u","version","version","version","wl_argument","wl_interface","wl_message","0","0","0","0","0","0","0","0","0","0","0","0","client","server","Backend","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","Protocol","ReadEventsGuard","WaylandError","WeakBackend","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connection_fd","data_as_any","debug","destroyed","dispatch_inner_queue","display_id","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","downgrade","eq","event","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_data","hash","info","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_null","last_error","null","prepare_read","protocol_id","provide","provide","provide","read","send_request","set_data","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","0","0","Backend","ClientData","ClientId","ConnectionClosed","Credentials","DisconnectReason","GlobalHandler","GlobalId","GlobalInfo","Handle","InitError","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","ProtocolError","WeakHandle","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_view","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_global","create_object","debug","debug","debug","destroyed","disable_global","disabled","disconnected","dispatch_all_clients","dispatch_single_client","downcast","downcast","downcast","downcast_arc","downcast_arc","downcast_arc","downcast_mut","downcast_mut","downcast_mut","downcast_rc","downcast_rc","downcast_rc","downcast_ref","downcast_ref","downcast_ref","downgrade","eq","eq","eq","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_client","get_client_credentials","get_client_data","get_global_handler","get_object_data","get_object_data_any","gid","global_info","handle","hash","hash","hash","initialized","insert_client","interface","interface","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is","is","is_null","kill_client","new","null","object_for_protocol_id","object_info","pid","poll_fd","post_error","protocol_id","provide","provide","remove_global","request","same_client_as","send_event","set_object_data","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","upgrade","version","with_all_clients","with_all_objects_for","0","0"],"q":["wayland_backend","","","","","wayland_backend::protocolwayland_backend::protocol::Argument","","","","","","","","wayland_backend::protocol::ArgumentType","","wayland_backend::protocol::WEnum","","wayland_backend::rs","","wayland_backend::rs::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_backend::rs::client::WaylandError","","wayland_backend::rs::serverwayland_backend::rs::server::DisconnectReason","wayland_backend::rs::server::InitError"],"d":["","Helper macro for quickly making a <code>Message</code>","Types and utilities for manipulating the Wayland protocol","Rust implementations of the Wayland backends","","Special interface representing an anonymous object","Describes whether an argument may have a null value.","Enum of possible argument of the protocol","Enum of possible argument types as recognized by the wire","Vec","Vec","A file descriptor argument. Represented by a [<code>RawFd</code>].","A file descriptor argument. Represented by a [<code>RawFd</code>].","A signed fixed point number with 1/256 precision","A signed fixed point number with 1/256 precision","Number of arguments that are stocked inline in a <code>Message</code> …","An integer argument. Represented by a <code>i32</code>.","An integer argument. Represented by a <code>i32</code>.","Description of wayland interface.","Represents a message that has been sent from some object.","Wire metadata of a given message","Id of a newly created wayland object","Id of a newly created wayland object","Null values are forbidden.","Id of a wayland object","Id of a wayland object","Description of the protocol-level information of an object","A protocol error","A string. This is represented as a <code>CString</code> in a message.","CString","An unsigned integer argument. Represented by a <code>u32</code>.","An unsigned integer argument. Represented by a <code>u32</code>.","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","Error representing an unknown numeric variant for a <code>WEnum</code>","Null values are allowed.","","The interfaces passed into this message as arguments.","The arguments of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A C representation of this interface that may be used to …","The child interface created from this message.","","","","","","","","","","","","","","","","","","","The error code associated with the error","","","","","","","","A list that describes every event this interface supports.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an enum from the integer format used by the …","Returns the argument unchanged.","Retrieve the type of a given argument instance","","","The protocol ID","The interface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>WEnum</code> into a result","Whether this message is a destructor","Map some closure on all Fd contained in this message, to …","The message sent by the server describing the error","","","","The name of the interface.","Name of this message","","The id of the object that caused the error","The interface of the object that caused the error","The opcode of the message.","","","","","A list that describes every request this interface …","","Returns true if the two interfaces are the same.","Returns true if the type of the argument is the same.","The id of the object that sent the message.","","Signature of the message","Minimum required version of the interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum supported version of the interface.","The version","","","","","","","","","","","","","","","","Client-side rust implementation of a Wayland protocol …","Server-side rust implementation of a Wayland protocol …","A Wayland client backend","An error generated when trying to act on an invalid …","The connection encountered an IO error","An error type representing the failure to load libwayland","A trait representing your data associated to an object","An ID representing a Wayland object","The connection encountered a protocol error","Guard for synchronizing event reading across multiple …","An error that can occur when using a Wayland connection","A weak handle to a <code>Backend</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to initialize a Wayland backend on the provided unix …","Access the Wayland socket FD for polling","Helper for accessing user data","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Dispatches the inner queue of this backend if necessary","Get the object ID for the <code>wl_display</code>","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Get a <code>WeakBackend</code> from this backend","","Dispatch an event for the associated object","Flush all pending outgoing requests to the server","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Access the object data associated with a given object ID","","Get the detailed protocol information about a wayland …","Interface of the represented object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Check if this is a null ID","Get the last error that occurred on this backend","Create a null object ID","Create a new reading guard","Return the protocol-level numerical ID of this object","","","","Attempt to read events from the Wayland socket","Sends a request to the server","Set the object data associated with a given object ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to upgrade this weak handle to a <code>Backend</code>","","","A backend object that represents the state of a wayland …","A trait representing your data associated to a client","An ID representing a Wayland client","The connection has been closed by the server or client.","Holds the client credentials","Describes why a client has been disconnected from the …","A trait representing the handling of new bound globals","An Id representing a global","Description of a global advertised to some clients.","Main handle of a backend to the Wayland protocol","An error type representing the failure to initialize a …","An error generated when trying to act on an invalid …","Initialized failed due to an underlying I/O error","The wayland system library could not be loaded","A trait representing your data associated to an object","An ID representing a Wayland object","The server has sent the client a protocol error, …","A weak reference to a <code>Handle</code>","","","","","","","","","","","","","","","","","","","","","","","A global has been bound","","","","","","","","","","","","","","","","","","","","","","","Check if given client is allowed to interact with given …","","","","","","","","","","","","","","","","Creates a global of the specified interface and version …","Create a new object for given client","Helper for forwarding a Debug implementation of your …","Helper for forwarding a Debug implementation of your …","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Disables a global object that is currently active.","Whether the global is disabled.","Notification that the client is disconnected","Dispatches all pending messages from all clients.","Dispatches all pending messages from the specified client.","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Get a <code>WeakHandle</code> from this handle","","","","Flushes pending events destined for a client.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the id of the client which owns the object.","Retrive the <code>Credentials</code> of a client","Returns the data associated with a client.","Returns the handler which manages the visibility and …","Returns the data associated with an object.","Returns the data associated with an object as a <code>dyn Any</code>","gid of the client","Returns information about a global.","Returns a handle which represents the server side state of …","","","","Notification that the client was initialized","Initializes a connection with a client.","Returns the interface of this object.","The interface of the global.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns whether this object is a null object.","Kills the connection to a client.","Initialize a new Wayland backend","Returns an object id that represents a null object.","Retrieve the <code>ObjectId</code> for a wayland object given its …","Get the detailed protocol information about a wayland …","pid of the client","Returns the underlying file descriptor.","Posts a protocol error on an object. This will also …","Return the protocol-level numerical ID of this object","","","Removes a global object and free its ressources.","Dispatch a request for the associated object","Check if two object IDs are associated with the same client","Send an event to the client","Sets the data associated with some object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uid of the client","Try to upgrade this weak handle to a <code>Handle</code>","The version of the global that is advertised to clients.","Invokes a closure for all clients connected to this server","Invokes a closure for all objects owned by a client.","",""],"i":[0,0,0,0,0,0,0,0,0,3,5,3,5,3,5,0,3,5,0,0,0,3,5,2,3,5,0,0,3,5,3,5,10,10,0,0,2,65,6,9,66,15,65,2,3,5,22,6,7,8,9,10,11,66,15,65,2,3,5,22,6,7,8,9,10,11,66,15,65,2,3,5,22,6,7,8,9,10,11,66,15,65,2,3,5,22,6,7,8,9,10,11,22,6,2,3,5,6,7,8,9,10,11,2,3,5,6,7,8,9,10,11,8,2,3,5,9,10,15,15,22,65,15,2,3,5,5,22,22,6,7,8,8,9,10,11,11,66,15,65,2,3,5,22,6,7,8,9,10,10,11,5,65,65,7,7,66,15,65,2,3,5,22,6,7,8,9,10,11,66,15,65,2,3,5,22,6,7,8,9,10,11,15,2,3,5,22,6,7,8,9,10,11,66,15,65,2,3,5,22,6,7,8,9,10,11,10,6,9,8,65,66,15,22,6,65,8,8,9,8,11,15,15,22,65,0,3,9,66,6,6,2,3,5,6,7,8,9,10,11,5,22,8,11,66,15,65,2,3,5,22,6,7,8,9,10,11,66,15,65,2,3,5,22,6,7,8,9,10,11,66,15,65,2,3,5,22,6,7,8,9,10,11,66,65,15,22,7,0,0,0,67,68,69,70,71,72,73,74,75,76,77,78,0,0,0,0,33,0,0,0,33,0,0,0,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,33,36,37,38,33,39,36,37,38,33,39,37,42,45,45,45,37,37,45,45,45,45,45,37,36,45,37,45,36,36,37,38,42,41,41,33,33,39,39,36,37,38,42,41,33,33,33,39,37,36,37,36,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,45,36,37,36,37,36,41,33,39,42,37,37,36,37,38,33,39,36,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,38,79,80,0,0,0,59,0,0,0,0,0,0,0,0,54,54,0,0,59,0,52,50,51,49,55,60,63,54,56,59,57,52,50,51,49,55,60,63,54,56,59,57,58,52,50,51,49,55,60,63,54,56,59,57,52,50,51,49,55,60,63,54,56,59,57,58,54,52,50,51,49,55,56,57,52,50,51,49,55,56,57,49,49,53,58,62,53,49,63,62,60,60,53,58,62,53,58,62,53,58,62,53,58,62,53,58,62,49,52,50,51,60,53,58,62,52,52,50,51,49,55,60,63,54,54,56,56,59,57,52,50,51,49,55,60,63,54,56,59,57,49,49,49,49,49,49,57,49,60,52,50,51,62,49,52,63,52,50,51,49,55,60,63,54,56,59,57,52,50,51,49,55,60,63,54,56,59,57,52,50,51,49,55,60,63,54,56,59,57,52,50,51,49,55,60,63,54,56,59,57,53,58,62,52,49,60,52,49,49,57,60,49,52,54,56,49,53,52,49,49,52,50,51,49,55,56,57,52,54,56,52,50,51,49,55,60,63,54,56,59,57,52,50,51,49,55,60,63,54,56,59,57,52,50,51,49,55,60,63,54,56,59,57,57,55,63,49,49,81,82],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[2,2],[3,3],[[[5,[4,4]]],[[5,[4,4]]]],[6,6],[7,7],[8,8],[[[9,[4,4]]],[[9,[4,4]]]],[[[10,[4]]],[[10,[4]]]],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[2,2],12],[[3,3],12],[[[5,[13,14]],[5,[13,14]]],12],[[[9,[13,14]],[9,[13,14]]],12],[[[10,[13]],10],12],0,0,0,0,[[15,16],[[18,[17]]]],[[2,16],19],[[3,16],19],[[[5,[20,14]],16],19],[[[5,[21,21]],16],19],[[22,16],19],[[22,16],19],[[6,16],19],[[7,16],19],[[8,16],19],[[8,16],[[18,[17]]]],[[[9,[21,21]],16],19],[[[10,[21]],16],19],[[11,16],19],[[11,16],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[10,[[24,[23]]]]]],[[]],[5,3],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[10,[[18,[11]]]],0,[[9,29],9],0,0,0,0,0,0,0,0,0,0,[30],[30],0,0,0,0,[[22,22],12],[[3,3],12],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,[[35,[34]]]],[36,36],[37,37],[38,38],[33,33],[39,39],[[]],[[]],[[]],[[]],[[]],[40,[[18,[37,41]]]],[42,43],[[],1],[16,19],[36],[37,[[18,[44,33]]]],[37,36],[[[26,[45]]],[[18,[[26,[45]],[26,[45]]]]]],[[[27,[45]]],[[18,[[27,[45]],[27,[45]]]]]],[45,35],[[[28,[45]]],[[18,[[28,[45]],[28,[45]]]]]],[45,35],[37,38],[[36,36],12],[[27,37,[9,[36,46]]],[[35,[[27,[45]]]]]],[37,[[18,[33]]]],[[45,16],19],[[36,16],19],[[36,16],19],[[37,16],19],[[38,16],19],[[42,16],19],[[41,16],[[18,[17]]]],[[41,16],19],[[33,16],[[18,[17]]]],[[33,16],19],[[39,16],[[18,[17]]]],[[39,16],19],[[]],[[]],[[]],[[]],[[]],[47,33],[[]],[8,33],[[]],[[37,36],[[18,[[27,[45]],39]]]],[36],[[37,36],[[18,[7,39]]]],[36,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[45,12],[36,12],[37,[[35,[33]]]],[[],36],[37,[[18,[42,33]]]],[36,23],[30],[30],[30],[42,[[18,[44,33]]]],[[37,[9,[36,48]],[35,[[27,[45]]]],35],[[18,[36,39]]]],[[37,36,[27,[45]]],[[18,[39]]]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[38,[[35,[37]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[27,49,50,51,52],[[27,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[50,27,51],12],[54,[[35,[34]]]],[52,52],[50,50],[51,51],[49,49],[55,55],[56,56],[57,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,22,23,[27,[58]]],51],[[49,50,22,23,[27,[53]]],[[18,[52,56]]]],[16,19],[16,19],[16,19],[[50,52]],[[49,51]],0,[[50,59]],[60,[[61,[44]]]],[[60,50],[[61,[44]]]],[[[26,[53]]],[[18,[[26,[53]],[26,[53]]]]]],[[[26,[58]]],[[18,[[26,[58]],[26,[58]]]]]],[[[26,[62]]],[[18,[[26,[62]],[26,[62]]]]]],[[[27,[53]]],[[18,[[27,[53]],[27,[53]]]]]],[[[27,[58]]],[[18,[[27,[58]],[27,[58]]]]]],[[[27,[62]]],[[18,[[27,[62]],[27,[62]]]]]],[53,35],[58,35],[62,35],[[[28,[53]]],[[18,[[28,[53]],[28,[53]]]]]],[[[28,[58]]],[[18,[[28,[58]],[28,[58]]]]]],[[[28,[62]]],[[18,[[28,[62]],[28,[62]]]]]],[53,35],[58,35],[62,35],[49,55],[[52,52],12],[[50,50],12],[[51,51],12],[[60,[35,[50]]],61],[[53,16],19],[[58,16],19],[[62,16],19],[[52,16],19],[[52,16],19],[[50,16],19],[[51,16],19],[[49,16],19],[[55,16],19],[[[60,[21]],16],19],[[63,16],19],[[54,16],[[18,[17]]]],[[54,16],19],[[56,16],19],[[56,16],[[18,[17]]]],[[59,16],19],[[57,16],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,52],[[18,[50,56]]]],[[49,50],[[18,[57,56]]]],[[49,50],[[18,[[27,[62]],56]]]],[[49,51],[[18,[[27,[58]],56]]]],[[49,52],[[18,[[27,[53]],56]]]],[[49,52],[[18,[[27,[1]],56]]]],0,[[49,51],[[18,[63,56]]]],[60,49],[52],[50],[51],[50],[[49,40,[27,[62]]],[[61,[50]]]],[52,22],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[[[26,[25]]],[[26,[1,25]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[27,[[27,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[28,[[28,[1]]]],[53,12],[58,12],[62,12],[52,12],[[49,50,59]],[[],[[18,[60,54]]]],[[],52],[[49,50,22,23],[[18,[52,56]]]],[[49,52],[[18,[7,56]]]],0,[60,43],[[49,52,23,64]],[52,23],[30],[30],[[49,51]],[[27,49,50,[9,[52,46]]],[[35,[[27,[53]]]]]],[[52,52],12],[[49,[9,[52,48]]],[[18,[56]]]],[[49,52,[27,[53]]],[[18,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,[55,[[35,[49]]]],0,[[49,29]],[[49,50,29],[[18,[56]]]],0,0],"p":[[8,"Any"],[4,"AllowNull"],[4,"ArgumentType"],[8,"Clone"],[4,"Argument"],[3,"MessageDesc"],[3,"ObjectInfo"],[3,"ProtocolError"],[3,"Message"],[4,"WEnum"],[3,"WEnumError"],[15,"bool"],[8,"PartialEq"],[8,"AsRawFd"],[3,"wl_interface"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Display"],[8,"Debug"],[3,"Interface"],[15,"u32"],[8,"TryFrom"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"FnMut"],[3,"Demand"],[3,"String"],[3,"TypeId"],[4,"WaylandError"],[8,"Error"],[4,"Option"],[3,"ObjectId"],[3,"Backend"],[3,"WeakBackend"],[3,"InvalidId"],[3,"UnixStream"],[3,"NoWaylandLib"],[3,"ReadEventsGuard"],[3,"BorrowedFd"],[15,"usize"],[8,"ObjectData"],[3,"OwnedFd"],[3,"Error"],[6,"RawFd"],[3,"Handle"],[3,"ClientId"],[3,"GlobalId"],[3,"ObjectId"],[8,"ObjectData"],[4,"InitError"],[3,"WeakHandle"],[3,"InvalidId"],[3,"Credentials"],[8,"GlobalHandler"],[4,"DisconnectReason"],[3,"Backend"],[6,"Result"],[8,"ClientData"],[3,"GlobalInfo"],[3,"CString"],[19,"wl_argument"],[3,"wl_message"],[13,"Int"],[13,"Uint"],[13,"Fixed"],[13,"Str"],[13,"Object"],[13,"NewId"],[13,"Array"],[13,"Fd"],[13,"Str"],[13,"Object"],[13,"Value"],[13,"Unknown"],[13,"Io"],[13,"Protocol"],[13,"ProtocolError"],[13,"Io"]]},\
"wayland_client":{"doc":"Interface for interacting with the Wayland protocol, …","t":[13,13,4,3,8,4,16,3,13,13,13,8,3,3,3,16,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,14,14,11,11,11,11,11,11,11,11,10,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,0,11,11,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,0,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,10,12,12,12,12,12,12,3,3,13,3,8,3,13,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,0,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,7,4,4,4,13,13,13,13,13,13,17,13,13,3,3,3,13,13,13,13,13,3,3,13,13,13,13,13,13,4,3,13,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,5,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,19,3,3,12,12,12,12,12,12,12,12,12,12,12,12,13,4,3,4,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,13,17,17,4,17,17,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,17,17,4,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,4,17,17,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,17,17,17,17,17,17,17,17,17,17,17,17,13,4,4,13,13,17,17,17,17,17,17,13,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,18,13,3,4,13,18,18,17,17,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,17,17,17,17,17,17,4,4,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,4,4,13,13,13,17,17,17,17,17,17,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,17,17,17,17,4,13,4,13,13,13,13,13,17,17,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,13,4,13,4,13,4,13,13,13,13,17,17,13,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,13,13,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,13,13,13,3,13,13,13,13,18,17,17,13,4,13,4,4,13,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,4,13,13,13,13,4,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,4,4,13,13,13,13,13,13,17,17,17,17,13,13,4,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,17,17,17,17,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,17,17,17,17,4,13,13,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,3,17,17,17,17,4,4,13,13,13,18,13,13,18,17,17,17,17,17,17,17,17,13,4,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,4,4,13,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,18,18,18,13,13,13,17,17,17,17,17,17,4,13,4,18,18,13,18,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,3,13,18,13,13,13,13,13,13,13,13,18,18,18,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,4,17,17,17,17,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,4,4,13,17,17,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,4,4,13,13,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,13,13,13,17,17,17,17,13,4,4,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,17,17,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Backend","BadMessage","ConnectError","Connection","Dispatch","DispatchError","Event","EventQueue","InvalidFd","NoCompositor","NoWaylandLib","Proxy","QueueFreezeGuard","QueueHandle","QueueProxyData","Request","Unknown","Value","WEnum","Weak","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","backend","backend","blocking_dispatch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect_to_env","data","data_as_any","delegate_dispatch","delegate_noop","destroyed","dispatch_pending","display","downgrade","drop","eq","eq","eq","event","event","event_created_child","event_created_child","event_created_child","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from","from_backend","from_id","from_socket","get_object_data","globals","handle","hash","id","id","inert","interface","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","is_alive","make_data","new_event_queue","object_data","object_info","parse_event","poll_dispatch_pending","prepare_read","prepare_read","protocol","protocol_error","provide","provide","roundtrip","roundtrip","send_constructor","send_request","send_request","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udata","upgrade","version","write_request","0","interface","opcode","sender_id","0","0","Backend","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","Protocol","ReadEventsGuard","WaylandError","WeakBackend","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connection_fd","data_as_any","debug","destroyed","dispatch_inner_queue","display_id","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","downgrade","eq","event","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_data","hash","info","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","io_lifetimes","is","is_null","last_error","null","prepare_read","protocol","protocol_id","provide","provide","provide","read","send_request","set_data","smallvec","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","0","0","ANONYMOUS_INTERFACE","AllowNull","Argument","ArgumentType","Array","Array","Fd","Fd","Fixed","Fixed","INLINE_ARGS","Int","Int","Interface","Message","MessageDesc","NewId","NewId","No","Object","Object","ObjectInfo","ProtocolError","Str","Str","Uint","Uint","Unknown","Value","WEnum","WEnumError","Yes","a","arg_interfaces","args","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_ptr","child_interface","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","eq","eq","eq","eq","event_count","events","events","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_type","h","i","id","interface","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_destructor","map_fd","message","n","name","name","name","name","o","object_id","object_interface","opcode","provide","provide","request_count","requests","requests","s","same_interface","same_type","sender_id","signature","signature","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","u","version","version","version","wl_argument","wl_interface","wl_message","0","0","0","0","0","0","0","0","0","0","0","0","Backend","BindError","Global","GlobalError","GlobalList","GlobalListContents","InvalidId","NotPresent","UnsupportedVersion","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_list","contents","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","name","provide","provide","registry","registry_queue_init","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","with_list","0","0","__interfaces","wl_buffer","wl_callback","wl_compositor","wl_data_device","wl_data_device_manager","wl_data_offer","wl_data_source","wl_display","wl_keyboard","wl_output","wl_pointer","wl_region","wl_registry","wl_seat","wl_shell","wl_shell_surface","wl_shm","wl_shm_pool","wl_subcompositor","wl_subsurface","wl_surface","wl_touch","WL_BUFFER_INTERFACE","WL_CALLBACK_INTERFACE","WL_COMPOSITOR_INTERFACE","WL_DATA_DEVICE_INTERFACE","WL_DATA_DEVICE_MANAGER_INTERFACE","WL_DATA_OFFER_INTERFACE","WL_DATA_SOURCE_INTERFACE","WL_DISPLAY_INTERFACE","WL_KEYBOARD_INTERFACE","WL_OUTPUT_INTERFACE","WL_POINTER_INTERFACE","WL_REGION_INTERFACE","WL_REGISTRY_INTERFACE","WL_SEAT_INTERFACE","WL_SHELL_INTERFACE","WL_SHELL_SURFACE_INTERFACE","WL_SHM_INTERFACE","WL_SHM_POOL_INTERFACE","WL_SUBCOMPOSITOR_INTERFACE","WL_SUBSURFACE_INTERFACE","WL_SURFACE_INTERFACE","WL_TOUCH_INTERFACE","wl_buffer_events","wl_buffer_interface","wl_buffer_requests","wl_callback_events","wl_callback_interface","wl_compositor_interface","wl_compositor_requests","wl_data_device_events","wl_data_device_interface","wl_data_device_manager_interface","wl_data_device_manager_requests","wl_data_device_requests","wl_data_offer_events","wl_data_offer_interface","wl_data_offer_requests","wl_data_source_events","wl_data_source_interface","wl_data_source_requests","wl_display_events","wl_display_interface","wl_display_requests","wl_keyboard_events","wl_keyboard_interface","wl_keyboard_requests","wl_output_events","wl_output_interface","wl_output_requests","wl_pointer_events","wl_pointer_interface","wl_pointer_requests","wl_region_interface","wl_region_requests","wl_registry_events","wl_registry_interface","wl_registry_requests","wl_seat_events","wl_seat_interface","wl_seat_requests","wl_shell_interface","wl_shell_requests","wl_shell_surface_events","wl_shell_surface_interface","wl_shell_surface_requests","wl_shm_events","wl_shm_interface","wl_shm_pool_interface","wl_shm_pool_requests","wl_shm_requests","wl_subcompositor_interface","wl_subcompositor_requests","wl_subsurface_interface","wl_subsurface_requests","wl_surface_events","wl_surface_interface","wl_surface_requests","wl_touch_events","wl_touch_interface","wl_touch_requests","Destroy","EVT_RELEASE_OPCODE","EVT_RELEASE_SINCE","Event","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Release","Request","WlBuffer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","Event","Request","WlCallback","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","callback_data","CreateRegion","CreateSurface","Event","REQ_CREATE_REGION_OPCODE","REQ_CREATE_REGION_SINCE","REQ_CREATE_SURFACE_OPCODE","REQ_CREATE_SURFACE_SINCE","Request","WlCompositor","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_region","create_surface","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","DataOffer","Drop","EVT_DATA_OFFER_OPCODE","EVT_DATA_OFFER_SINCE","EVT_DROP_OPCODE","EVT_DROP_SINCE","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","EVT_SELECTION_OPCODE","EVT_SELECTION_SINCE","Enter","Error","Event","Leave","Motion","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_SELECTION_OPCODE","REQ_SET_SELECTION_SINCE","REQ_START_DRAG_OPCODE","REQ_START_DRAG_SINCE","Release","Request","Role","Selection","SetSelection","StartDrag","WlDataDevice","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","release","send_constructor","send_request","set_selection","start_drag","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","id","id","id","serial","surface","time","x","x","y","y","icon","origin","serial","serial","source","source","Ask","Copy","CreateDataSource","DndAction","Event","GetDataDevice","Move","None","REQ_CREATE_DATA_SOURCE_OPCODE","REQ_CREATE_DATA_SOURCE_SINCE","REQ_GET_DATA_DEVICE_OPCODE","REQ_GET_DATA_DEVICE_SINCE","Request","WlDataDeviceManager","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","create_data_source","data","difference","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","get_data_device","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_event","partial_cmp","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","version","write_request","seat","Accept","Action","Destroy","EVT_ACTION_OPCODE","EVT_ACTION_SINCE","EVT_OFFER_OPCODE","EVT_OFFER_SINCE","EVT_SOURCE_ACTIONS_OPCODE","EVT_SOURCE_ACTIONS_SINCE","Error","Event","Finish","InvalidAction","InvalidActionMask","InvalidFinish","InvalidOffer","Offer","REQ_ACCEPT_OPCODE","REQ_ACCEPT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FINISH_OPCODE","REQ_FINISH_SINCE","REQ_RECEIVE_OPCODE","REQ_RECEIVE_SINCE","REQ_SET_ACTIONS_OPCODE","REQ_SET_ACTIONS_SINCE","Receive","Request","SetActions","SourceActions","WlDataOffer","accept","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","finish","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","receive","send_constructor","send_request","set_actions","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","dnd_action","mime_type","source_actions","dnd_actions","fd","mime_type","mime_type","preferred_action","serial","Action","Cancelled","Destroy","DndDropPerformed","DndFinished","EVT_ACTION_OPCODE","EVT_ACTION_SINCE","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_DND_DROP_PERFORMED_OPCODE","EVT_DND_DROP_PERFORMED_SINCE","EVT_DND_FINISHED_OPCODE","EVT_DND_FINISHED_SINCE","EVT_SEND_OPCODE","EVT_SEND_SINCE","EVT_TARGET_OPCODE","EVT_TARGET_SINCE","Error","Event","InvalidActionMask","InvalidSource","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_OFFER_OPCODE","REQ_OFFER_SINCE","REQ_SET_ACTIONS_OPCODE","REQ_SET_ACTIONS_SINCE","Request","Send","SetActions","Target","WlDataSource","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","offer","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_actions","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","dnd_action","fd","mime_type","mime_type","dnd_actions","mime_type","DeleteId","EVT_DELETE_ID_OPCODE","EVT_DELETE_ID_SINCE","EVT_ERROR_OPCODE","EVT_ERROR_SINCE","Error","Error","Event","GetRegistry","Implementation","InvalidMethod","InvalidObject","NoMemory","REQ_GET_REGISTRY_OPCODE","REQ_GET_REGISTRY_SINCE","REQ_SYNC_OPCODE","REQ_SYNC_SINCE","Request","Sync","WlDisplay","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_registry","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","sync","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","code","id","message","object_id","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_KEYMAP_OPCODE","EVT_KEYMAP_SINCE","EVT_KEY_OPCODE","EVT_KEY_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MODIFIERS_OPCODE","EVT_MODIFIERS_SINCE","EVT_REPEAT_INFO_OPCODE","EVT_REPEAT_INFO_SINCE","Enter","Event","Key","KeyState","Keymap","KeymapFormat","Leave","Modifiers","NoKeymap","Pressed","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Released","RepeatInfo","Request","WlKeyboard","XkbV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","release","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","delay","fd","format","group","key","keys","mods_depressed","mods_latched","mods_locked","rate","serial","serial","serial","serial","size","state","surface","surface","time","Current","Description","Done","EVT_DESCRIPTION_OPCODE","EVT_DESCRIPTION_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_GEOMETRY_OPCODE","EVT_GEOMETRY_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_SCALE_OPCODE","EVT_SCALE_SINCE","Event","Flipped","Flipped180","Flipped270","Flipped90","Geometry","HorizontalBgr","HorizontalRgb","Mode","Mode","Name","None","Normal","Preferred","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Scale","Subpixel","Transform","Unknown","VerticalBgr","VerticalRgb","WlOutput","_180","_270","_90","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","data","difference","empty","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","hash","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","release","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","version","write_request","description","factor","flags","height","make","model","name","physical_height","physical_width","refresh","subpixel","transform","width","x","y","Axis","Axis","AxisDiscrete","AxisSource","AxisSource","AxisStop","AxisValue120","Button","ButtonState","Continuous","EVT_AXIS_DISCRETE_OPCODE","EVT_AXIS_DISCRETE_SINCE","EVT_AXIS_OPCODE","EVT_AXIS_SINCE","EVT_AXIS_SOURCE_OPCODE","EVT_AXIS_SOURCE_SINCE","EVT_AXIS_STOP_OPCODE","EVT_AXIS_STOP_SINCE","EVT_AXIS_VALUE120_OPCODE","EVT_AXIS_VALUE120_SINCE","EVT_BUTTON_OPCODE","EVT_BUTTON_SINCE","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","Enter","Error","Event","Finger","Frame","HorizontalScroll","Leave","Motion","Pressed","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_CURSOR_OPCODE","REQ_SET_CURSOR_SINCE","Release","Released","Request","Role","SetCursor","VerticalScroll","Wheel","WheelTilt","WlPointer","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","data","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_id","hash","hash","hash","hash","id","inert","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","partial_cmp","release","send_constructor","send_request","set_cursor","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","write_request","axis","axis","axis","axis","axis_source","button","discrete","serial","serial","serial","state","surface","surface","surface_x","surface_x","surface_y","surface_y","time","time","time","time","value","value120","hotspot_x","hotspot_y","serial","surface","Add","Destroy","Event","REQ_ADD_OPCODE","REQ_ADD_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SUBTRACT_OPCODE","REQ_SUBTRACT_SINCE","Request","Subtract","WlRegion","add","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","subtract","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","height","height","width","width","x","x","y","y","Bind","EVT_GLOBAL_OPCODE","EVT_GLOBAL_REMOVE_OPCODE","EVT_GLOBAL_REMOVE_SINCE","EVT_GLOBAL_SINCE","Event","Global","GlobalRemove","REQ_BIND_OPCODE","REQ_BIND_SINCE","Request","WlRegistry","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","bind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","interface","name","name","version","id","name","Capabilities","Capability","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","Error","Event","GetKeyboard","GetPointer","GetTouch","Keyboard","MissingCapability","Name","Pointer","REQ_GET_KEYBOARD_OPCODE","REQ_GET_KEYBOARD_SINCE","REQ_GET_POINTER_OPCODE","REQ_GET_POINTER_SINCE","REQ_GET_TOUCH_OPCODE","REQ_GET_TOUCH_SINCE","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Touch","WlSeat","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","data","difference","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","get_keyboard","get_pointer","get_touch","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","release","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","version","write_request","capabilities","name","Error","Event","GetShellSurface","REQ_GET_SHELL_SURFACE_OPCODE","REQ_GET_SHELL_SURFACE_SINCE","Request","Role","WlShell","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_shell_surface","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","surface","Bottom","BottomLeft","BottomRight","Configure","Default","Driver","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_PING_OPCODE","EVT_PING_SINCE","EVT_POPUP_DONE_OPCODE","EVT_POPUP_DONE_SINCE","Event","Fill","FullscreenMethod","Inactive","Left","Move","None","Ping","Pong","PopupDone","REQ_MOVE_OPCODE","REQ_MOVE_SINCE","REQ_PONG_OPCODE","REQ_PONG_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","REQ_SET_CLASS_OPCODE","REQ_SET_CLASS_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_POPUP_OPCODE","REQ_SET_POPUP_SINCE","REQ_SET_TITLE_OPCODE","REQ_SET_TITLE_SINCE","REQ_SET_TOPLEVEL_OPCODE","REQ_SET_TOPLEVEL_SINCE","REQ_SET_TRANSIENT_OPCODE","REQ_SET_TRANSIENT_SINCE","Request","Resize","Resize","Right","Scale","SetClass","SetFullscreen","SetMaximized","SetPopup","SetTitle","SetToplevel","SetTransient","Top","TopLeft","TopRight","Transient","WlShellSurface","_move","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","data","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_id","from_iter","from_iter","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_all","is_empty","is_empty","not","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","pong","remove","remove","resize","send_constructor","send_request","set","set","set_class","set_fullscreen","set_maximized","set_popup","set_title","set_toplevel","set_transient","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","edges","height","serial","width","class_","edges","flags","flags","framerate","method","output","output","parent","parent","seat","seat","seat","serial","serial","serial","serial","title","x","x","y","y","Abgr1555","Abgr16161616","Abgr16161616f","Abgr2101010","Abgr4444","Abgr8888","Argb1555","Argb16161616","Argb16161616f","Argb2101010","Argb4444","Argb8888","Axbxgxrx106106106106","Ayuv","Bgr233","Bgr565","Bgr565A8","Bgr888","Bgr888A8","Bgra1010102","Bgra4444","Bgra5551","Bgra8888","Bgrx1010102","Bgrx4444","Bgrx5551","Bgrx8888","Bgrx8888A8","C8","CreatePool","EVT_FORMAT_OPCODE","EVT_FORMAT_SINCE","Error","Event","Format","Format","Gr1616","Gr88","InvalidFd","InvalidFormat","InvalidStride","Nv12","Nv15","Nv16","Nv21","Nv24","Nv42","Nv61","P010","P012","P016","P210","Q401","Q410","R16","R8","REQ_CREATE_POOL_OPCODE","REQ_CREATE_POOL_SINCE","Request","Rg1616","Rg88","Rgb332","Rgb565","Rgb565A8","Rgb888","Rgb888A8","Rgba1010102","Rgba4444","Rgba5551","Rgba8888","Rgbx1010102","Rgbx4444","Rgbx5551","Rgbx8888","Rgbx8888A8","Uyvy","Vuy101010","Vuy888","Vyuy","WlShm","X0l0","X0l2","Xbgr1555","Xbgr16161616","Xbgr16161616f","Xbgr2101010","Xbgr4444","Xbgr8888","Xbgr8888A8","Xrgb1555","Xrgb16161616","Xrgb16161616f","Xrgb2101010","Xrgb4444","Xrgb8888","Xrgb8888A8","Xvyu1216161616","Xvyu16161616","Xvyu2101010","Xyuv8888","Y0l0","Y0l2","Y210","Y212","Y216","Y410","Y412","Y416","Yuv410","Yuv411","Yuv420","Yuv42010bit","Yuv4208bit","Yuv422","Yuv444","Yuyv","Yvu410","Yvu411","Yvu420","Yvu422","Yvu444","Yvyu","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","create_pool","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","format","fd","size","CreateBuffer","Destroy","Event","REQ_CREATE_BUFFER_OPCODE","REQ_CREATE_BUFFER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","Request","Resize","WlShmPool","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_buffer","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","resize","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","format","height","offset","size","stride","width","BadSurface","Destroy","Error","Event","GetSubsurface","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_SUBSURFACE_OPCODE","REQ_GET_SUBSURFACE_SINCE","Request","WlSubcompositor","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_subsurface","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","parent","surface","BadSurface","Destroy","Error","Event","PlaceAbove","PlaceBelow","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_PLACE_ABOVE_OPCODE","REQ_PLACE_ABOVE_SINCE","REQ_PLACE_BELOW_OPCODE","REQ_PLACE_BELOW_SINCE","REQ_SET_DESYNC_OPCODE","REQ_SET_DESYNC_SINCE","REQ_SET_POSITION_OPCODE","REQ_SET_POSITION_SINCE","REQ_SET_SYNC_OPCODE","REQ_SET_SYNC_SINCE","Request","SetDesync","SetPosition","SetSync","WlSubsurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","place_above","place_below","send_constructor","send_request","set_desync","set_position","set_sync","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","sibling","sibling","x","y","Attach","Commit","Damage","DamageBuffer","Destroy","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","Enter","Error","Event","Frame","InvalidOffset","InvalidScale","InvalidSize","InvalidTransform","Leave","Offset","REQ_ATTACH_OPCODE","REQ_ATTACH_SINCE","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_DAMAGE_BUFFER_OPCODE","REQ_DAMAGE_BUFFER_SINCE","REQ_DAMAGE_OPCODE","REQ_DAMAGE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FRAME_OPCODE","REQ_FRAME_SINCE","REQ_OFFSET_OPCODE","REQ_OFFSET_SINCE","REQ_SET_BUFFER_SCALE_OPCODE","REQ_SET_BUFFER_SCALE_SINCE","REQ_SET_BUFFER_TRANSFORM_OPCODE","REQ_SET_BUFFER_TRANSFORM_SINCE","REQ_SET_INPUT_REGION_OPCODE","REQ_SET_INPUT_REGION_SINCE","REQ_SET_OPAQUE_REGION_OPCODE","REQ_SET_OPAQUE_REGION_SINCE","Request","SetBufferScale","SetBufferTransform","SetInputRegion","SetOpaqueRegion","WlSurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","attach","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","commit","damage","damage_buffer","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","frame","from","from","from","from","from_id","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","offset","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_buffer_scale","set_buffer_transform","set_input_region","set_opaque_region","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","output","output","buffer","height","height","region","region","scale","transform","width","width","x","x","x","x","y","y","y","y","Cancel","Down","EVT_CANCEL_OPCODE","EVT_CANCEL_SINCE","EVT_DOWN_OPCODE","EVT_DOWN_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","EVT_ORIENTATION_OPCODE","EVT_ORIENTATION_SINCE","EVT_SHAPE_OPCODE","EVT_SHAPE_SINCE","EVT_UP_OPCODE","EVT_UP_SINCE","Event","Frame","Motion","Orientation","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Shape","Up","WlTouch","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","release","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","id","id","id","id","id","major","minor","orientation","serial","serial","surface","time","time","time","x","x","y","y"],"q":["wayland_clientwayland_client::DispatchError","","","","wayland_client::WEnum","","wayland_client::backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::backend::WaylandError","","wayland_client::backend::protocolwayland_client::backend::protocol::Argument","","","","","","","","wayland_client::backend::protocol::ArgumentType","","wayland_client::backend::protocol::WEnum","","wayland_client::globals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::globals::GlobalError","","wayland_client::protocol","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::__interfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_callback","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_callback::Event","wayland_client::protocol::wl_compositor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_data_device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_data_device::Event","","","","","","","","","","wayland_client::protocol::wl_data_device::Request","","","","","","wayland_client::protocol::wl_data_device_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_data_device_manager::Request","wayland_client::protocol::wl_data_offer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_data_offer::Event","","","wayland_client::protocol::wl_data_offer::Request","","","","","","wayland_client::protocol::wl_data_source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_data_source::Event","","","","wayland_client::protocol::wl_data_source::Request","","wayland_client::protocol::wl_display","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_display::Event","","","","wayland_client::protocol::wl_keyboard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_keyboard::Event","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_outputwayland_client::protocol::wl_output::Event","","","","","","","","","","","","","","","wayland_client::protocol::wl_pointer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_pointer::Event","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_pointer::Request","","","","wayland_client::protocol::wl_region","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_region::Request","","","","","","","","wayland_client::protocol::wl_registry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_registry::Event","","","","wayland_client::protocol::wl_registry::Request","","wayland_client::protocol::wl_seat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_seat::Event","","wayland_client::protocol::wl_shell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_shell::Request","wayland_client::protocol::wl_shell_surfacewayland_client::protocol::wl_shell_surface::Event","","","","wayland_client::protocol::wl_shell_surface::Request","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_shmwayland_client::protocol::wl_shm::Event","wayland_client::protocol::wl_shm::Request","","wayland_client::protocol::wl_shm_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_shm_pool::Request","","","","","","wayland_client::protocol::wl_subcompositor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_subcompositor::Request","","wayland_client::protocol::wl_subsurface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_subsurface::Request","","","","wayland_client::protocol::wl_surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_surface::Event","","wayland_client::protocol::wl_surface::Request","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_touch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_client::protocol::wl_touch::Event","","","","","","","","","","","","","","","","",""],"d":["The backend generated an error","The received message does not match the specification for …","An error when trying to establish a Wayland connection.","The Wayland connection","A trait providing an implementation for handling events a …","Wayland dispatching error","The event enum for this interface","An event queue","<code>WAYLAND_SOCKET</code> was set but contained garbage","Could not find wayland compositor","The wayland library could not be loaded.","Trait representing a Wayland interface","A handle that temporarily pauses event processing on an …","A handle representing an <code>EventQueue</code>, used to assign …","The <code>ObjectData</code> implementation used by Wayland proxies, …","The request enum for this interface","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","A weak handle to a Wayland object","","","","","","","","","","","","","","","","","","","Backend reexports","Access the backend associated with this object","Get the <code>Backend</code> underlying this <code>Connection</code>","Block waiting for events and dispatch them","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to connect to the Wayland server following the …","Access the user-data associated with this object","","A helper macro which delegates a set of <code>Dispatch</code> …","A helper macro which delegates a set of <code>Dispatch</code> …","","Dispatch pending events","Get the <code>WlDisplay</code> associated with this connection","Creates a weak handle to this object","","","","","Called when an event from the server is processed","","Method used to initialize the user-data of objects created …","Method used to initialize the user-data of objects created …","Macro used to override <code>Dispatch::event_created_child()</code>","Flush pending outgoing events to the server","Flush pending outgoing events to the server","","","","","","","","","","","","Temporarily block processing on this queue.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an enum from the integer format used by the …","","Returns the argument unchanged.","Returns the argument unchanged.","Wrap an existing <code>Backend</code> into a <code>Connection</code>","Create an object proxy from its ID","Initialize a Wayland connection from an already existing …","Get the object data for a given object ID","Helpers for handling the initialization of an app","Get a <code>QueueHandle</code> for this event queue","","The ID of this object","The underlying <code>ObjectId</code>","Create an inert object proxy","The interface description","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>WEnum</code> into a result","Checks if the Wayland object associated with this proxy is …","Create an object data associated with this event queue","Create a new event queue","Access the raw data associated with this object.","Get the protocol information related to given object ID","Parse a event for this object","Attempt to dispatch events from this queue, registering …","Start a synchronized read from the socket","Start a synchronized read from the socket","Generated protocol definitions","Retrieve the protocol error that occured on the connection …","","","Synchronous roundtrip","Do a roundtrip to the server","Send a request for this object that creates another object.","Send a request for this object.","Send a request associated with the provided object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user data associated with this object","Try to upgrade with weak handle back into a full proxy.","The version of this object","Serialize a request for this object","","The interface of the target object","The opcode number","The id of the target object","","","A Wayland client backend","An error generated when trying to act on an invalid …","The connection encountered an IO error","An error type representing the failure to load libwayland","A trait representing your data associated to an object","An ID representing a Wayland object","The connection encountered a protocol error","Guard for synchronizing event reading across multiple …","An error that can occur when using a Wayland connection","A weak handle to a <code>Backend</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to initialize a Wayland backend on the provided unix …","Access the Wayland socket FD for polling","Helper for accessing user data","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Dispatches the inner queue of this backend if necessary","Get the object ID for the <code>wl_display</code>","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Get a <code>WeakBackend</code> from this backend","","Dispatch an event for the associated object","Flush all pending outgoing requests to the server","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Access the object data associated with a given object ID","","Get the detailed protocol information about a wayland …","Interface of the represented object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Check if this is a null ID","Get the last error that occurred on this backend","Create a null object ID","Create a new reading guard","Types and utilities for manipulating the Wayland protocol","Return the protocol-level numerical ID of this object","","","","Attempt to read events from the Wayland socket","Sends a request to the server","Set the object data associated with a given object ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to upgrade this weak handle to a <code>Backend</code>","","","Special interface representing an anonymous object","Describes whether an argument may have a null value.","Enum of possible argument of the protocol","Enum of possible argument types as recognized by the wire","Vec","Vec","A file descriptor argument. Represented by a [<code>RawFd</code>].","A file descriptor argument. Represented by a [<code>RawFd</code>].","A signed fixed point number with 1/256 precision","A signed fixed point number with 1/256 precision","Number of arguments that are stocked inline in a <code>Message</code> …","An integer argument. Represented by a <code>i32</code>.","An integer argument. Represented by a <code>i32</code>.","Description of wayland interface.","Represents a message that has been sent from some object.","Wire metadata of a given message","Id of a newly created wayland object","Id of a newly created wayland object","Null values are forbidden.","Id of a wayland object","Id of a wayland object","Description of the protocol-level information of an object","A protocol error","A string. This is represented as a <code>CString</code> in a message.","CString","An unsigned integer argument. Represented by a <code>u32</code>.","An unsigned integer argument. Represented by a <code>u32</code>.","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","Error representing an unknown numeric variant for a <code>WEnum</code>","Null values are allowed.","","The interfaces passed into this message as arguments.","The arguments of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A C representation of this interface that may be used to …","The child interface created from this message.","","","","","","","","","","","","","","","","","The error code associated with the error","","","","","","","A list that describes every event this interface supports.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve the type of a given argument instance","","","The protocol ID","The interface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this message is a destructor","Map some closure on all Fd contained in this message, to …","The message sent by the server describing the error","","","","The name of the interface.","Name of this message","","The id of the object that caused the error","The interface of the object that caused the error","The opcode of the message.","","","","","A list that describes every request this interface …","","Returns true if the two interfaces are the same.","Returns true if the type of the argument is the same.","The id of the object that sent the message.","","Signature of the message","Minimum required version of the interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum supported version of the interface.","The version","","","","","","","","","","","","","","","","The backend generated an error","An error that occurs when a binding a global fails.","Description of a global.","An error that may occur when initializing the global list.","A helper for global initialization.","A container representing the current contents of the list …","An invalid object id was acted upon.","The requested global was not found in the registry.","The requested version of the global is not supported.","","","","","","","","","","","Binds a global, returning a new protocol object associated …","","","","","","","","","","","","","Get a copy of the contents of the list of globals.","Access the contents of the list of globals","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The interface of the global.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The name of the global.","","","Returns the <code>WlRegistry</code> protocol object.","Initialize a new event queue with its associated registry …","","","","","","","","","","","","","","","","","","","","The advertised version of the global.","Access the list of globals","","","","content for a wl_surface","callback object","the compositor singleton","data transfer device","data transfer interface","offer to transfer data","offer to transfer data","core global object","keyboard input device","compositor output region","pointer input device","region interface","global registry object","group of input devices","create desktop-style surfaces","desktop-style metadata interface","shared memory support","a shared memory pool","sub-surface compositing","sub-surface interface to a wl_surface","an onscreen surface","touchscreen input device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy a buffer","The wire opcode for this event","The minimal object version supporting this event","","The wire opcode for this request","The minimal object version supporting this request","compositor releases buffer","","content for a wl_surface","","","","","","","","","","","","","","","","","destroy a buffer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","done event","The wire opcode for this event","The minimal object version supporting this event","","","callback object","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","request-specific data for the callback","create new region","create new surface","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the compositor singleton","","","","","","","","","","","","","","","","create new region","create new surface","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","introduce a new wl_data_offer","end drag-and-drop session successfully","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","initiate drag-and-drop session","","","end drag-and-drop session","drag-and-drop session motion","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","destroy data device","","given wl_surface has another role","advertise new selection","copy data to the selection","start drag-and-drop operation","data transfer device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","destroy data device","","","copy data to the selection","start drag-and-drop operation","","","","","","","","","","","","","","","","","","the new data_offer object","source data_offer object","selection data_offer object","serial number of the enter event","client surface entered","timestamp with millisecond granularity","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","drag-and-drop icon surface","surface where the drag originates","serial number of the implicit grab on the origin","serial number of the event that triggered this request","data source for the eventual transfer","data source for the selection","ask action","copy action","create a new data source","drag and drop actions","","create a new data device","move action","no action","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","data transfer interface","Returns the set containing all flags.","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","create a new data source","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","create a new data device","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","seat associated with the data device","accept one of the offered mime types","notify the selected action","destroy data offer","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the offer will no longer be used","action argument has an invalid value","action mask contains invalid values","finish request was called untimely","offer doesn’t accept this request","advertise offered mime type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","request that the data is transferred","","set the available/preferred drag-and-drop actions","notify the source-side available actions","offer to transfer data","accept one of the offered mime types","","","","","","","","","","","","","","","","","","","","","","","","destroy data offer","","","","the offer will no longer be used","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","request that the data is transferred","","","set the available/preferred drag-and-drop actions","","","","","","","","","","","","","","","","","","action selected by the compositor","offered mime type","actions offered by the data source","actions supported by the destination client","file descriptor for data transfer","mime type accepted by the client","mime type desired by receiver","action preferred by the destination client","serial number of the accept request","notify the selected action","selection was cancelled","destroy the data source","the drag-and-drop operation physically finished","the drag-and-drop operation concluded","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","action mask contains invalid values","source doesn’t accept this request","add an offered mime type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","send the data","set the available drag-and-drop actions","a target accepts an offered mime type","offer to transfer data","","","","","","","","","","","","","","","","","","","","","","","","destroy the data source","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","add an offered mime type","Get the opcode number of this message","Get the opcode number of this message","","","","","set the available drag-and-drop actions","","","","","","","","","","","","","","","","","","action selected by the compositor","file descriptor for the data","mime type accepted by the target","mime type for the data","actions supported by the data source","mime type offered by the data source","acknowledge object ID deletion","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","global error values","fatal error event","","get global registry object","implementation error in compositor","method doesn’t exist on the specified interface or …","server couldn’t find object","server is out of memory","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","asynchronous roundtrip","core global object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get global registry object","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","asynchronous roundtrip","","","","","","","","","","","","","","","","","","error code","deleted object ID","error description","object where the error occurred","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enter event","","key event","physical key state","keyboard mapping","keyboard mapping format","leave event","modifier and group state","no keymap; client must understand how to interpret the raw …","key is pressed","The wire opcode for this request","The minimal object version supporting this request","release the keyboard object","key is not pressed","repeat rate and delay","","keyboard input device","libxkbcommon compatible, null-terminated string; to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","release the keyboard object","","","","","","","","","","","","","","","","","","","","","","","","","delay in milliseconds since key down until repeating starts","keymap file descriptor","keymap format","keyboard layout","key that produced the event","the currently pressed keys","depressed modifiers","latched modifiers","locked modifiers","the rate of repeating keys in characters per second","serial number of the enter event","serial number of the leave event","serial number of the key event","serial number of the modifiers event","keymap size, in bytes","physical state of the key","surface gaining keyboard focus","surface that lost keyboard focus","timestamp with millisecond granularity","indicates this is the current mode","human-readable description of this output","sent all information about output","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","180 degree flip around a vertical axis","flip and rotate 180 degrees counter-clockwise","flip and rotate 270 degrees counter-clockwise","flip and rotate 90 degrees counter-clockwise","properties of the output","horizontal BGR","horizontal RGB","mode information","advertise available modes for the output","name of this output","no geometry","no transform","indicates this is the preferred mode","The wire opcode for this request","The minimal object version supporting this request","release the output object","","output scaling properties","subpixel geometry information","transform from framebuffer to output","unknown geometry","vertical BGR","vertical RGB","compositor output region","180 degrees counter-clockwise","270 degrees counter-clockwise","90 degrees counter-clockwise","Returns the set containing all flags.","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","","release the output object","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","output description","scaling factor of output","bitfield of mode flags","height of the mode in hardware units","textual description of the manufacturer","textual description of the model","output name","height in millimeters of the output","width in millimeters of the output","vertical refresh rate in mHz","subpixel orientation of the output","transform that maps framebuffer to output","width of the mode in hardware units","x position within the global compositor space","y position within the global compositor space","axis types","axis event","axis click event","axis source types","axis source event","axis stop event","axis high-resolution scroll event","pointer button event","physical button state","continuous coordinate space","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enter event","","","finger on a touch surface","end of a pointer event sequence","horizontal axis","leave event","pointer motion event","the button is pressed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","release the pointer object","the button is not pressed","","given wl_surface has another role","set the pointer surface","vertical axis","a physical wheel rotation","a physical wheel tilt","pointer input device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","release the pointer object","","","set the pointer surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","axis type","the axis stopped with this event","axis type","axis type","source of the axis event","button that produced the event","number of steps","serial number of the enter event","serial number of the leave event","serial number of the button event","physical state of the button","surface entered by the pointer","surface left by the pointer","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","length of vector in surface-local coordinate space","scroll distance as fraction of 120","surface-local x coordinate","surface-local y coordinate","serial number of the enter event","pointer surface","add rectangle to region","destroy region","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","subtract rectangle from region","region interface","add rectangle to region","","","","","","","","","","","","","","","","","destroy region","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","subtract rectangle from region","","","","","","","","","","","","","rectangle height","rectangle height","rectangle width","rectangle width","region-local x coordinate","region-local x coordinate","region-local y coordinate","region-local y coordinate","bind an object to the display","The wire opcode for this event","The wire opcode for this event","The minimal object version supporting this event","The minimal object version supporting this event","","announce global object","announce removal of global object","The wire opcode for this request","The minimal object version supporting this request","","global registry object","","","","","","","","bind an object to the display","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","interface implemented by the object","numeric name of the global object","numeric name of the global object","interface version","bounded object","unique numeric name of the object","seat capabilities changed","seat capability bitmask","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","wl_seat error values","","return keyboard object","return pointer object","return touch object","the seat has one or more keyboards","get_pointer, get_keyboard or get_touch called on seat …","unique identifier for this seat","the seat has pointer devices","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","release the seat object","","the seat has touch devices","group of input devices","Returns the set containing all flags.","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","return keyboard object","return pointer object","return touch object","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","release the seat object","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","capabilities of the seat","seat identifier","","","create a shell surface from a surface","The wire opcode for this request","The minimal object version supporting this request","","given wl_surface has another role","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","create a shell surface from a surface","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","surface to be given the shell surface role","bottom edge","bottom and left edges","bottom and right edges","suggest resize","no preference, apply default policy","switch output mode to the smallest mode that can fit the …","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","no upscaling, center on output and add black borders to …","different method to set the surface fullscreen","do not set keyboard focus","left edge","start an interactive move","no edge","ping client","respond to a ping event","popup interaction is done","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","edge values for resizing","start an interactive resize","right edge","scale, preserve the surface’s aspect ratio and center on …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","top edge","top and left edges","top and right edges","details of transient behaviour","desktop-style metadata interface","start an interactive move","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","","respond to a ping event","Removes the specified flags in-place.","Removes the specified flags in-place.","start an interactive resize","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","how the surface was resized","new height of the surface","serial number of the ping","new width of the surface","surface class","which edge or corner is being dragged","transient surface behavior","transient surface behavior","framerate in mHz","method for resolving size conflict","output on which the surface is to be fullscreen","output on which the surface is to be maximized","parent surface","parent surface","seat whose pointer is used","seat whose pointer is used","seat whose pointer is used","serial number of the ping event","serial number of the implicit grab on the pointer","serial number of the implicit grab on the pointer","serial number of the implicit grab on the pointer","surface title","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …","[63:0] A:B:G:R 16:16:16:16 little endian","[63:0] A:B:G:R 16:16:16:16 little endian","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …","[63:0] A:R:G:B 16:16:16:16 little endian","[63:0] A:R:G:B 16:16:16:16 little endian","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian","[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …","8-bit BGR format, [7:0] B:G:R 2:3:3","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian","","24-bit BGR format, [23:0] B:G:R little endian","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian","","8-bit color index format, [7:0] C","create a shm pool","The wire opcode for this event","The minimal object version supporting this event","wl_shm error values","","pixel formats","pixel format description","[31:0] G:R 16:16 little endian","[15:0] G:R 8:8 little endian","mmapping the file descriptor failed","buffer format is not known","invalid size or stride during pool or buffer creation","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane","2x2 subsampled Cr:Cb plane","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane","non-subsampled Cr:Cb plane","non-subsampled Cb:Cr plane","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane","2x2 subsampled Cr:Cb plane 10 bits per channel","2x2 subsampled Cr:Cb plane 12 bits per channel","2x2 subsampled Cr:Cb plane 16 bits per channel","2x1 subsampled Cr:Cb plane, 10 bit per channel","","","[15:0] R little endian","[7:0] R","The wire opcode for this request","The minimal object version supporting this request","","[31:0] R:G 16:16 little endian","[15:0] R:G 8:8 little endian","8-bit RGB format, [7:0] R:G:B 3:3:2","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian","","24-bit RGB format, [23:0] R:G:B little endian","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …","Y followed by U then V, 10:10:10. Non-linear modifier only","[23:0] Cr:Cb:Y 8:8:8 little endian","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …","shared memory support","[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …","[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …","[63:0] x:B:G:R 16:16:16:16 little endian","[63:0] x:B:G:R 16:16:16:16 little endian","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian","","[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] X:Cr:Y:Cb 16:16:16:16 little endian","[31:0] X:Cr:Y:Cb 2:10:10:10 little endian","[31:0] X:Y:Cb:Cr 8:8:8:8 little endian","[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …","[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …","[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …","[31:0] A:Cr:Y:Cb 2:10:10:10 little endian","[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] A:Cr:Y:Cb 16:16:16:16 little endian","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …","","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create a shm pool","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","buffer pixel format","file descriptor for the pool","pool size, in bytes","create a buffer from the pool","destroy the pool","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","change the size of the pool mapping","a shared memory pool","","","","","","","","","","","","","","","","create a buffer from the pool","","destroy the pool","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","change the size of the pool mapping","","","","","","","","","","","","","","","buffer pixel format","buffer height, in pixels","buffer byte offset within the pool","new size of the pool, in bytes","number of bytes from the beginning of one row to the …","buffer width, in pixels","the to-be sub-surface is invalid","unbind from the subcompositor interface","","","give a surface the role sub-surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","sub-surface compositing","","","","","","","","","","","","","","","","","","","","","","","","unbind from the subcompositor interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","give a surface the role sub-surface","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","the parent surface","the surface to be turned into a sub-surface","wl_surface is not a sibling or the parent","remove sub-surface interface","","","restack the sub-surface","restack the sub-surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","sub-surface interface to a wl_surface","","","","","","","","","","","","","","","","","","","","","","","","remove sub-surface interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","restack the sub-surface","restack the sub-surface","","","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","","","","","","","","","","","","","","","","","","the reference surface","the reference surface","x coordinate in the parent surface","y coordinate in the parent surface","set the surface contents","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","delete surface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","surface enters an output","wl_surface error values","","request a frame throttling hint","buffer offset is invalid","buffer scale value is invalid","buffer size is invalid","buffer transform value is invalid","surface leaves an output","set the surface contents offset","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","an onscreen surface","","","","","","","","","set the surface contents","","","","","","","","","","","","","","","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","","delete surface","","","","","","","","request a frame throttling hint","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","set the surface contents offset","Get the opcode number of this message","Get the opcode number of this message","","","","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","","","","","","","","","","","","","","","","","","output entered by the surface","output left by the surface","buffer of surface contents","height of damage rectangle","height of damage rectangle","opaque region of the surface","input region of the surface","positive scale for interpreting buffer contents","transform for interpreting buffer contents","width of damage rectangle","width of damage rectangle","surface-local x coordinate","surface-local x coordinate","buffer-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","buffer-local y coordinate","surface-local y coordinate","touch session cancelled","touch down event and beginning of a touch sequence","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","end of touch frame event","update of touch point coordinates","update orientation of touch point","The wire opcode for this request","The minimal object version supporting this request","release the touch object","","update shape of touch point","end of a touch event sequence","touchscreen input device","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","release the touch object","","","","","","","","","","","","","","","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","length of the major axis in surface-local coordinates","length of the minor axis in surface-local coordinates","angle between major axis and positive surface y-axis in …","serial number of the touch down event","serial number of the touch up event","surface touched","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate"],"i":[7,7,0,0,0,0,15,0,13,13,13,0,0,0,0,15,10,10,0,0,5,9,18,3,13,21,10,7,12,5,9,18,3,13,21,10,7,12,0,15,3,5,5,9,18,3,13,21,10,7,12,5,9,18,3,13,21,10,7,12,9,3,10,12,9,3,10,12,3,15,18,0,0,18,5,3,15,21,10,12,12,162,18,162,162,0,5,3,5,9,18,3,13,13,21,10,7,7,12,9,5,9,18,3,13,21,10,10,7,7,12,3,15,3,3,0,5,12,15,12,15,15,5,9,18,3,13,21,10,7,12,5,9,18,3,13,21,10,7,12,5,9,18,3,13,21,10,7,12,5,9,18,3,13,21,10,7,12,10,15,9,3,15,3,15,5,5,3,0,3,13,7,5,3,15,15,3,7,9,3,10,12,13,7,5,9,18,3,13,21,10,7,12,5,9,18,3,13,21,10,7,12,5,9,18,3,13,21,10,7,12,18,12,15,15,163,164,164,164,165,166,0,0,28,0,0,0,28,0,0,0,19,4,2,45,51,28,34,19,4,2,45,51,28,34,19,4,2,45,51,28,34,19,4,2,45,51,28,34,28,19,4,2,28,34,19,4,2,28,34,4,45,26,26,26,4,4,26,26,26,26,26,4,19,26,4,26,19,19,4,2,45,51,51,28,28,34,34,19,4,2,45,51,28,28,28,34,4,19,4,19,19,4,2,45,51,28,34,19,4,2,45,51,28,34,19,4,2,45,51,28,34,19,4,2,45,51,28,34,0,26,19,4,19,4,0,19,51,28,34,45,4,4,0,19,4,2,28,34,19,51,28,34,19,4,2,45,51,28,34,19,4,2,45,51,28,34,19,4,2,45,51,28,34,2,167,168,0,0,0,0,56,57,56,57,56,57,0,56,57,0,0,0,56,57,55,56,57,0,0,56,57,56,57,10,10,0,0,55,169,58,25,170,59,169,55,56,57,36,58,41,46,25,40,170,59,169,55,56,57,36,58,41,46,25,40,170,59,169,55,56,57,36,58,41,46,25,40,170,59,169,55,56,57,36,58,41,46,25,40,36,58,55,56,57,58,41,46,25,40,55,56,57,58,41,46,25,40,46,55,56,57,25,59,59,36,169,59,55,56,57,57,36,36,58,41,46,46,25,40,40,170,59,169,55,56,57,36,58,41,46,25,40,57,169,169,41,41,170,59,169,55,56,57,36,58,41,46,25,40,170,59,169,55,56,57,36,58,41,46,25,40,59,55,56,57,36,58,41,46,25,40,170,59,169,55,56,57,36,58,41,46,25,40,58,25,46,169,170,59,36,58,169,46,46,25,46,40,59,59,36,169,0,56,25,170,58,58,55,56,57,58,41,46,25,40,57,36,46,40,170,59,169,55,56,57,36,58,41,46,25,40,170,59,169,55,56,57,36,58,41,46,25,40,170,59,169,55,56,57,36,58,41,46,25,40,170,169,59,36,41,0,0,0,171,172,173,174,175,176,177,178,179,180,165,166,67,0,0,0,0,0,67,63,63,61,67,63,64,65,61,67,63,64,65,61,61,67,63,64,65,61,67,63,64,65,64,64,65,61,64,61,67,67,63,63,64,65,61,67,67,67,63,64,65,64,61,67,63,64,65,61,67,63,64,65,61,67,63,64,65,61,67,63,64,65,64,67,63,61,0,67,64,67,63,61,67,63,64,65,61,67,63,64,65,61,67,63,64,65,64,65,181,182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,0,0,0,0,0,72,0,0,71,72,70,71,72,70,70,71,72,70,71,72,70,70,70,70,70,70,70,71,72,70,71,72,70,70,70,70,70,71,72,70,71,72,70,71,72,70,71,72,70,70,71,72,70,70,70,70,71,72,70,71,72,70,71,72,70,70,70,75,0,0,0,0,0,74,75,73,74,75,73,73,74,75,73,74,75,73,73,73,73,73,73,74,75,73,74,75,73,73,73,73,73,74,75,73,74,75,73,74,75,73,74,75,73,73,74,75,73,73,73,73,74,75,73,74,75,73,74,75,73,73,73,183,79,79,0,0,0,0,0,0,0,79,80,76,79,80,76,76,79,80,76,79,80,76,76,76,76,76,76,76,76,79,80,76,79,80,76,76,76,76,76,79,80,76,79,80,76,79,80,76,79,80,76,76,79,80,76,76,76,76,79,80,76,79,80,76,79,80,76,76,76,85,85,0,0,0,0,0,0,0,0,0,0,0,0,85,0,0,85,85,0,0,0,0,0,0,84,0,82,85,84,84,0,82,84,85,81,82,84,85,81,81,82,84,85,81,82,84,85,81,82,81,82,81,82,81,82,81,81,82,84,85,81,82,84,85,81,81,82,81,81,81,82,84,85,81,82,84,85,81,82,84,85,81,82,84,85,81,81,84,85,81,82,81,81,81,81,81,82,81,82,82,84,85,81,82,84,85,81,82,84,85,81,81,81,184,185,186,185,185,187,185,187,185,187,188,188,188,189,188,189,87,87,90,0,0,90,87,87,0,0,0,0,0,0,87,87,90,91,88,87,90,91,88,88,87,87,87,87,87,87,87,87,90,91,88,87,90,91,88,87,88,87,88,87,87,87,88,88,87,87,87,88,88,87,87,87,87,87,87,90,91,88,87,90,91,88,87,87,87,88,87,88,87,88,88,87,88,87,87,87,90,91,88,87,90,91,88,87,90,91,88,87,90,91,88,87,87,87,88,90,91,88,87,87,88,88,87,87,87,87,87,88,87,87,87,90,91,88,87,90,91,88,87,90,91,88,87,88,88,190,95,96,95,0,0,0,0,0,0,0,0,95,94,94,94,94,96,0,0,0,0,0,0,0,0,0,0,95,0,95,96,0,93,94,95,96,93,94,95,96,93,93,94,95,96,93,94,95,96,93,94,93,94,93,94,93,93,94,93,93,93,94,95,96,93,94,95,96,93,93,94,93,93,93,94,95,96,93,94,95,96,93,94,95,96,93,94,95,96,93,93,95,96,93,94,93,93,93,93,94,93,94,94,95,96,93,94,95,96,93,94,95,96,93,93,93,191,192,193,194,195,196,195,194,196,100,100,99,100,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,98,99,0,0,0,0,0,0,0,100,99,100,0,98,99,100,86,98,99,100,86,86,98,99,100,86,98,99,100,86,98,86,98,86,98,86,86,98,86,86,98,99,100,86,98,99,100,86,86,98,86,86,86,98,99,100,86,98,99,100,86,98,99,100,86,98,99,100,86,86,86,99,100,86,98,86,86,86,98,86,98,98,99,100,86,98,99,100,86,98,99,100,86,86,86,197,198,199,198,200,201,103,0,0,0,0,0,103,0,102,101,101,101,101,0,0,0,0,0,102,0,101,102,103,20,101,102,103,20,20,101,102,103,20,101,102,103,20,101,20,101,20,101,20,101,20,20,101,102,103,20,101,102,103,20,20,20,101,20,20,20,101,102,103,20,101,102,103,20,101,102,103,20,101,102,103,20,20,102,103,20,101,20,20,20,101,20,101,101,102,103,20,101,102,103,20,101,102,103,20,20,20,202,203,202,202,0,0,0,0,0,0,0,0,0,0,0,0,108,0,108,0,108,0,108,108,105,106,0,0,107,106,108,0,0,105,105,106,107,108,104,105,106,107,108,104,104,105,106,107,108,104,105,106,107,108,104,105,106,104,105,106,104,105,106,104,105,106,104,104,105,106,107,108,104,105,106,107,108,104,104,105,106,104,104,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,105,106,107,108,104,104,107,108,104,105,106,104,104,104,105,106,104,105,105,106,106,107,108,104,105,106,107,108,104,105,106,107,108,104,104,104,204,205,205,206,207,208,206,206,206,204,208,209,207,206,205,207,208,209,207,109,114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,112,112,112,112,114,111,111,0,114,114,111,112,109,0,0,113,0,114,0,0,111,111,111,0,112,112,112,109,111,112,109,113,114,110,111,112,109,113,114,110,110,109,109,109,109,109,109,109,111,112,109,113,114,110,111,112,109,113,114,110,111,112,109,110,111,112,109,110,111,112,109,109,109,110,109,109,111,112,109,110,110,109,111,112,109,109,109,109,109,113,114,110,111,112,109,113,114,110,109,109,109,110,109,111,112,109,110,110,109,110,109,109,111,112,109,113,114,110,111,112,109,113,114,110,111,112,109,113,114,110,111,112,109,113,114,110,109,109,109,110,113,114,110,111,112,109,110,109,110,110,109,109,109,109,111,112,109,110,109,111,111,112,112,109,109,113,114,110,111,112,109,113,114,110,111,112,109,113,114,110,109,110,110,210,211,212,212,213,213,214,213,213,212,213,213,212,213,213,0,121,121,0,121,121,121,121,0,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,0,0,119,121,118,121,121,117,0,0,0,0,120,117,0,116,120,118,119,119,0,116,117,118,119,120,121,115,116,117,118,119,120,121,115,115,116,117,118,119,120,121,115,116,117,118,119,120,121,115,116,117,118,119,115,116,117,118,119,115,116,117,118,119,115,116,117,118,119,115,115,116,117,118,119,120,121,115,116,117,118,119,120,121,115,115,116,117,118,119,115,115,115,116,117,118,119,120,121,115,116,117,118,119,120,121,115,116,117,118,119,120,121,115,116,117,118,119,120,121,115,115,120,121,115,116,117,118,119,115,115,115,115,116,117,118,119,115,116,116,117,117,118,118,119,119,120,121,115,116,117,118,119,120,121,115,116,117,118,119,120,121,115,115,115,215,216,217,218,219,220,217,221,222,220,220,221,222,221,223,221,223,223,220,215,216,215,218,224,224,224,224,122,122,0,0,0,0,0,0,0,0,122,0,77,122,123,77,122,123,77,77,122,123,77,122,123,77,77,77,77,77,77,77,122,123,77,122,123,77,77,77,77,77,122,123,77,122,123,77,122,123,77,122,123,77,77,122,123,77,77,77,77,77,122,123,77,122,123,77,122,123,77,77,77,225,226,225,226,225,226,225,226,124,0,0,0,0,0,125,125,0,0,0,0,124,125,68,124,125,68,68,68,124,125,68,124,125,68,68,68,68,68,68,124,125,68,124,125,68,68,68,68,68,124,125,68,124,125,68,124,125,68,124,125,68,68,124,125,68,68,68,68,124,125,68,124,125,68,124,125,68,68,68,227,227,228,227,229,229,129,0,0,0,0,0,0,0,128,128,128,126,127,129,126,0,0,0,0,0,0,0,0,128,0,126,0,126,126,127,128,129,92,126,127,128,129,92,92,126,126,126,126,126,126,126,126,127,128,129,92,126,127,128,129,92,126,127,92,126,127,92,126,127,126,126,92,126,126,126,127,92,92,126,126,126,126,126,126,127,128,129,92,126,127,128,129,92,126,126,126,92,126,92,92,92,126,127,92,92,126,92,126,126,126,127,128,129,92,126,127,128,129,92,126,127,128,129,92,126,127,128,129,92,126,126,126,92,128,129,92,126,127,92,126,92,92,126,126,126,126,126,127,92,126,126,126,127,127,128,129,92,126,127,128,129,92,126,127,128,129,92,126,92,92,230,231,0,0,133,0,0,0,132,0,132,133,134,131,132,133,134,131,131,132,133,134,131,132,133,134,131,132,131,132,131,132,131,132,131,131,132,133,134,131,132,133,134,131,131,131,132,131,131,131,132,133,134,131,132,133,134,131,132,133,134,131,132,133,134,131,131,133,134,131,132,131,131,132,131,132,132,133,134,131,132,133,134,131,132,133,134,131,131,131,232,136,136,136,140,138,138,0,0,0,0,0,0,0,138,0,137,136,139,136,140,139,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,136,138,139,139,139,139,139,139,139,136,136,136,0,0,135,136,137,136,137,138,139,140,135,136,137,138,139,140,135,135,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,137,138,139,140,135,136,137,138,139,140,135,136,137,138,135,136,137,138,135,136,137,138,136,137,136,137,135,136,137,136,137,136,137,138,135,135,136,137,136,136,136,136,136,137,137,137,137,137,138,139,140,135,136,137,138,139,140,135,136,137,136,137,136,137,135,136,137,136,137,138,135,135,136,137,135,136,137,136,137,136,137,138,139,140,135,136,137,138,139,140,135,136,137,138,139,140,135,136,137,138,139,140,135,136,137,136,137,136,137,135,139,140,135,136,137,138,135,136,137,135,135,135,136,137,135,135,135,135,135,135,135,136,137,136,137,136,137,136,137,138,135,136,137,136,136,137,137,138,138,139,140,135,136,137,138,139,140,135,136,137,138,139,140,135,136,137,135,135,233,233,234,233,235,236,237,238,239,239,239,240,237,238,241,236,238,242,241,236,238,243,237,238,237,238,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,145,0,0,0,0,0,146,143,143,142,142,142,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,0,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,142,143,145,146,141,142,143,145,146,141,141,142,143,145,146,141,142,143,145,146,141,142,143,141,142,143,141,142,143,141,141,142,143,141,141,142,143,145,146,141,142,143,145,146,141,141,142,143,141,141,141,142,143,145,146,141,142,143,145,146,141,142,143,145,146,141,142,143,145,146,141,141,145,146,141,142,143,141,141,142,143,141,142,142,143,143,145,146,141,142,143,145,146,141,142,143,145,146,141,141,141,244,245,245,147,147,0,0,0,0,0,0,0,0,147,0,147,148,144,147,148,144,144,147,148,144,147,148,144,144,144,144,144,144,144,144,147,148,144,147,148,144,144,144,144,144,147,148,144,147,148,144,147,148,144,147,148,144,144,147,148,144,144,144,144,144,147,148,144,147,148,144,147,148,144,144,144,246,246,246,247,246,246,150,151,0,0,151,0,0,0,0,0,0,150,151,152,149,150,151,152,149,149,150,151,152,149,150,151,152,149,150,149,150,149,150,149,149,150,149,149,150,151,152,149,150,151,152,149,149,149,150,149,149,149,150,151,152,149,150,151,152,149,150,151,152,149,150,151,152,149,149,151,152,149,150,149,149,150,149,150,150,151,152,149,150,151,152,149,150,151,152,149,149,149,248,248,154,155,0,0,155,155,0,0,0,0,0,0,0,0,0,0,0,0,0,155,155,155,0,154,155,156,153,154,155,156,153,153,154,155,156,153,154,155,156,153,154,153,154,153,154,153,153,154,153,153,154,155,156,153,154,155,156,153,153,154,153,153,153,154,155,156,153,154,155,156,153,154,155,156,153,154,155,156,153,153,155,156,153,154,153,153,153,153,153,153,153,154,153,154,154,155,156,153,154,155,156,153,154,155,156,153,153,153,249,250,251,251,158,158,158,158,158,0,0,0,0,159,0,0,158,157,157,157,157,159,158,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,158,158,158,158,0,157,158,159,78,157,158,159,78,78,78,157,158,159,78,157,158,159,78,157,78,157,78,157,78,78,78,78,78,157,78,78,157,158,159,78,78,157,158,159,78,78,157,78,78,78,157,158,159,78,157,158,159,78,157,158,159,78,157,158,159,78,78,78,158,159,78,157,78,78,78,78,78,78,157,78,157,157,158,159,78,157,158,159,78,157,158,159,78,78,78,252,253,254,255,256,257,258,259,260,255,256,254,255,256,261,254,255,256,261,161,161,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,161,161,161,0,0,160,0,161,161,0,160,161,130,160,161,130,130,160,161,130,160,161,130,130,130,130,130,130,160,161,130,160,161,130,130,130,130,130,160,161,130,160,161,130,160,161,130,160,161,130,130,160,161,130,130,130,130,130,160,161,130,160,161,130,160,161,130,130,130,262,263,264,265,266,265,265,266,262,263,262,262,263,264,262,264,262,264],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[],2],[3,4],[5,[[8,[6,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[3,3],[10,10],[[[12,[11]]],[[12,[11]]]],[[]],[[]],[[]],[[]],[[],[[8,[3,13]]]],[[],14],[[[18,[15,[0,[16,17]]]]],1],0,0,[[[18,[15,[0,[16,17]]]],19]],[5,[[8,[6,7]]]],[3,20],[[],12],[21],[[10,10],22],[[[12,[15]]],22],[[12,12],22],[[3,9]],[[[23,[[18,[15,[0,[16,17]]]]]],4,[25,[19,24]]],[[14,[[23,[26]]]]]],[[27,9],[[23,[26]]]],[[27,9],[[23,[26]]]],0,[5,[[8,[28]]]],[3,[[8,[28]]]],[[5,29],30],[[9,29],30],[[[18,[15,31]],29],30],[[3,29],30],[[13,29],30],[[13,29],30],[[[21,[31]],29],30],[[10,29],[[8,[32]]]],[[7,29],30],[[7,29],30],[[[12,[31]],29],30],[9,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,10],[28,7],[[]],[[]],[4,3],[[3,19],[[8,[34]]]],[35,[[8,[3,13]]]],[[3,19],[[8,[[23,[26]],34]]]],0,[5,9],[12],[[],19],[[[12,[15]]],19],[2],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[10,[[8,[40]]]],[[],22],[[9,[0,[16,17]]],[[23,[26]]]],[3,5],[[],[[14,[23]]]],[[3,19],[[8,[41,34]]]],[[3,[25,[19,24]]],[[8,[7]]]],[[5,42],[[44,[[8,[43,7]]]]]],[5,[[8,[45,28]]]],[3,[[8,[45,28]]]],0,[3,[[14,[46]]]],[47],[47],[5,[[8,[6,7]]]],[3,[[8,[6,28]]]],[[[23,[26]]],[[8,[15,34]]]],[[],[[8,[34]]]],[[3,[14,[[23,[26]]]]],[[8,[19,34]]]],[7,[[14,[48]]]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,[[[12,[15]]],[[8,[15,34]]]],[[],33],[3,[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[14,[48]]]],[19,19],[4,4],[2,2],[28,28],[34,34],[[]],[[]],[[]],[[]],[[]],[35,[[8,[4,51]]]],[45,52],[[],1],[29,[[8,[32]]]],[19],[4,[[8,[6,28]]]],[4,19],[[[38,[26,37]]],[[8,[[38,[37]],[38,[26,37]]]]]],[[[23,[26]]],[[8,[23,[23,[26]]]]]],[26,14],[[[39,[26]]],[[8,[39,[39,[26]]]]]],[26,14],[4,2],[[19,19],22],[[23,4,[25,[19,24]]],[[14,[[23,[26]]]]]],[4,[[8,[28]]]],[[26,29],[[8,[32]]]],[[19,29],[[8,[32]]]],[[19,29],[[8,[32]]]],[[4,29],[[8,[32]]]],[[2,29],[[8,[32]]]],[[45,29],[[8,[32]]]],[[51,29],[[8,[32]]]],[[51,29],[[8,[32]]]],[[28,29],[[8,[32]]]],[[28,29],[[8,[32]]]],[[34,29],[[8,[32]]]],[[34,29],[[8,[32]]]],[[]],[[]],[[]],[[]],[[]],[46,28],[53,28],[[]],[[]],[[4,19],[[8,[[23,[26]],34]]]],[19],[[4,19],[[8,[41,34]]]],[19,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],0,[26,22],[19,22],[4,[[14,[28]]]],[[],19],[4,[[8,[45,28]]]],0,[19,33],[47],[47],[47],[45,[[8,[6,28]]]],[[4,[25,[19,54]],[14,[[23,[26]]]],14],[[8,[19,34]]]],[[4,19,[23,[26]]],[[8,[34]]]],0,[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],49],[[],49],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[2,[[14,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[55,55],[56,56],[57,57],[58,58],[41,41],[46,46],[25,25],[40,40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[55,55],22],[[56,56],22],[[57,57],22],[[25,25],22],0,0,0,0,[[59,29],[[8,[32]]]],[[55,29],[[8,[32]]]],[[56,29],[[8,[32]]]],[[57,29],[[8,[32]]]],[[57,29],[[8,[32]]]],[[36,29],[[8,[32]]]],[[36,29],[[8,[32]]]],[[58,29],[[8,[32]]]],[[41,29],[[8,[32]]]],[[46,29],[[8,[32]]]],[[46,29],[[8,[32]]]],[[25,29],[[8,[32]]]],[[40,29],[[8,[32]]]],[[40,29],[[8,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,56],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],0,[[25,60],25],0,0,0,0,0,0,0,0,0,0,[47],[47],0,0,0,0,[[36,36],22],[[56,56],22],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],49],[[],49],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[61,9,[62,[33]]],[[8,[63]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,64],[[]],[65,[[66,[64]]]],[61,65],[[64,64],22],[[61,29],30],[[67,29],30],[[67,29],30],[[63,29],30],[[63,29],30],[[64,29],30],[[65,29],30],[[]],[34,67],[[]],[28,67],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],0,[47],[47],[61,68],[3,[[8,[67]]]],[67,[[14,[48]]]],[[]],[[],49],[[],49],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[],50],0,[[65,69]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[70,2],[[]],[[]],[[]],[[]],[[]],[[]],[70,70],[[]],[70,14],[70],[[70,70],22],[[70,12],22],[[71,29],30],[[72,29],30],[[70,29],30],[[]],[[]],[[]],[[3,19],[[8,[70,34]]]],[70,19],[2,70],[[],36],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[70,[[14,[23]]]],[71,27],[72,27],[[3,[25,[19,24]]],[[8,[7]]]],[[70,[23,[26]]],[[8,[15,34]]]],[70,[[8,[34]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[70,33],[[70,3],[[8,[34]]]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[73,2],[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[[]],[73,14],[[73,73],22],[[73,12],22],[[74,29],30],[[75,29],30],[[73,29],30],[[]],[[]],[[]],[[3,19],[[8,[73,34]]]],[73,19],[2,73],[[],36],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[73,[[14,[23]]]],[74,27],[75,27],[[3,[25,[19,24]]],[[8,[7]]]],[[73,[23,[26]]],[[8,[15,34]]]],[73,[[8,[34]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[73,33],[[73,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[76,2],[[]],[[]],[[]],[[]],[[]],[[]],[76,76],[[]],[[76,9,[0,[16,17]]],77],[[76,9,[0,[16,17]]],78],[76,14],[[76,76],22],[[76,12],22],[[79,29],30],[[80,29],30],[[76,29],30],[[]],[[]],[[]],[[3,19],[[8,[76,34]]]],[76,19],[2,76],[[],36],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[76,[[14,[23]]]],[79,27],[80,27],[[3,[25,[19,24]]],[[8,[7]]]],[[76,[23,[26]]],[[8,[15,34]]]],[76,[[8,[34]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[76,33],[[76,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[81,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,82],[81,81],[[]],[[]],[[82,82],83],[81,14],[[82,82],22],[[81,12],22],[[81,81],22],[[82,29],30],[[84,29],30],[[85,29],30],[[81,29],30],[[]],[[]],[[]],[[]],[[3,19],[[8,[81,34]]]],[82],[81,19],[2,81],[[],36],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[81,[[14,[23]]]],[84,27],[85,27],[[3,[25,[19,24]]],[[8,[7]]]],[[82,82],[[14,[83]]]],[81],[[81,[23,[26]]],[[8,[15,34]]]],[81,[[8,[34]]]],[[81,[14,[86]],33]],[[81,[14,[86]],78,[14,[78]],33]],[[]],[[]],[33,[[8,[82]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[81,33],[[81,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],87],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[88,2],[[87,87],87],[[87,87]],[[87,87],87],[[87,87]],[87,33],[[87,87],87],[[87,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,87],[88,88],[[]],[[]],[[87,87],83],[87,87],[[87,87],22],[[88,9,[0,[16,17]]],86],[88,14],[[87,87],87],[[],87],[[87,87],22],[[88,88],22],[[88,12],22],[[87,89]],[[87,29],30],[[87,29],30],[[87,29],30],[[87,29],30],[[87,29],30],[[90,29],30],[[91,29],30],[[88,29],30],[[]],[[]],[[]],[[]],[33,[[14,[87]]]],[33,87],[33,87],[[3,19],[[8,[88,34]]]],[89,87],[[88,92,9,[0,[16,17]]],81],[87],[88,19],[2,88],[[87,87]],[[],36],[[87,87],87],[[87,87],22],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[87,22],[87,22],[87,87],[88,[[14,[23]]]],[90,27],[91,27],[[3,[25,[19,24]]],[[8,[7]]]],[[87,87],[[14,[83]]]],[[87,87]],[[88,[23,[26]]],[[8,[15,34]]]],[88,[[8,[34]]]],[[87,87,22]],[[87,87],87],[[87,87]],[[87,87],87],[[]],[[]],[[87,87]],[[],8],[33,[[8,[87]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[87,87],87],[88,33],[[88,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[93,33,[14,[49]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[93,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[94,94],[93,93],[[]],[[]],[[94,94],83],[93,14],[93],[[94,94],22],[[93,93],22],[[93,12],22],[93],[[94,29],30],[[95,29],30],[[96,29],30],[[93,29],30],[[]],[[]],[[]],[[]],[[3,19],[[8,[93,34]]]],[94],[93,19],[2,93],[[],36],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[93,[[14,[23]]]],[95,27],[96,27],[[3,[25,[19,24]]],[[8,[7]]]],[[94,94],[[14,[83]]]],[[93,49,97]],[[93,[23,[26]]],[[8,[15,34]]]],[93,[[8,[34]]]],[[93,87,87]],[[]],[[]],[[],8],[33,[[8,[94]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[93,33],[[93,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[86,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,98],[86,86],[[]],[[]],[[98,98],83],[86,14],[86],[[98,98],22],[[86,86],22],[[86,12],22],[[98,29],30],[[99,29],30],[[100,29],30],[[86,29],30],[[]],[[]],[[]],[[]],[[3,19],[[8,[86,34]]]],[98],[86,19],[2,86],[[],36],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[86,[[14,[23]]]],[[86,49]],[99,27],[100,27],[[3,[25,[19,24]]],[[8,[7]]]],[[98,98],[[14,[83]]]],[[86,[23,[26]]],[[8,[15,34]]]],[86,[[8,[34]]]],[[86,87]],[[]],[[]],[[],8],[33,[[8,[98]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[86,33],[[86,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[20,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,101],[20,20],[[]],[[]],[[101,101],83],[20,14],[[101,101],22],[[20,20],22],[[20,12],22],[[101,29],30],[[102,29],30],[[103,29],30],[[20,29],30],[[]],[[]],[[]],[[]],[[3,19],[[8,[20,34]]]],[[20,9,[0,[16,17]]],68],[101],[20,19],[2,20],[[],36],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[20,[[14,[23]]]],[102,27],[103,27],[[3,[25,[19,24]]],[[8,[7]]]],[[101,101],[[14,[83]]]],[[20,[23,[26]]],[[8,[15,34]]]],[20,[[8,[34]]]],[[20,9,[0,[16,17]]],73],[[]],[[]],[33,[[8,[101]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[20,33],[[20,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[104,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,105],[106,106],[104,104],[[]],[[]],[[]],[[105,105],83],[[106,106],83],[104,14],[[105,105],22],[[106,106],22],[[104,12],22],[[104,104],22],[[105,29],30],[[106,29],30],[[107,29],30],[[108,29],30],[[104,29],30],[[]],[[]],[[]],[[]],[[]],[[3,19],[[8,[104,34]]]],[105],[106],[104,19],[2,104],[[],36],[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[104,[[14,[23]]]],[107,27],[108,27],[[3,[25,[19,24]]],[[8,[7]]]],[[105,105],[[14,[83]]]],[[106,106],[[14,[83]]]],[104],[[104,[23,[26]]],[[8,[15,34]]]],[104,[[8,[34]]]],[[]],[[]],[[]],[[],8],[33,[[8,[105]]]],[[],8],[33,[[8,[106]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[],50],[104,33],[[104,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],109],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[110,2],[[109,109],109],[[109,109]],[[109,109],109],[[109,109]],[109,33],[[109,109],109],[[109,109]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[111,111],[112,112],[109,109],[110,110],[[]],[[]],[[]],[[]],[[111,111],83],[[112,112],83],[[109,109],83],[109,109],[[109,109],22],[110,14],[[109,109],109],[[],109],[[111,111],22],[[112,112],22],[[109,109],22],[[110,110],22],[[110,12],22],[[109,89]],[[111,29],30],[[112,29],30],[[109,29],30],[[109,29],30],[[109,29],30],[[109,29],30],[[109,29],30],[[113,29],30],[[114,29],30],[[110,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[33,[[14,[109]]]],[33,109],[33,109],[[3,19],[[8,[110,34]]]],[89,109],[111],[112],[109],[110,19],[2,110],[[109,109]],[[],36],[[109,109],109],[[109,109],22],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[109,22],[109,22],[109,109],[110,[[14,[23]]]],[113,27],[114,27],[[3,[25,[19,24]]],[[8,[7]]]],[[111,111],[[14,[83]]]],[[112,112],[[14,[83]]]],[[109,109],[[14,[83]]]],[110],[[109,109]],[[110,[23,[26]]],[[8,[15,34]]]],[110,[[8,[34]]]],[[109,109,22]],[[109,109],109],[[109,109]],[[109,109],109],[[]],[[]],[[]],[[]],[[109,109]],[33,[[8,[111]]]],[[],8],[[],8],[33,[[8,[112]]]],[[],8],[33,[[8,[109]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[109,109],109],[110,33],[[110,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[115,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[116,116],[117,117],[118,118],[119,119],[115,115],[[]],[[]],[[]],[[]],[[]],[[116,116],83],[[117,117],83],[[118,118],83],[[119,119],83],[115,14],[[116,116],22],[[117,117],22],[[118,118],22],[[119,119],22],[[115,12],22],[[115,115],22],[[116,29],30],[[117,29],30],[[118,29],30],[[119,29],30],[[120,29],30],[[121,29],30],[[115,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,19],[[8,[115,34]]]],[116],[117],[118],[119],[115,19],[2,115],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[115,[[14,[23]]]],[120,27],[121,27],[[3,[25,[19,24]]],[[8,[7]]]],[[116,116],[[14,[83]]]],[[117,117],[[14,[83]]]],[[118,118],[[14,[83]]]],[[119,119],[[14,[83]]]],[115],[[115,[23,[26]]],[[8,[15,34]]]],[115,[[8,[34]]]],[[115,33,[14,[78]],54,54]],[[]],[[]],[[]],[[]],[[]],[33,[[8,[116]]]],[[],8],[33,[[8,[117]]]],[[],8],[[],8],[33,[[8,[118]]]],[[],8],[33,[[8,[119]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[115,33],[[115,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[77,54,54,54,54]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[77,2],[[]],[[]],[[]],[[]],[[]],[[]],[77,77],[[]],[77,14],[77],[[77,12],22],[[77,77],22],[[122,29],30],[[123,29],30],[[77,29],30],[[]],[[]],[[]],[[3,19],[[8,[77,34]]]],[77,19],[2,77],[[],36],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[77,[[14,[23]]]],[122,27],[123,27],[[3,[25,[19,24]]],[[8,[7]]]],[[77,[23,[26]]],[[8,[15,34]]]],[77,[[8,[34]]]],[[77,54,54,54,54]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[77,33],[[77,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[68,2],[[68,33,33,9,[0,[16,17]]],15],[[]],[[]],[[]],[[]],[[]],[[]],[68,68],[[]],[68,14],[[68,68],22],[[68,12],22],[[124,29],30],[[125,29],30],[[68,29],30],[[]],[[]],[[]],[[3,19],[[8,[68,34]]]],[68,19],[2,68],[[],36],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[68,[[14,[23]]]],[124,27],[125,27],[[3,[25,[19,24]]],[[8,[7]]]],[[68,[23,[26]]],[[8,[15,34]]]],[68,[[8,[34]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[68,33],[[68,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],126],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[92,2],[[126,126],126],[[126,126]],[[126,126],126],[[126,126]],[126,33],[[126,126],126],[[126,126]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[126,126],[127,127],[92,92],[[]],[[]],[[]],[[126,126],83],[[127,127],83],[126,126],[[126,126],22],[92,14],[[126,126],126],[[],126],[[126,126],22],[[127,127],22],[[92,92],22],[[92,12],22],[[126,89]],[[126,29],30],[[126,29],30],[[126,29],30],[[126,29],30],[[126,29],30],[[127,29],30],[[128,29],30],[[129,29],30],[[92,29],30],[[]],[[]],[[]],[[]],[[]],[33,[[14,[126]]]],[33,126],[33,126],[[3,19],[[8,[92,34]]]],[89,126],[[92,9,[0,[16,17]]],104],[[92,9,[0,[16,17]]],115],[[92,9,[0,[16,17]]],130],[126],[127],[92,19],[2,92],[[126,126]],[[],36],[[126,126],126],[[126,126],22],[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[126,22],[126,22],[126,126],[92,[[14,[23]]]],[128,27],[129,27],[[3,[25,[19,24]]],[[8,[7]]]],[[126,126],[[14,[83]]]],[[127,127],[[14,[83]]]],[92],[[126,126]],[[92,[23,[26]]],[[8,[15,34]]]],[92,[[8,[34]]]],[[126,126,22]],[[126,126],126],[[126,126]],[[126,126],126],[[]],[[]],[[]],[[126,126]],[[],8],[33,[[8,[126]]]],[33,[[8,[127]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[],50],[[126,126],126],[92,33],[[92,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[131,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132,132],[131,131],[[]],[[]],[[132,132],83],[131,14],[[132,132],22],[[131,12],22],[[131,131],22],[[132,29],30],[[133,29],30],[[134,29],30],[[131,29],30],[[]],[[]],[[]],[[]],[[3,19],[[8,[131,34]]]],[[131,78,9,[0,[16,17]]],135],[132],[131,19],[2,131],[[],36],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[131,[[14,[23]]]],[133,27],[134,27],[[3,[25,[19,24]]],[[8,[7]]]],[[132,132],[[14,[83]]]],[[131,[23,[26]]],[[8,[15,34]]]],[131,[[8,[34]]]],[[]],[[]],[33,[[8,[132]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[131,33],[[131,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[135,92,33]],[[],136],[[],137],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[135,2],[[136,136],136],[[137,137],137],[[136,136]],[[137,137]],[[136,136],136],[[137,137],137],[[136,136]],[[137,137]],[136,33],[137,33],[[136,136],136],[[137,137],137],[[136,136]],[[137,137]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[136,136],[137,137],[138,138],[135,135],[[]],[[]],[[]],[[]],[[136,136],83],[[137,137],83],[[138,138],83],[136,136],[137,137],[[136,136],22],[[137,137],22],[135,14],[[136,136],136],[[137,137],137],[[],136],[[],137],[[136,136],22],[[137,137],22],[[138,138],22],[[135,12],22],[[135,135],22],[[136,89]],[[137,89]],[[136,29],30],[[136,29],30],[[136,29],30],[[136,29],30],[[136,29],30],[[137,29],30],[[137,29],30],[[137,29],30],[[137,29],30],[[137,29],30],[[138,29],30],[[139,29],30],[[140,29],30],[[135,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[33,[[14,[136]]]],[33,[[14,[137]]]],[33,136],[33,137],[33,136],[33,137],[[3,19],[[8,[135,34]]]],[89,136],[89,137],[136],[137],[138],[135,19],[2,135],[[136,136]],[[137,137]],[[],36],[[136,136],136],[[137,137],137],[[136,136],22],[[137,137],22],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[136,22],[137,22],[136,22],[137,22],[136,136],[137,137],[135,[[14,[23]]]],[139,27],[140,27],[[3,[25,[19,24]]],[[8,[7]]]],[[136,136],[[14,[83]]]],[[137,137],[[14,[83]]]],[[138,138],[[14,[83]]]],[[135,33]],[[136,136]],[[137,137]],[[135,92,33,136]],[[135,[23,[26]]],[[8,[15,34]]]],[135,[[8,[34]]]],[[136,136,22]],[[137,137,22]],[[135,49]],[[135,138,33,[14,[110]]]],[[135,[14,[110]]]],[[135,92,33,78,54,54,137]],[[135,49]],[135],[[135,78,54,54,137]],[[136,136],136],[[137,137],137],[[136,136]],[[137,137]],[[136,136],136],[[137,137],137],[[]],[[]],[[]],[[]],[[136,136]],[[137,137]],[[],8],[33,[[8,[136]]]],[[],8],[33,[[8,[137]]]],[[],8],[33,[[8,[138]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[136,136],136],[[137,137],137],[135,33],[[135,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[141,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[142,142],[143,143],[141,141],[[]],[[]],[[]],[[142,142],83],[[143,143],83],[[141,97,54,9,[0,[16,17]]],144],[141,14],[[142,142],22],[[143,143],22],[[141,141],22],[[141,12],22],[[142,29],30],[[143,29],30],[[145,29],30],[[146,29],30],[[141,29],30],[[]],[[]],[[]],[[]],[[]],[[3,19],[[8,[141,34]]]],[142],[143],[141,19],[2,141],[[],36],[[]],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[141,[[14,[23]]]],[145,27],[146,27],[[3,[25,[19,24]]],[[8,[7]]]],[[142,142],[[14,[83]]]],[[143,143],[[14,[83]]]],[[141,[23,[26]]],[[8,[15,34]]]],[141,[[8,[34]]]],[[]],[[]],[[]],[[],8],[33,[[8,[142]]]],[33,[[8,[143]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[[],50],[141,33],[[141,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[144,2],[[]],[[]],[[]],[[]],[[]],[[]],[144,144],[[]],[[144,54,54,54,54,143,9,[0,[16,17]]],70],[144,14],[144],[[144,12],22],[[144,144],22],[[147,29],30],[[148,29],30],[[144,29],30],[[]],[[]],[[]],[[3,19],[[8,[144,34]]]],[144,19],[2,144],[[],36],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[144,[[14,[23]]]],[147,27],[148,27],[[3,[25,[19,24]]],[[8,[7]]]],[[144,54]],[[144,[23,[26]]],[[8,[15,34]]]],[144,[[8,[34]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[144,33],[[144,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[149,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150,150],[149,149],[[]],[[]],[[150,150],83],[149,14],[149],[[150,150],22],[[149,149],22],[[149,12],22],[[150,29],30],[[151,29],30],[[152,29],30],[[149,29],30],[[]],[[]],[[]],[[]],[[3,19],[[8,[149,34]]]],[[149,78,78,9,[0,[16,17]]],153],[150],[149,19],[2,149],[[],36],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[149,[[14,[23]]]],[151,27],[152,27],[[3,[25,[19,24]]],[[8,[7]]]],[[150,150],[[14,[83]]]],[[149,[23,[26]]],[[8,[15,34]]]],[149,[[8,[34]]]],[[]],[[]],[33,[[8,[150]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[149,33],[[149,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[153,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[154,154],[153,153],[[]],[[]],[[154,154],83],[153,14],[153],[[154,154],22],[[153,12],22],[[153,153],22],[[154,29],30],[[155,29],30],[[156,29],30],[[153,29],30],[[]],[[]],[[]],[[]],[[3,19],[[8,[153,34]]]],[154],[153,19],[2,153],[[],36],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[153,[[14,[23]]]],[155,27],[156,27],[[3,[25,[19,24]]],[[8,[7]]]],[[154,154],[[14,[83]]]],[[153,78]],[[153,78]],[[153,[23,[26]]],[[8,[15,34]]]],[153,[[8,[34]]]],[153],[[153,54,54]],[153],[[]],[[]],[33,[[8,[154]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[153,33],[[153,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[78,[14,[70]],54,54]],[78,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[157,157],[78,78],[[]],[[]],[[157,157],83],[78],[[78,54,54,54,54]],[[78,54,54,54,54]],[78,14],[78],[[157,157],22],[[78,12],22],[[78,78],22],[[157,29],30],[[158,29],30],[[159,29],30],[[78,29],30],[[78,9,[0,[16,17]]],73],[[]],[[]],[[]],[[]],[[3,19],[[8,[78,34]]]],[157],[78,19],[2,78],[[],36],[[]],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[78,[[14,[23]]]],[[78,54,54]],[158,27],[159,27],[[3,[25,[19,24]]],[[8,[7]]]],[[157,157],[[14,[83]]]],[[78,[23,[26]]],[[8,[15,34]]]],[78,[[8,[34]]]],[[78,54]],[[78,112]],[[78,[14,[77]]]],[[78,[14,[77]]]],[[]],[[]],[[],8],[33,[[8,[157]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[[],50],[78,33],[[78,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[130,2],[[]],[[]],[[]],[[]],[[]],[[]],[130,130],[[]],[130,14],[[130,130],22],[[130,12],22],[[160,29],30],[[161,29],30],[[130,29],30],[[]],[[]],[[]],[[3,19],[[8,[130,34]]]],[130,19],[2,130],[[],36],[[]],[[]],[[]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[[[38,[37]]],[[38,[1,37]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[39,[[39,[1]]]],[130,[[14,[23]]]],[160,27],[161,27],[[3,[25,[19,24]]],[[8,[7]]]],[130],[[130,[23,[26]]],[[8,[15,34]]]],[130,[[8,[34]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],50],[[],50],[[],50],[130,33],[[130,3],[[8,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[8,"Any"],[3,"WeakBackend"],[3,"Connection"],[3,"Backend"],[3,"EventQueue"],[15,"usize"],[4,"DispatchError"],[4,"Result"],[3,"QueueHandle"],[4,"WEnum"],[8,"Clone"],[3,"Weak"],[4,"ConnectError"],[4,"Option"],[8,"Proxy"],[8,"Send"],[8,"Sync"],[3,"QueueProxyData"],[3,"ObjectId"],[3,"WlDisplay"],[3,"QueueFreezeGuard"],[15,"bool"],[3,"Arc"],[3,"OwnedFd"],[3,"Message"],[8,"ObjectData"],[15,"u16"],[4,"WaylandError"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Error"],[15,"u32"],[3,"InvalidId"],[3,"UnixStream"],[3,"Interface"],[3,"Global"],[3,"Box"],[3,"Rc"],[3,"WEnumError"],[3,"ObjectInfo"],[3,"Context"],[4,"Infallible"],[4,"Poll"],[3,"ReadEventsGuard"],[3,"ProtocolError"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"],[3,"NoWaylandLib"],[3,"BorrowedFd"],[3,"Error"],[15,"i32"],[4,"AllowNull"],[4,"ArgumentType"],[4,"Argument"],[3,"MessageDesc"],[3,"wl_interface"],[8,"FnMut"],[3,"GlobalList"],[3,"RangeInclusive"],[4,"BindError"],[3,"Global"],[3,"GlobalListContents"],[3,"Vec"],[4,"GlobalError"],[3,"WlRegistry"],[8,"FnOnce"],[3,"WlBuffer"],[4,"Request"],[4,"Event"],[3,"WlCallback"],[4,"Request"],[4,"Event"],[3,"WlCompositor"],[3,"WlRegion"],[3,"WlSurface"],[4,"Request"],[4,"Event"],[3,"WlDataDevice"],[4,"Error"],[4,"Ordering"],[4,"Request"],[4,"Event"],[3,"WlDataSource"],[3,"DndAction"],[3,"WlDataDeviceManager"],[8,"IntoIterator"],[4,"Request"],[4,"Event"],[3,"WlSeat"],[3,"WlDataOffer"],[4,"Error"],[4,"Request"],[4,"Event"],[6,"RawFd"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlKeyboard"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[3,"Mode"],[3,"WlOutput"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[3,"WlPointer"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"Capability"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlTouch"],[3,"WlShell"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlShellSurface"],[3,"Resize"],[3,"Transient"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[3,"WlShm"],[4,"Error"],[4,"Format"],[3,"WlShmPool"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"WlSubcompositor"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlSubsurface"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[8,"Dispatch"],[13,"Backend"],[13,"BadMessage"],[13,"Value"],[13,"Unknown"],[13,"Io"],[13,"Protocol"],[19,"wl_argument"],[3,"wl_message"],[13,"Int"],[13,"Uint"],[13,"Fixed"],[13,"Str"],[13,"Object"],[13,"NewId"],[13,"Array"],[13,"Fd"],[13,"Str"],[13,"Object"],[13,"Backend"],[13,"InvalidId"],[13,"Done"],[13,"DataOffer"],[13,"Enter"],[13,"Selection"],[13,"Motion"],[13,"StartDrag"],[13,"SetSelection"],[13,"GetDataDevice"],[13,"Action"],[13,"Offer"],[13,"SourceActions"],[13,"SetActions"],[13,"Receive"],[13,"Accept"],[13,"Action"],[13,"Send"],[13,"Target"],[13,"SetActions"],[13,"Offer"],[13,"Error"],[13,"DeleteId"],[13,"RepeatInfo"],[13,"Keymap"],[13,"Modifiers"],[13,"Key"],[13,"Enter"],[13,"Leave"],[13,"Description"],[13,"Scale"],[13,"Mode"],[13,"Geometry"],[13,"Name"],[13,"Axis"],[13,"AxisStop"],[13,"AxisDiscrete"],[13,"AxisValue120"],[13,"AxisSource"],[13,"Button"],[13,"Enter"],[13,"Leave"],[13,"Motion"],[13,"SetCursor"],[13,"Add"],[13,"Subtract"],[13,"Global"],[13,"GlobalRemove"],[13,"Bind"],[13,"Capabilities"],[13,"Name"],[13,"GetShellSurface"],[13,"Configure"],[13,"Ping"],[13,"SetClass"],[13,"Resize"],[13,"SetTransient"],[13,"SetPopup"],[13,"SetFullscreen"],[13,"SetMaximized"],[13,"Move"],[13,"Pong"],[13,"SetTitle"],[13,"Format"],[13,"CreatePool"],[13,"CreateBuffer"],[13,"Resize"],[13,"GetSubsurface"],[13,"PlaceAbove"],[13,"PlaceBelow"],[13,"SetPosition"],[13,"Enter"],[13,"Leave"],[13,"Attach"],[13,"Damage"],[13,"DamageBuffer"],[13,"SetOpaqueRegion"],[13,"SetInputRegion"],[13,"SetBufferScale"],[13,"SetBufferTransform"],[13,"Offset"],[13,"Down"],[13,"Up"],[13,"Motion"],[13,"Shape"],[13,"Orientation"]]},\
"wayland_protocols":{"doc":"This crate provides bindings to the official wayland …","t":[0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,13,13,17,17,4,4,13,13,13,17,17,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,17,17,17,17,17,17,4,18,18,3,13,4,13,18,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,0,0,0,7,7,7,7,7,7,7,13,13,17,17,4,4,13,13,13,17,17,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,17,17,17,17,17,17,4,18,18,3,13,4,13,18,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,0,0,0,0,0,7,7,7,7,7,7,13,13,13,4,4,13,13,17,17,17,17,17,17,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,4,4,13,17,17,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,0,7,7,7,7,7,7,13,13,13,4,4,13,13,17,17,17,17,17,17,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,4,4,13,17,17,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,13,13,17,17,17,17,17,17,4,4,13,13,13,17,17,17,17,17,17,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,3,13,4,4,18,18,4,13,13,13,13,13,18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,18,18,13,13,13,13,13,13,13,13,13,13,13,18,18,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,17,17,4,4,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,4,4,13,13,13,13,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,17,17,4,4,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,13,13,17,17,17,17,17,17,4,4,13,13,13,17,17,17,17,17,17,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,3,13,4,4,18,18,4,13,13,13,13,13,18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,18,18,13,13,13,13,13,13,13,13,13,13,13,18,18,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,17,17,4,4,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,4,4,13,13,13,13,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,17,17,4,4,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["ext","wp","xdg","xwayland","presentation_time","viewporter","client","server","__interfaces","wp_presentation","wp_presentation_feedback","WP_PRESENTATION_FEEDBACK_INTERFACE","WP_PRESENTATION_INTERFACE","wp_presentation_events","wp_presentation_feedback_events","wp_presentation_feedback_interface","wp_presentation_interface","wp_presentation_requests","ClockId","Destroy","EVT_CLOCK_ID_OPCODE","EVT_CLOCK_ID_SINCE","Error","Event","Feedback","InvalidFlag","InvalidTimestamp","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FEEDBACK_OPCODE","REQ_FEEDBACK_SINCE","Request","WpPresentation","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","feedback","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","clk_id","surface","Discarded","EVT_DISCARDED_OPCODE","EVT_DISCARDED_SINCE","EVT_PRESENTED_OPCODE","EVT_PRESENTED_SINCE","EVT_SYNC_OUTPUT_OPCODE","EVT_SYNC_OUTPUT_SINCE","Event","HwClock","HwCompletion","Kind","Presented","Request","SyncOutput","Vsync","WpPresentationFeedback","ZeroCopy","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","data","difference","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_event","partial_cmp","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","version","write_request","flags","output","refresh","seq_hi","seq_lo","tv_nsec","tv_sec_hi","tv_sec_lo","__interfaces","wp_presentation","wp_presentation_feedback","WP_PRESENTATION_FEEDBACK_INTERFACE","WP_PRESENTATION_INTERFACE","wp_presentation_events","wp_presentation_feedback_events","wp_presentation_feedback_interface","wp_presentation_interface","wp_presentation_requests","ClockId","Destroy","EVT_CLOCK_ID_OPCODE","EVT_CLOCK_ID_SINCE","Error","Event","Feedback","InvalidFlag","InvalidTimestamp","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FEEDBACK_OPCODE","REQ_FEEDBACK_SINCE","Request","WpPresentation","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clock_id","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","clk_id","callback","surface","Discarded","EVT_DISCARDED_OPCODE","EVT_DISCARDED_SINCE","EVT_PRESENTED_OPCODE","EVT_PRESENTED_SINCE","EVT_SYNC_OUTPUT_OPCODE","EVT_SYNC_OUTPUT_SINCE","Event","HwClock","HwCompletion","Kind","Presented","Request","SyncOutput","Vsync","WpPresentationFeedback","ZeroCopy","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","data","difference","discarded","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","handle","hash","id","insert","interface","intersection","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_request","partial_cmp","presented","remove","send_event","set","sub","sub_assign","symmetric_difference","sync_output","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","version","write_event","flags","output","refresh","seq_hi","seq_lo","tv_nsec","tv_sec_hi","tv_sec_lo","client","server","__interfaces","wp_viewport","wp_viewporter","WP_VIEWPORTER_INTERFACE","WP_VIEWPORT_INTERFACE","wp_viewport_interface","wp_viewport_requests","wp_viewporter_interface","wp_viewporter_requests","BadSize","BadValue","Destroy","Error","Event","NoSurface","OutOfBuffer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_DESTINATION_OPCODE","REQ_SET_DESTINATION_SINCE","REQ_SET_SOURCE_OPCODE","REQ_SET_SOURCE_SINCE","Request","SetDestination","SetSource","WpViewport","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_destination","set_source","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","height","height","width","width","x","y","Destroy","Error","Event","GetViewport","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_VIEWPORT_OPCODE","REQ_GET_VIEWPORT_SINCE","Request","ViewportExists","WpViewporter","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_viewport","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","surface","__interfaces","wp_viewport","wp_viewporter","WP_VIEWPORTER_INTERFACE","WP_VIEWPORT_INTERFACE","wp_viewport_interface","wp_viewport_requests","wp_viewporter_interface","wp_viewporter_requests","BadSize","BadValue","Destroy","Error","Event","NoSurface","OutOfBuffer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_DESTINATION_OPCODE","REQ_SET_DESTINATION_SINCE","REQ_SET_SOURCE_OPCODE","REQ_SET_SOURCE_SINCE","Request","SetDestination","SetSource","WpViewport","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","height","height","width","width","x","y","Destroy","Error","Event","GetViewport","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_VIEWPORT_OPCODE","REQ_GET_VIEWPORT_SINCE","Request","ViewportExists","WpViewporter","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","id","surface","shell","client","server","__interfaces","xdg_popup","xdg_positioner","xdg_surface","xdg_toplevel","xdg_wm_base","XDG_POPUP_INTERFACE","XDG_POSITIONER_INTERFACE","XDG_SURFACE_INTERFACE","XDG_TOPLEVEL_INTERFACE","XDG_WM_BASE_INTERFACE","xdg_popup_events","xdg_popup_interface","xdg_popup_requests","xdg_positioner_interface","xdg_positioner_requests","xdg_surface_events","xdg_surface_interface","xdg_surface_requests","xdg_toplevel_events","xdg_toplevel_interface","xdg_toplevel_requests","xdg_wm_base_events","xdg_wm_base_interface","xdg_wm_base_requests","Configure","Destroy","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_POPUP_DONE_OPCODE","EVT_POPUP_DONE_SINCE","EVT_REPOSITIONED_OPCODE","EVT_REPOSITIONED_SINCE","Error","Event","Grab","InvalidGrab","PopupDone","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GRAB_OPCODE","REQ_GRAB_SINCE","REQ_REPOSITION_OPCODE","REQ_REPOSITION_SINCE","Reposition","Repositioned","Request","XdgPopup","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","grab","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","reposition","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","height","token","width","x","y","positioner","seat","serial","token","Anchor","Bottom","Bottom","BottomLeft","BottomLeft","BottomRight","BottomRight","ConstraintAdjustment","Destroy","Error","Event","FlipX","FlipY","Gravity","InvalidInput","Left","Left","None","None","None","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_ANCHOR_OPCODE","REQ_SET_ANCHOR_RECT_OPCODE","REQ_SET_ANCHOR_RECT_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_CONSTRAINT_ADJUSTMENT_OPCODE","REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","REQ_SET_GRAVITY_OPCODE","REQ_SET_GRAVITY_SINCE","REQ_SET_OFFSET_OPCODE","REQ_SET_OFFSET_SINCE","REQ_SET_PARENT_CONFIGURE_OPCODE","REQ_SET_PARENT_CONFIGURE_SINCE","REQ_SET_PARENT_SIZE_OPCODE","REQ_SET_PARENT_SIZE_SINCE","REQ_SET_REACTIVE_OPCODE","REQ_SET_REACTIVE_SINCE","REQ_SET_SIZE_OPCODE","REQ_SET_SIZE_SINCE","Request","ResizeX","ResizeY","Right","Right","SetAnchor","SetAnchorRect","SetConstraintAdjustment","SetGravity","SetOffset","SetParentConfigure","SetParentSize","SetReactive","SetSize","SlideX","SlideY","Top","Top","TopLeft","TopLeft","TopRight","TopRight","XdgPositioner","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","complement","contains","data","destroy","difference","empty","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","hash","hash","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","send_constructor","send_request","set","set_anchor","set_anchor_rect","set_constraint_adjustment","set_gravity","set_offset","set_parent_configure","set_parent_size","set_reactive","set_size","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","version","write_request","anchor","constraint_adjustment","gravity","height","height","parent_height","parent_width","serial","width","width","x","x","y","y","AckConfigure","AlreadyConstructed","Configure","Destroy","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","Error","Event","GetPopup","GetToplevel","InvalidSerial","InvalidSize","NotConstructed","REQ_ACK_CONFIGURE_OPCODE","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_POPUP_OPCODE","REQ_GET_POPUP_SINCE","REQ_GET_TOPLEVEL_OPCODE","REQ_GET_TOPLEVEL_SINCE","REQ_SET_WINDOW_GEOMETRY_OPCODE","REQ_SET_WINDOW_GEOMETRY_SINCE","Request","SetWindowGeometry","UnconfiguredBuffer","XdgSurface","ack_configure","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_popup","get_toplevel","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_window_geometry","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","serial","height","parent","positioner","serial","width","x","y","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","ConfigureBounds","Destroy","EVT_CLOSE_OPCODE","EVT_CLOSE_SINCE","EVT_CONFIGURE_BOUNDS_OPCODE","EVT_CONFIGURE_BOUNDS_SINCE","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_WM_CAPABILITIES_OPCODE","EVT_WM_CAPABILITIES_SINCE","Error","Event","Fullscreen","Fullscreen","InvalidParent","InvalidResizeEdge","InvalidSize","Left","Maximize","Maximized","Minimize","Move","None","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_MOVE_OPCODE","REQ_MOVE_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_OPCODE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MAX_SIZE_OPCODE","REQ_SET_MAX_SIZE_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_MIN_SIZE_OPCODE","REQ_SET_MIN_SIZE_SINCE","REQ_SET_PARENT_OPCODE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_OPCODE","REQ_SET_TITLE_SINCE","REQ_SHOW_WINDOW_MENU_OPCODE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetParent","SetTitle","ShowWindowMenu","State","TiledBottom","TiledLeft","TiledRight","TiledTop","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","WindowMenu","WmCapabilities","WmCapabilities","XdgToplevel","_move","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","data","destroy","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_id","hash","hash","hash","hash","id","inert","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","partial_cmp","resize","send_constructor","send_request","set_app_id","set_fullscreen","set_max_size","set_maximized","set_min_size","set_minimized","set_parent","set_title","show_window_menu","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","version","write_request","capabilities","height","height","states","width","width","app_id","edges","height","height","output","parent","seat","seat","seat","serial","serial","serial","title","width","width","x","y","CreatePositioner","DefunctSurfaces","Destroy","EVT_PING_OPCODE","EVT_PING_SINCE","Error","Event","GetXdgSurface","InvalidPopupParent","InvalidPositioner","InvalidSurfaceState","NotTheTopmostPopup","Ping","Pong","REQ_CREATE_POSITIONER_OPCODE","REQ_CREATE_POSITIONER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_XDG_SURFACE_OPCODE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_OPCODE","REQ_PONG_SINCE","Request","Role","Unresponsive","XdgWmBase","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","create_positioner","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_xdg_surface","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","pong","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","serial","serial","surface","__interfaces","xdg_popup","xdg_positioner","xdg_surface","xdg_toplevel","xdg_wm_base","XDG_POPUP_INTERFACE","XDG_POSITIONER_INTERFACE","XDG_SURFACE_INTERFACE","XDG_TOPLEVEL_INTERFACE","XDG_WM_BASE_INTERFACE","xdg_popup_events","xdg_popup_interface","xdg_popup_requests","xdg_positioner_interface","xdg_positioner_requests","xdg_surface_events","xdg_surface_interface","xdg_surface_requests","xdg_toplevel_events","xdg_toplevel_interface","xdg_toplevel_requests","xdg_wm_base_events","xdg_wm_base_interface","xdg_wm_base_requests","Configure","Destroy","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_POPUP_DONE_OPCODE","EVT_POPUP_DONE_SINCE","EVT_REPOSITIONED_OPCODE","EVT_REPOSITIONED_SINCE","Error","Event","Grab","InvalidGrab","PopupDone","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GRAB_OPCODE","REQ_GRAB_SINCE","REQ_REPOSITION_OPCODE","REQ_REPOSITION_SINCE","Reposition","Repositioned","Request","XdgPopup","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","configure","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","popup_done","repositioned","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","height","token","width","x","y","positioner","seat","serial","token","Anchor","Bottom","Bottom","BottomLeft","BottomLeft","BottomRight","BottomRight","ConstraintAdjustment","Destroy","Error","Event","FlipX","FlipY","Gravity","InvalidInput","Left","Left","None","None","None","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_ANCHOR_OPCODE","REQ_SET_ANCHOR_RECT_OPCODE","REQ_SET_ANCHOR_RECT_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_CONSTRAINT_ADJUSTMENT_OPCODE","REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","REQ_SET_GRAVITY_OPCODE","REQ_SET_GRAVITY_SINCE","REQ_SET_OFFSET_OPCODE","REQ_SET_OFFSET_SINCE","REQ_SET_PARENT_CONFIGURE_OPCODE","REQ_SET_PARENT_CONFIGURE_SINCE","REQ_SET_PARENT_SIZE_OPCODE","REQ_SET_PARENT_SIZE_SINCE","REQ_SET_REACTIVE_OPCODE","REQ_SET_REACTIVE_SINCE","REQ_SET_SIZE_OPCODE","REQ_SET_SIZE_SINCE","Request","ResizeX","ResizeY","Right","Right","SetAnchor","SetAnchorRect","SetConstraintAdjustment","SetGravity","SetOffset","SetParentConfigure","SetParentSize","SetReactive","SetSize","SlideX","SlideY","Top","Top","TopLeft","TopLeft","TopRight","TopRight","XdgPositioner","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","complement","contains","data","difference","empty","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","handle","hash","hash","hash","hash","id","insert","interface","intersection","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","send_event","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","version","write_event","anchor","constraint_adjustment","gravity","height","height","parent_height","parent_width","serial","width","width","x","x","y","y","AckConfigure","AlreadyConstructed","Configure","Destroy","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","Error","Event","GetPopup","GetToplevel","InvalidSerial","InvalidSize","NotConstructed","REQ_ACK_CONFIGURE_OPCODE","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_POPUP_OPCODE","REQ_GET_POPUP_SINCE","REQ_GET_TOPLEVEL_OPCODE","REQ_GET_TOPLEVEL_SINCE","REQ_SET_WINDOW_GEOMETRY_OPCODE","REQ_SET_WINDOW_GEOMETRY_SINCE","Request","SetWindowGeometry","UnconfiguredBuffer","XdgSurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","configure","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","serial","height","id","id","parent","positioner","serial","width","x","y","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","ConfigureBounds","Destroy","EVT_CLOSE_OPCODE","EVT_CLOSE_SINCE","EVT_CONFIGURE_BOUNDS_OPCODE","EVT_CONFIGURE_BOUNDS_SINCE","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_WM_CAPABILITIES_OPCODE","EVT_WM_CAPABILITIES_SINCE","Error","Event","Fullscreen","Fullscreen","InvalidParent","InvalidResizeEdge","InvalidSize","Left","Maximize","Maximized","Minimize","Move","None","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_MOVE_OPCODE","REQ_MOVE_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_OPCODE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MAX_SIZE_OPCODE","REQ_SET_MAX_SIZE_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_MIN_SIZE_OPCODE","REQ_SET_MIN_SIZE_SINCE","REQ_SET_PARENT_OPCODE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_OPCODE","REQ_SET_TITLE_SINCE","REQ_SHOW_WINDOW_MENU_OPCODE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetParent","SetTitle","ShowWindowMenu","State","TiledBottom","TiledLeft","TiledRight","TiledTop","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","WindowMenu","WmCapabilities","WmCapabilities","XdgToplevel","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","cmp","configure","configure_bounds","data","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_id","handle","hash","hash","hash","hash","id","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","partial_cmp","partial_cmp","send_event","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","wm_capabilities","write_event","capabilities","height","height","states","width","width","app_id","edges","height","height","output","parent","seat","seat","seat","serial","serial","serial","title","width","width","x","y","CreatePositioner","DefunctSurfaces","Destroy","EVT_PING_OPCODE","EVT_PING_SINCE","Error","Event","GetXdgSurface","InvalidPopupParent","InvalidPositioner","InvalidSurfaceState","NotTheTopmostPopup","Ping","Pong","REQ_CREATE_POSITIONER_OPCODE","REQ_CREATE_POSITIONER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_XDG_SURFACE_OPCODE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_OPCODE","REQ_PONG_SINCE","Request","Role","Unresponsive","XdgWmBase","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","ping","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","serial","id","id","serial","surface"],"q":["wayland_protocols","","","","wayland_protocols::wp","","wayland_protocols::wp::presentation_time","","wayland_protocols::wp::presentation_time::client","","","wayland_protocols::wp::presentation_time::client::__interfaces","","","","","","","wayland_protocols::wp::presentation_time::client::wp_presentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::wp::presentation_time::client::wp_presentation::Event","wayland_protocols::wp::presentation_time::client::wp_presentation::Request","wayland_protocols::wp::presentation_time::client::wp_presentation_feedback","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::wp::presentation_time::client::wp_presentation_feedback::Event","","","","","","","","wayland_protocols::wp::presentation_time::server","","","wayland_protocols::wp::presentation_time::server::__interfaces","","","","","","","wayland_protocols::wp::presentation_time::server::wp_presentation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::wp::presentation_time::server::wp_presentation::Event","wayland_protocols::wp::presentation_time::server::wp_presentation::Request","","wayland_protocols::wp::presentation_time::server::wp_presentation_feedback","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::wp::presentation_time::server::wp_presentation_feedback::Event","","","","","","","","wayland_protocols::wp::viewporter","","wayland_protocols::wp::viewporter::client","","","wayland_protocols::wp::viewporter::client::__interfaces","","","","","","wayland_protocols::wp::viewporter::client::wp_viewport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::wp::viewporter::client::wp_viewport::Request","","","","","","wayland_protocols::wp::viewporter::client::wp_viewporter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::wp::viewporter::client::wp_viewporter::Request","wayland_protocols::wp::viewporter::server","","","wayland_protocols::wp::viewporter::server::__interfaces","","","","","","wayland_protocols::wp::viewporter::server::wp_viewport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::wp::viewporter::server::wp_viewport::Request","","","","","","wayland_protocols::wp::viewporter::server::wp_viewporter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::wp::viewporter::server::wp_viewporter::Request","","wayland_protocols::xdg","wayland_protocols::xdg::shell","","wayland_protocols::xdg::shell::client","","","","","","wayland_protocols::xdg::shell::client::__interfaces","","","","","","","","","","","","","","","","","","","wayland_protocols::xdg::shell::client::xdg_popup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::xdg::shell::client::xdg_popup::Event","","","","","wayland_protocols::xdg::shell::client::xdg_popup::Request","","","","wayland_protocols::xdg::shell::client::xdg_positionerwayland_protocols::xdg::shell::client::xdg_positioner::Request","","","","","","","","","","","","","","wayland_protocols::xdg::shell::client::xdg_surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::xdg::shell::client::xdg_surface::Event","wayland_protocols::xdg::shell::client::xdg_surface::Request","","","","","","","wayland_protocols::xdg::shell::client::xdg_toplevelwayland_protocols::xdg::shell::client::xdg_toplevel::Event","","","","","","wayland_protocols::xdg::shell::client::xdg_toplevel::Request","","","","","","","","","","","","","","","","","wayland_protocols::xdg::shell::client::xdg_wm_base","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::xdg::shell::client::xdg_wm_base::Event","wayland_protocols::xdg::shell::client::xdg_wm_base::Request","","wayland_protocols::xdg::shell::server","","","","","","wayland_protocols::xdg::shell::server::__interfaces","","","","","","","","","","","","","","","","","","","wayland_protocols::xdg::shell::server::xdg_popup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::xdg::shell::server::xdg_popup::Event","","","","","wayland_protocols::xdg::shell::server::xdg_popup::Request","","","","wayland_protocols::xdg::shell::server::xdg_positionerwayland_protocols::xdg::shell::server::xdg_positioner::Request","","","","","","","","","","","","","","wayland_protocols::xdg::shell::server::xdg_surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::xdg::shell::server::xdg_surface::Event","wayland_protocols::xdg::shell::server::xdg_surface::Request","","","","","","","","","wayland_protocols::xdg::shell::server::xdg_toplevelwayland_protocols::xdg::shell::server::xdg_toplevel::Event","","","","","","wayland_protocols::xdg::shell::server::xdg_toplevel::Request","","","","","","","","","","","","","","","","","wayland_protocols::xdg::shell::server::xdg_wm_base","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_protocols::xdg::shell::server::xdg_wm_base::Event","wayland_protocols::xdg::shell::server::xdg_wm_base::Request","","",""],"d":["Miscellaneous protocols","Generic wayland protocols","Protocols related to window management","XWayland related protocols","Presentation time protocol","Viewporter protocol","Client-side API of this protocol","Server-side API of this protocol","","timed presentation related wl_surface requests","presentation time feedback event","","","","","","","","clock ID for timestamps","unbind from the presentation interface","The wire opcode for this event","The minimal object version supporting this event","fatal presentation errors","","request presentation feedback information","invalid flag","invalid value in tv_nsec","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","timed presentation related wl_surface requests","","","","","","","","","","","","","","","","","","","","","","","","unbind from the presentation interface","","","","request presentation feedback information","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","platform clock identifier","target surface","the content update was not displayed","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","hardware provided the presentation timestamp","hardware signalled the start of the presentation","bitmask of flags in presented event","the content update was displayed","","presentation synchronized to this output","presentation was vsync’d","presentation time feedback event","presentation was done zero-copy","Returns the set containing all flags.","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","combination of ‘kind’ values","presentation output","nanoseconds till next refresh","high 32 bits of refresh counter","low 32 bits of refresh counter","nanoseconds part of the presentation timestamp","high 32 bits of the seconds part of the presentation …","low 32 bits of the seconds part of the presentation …","","timed presentation related wl_surface requests","presentation time feedback event","","","","","","","","clock ID for timestamps","unbind from the presentation interface","The wire opcode for this event","The minimal object version supporting this event","fatal presentation errors","","request presentation feedback information","invalid flag","invalid value in tv_nsec","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","timed presentation related wl_surface requests","","","","","","","","","","","","","","","","","clock ID for timestamps","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","platform clock identifier","new feedback object","target surface","the content update was not displayed","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","hardware provided the presentation timestamp","hardware signalled the start of the presentation","bitmask of flags in presented event","the content update was displayed","","presentation synchronized to this output","presentation was vsync’d","presentation time feedback event","presentation was done zero-copy","Returns the set containing all flags.","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","the content update was not displayed","Returns an empty set of flags.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","the content update was displayed","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","presentation synchronized to this output","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","combination of ‘kind’ values","presentation output","nanoseconds till next refresh","high 32 bits of refresh counter","low 32 bits of refresh counter","nanoseconds part of the presentation timestamp","high 32 bits of the seconds part of the presentation …","low 32 bits of the seconds part of the presentation …","Client-side API of this protocol","Server-side API of this protocol","","crop and scale interface to a wl_surface","surface cropping and scaling","","","","","","","destination size is not integer","negative or zero values in width or height","remove scaling and cropping from the surface","","","the wl_surface was destroyed","source rectangle extends outside of the content area","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the surface size for scaling","set the source rectangle for cropping","crop and scale interface to a wl_surface","","","","","","","","","","","","","","","","","","","","","","","","remove scaling and cropping from the surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","set the surface size for scaling","set the source rectangle for cropping","","","","","","","","","","","","","","","","","","source rectangle height","surface height","source rectangle width","surface width","source rectangle x","source rectangle y","unbind from the cropping and scaling interface","","","extend surface interface for crop and scale","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the surface already has a viewport object associated","surface cropping and scaling","","","","","","","","","","","","","","","","","","","","","","","","unbind from the cropping and scaling interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","extend surface interface for crop and scale","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","the surface","","crop and scale interface to a wl_surface","surface cropping and scaling","","","","","","","destination size is not integer","negative or zero values in width or height","remove scaling and cropping from the surface","","","the wl_surface was destroyed","source rectangle extends outside of the content area","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the surface size for scaling","set the source rectangle for cropping","crop and scale interface to a wl_surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","source rectangle height","surface height","source rectangle width","surface width","source rectangle x","source rectangle y","unbind from the cropping and scaling interface","","","extend surface interface for crop and scale","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the surface already has a viewport object associated","surface cropping and scaling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","the new viewport interface id","the surface","XDG Shell protocol","Client-side API of this protocol","Server-side API of this protocol","","short-lived, popup surfaces for menus","child surface positioner","desktop user interface surface base interface","toplevel surface","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","configure the popup surface","remove xdg_popup interface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","make the popup take an explicit grab","tried to grab after being mapped","popup interaction is done","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","recalculate the popup’s location","signal the completion of a repositioned request","","short-lived, popup surfaces for menus","","","","","","","","","","","","","","","","","","","","","","","","remove xdg_popup interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","make the popup take an explicit grab","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","recalculate the popup’s location","","","","","","","","","","","","","","","","","","","","window geometry height","reposition request token","window geometry width","x position relative to parent surface window geometry","y position relative to parent surface window geometry","","the wl_seat of the user event","the serial of the user event","reposition request token","","","","","","","","constraint adjustments","destroy the xdg_positioner object","","","invert the anchor and gravity on the x axis","invert the anchor and gravity on the y axis","","invalid input provided","","","","","don’t move the child surface when constrained","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The wire opcode for this request","The minimal object version supporting this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","horizontally resize the surface","vertically resize the surface","","","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","move along the x axis until unconstrained","move along the y axis until unconstrained","","","","","","","child surface positioner","Returns the set containing all flags.","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","destroy the xdg_positioner object","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","anchor","bit mask of constraint adjustments","gravity direction","height of positioned rectangle","height of anchor rectangle","future window geometry height of parent","future window geometry width of parent","serial of parent configure event","width of positioned rectangle","width of anchor rectangle","x position of anchor rectangle","surface position x offset","y position of anchor rectangle","surface position y offset","ack a configure event","Surface was already constructed","suggest a surface change","destroy the xdg_surface","The wire opcode for this event","The minimal object version supporting this event","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","Invalid serial number when acking a configure event","Width or height was zero or negative","Surface was not fully constructed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the new window geometry","Attaching a buffer to an unconfigured surface","desktop user interface surface base interface","ack a configure event","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","set the new window geometry","","","","","","","","","","","","","","","","","","serial of the configure event","","","","the serial from the configure event","","","","the surface is now activated","","","","surface wants to be closed","suggest a surface change","recommended window geometry bounds","destroy the xdg_toplevel","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the surface is fullscreen","set_fullscreen and unset_fullscreen are available","invalid parent toplevel","provided value is not a valid variant of the resize_edge …","client provided an invalid min or max size","","set_maximized and unset_maximized are available","the surface is maximized","set_minimized is available","start an interactive move","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","types of state on the surface","the surface’s bottom edge is tiled","the surface’s left edge is tiled","the surface’s right edge is tiled","the surface’s top edge is tiled","","","","unset the window as fullscreen","unmaximize the window","show_window_menu is available","","compositor capabilities","toplevel surface","start an interactive move","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_toplevel","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","start an interactive resize","","","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unset the window as fullscreen","unmaximize the window","","","array of 32-bit capabilities","","","","","","","which edge or corner is being dragged","","","","","the wl_seat of the user event","the wl_seat of the user event","the wl_seat of the user event","the serial of the user event","the serial of the user event","the serial of the user event","","","","the x position to pop up the window menu at","the y position to pop up the window menu at","create a positioner object","xdg_wm_base was destroyed before children","destroy xdg_wm_base","The wire opcode for this event","The minimal object version supporting this event","","","create a shell surface from a surface","the client specified an invalid popup parent surface","the client provided an invalid positioner","the client provided an invalid surface state","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","given wl_surface has another role","the client didn’t respond to a ping event in time","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","","","","create a positioner object","","destroy xdg_wm_base","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","create a shell surface from a surface","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","respond to a ping event","","","","","","","","","","","","","","","","","","","","pass this to the pong request","serial of the ping event","","","short-lived, popup surfaces for menus","child surface positioner","desktop user interface surface base interface","toplevel surface","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","configure the popup surface","remove xdg_popup interface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","make the popup take an explicit grab","tried to grab after being mapped","popup interaction is done","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","recalculate the popup’s location","signal the completion of a repositioned request","","short-lived, popup surfaces for menus","","","","","","","","","","","","","","","","","","","","","","configure the popup surface","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","popup interaction is done","signal the completion of a repositioned request","","","","","","","","","","","","","","","","","","","window geometry height","reposition request token","window geometry width","x position relative to parent surface window geometry","y position relative to parent surface window geometry","","the wl_seat of the user event","the serial of the user event","reposition request token","","","","","","","","constraint adjustments","destroy the xdg_positioner object","","","invert the anchor and gravity on the x axis","invert the anchor and gravity on the y axis","","invalid input provided","","","","","don’t move the child surface when constrained","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The wire opcode for this request","The minimal object version supporting this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","horizontally resize the surface","vertically resize the surface","","","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","move along the x axis until unconstrained","move along the y axis until unconstrained","","","","","","","child surface positioner","Returns the set containing all flags.","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","anchor","bit mask of constraint adjustments","gravity direction","height of positioned rectangle","height of anchor rectangle","future window geometry height of parent","future window geometry width of parent","serial of parent configure event","width of positioned rectangle","width of anchor rectangle","x position of anchor rectangle","surface position x offset","y position of anchor rectangle","surface position y offset","ack a configure event","Surface was already constructed","suggest a surface change","destroy the xdg_surface","The wire opcode for this event","The minimal object version supporting this event","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","Invalid serial number when acking a configure event","Width or height was zero or negative","Surface was not fully constructed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the new window geometry","Attaching a buffer to an unconfigured surface","desktop user interface surface base interface","","","","","","","","","","","","","","","","","","","","","","suggest a surface change","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","serial of the configure event","","","","","","the serial from the configure event","","","","the surface is now activated","","","","surface wants to be closed","suggest a surface change","recommended window geometry bounds","destroy the xdg_toplevel","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the surface is fullscreen","set_fullscreen and unset_fullscreen are available","invalid parent toplevel","provided value is not a valid variant of the resize_edge …","client provided an invalid min or max size","","set_maximized and unset_maximized are available","the surface is maximized","set_minimized is available","start an interactive move","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","types of state on the surface","the surface’s bottom edge is tiled","the surface’s left edge is tiled","the surface’s right edge is tiled","the surface’s top edge is tiled","","","","unset the window as fullscreen","unmaximize the window","show_window_menu is available","","compositor capabilities","toplevel surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","surface wants to be closed","","","","","suggest a surface change","recommended window geometry bounds","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","compositor capabilities","","array of 32-bit capabilities","","","","","","","which edge or corner is being dragged","","","","","the wl_seat of the user event","the wl_seat of the user event","the wl_seat of the user event","the serial of the user event","the serial of the user event","the serial of the user event","","","","the x position to pop up the window menu at","the y position to pop up the window menu at","create a positioner object","xdg_wm_base was destroyed before children","destroy xdg_wm_base","The wire opcode for this event","The minimal object version supporting this event","","","create a shell surface from a surface","the client specified an invalid popup parent surface","the client provided an invalid positioner","the client provided an invalid surface state","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","given wl_surface has another role","the client didn’t respond to a ping event in time","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","check if the client is alive","","","","","","","","","","","","","","","","","","","pass this to the pong request","","","serial of the ping event",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,16,0,0,0,0,16,4,4,0,0,0,0,0,0,4,16,17,2,4,16,17,2,2,4,16,17,2,4,16,17,2,4,2,4,2,4,2,2,4,2,2,2,4,16,17,2,4,16,17,2,2,4,2,2,2,4,16,17,2,4,16,17,2,4,16,17,2,4,16,17,2,2,16,17,2,4,2,2,4,2,4,4,16,17,2,4,16,17,2,4,16,17,2,2,2,130,131,38,0,0,0,0,0,0,0,35,35,0,38,0,38,35,0,35,35,35,37,38,13,35,37,38,13,13,35,35,35,35,35,35,35,35,37,38,13,35,37,38,13,35,13,35,13,35,35,35,13,35,35,35,13,13,35,35,35,35,35,35,37,38,13,35,37,38,13,35,35,35,13,35,35,13,13,35,13,35,35,35,37,38,13,35,37,38,13,35,37,38,13,35,37,38,13,35,35,35,13,37,38,13,35,35,13,13,35,35,35,35,35,13,35,35,35,37,38,13,35,37,38,13,35,37,38,13,35,13,13,132,133,132,132,132,132,132,132,0,0,0,0,0,0,0,0,0,0,43,42,0,0,0,0,42,40,40,0,0,0,0,0,0,40,42,43,39,40,42,43,39,40,42,43,39,40,42,43,39,39,40,39,40,39,40,39,40,39,39,40,42,43,39,40,42,43,39,39,39,40,39,39,40,42,43,39,40,42,43,39,40,42,43,39,40,42,43,39,39,42,43,39,40,39,40,39,40,40,42,43,39,40,42,43,39,40,42,43,39,39,39,134,135,135,53,0,0,0,0,0,0,0,50,50,0,53,0,53,50,0,50,50,50,52,53,51,50,52,53,51,50,50,50,50,50,50,50,50,52,53,51,50,52,53,51,50,51,50,51,50,50,50,51,50,51,50,50,51,51,50,50,50,50,50,50,52,53,51,50,52,53,51,50,50,50,51,50,51,50,51,50,51,50,50,50,52,53,51,50,52,53,51,50,52,53,51,50,52,53,51,50,50,50,51,52,53,51,50,51,50,51,50,50,50,50,51,50,51,50,50,50,52,53,51,50,52,53,51,50,52,53,51,50,51,51,136,137,136,136,136,136,136,136,0,0,0,0,0,0,0,0,0,0,0,56,56,57,0,0,56,56,0,0,0,0,0,0,0,57,57,0,56,57,58,55,56,57,58,55,55,56,57,58,55,56,57,58,55,56,55,56,55,56,55,55,56,55,55,56,57,58,55,56,57,58,55,55,56,55,55,55,56,57,58,55,56,57,58,55,56,57,58,55,56,57,58,55,55,57,58,55,56,55,55,55,55,56,55,56,56,57,58,55,56,57,58,55,56,57,58,55,55,55,138,139,138,139,138,138,63,0,0,63,0,0,0,0,0,62,0,62,63,64,61,62,63,64,61,61,62,63,64,61,62,63,64,61,62,61,62,61,62,61,61,62,61,61,62,63,64,61,62,63,64,61,61,61,62,61,61,61,62,63,64,61,62,63,64,61,62,63,64,61,62,63,64,61,61,63,64,61,62,61,61,62,61,62,62,63,64,61,62,63,64,61,62,63,64,61,61,61,140,0,0,0,0,0,0,0,0,0,65,65,67,0,0,65,65,0,0,0,0,0,0,0,67,67,0,65,67,68,66,65,67,68,66,65,67,68,66,65,67,68,66,65,66,65,66,65,66,65,66,66,65,67,68,66,65,67,68,66,66,66,65,66,66,65,67,68,66,65,67,68,66,65,67,68,66,65,67,68,66,66,67,68,66,65,66,65,66,65,65,67,68,66,65,67,68,66,65,67,68,66,66,66,141,142,141,142,141,141,71,0,0,71,0,0,0,0,0,69,0,69,71,72,70,69,71,72,70,69,71,72,70,69,71,72,70,69,70,69,70,69,70,69,70,70,69,71,72,70,69,71,72,70,70,70,69,70,70,69,71,72,70,69,71,72,70,69,71,72,70,69,71,72,70,70,71,72,70,69,70,69,70,69,69,71,72,70,69,71,72,70,69,71,72,70,70,70,143,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,75,0,0,0,0,0,0,0,0,75,74,76,0,0,0,0,0,0,75,76,0,0,74,75,76,73,74,75,76,73,73,74,75,76,73,74,75,76,73,74,73,74,73,74,73,73,74,73,73,74,75,76,73,74,75,76,73,73,73,74,73,73,73,74,75,76,73,74,75,76,73,74,75,76,73,74,75,76,73,73,75,76,73,74,73,73,73,74,73,74,74,75,76,73,74,75,76,73,74,75,76,73,73,73,144,145,144,144,144,146,147,147,146,0,81,82,81,82,81,82,0,83,0,0,79,79,0,80,81,82,81,82,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,79,81,82,83,83,83,83,83,83,83,83,83,79,79,81,82,81,82,81,82,0,79,80,81,82,79,83,84,78,80,81,82,79,83,84,78,78,79,79,79,79,79,79,79,80,81,82,79,83,84,78,80,81,82,79,83,84,78,80,81,82,79,78,80,81,82,79,78,80,81,82,79,79,79,78,78,79,79,80,81,82,79,78,78,79,80,81,82,79,79,79,79,79,83,84,78,80,81,82,79,83,84,78,79,79,79,78,79,80,81,82,79,78,78,79,78,79,79,80,81,82,79,83,84,78,80,81,82,79,83,84,78,80,81,82,79,83,84,78,80,81,82,79,83,84,78,79,79,79,78,83,84,78,80,81,82,79,79,78,78,79,78,78,78,78,78,78,78,78,78,79,79,79,80,81,82,79,78,79,80,80,81,81,82,82,79,79,83,84,78,80,81,82,79,83,84,78,80,81,82,79,83,84,78,79,78,78,148,149,150,151,152,153,153,154,151,152,152,155,152,155,87,86,88,87,0,0,0,0,87,87,86,86,86,0,0,0,0,0,0,0,0,0,0,0,87,86,0,85,86,87,88,85,86,87,88,85,85,86,87,88,85,86,87,88,85,86,85,86,85,86,85,85,86,85,85,86,87,88,85,86,87,88,85,85,85,85,86,85,85,85,86,87,88,85,86,87,88,85,86,87,88,85,86,87,88,85,85,87,88,85,86,85,85,85,86,85,86,86,87,88,85,86,87,88,85,86,87,88,85,85,85,156,157,158,158,159,157,157,157,92,91,91,91,95,95,95,94,0,0,0,0,0,0,0,0,0,0,92,93,90,90,90,91,93,92,93,94,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94,0,92,91,94,94,94,94,94,94,94,94,94,0,92,92,92,92,91,91,91,94,94,93,0,95,0,89,90,91,92,93,94,95,89,90,91,92,93,94,95,89,89,90,91,92,93,94,95,89,90,91,92,93,94,95,89,90,91,92,93,89,90,91,92,93,89,90,91,92,93,89,89,90,91,92,93,89,89,90,91,92,93,94,95,89,90,91,92,93,94,95,89,89,90,91,92,93,89,89,89,90,91,92,93,94,95,89,90,91,92,93,94,95,89,90,91,92,93,94,95,89,90,91,92,93,94,95,89,89,94,95,89,90,91,92,93,89,89,89,89,89,89,89,89,89,89,89,89,90,91,92,93,89,90,90,91,91,92,92,93,93,94,95,89,90,91,92,93,94,95,89,90,91,92,93,94,95,89,89,89,89,89,160,161,162,161,161,162,163,164,165,166,167,168,169,170,164,169,170,164,171,165,166,169,169,100,99,100,0,0,0,0,100,99,99,99,99,101,100,0,0,0,0,0,0,0,0,0,99,99,0,99,100,101,98,99,100,101,98,98,99,100,101,98,99,100,101,98,99,98,99,98,99,98,98,98,99,98,98,99,100,101,98,99,100,101,98,98,98,99,98,98,98,99,100,101,98,99,100,101,98,99,100,101,98,99,100,101,98,98,100,101,98,99,98,98,98,99,98,99,99,100,101,98,99,100,101,98,99,100,101,98,98,98,172,173,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,104,0,0,0,0,0,0,0,0,104,102,105,0,0,0,0,0,0,104,105,0,0,102,104,105,103,102,104,105,103,102,104,105,103,102,104,105,103,102,103,102,103,102,103,103,102,103,103,102,104,105,103,102,104,105,103,103,103,102,103,103,102,104,105,103,102,104,105,103,102,104,105,103,102,104,105,103,103,104,105,103,102,103,103,103,102,103,102,102,104,105,103,102,104,105,103,102,104,105,103,103,103,175,176,175,175,175,177,178,178,177,0,108,109,108,109,108,109,0,111,0,0,106,106,0,107,108,109,108,109,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,106,106,108,109,111,111,111,111,111,111,111,111,111,106,106,108,109,108,109,108,109,0,106,107,108,109,106,111,112,110,107,108,109,106,111,112,110,106,106,106,106,106,106,106,107,108,109,106,111,112,110,107,108,109,106,111,112,110,107,108,109,106,110,107,108,109,106,110,107,108,109,106,106,106,110,106,106,107,108,109,106,110,110,106,107,108,109,106,106,106,106,106,111,112,110,107,108,109,106,111,112,110,106,106,106,110,106,110,107,108,109,106,110,106,110,106,106,107,108,109,106,111,112,110,107,108,109,106,111,112,110,107,108,109,106,111,112,110,107,108,109,106,111,112,110,106,106,106,110,111,112,110,107,108,109,106,106,110,106,106,106,106,107,108,109,106,110,106,107,107,108,108,109,109,106,106,111,112,110,107,108,109,106,111,112,110,107,108,109,106,111,112,110,106,110,110,179,180,181,182,183,184,184,185,182,183,183,186,183,186,115,113,116,115,0,0,0,0,115,115,113,113,113,0,0,0,0,0,0,0,0,0,0,0,115,113,0,113,115,116,114,113,115,116,114,113,115,116,114,113,115,116,114,113,114,113,114,113,114,114,113,114,114,113,115,116,114,113,115,116,114,114,114,113,114,114,113,115,116,114,113,115,116,114,113,115,116,114,113,115,116,114,114,115,116,114,113,114,113,114,113,113,115,116,114,113,115,116,114,113,115,116,114,114,114,187,188,189,190,190,190,191,188,188,188,119,118,118,118,125,125,125,124,0,0,0,0,0,0,0,0,0,0,119,120,117,117,117,118,120,119,120,124,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,119,118,124,124,124,124,124,124,124,124,124,0,119,119,119,119,118,118,118,124,124,120,0,125,0,117,118,119,120,124,125,121,117,118,119,120,124,125,121,117,118,119,120,124,125,121,117,118,119,120,124,125,121,117,118,119,120,121,117,118,119,120,121,121,117,118,119,120,121,121,121,117,118,119,120,121,121,117,118,119,120,124,125,121,117,118,119,120,124,125,121,121,121,117,118,119,120,121,121,117,118,119,120,124,125,121,117,118,119,120,124,125,121,117,118,119,120,124,125,121,117,118,119,120,124,125,121,121,124,125,121,117,118,119,120,121,117,118,119,120,121,117,117,118,118,119,119,120,120,124,125,121,117,118,119,120,124,125,121,117,118,119,120,124,125,121,121,121,121,192,193,194,193,193,194,195,196,197,198,199,200,201,202,196,201,202,196,203,197,198,201,201,128,126,128,0,0,0,0,128,126,126,126,126,129,128,0,0,0,0,0,0,0,0,0,126,126,0,126,128,129,127,126,128,129,127,126,128,129,127,126,128,129,127,126,127,126,127,126,127,126,127,127,126,128,129,127,126,128,129,127,127,127,126,127,127,126,128,129,127,126,128,129,127,126,128,129,127,126,128,129,127,127,128,129,127,126,127,127,126,127,126,126,128,129,127,126,128,129,127,126,128,129,127,127,127,204,205,206,207,206],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[2,2],[[]],[[]],[[4,4],5],[2,6],[2],[[4,4],7],[[2,2],7],[[2,8],7],[[2,9,10,[0,[11,12]]],13],[[4,14],15],[[16,14],15],[[17,14],15],[[2,14],15],[[]],[[]],[[]],[[]],[[18,19],[[21,[2,20]]]],[4],[2,19],[3,2],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[2,[[6,[25]]]],[16,27],[17,27],[[18,[29,[19,28]]],[[21,[30]]]],[[4,4],[[6,[5]]]],[[2,[25,[31]]],[[21,[32,20]]]],[2,[[21,[20]]]],[[]],[[]],[[],21],[33,[[21,[4]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[2,33],[[2,18],[[21,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],35],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[13,3],[[35,35],35],[[35,35]],[[35,35],35],[[35,35]],[35,33],[[35,35],35],[[35,35]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[13,13],[[]],[[]],[[35,35],5],[35,35],[[35,35],7],[13,6],[[35,35],35],[[],35],[[35,35],7],[[13,13],7],[[13,8],7],[[35,36]],[[35,14],15],[[35,14],15],[[35,14],15],[[35,14],15],[[35,14],15],[[37,14],15],[[38,14],15],[[13,14],15],[[]],[[]],[[]],[[]],[33,[[6,[35]]]],[33,35],[33,35],[[18,19],[[21,[13,20]]]],[36,35],[35],[13,19],[3,13],[[35,35]],[[],22],[[35,35],35],[[35,35],7],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[35,7],[35,7],[35,35],[13,[[6,[25]]]],[37,27],[38,27],[[18,[29,[19,28]]],[[21,[30]]]],[[35,35],[[6,[5]]]],[[35,35]],[[13,[25,[31]]],[[21,[32,20]]]],[13,[[21,[20]]]],[[35,35,7]],[[35,35],35],[[35,35]],[[35,35],35],[[]],[[]],[[35,35]],[33,[[21,[35]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[[35,35],35],[13,33],[[13,18],[[21,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[39,33]],[40,40],[39,39],[[]],[[]],[[40,40],5],[39,6],[[40,40],7],[[39,41],7],[[39,39],7],[[40,14],15],[[42,14],15],[[43,14],15],[[39,14],15],[[]],[[]],[[]],[[]],[[44,45],[[21,[39,46]]]],[39,47],[40],[39,45],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[39,[[6,[25]]]],[42,27],[43,27],[[44,[29,[45,28]]],[[21,[48]]]],[[40,40],[[6,[5]]]],[39,[[21,[46]]]],[[]],[[]],[[],21],[33,[[21,[40]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[39,33],[[39,44],[[21,[[29,[45,49]],46]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],50],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[50,50],50],[[50,50]],[[50,50],50],[[50,50]],[50,33],[[50,50],50],[[50,50]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,50],[51,51],[[]],[[]],[[50,50],5],[50,50],[[50,50],7],[51,6],[[50,50],50],[51],[[],50],[[50,50],7],[[51,51],7],[[51,41],7],[[50,36]],[[50,14],15],[[50,14],15],[[50,14],15],[[50,14],15],[[50,14],15],[[52,14],15],[[53,14],15],[[51,14],15],[[]],[[]],[[]],[[]],[33,[[6,[50]]]],[33,50],[33,50],[[44,45],[[21,[51,46]]]],[36,50],[51,47],[50],[51,45],[[50,50]],[[],22],[[50,50],50],[[50,50],7],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[50,7],[50,7],[50,50],[51,[[6,[25]]]],[52,27],[53,27],[[44,[29,[45,28]]],[[21,[48]]]],[[50,50],[[6,[5]]]],[[51,33,33,33,33,33,33,50]],[[50,50]],[51,[[21,[46]]]],[[50,50,7]],[[50,50],50],[[50,50]],[[50,50],50],[[51,54]],[[]],[[]],[[50,50]],[33,[[21,[50]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[[50,50],50],[51,33],[[51,44],[[21,[[29,[45,49]],46]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[55,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,56],[55,55],[[]],[[]],[[56,56],5],[55,6],[55],[[56,56],7],[[55,55],7],[[55,8],7],[[56,14],15],[[57,14],15],[[58,14],15],[[55,14],15],[[]],[[]],[[]],[[]],[[18,19],[[21,[55,20]]]],[56],[55,19],[3,55],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[55,[[6,[25]]]],[57,27],[58,27],[[18,[29,[19,28]]],[[21,[30]]]],[[56,56],[[6,[5]]]],[[55,[25,[31]]],[[21,[32,20]]]],[55,[[21,[20]]]],[[55,59,59]],[[55,60,60,60,60]],[[]],[[]],[33,[[21,[56]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[55,33],[[55,18],[[21,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[61,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,62],[61,61],[[]],[[]],[[62,62],5],[61,6],[61],[[62,62],7],[[61,61],7],[[61,8],7],[[62,14],15],[[63,14],15],[[64,14],15],[[61,14],15],[[]],[[]],[[]],[[]],[[18,19],[[21,[61,20]]]],[[61,9,10,[0,[11,12]]],55],[62],[61,19],[3,61],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[61,[[6,[25]]]],[63,27],[64,27],[[18,[29,[19,28]]],[[21,[30]]]],[[62,62],[[6,[5]]]],[[61,[25,[31]]],[[21,[32,20]]]],[61,[[21,[20]]]],[[]],[[]],[33,[[21,[62]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[61,33],[[61,18],[[21,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[66,66],[[]],[[]],[[65,65],5],[66,6],[[65,65],7],[[66,66],7],[[66,41],7],[[65,14],15],[[67,14],15],[[68,14],15],[[66,14],15],[[]],[[]],[[]],[[]],[[44,45],[[21,[66,46]]]],[66,47],[65],[66,45],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[66,[[6,[25]]]],[67,27],[68,27],[[44,[29,[45,28]]],[[21,[48]]]],[[65,65],[[6,[5]]]],[66,[[21,[46]]]],[[]],[[]],[33,[[21,[65]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[66,33],[[66,44],[[21,[[29,[45,49]],46]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,69],[70,70],[[]],[[]],[[69,69],5],[70,6],[[69,69],7],[[70,41],7],[[70,70],7],[[69,14],15],[[71,14],15],[[72,14],15],[[70,14],15],[[]],[[]],[[]],[[]],[[44,45],[[21,[70,46]]]],[70,47],[69],[70,45],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[70,[[6,[25]]]],[71,27],[72,27],[[44,[29,[45,28]]],[[21,[48]]]],[[69,69],[[6,[5]]]],[70,[[21,[46]]]],[[]],[[]],[[],21],[33,[[21,[69]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[70,33],[[70,44],[[21,[[29,[45,49]],46]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[73,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,74],[73,73],[[]],[[]],[[74,74],5],[73,6],[73],[[74,74],7],[[73,8],7],[[73,73],7],[[74,14],15],[[75,14],15],[[76,14],15],[[73,14],15],[[]],[[]],[[]],[[]],[[18,19],[[21,[73,20]]]],[[73,77,33]],[74],[73,19],[3,73],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[73,[[6,[25]]]],[75,27],[76,27],[[18,[29,[19,28]]],[[21,[30]]]],[[74,74],[[6,[5]]]],[[73,78,33]],[[73,[25,[31]]],[[21,[32,20]]]],[73,[[21,[20]]]],[[]],[[]],[[],21],[33,[[21,[74]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[73,33],[[73,18],[[21,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],79],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[78,3],[[79,79],79],[[79,79]],[[79,79],79],[[79,79]],[79,33],[[79,79],79],[[79,79]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,80],[81,81],[82,82],[79,79],[78,78],[[]],[[]],[[]],[[]],[[]],[[80,80],5],[[81,81],5],[[82,82],5],[[79,79],5],[79,79],[[79,79],7],[78,6],[78],[[79,79],79],[[],79],[[80,80],7],[[81,81],7],[[82,82],7],[[79,79],7],[[78,8],7],[[78,78],7],[[79,36]],[[80,14],15],[[81,14],15],[[82,14],15],[[79,14],15],[[79,14],15],[[79,14],15],[[79,14],15],[[79,14],15],[[83,14],15],[[84,14],15],[[78,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,[[6,[79]]]],[33,79],[33,79],[[18,19],[[21,[78,20]]]],[36,79],[80],[81],[82],[79],[78,19],[3,78],[[79,79]],[[],22],[[79,79],79],[[79,79],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[79,7],[79,7],[79,79],[78,[[6,[25]]]],[83,27],[84,27],[[18,[29,[19,28]]],[[21,[30]]]],[[80,80],[[6,[5]]]],[[81,81],[[6,[5]]]],[[82,82],[[6,[5]]]],[[79,79],[[6,[5]]]],[[79,79]],[[78,[25,[31]]],[[21,[32,20]]]],[78,[[21,[20]]]],[[79,79,7]],[[78,81]],[[78,59,59,59,59]],[[78,33]],[[78,82]],[[78,59,59]],[[78,33]],[[78,59,59]],[78],[[78,59,59]],[[79,79],79],[[79,79]],[[79,79],79],[[]],[[]],[[]],[[]],[[]],[[79,79]],[33,[[21,[80]]]],[[],21],[[],21],[33,[[21,[81]]]],[[],21],[33,[[21,[82]]]],[33,[[21,[79]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[79,79],79],[78,33],[[78,18],[[21,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[85,33]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[85,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,86],[85,85],[[]],[[]],[[86,86],5],[85,6],[85],[[86,86],7],[[85,85],7],[[85,8],7],[[86,14],15],[[87,14],15],[[88,14],15],[[85,14],15],[[]],[[]],[[]],[[]],[[18,19],[[21,[85,20]]]],[[85,[6,[85]],78,10,[0,[11,12]]],73],[[85,10,[0,[11,12]]],89],[86],[85,19],[3,85],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[85,[[6,[25]]]],[87,27],[88,27],[[18,[29,[19,28]]],[[21,[30]]]],[[86,86],[[6,[5]]]],[[85,[25,[31]]],[[21,[32,20]]]],[85,[[21,[20]]]],[[85,59,59,59,59]],[[]],[[]],[33,[[21,[86]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[85,33],[[85,18],[[21,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[89,77,33]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[89,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,90],[91,91],[92,92],[93,93],[89,89],[[]],[[]],[[]],[[]],[[]],[[90,90],5],[[91,91],5],[[92,92],5],[[93,93],5],[89,6],[89],[[90,90],7],[[91,91],7],[[92,92],7],[[93,93],7],[[89,89],7],[[89,8],7],[[90,14],15],[[91,14],15],[[92,14],15],[[93,14],15],[[94,14],15],[[95,14],15],[[89,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,19],[[21,[89,20]]]],[90],[91],[92],[93],[89,19],[3,89],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[89,[[6,[25]]]],[94,27],[95,27],[[18,[29,[19,28]]],[[21,[30]]]],[[90,90],[[6,[5]]]],[[91,91],[[6,[5]]]],[[92,92],[[6,[5]]]],[[93,93],[[6,[5]]]],[[89,77,33,91]],[[89,[25,[31]]],[[21,[32,20]]]],[89,[[21,[20]]]],[[89,96]],[[89,[6,[97]]]],[[89,59,59]],[89],[[89,59,59]],[89],[[89,[6,[89]]]],[[89,96]],[[89,77,33,59,59]],[[]],[[]],[[]],[[]],[[]],[33,[[21,[90]]]],[[],21],[[],21],[33,[[21,[91]]]],[33,[[21,[92]]]],[[],21],[33,[[21,[93]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[89],[89],[89,33],[[89,18],[[21,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[98,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[99,99],[98,98],[[]],[[]],[[99,99],5],[[98,10,[0,[11,12]]],78],[98,6],[98],[[99,99],7],[[98,98],7],[[98,8],7],[[99,14],15],[[100,14],15],[[101,14],15],[[98,14],15],[[]],[[]],[[]],[[]],[[18,19],[[21,[98,20]]]],[[98,9,10,[0,[11,12]]],85],[99],[98,19],[3,98],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[98,[[6,[25]]]],[100,27],[101,27],[[18,[29,[19,28]]],[[21,[30]]]],[[99,99],[[6,[5]]]],[[98,33]],[[98,[25,[31]]],[[21,[32,20]]]],[98,[[21,[20]]]],[[]],[[]],[33,[[21,[99]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[98,33],[[98,18],[[21,[20]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[102,102],[103,103],[[]],[[]],[[102,102],5],[[103,59,59,59,59]],[103,6],[[102,102],7],[[103,41],7],[[103,103],7],[[102,14],15],[[104,14],15],[[105,14],15],[[103,14],15],[[]],[[]],[[]],[[]],[[44,45],[[21,[103,46]]]],[103,47],[102],[103,45],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[103,[[6,[25]]]],[104,27],[105,27],[[44,[29,[45,28]]],[[21,[48]]]],[[102,102],[[6,[5]]]],[103],[[103,33]],[103,[[21,[46]]]],[[]],[[]],[33,[[21,[102]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[103,33],[[103,44],[[21,[[29,[45,49]],46]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],106],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[106,106],106],[[106,106]],[[106,106],106],[[106,106]],[106,33],[[106,106],106],[[106,106]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[107,107],[108,108],[109,109],[106,106],[110,110],[[]],[[]],[[]],[[]],[[]],[[107,107],5],[[108,108],5],[[109,109],5],[[106,106],5],[106,106],[[106,106],7],[110,6],[[106,106],106],[[],106],[[107,107],7],[[108,108],7],[[109,109],7],[[106,106],7],[[110,41],7],[[110,110],7],[[106,36]],[[107,14],15],[[108,14],15],[[109,14],15],[[106,14],15],[[106,14],15],[[106,14],15],[[106,14],15],[[106,14],15],[[111,14],15],[[112,14],15],[[110,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,[[6,[106]]]],[33,106],[33,106],[[44,45],[[21,[110,46]]]],[36,106],[110,47],[107],[108],[109],[106],[110,45],[[106,106]],[[],22],[[106,106],106],[[106,106],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[106,7],[106,7],[106,106],[110,[[6,[25]]]],[111,27],[112,27],[[44,[29,[45,28]]],[[21,[48]]]],[[107,107],[[6,[5]]]],[[108,108],[[6,[5]]]],[[109,109],[[6,[5]]]],[[106,106],[[6,[5]]]],[[106,106]],[110,[[21,[46]]]],[[106,106,7]],[[106,106],106],[[106,106]],[[106,106],106],[[]],[[]],[[]],[[]],[[]],[[106,106]],[[],21],[33,[[21,[107]]]],[[],21],[33,[[21,[108]]]],[[],21],[33,[[21,[109]]]],[33,[[21,[106]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[106,106],106],[110,33],[[110,44],[[21,[[29,[45,49]],46]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[113,113],[114,114],[[]],[[]],[[113,113],5],[[114,33]],[114,6],[[113,113],7],[[114,114],7],[[114,41],7],[[113,14],15],[[115,14],15],[[116,14],15],[[114,14],15],[[]],[[]],[[]],[[]],[[44,45],[[21,[114,46]]]],[114,47],[113],[114,45],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[114,[[6,[25]]]],[115,27],[116,27],[[44,[29,[45,28]]],[[21,[48]]]],[[113,113],[[6,[5]]]],[114,[[21,[46]]]],[[]],[[]],[[],21],[33,[[21,[113]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[114,33],[[114,44],[[21,[[29,[45,49]],46]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[117,117],[118,118],[119,119],[120,120],[121,121],[[]],[[]],[[]],[[]],[[]],[121],[[117,117],5],[[118,118],5],[[119,119],5],[[120,120],5],[[121,59,59,[123,[122]]]],[[121,59,59]],[121,6],[[117,117],7],[[118,118],7],[[119,119],7],[[120,120],7],[[121,121],7],[[121,41],7],[[117,14],15],[[118,14],15],[[119,14],15],[[120,14],15],[[124,14],15],[[125,14],15],[[121,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,45],[[21,[121,46]]]],[121,47],[117],[118],[119],[120],[121,45],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[121,[[6,[25]]]],[124,27],[125,27],[[44,[29,[45,28]]],[[21,[48]]]],[[117,117],[[6,[5]]]],[[118,118],[[6,[5]]]],[[119,119],[[6,[5]]]],[[120,120],[[6,[5]]]],[121,[[21,[46]]]],[[]],[[]],[[]],[[]],[[]],[[],21],[33,[[21,[117]]]],[[],21],[33,[[21,[118]]]],[33,[[21,[119]]]],[[],21],[[],21],[33,[[21,[120]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[121,33],[[121,[123,[122]]]],[[121,44],[[21,[[29,[45,49]],46]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[126,126],[127,127],[[]],[[]],[[126,126],5],[127,6],[[126,126],7],[[127,41],7],[[127,127],7],[[126,14],15],[[128,14],15],[[129,14],15],[[127,14],15],[[]],[[]],[[]],[[]],[[44,45],[[21,[127,46]]]],[127,47],[126],[127,45],[[],22],[[]],[[]],[[]],[[]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[[[24,[23]]],[[24,[1,23]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[26,[[26,[1]]]],[127,[[6,[25]]]],[128,27],[129,27],[[44,[29,[45,28]]],[[21,[48]]]],[[126,126],[[6,[5]]]],[[127,33]],[127,[[21,[46]]]],[[]],[[]],[33,[[21,[126]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],34],[[],34],[[],34],[[],34],[127,33],[[127,44],[[21,[[29,[45,49]],46]]]],0,0,0,0,0],"p":[[8,"Any"],[3,"WpPresentation"],[3,"WeakBackend"],[4,"Error"],[4,"Ordering"],[4,"Option"],[15,"bool"],[3,"Weak"],[3,"WlSurface"],[3,"QueueHandle"],[8,"Send"],[8,"Sync"],[3,"WpPresentationFeedback"],[3,"Formatter"],[6,"Result"],[4,"Request"],[4,"Event"],[3,"Connection"],[3,"ObjectId"],[3,"InvalidId"],[4,"Result"],[3,"Interface"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"u16"],[3,"OwnedFd"],[3,"Message"],[4,"DispatchError"],[8,"ObjectData"],[8,"Proxy"],[15,"u32"],[3,"TypeId"],[3,"Kind"],[8,"IntoIterator"],[4,"Request"],[4,"Event"],[3,"WpPresentation"],[4,"Error"],[3,"Weak"],[4,"Request"],[4,"Event"],[3,"DisplayHandle"],[3,"ObjectId"],[3,"InvalidId"],[3,"WeakHandle"],[4,"DispatchError"],[6,"RawFd"],[3,"Kind"],[3,"WpPresentationFeedback"],[4,"Request"],[4,"Event"],[3,"WlOutput"],[3,"WpViewport"],[4,"Error"],[4,"Request"],[4,"Event"],[15,"i32"],[15,"f64"],[3,"WpViewporter"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"WpViewport"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"WpViewporter"],[4,"Request"],[4,"Event"],[3,"XdgPopup"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlSeat"],[3,"XdgPositioner"],[3,"ConstraintAdjustment"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[4,"Event"],[3,"XdgSurface"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"XdgToplevel"],[4,"Error"],[4,"ResizeEdge"],[4,"State"],[4,"WmCapabilities"],[4,"Request"],[4,"Event"],[3,"String"],[3,"WlOutput"],[3,"XdgWmBase"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"XdgPopup"],[4,"Request"],[4,"Event"],[3,"ConstraintAdjustment"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[3,"XdgPositioner"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"XdgSurface"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"ResizeEdge"],[4,"State"],[4,"WmCapabilities"],[3,"XdgToplevel"],[15,"u8"],[3,"Vec"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"XdgWmBase"],[4,"Request"],[4,"Event"],[13,"ClockId"],[13,"Feedback"],[13,"Presented"],[13,"SyncOutput"],[13,"ClockId"],[13,"Feedback"],[13,"Presented"],[13,"SyncOutput"],[13,"SetSource"],[13,"SetDestination"],[13,"GetViewport"],[13,"SetSource"],[13,"SetDestination"],[13,"GetViewport"],[13,"Configure"],[13,"Repositioned"],[13,"Reposition"],[13,"Grab"],[13,"SetAnchor"],[13,"SetConstraintAdjustment"],[13,"SetGravity"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetParentSize"],[13,"SetParentConfigure"],[13,"SetOffset"],[13,"Configure"],[13,"SetWindowGeometry"],[13,"GetPopup"],[13,"AckConfigure"],[13,"WmCapabilities"],[13,"Configure"],[13,"ConfigureBounds"],[13,"SetAppId"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[13,"SetParent"],[13,"ShowWindowMenu"],[13,"Move"],[13,"SetTitle"],[13,"Ping"],[13,"Pong"],[13,"GetXdgSurface"],[13,"Configure"],[13,"Repositioned"],[13,"Reposition"],[13,"Grab"],[13,"SetAnchor"],[13,"SetConstraintAdjustment"],[13,"SetGravity"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetParentSize"],[13,"SetParentConfigure"],[13,"SetOffset"],[13,"Configure"],[13,"SetWindowGeometry"],[13,"GetToplevel"],[13,"GetPopup"],[13,"AckConfigure"],[13,"WmCapabilities"],[13,"Configure"],[13,"ConfigureBounds"],[13,"SetAppId"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[13,"SetParent"],[13,"ShowWindowMenu"],[13,"Move"],[13,"SetTitle"],[13,"Ping"],[13,"CreatePositioner"],[13,"GetXdgSurface"],[13,"Pong"]]},\
"wayland_scanner":{"doc":"Wayland protocol code-generation machinnery","t":[14,14,14],"n":["generate_client_code","generate_interfaces","generate_server_code"],"q":["wayland_scanner","",""],"d":["Proc-macro for generating client-side API associated with …","Proc-macro for generating low-level interfaces associated …","Proc-macro for generating server-side API associated with …"],"i":[0,0,0],"f":[0,0,0],"p":[]},\
"wayland_server":{"doc":"Interface for interacting with the Wayland protocol, …","t":[13,13,4,3,3,8,4,3,3,16,8,13,3,3,13,16,8,3,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,0,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,10,12,12,12,12,12,12,3,8,3,13,3,4,8,3,3,4,3,13,13,8,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,12,11,11,0,11,11,11,11,10,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,7,4,4,4,13,13,13,13,13,13,17,13,13,3,3,3,13,13,13,13,13,3,3,13,13,13,13,13,13,4,3,13,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,5,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,19,3,3,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,13,17,17,4,17,17,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,17,17,4,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,4,17,17,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,17,17,17,17,17,17,17,17,17,17,17,17,13,4,4,13,13,17,17,17,17,17,17,13,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,18,13,3,4,13,18,18,17,17,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,13,17,17,17,17,17,17,4,4,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,4,4,13,13,13,17,17,17,17,17,17,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,13,4,13,4,13,4,13,13,13,13,17,17,13,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,13,13,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,13,13,13,3,13,13,13,13,18,17,17,13,4,13,4,4,13,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,4,13,13,13,13,4,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,4,4,13,13,13,13,13,13,17,17,17,17,13,13,4,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,17,17,17,17,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,3,17,17,17,17,4,4,13,13,13,18,13,13,18,17,17,17,17,17,17,17,17,13,4,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,4,4,13,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,18,18,18,13,13,13,17,17,17,17,17,17,4,13,4,18,18,13,18,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,3,13,18,13,13,13,13,13,13,13,13,18,18,18,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,4,17,17,17,17,17,17,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,4,4,13,17,17,17,17,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,4,4,13,13,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,13,13,13,17,17,17,17,13,4,4,13,13,13,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,4,13,13,13,17,17,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AlreadyInUse","BadMessage","BindError","Client","DataInit","Dispatch","DispatchError","Display","DisplayHandle","Event","GlobalDispatch","Io","ListeningSocket","New","PermissionDenied","Request","Resource","ResourceData","RuntimeDirNotSet","Unknown","Value","WEnum","Weak","accept","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_fd","as_filelike","as_filelike_view","as_raw_fd","as_raw_filelike","as_raw_socketlike","as_socketlike","as_socketlike_view","backend","backend","backend_handle","bind","bind","bind_absolute","bind_auto","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_view","can_view","client","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_global","create_resource","create_resource_from_objdata","custom_init","data","delegate_dispatch","delegate_global_dispatch","destroyed","destroyed","destroyed","disable_global","dispatch_clients","downgrade","drop","eq","eq","eq","eq","flush_clients","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_id","get_client","get_credentials","get_data","get_object_data","handle","handle","hash","id","id","id","init","insert_client","interface","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","is_alive","kill","new","object_data","object_from_protocol_id","object_info","parse_request","post_error","post_error","protocol","provide","provide","remove_global","request","request","send_event","send_event","socket_name","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udata","upgrade","version","write_event","0","interface","opcode","sender_id","0","0","Backend","ClientData","ClientId","ConnectionClosed","Credentials","DisconnectReason","GlobalHandler","GlobalId","Handle","InitError","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","ProtocolError","WeakHandle","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_view","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_global","create_object","debug","debug","debug","destroyed","disable_global","disconnected","dispatch_all_clients","dispatch_single_client","downcast","downcast","downcast","downcast_arc","downcast_arc","downcast_arc","downcast_mut","downcast_mut","downcast_mut","downcast_rc","downcast_rc","downcast_rc","downcast_ref","downcast_ref","downcast_ref","downgrade","eq","eq","eq","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_client","get_client_credentials","get_client_data","get_global_handler","get_object_data","get_object_data_any","gid","global_info","handle","hash","hash","hash","initialized","insert_client","interface","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","io_lifetimes","is","is","is","is_null","kill_client","new","null","object_for_protocol_id","object_info","pid","poll_fd","post_error","protocol","protocol_id","provide","provide","remove_global","request","same_client_as","send_event","set_object_data","smallvec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","upgrade","with_all_clients","with_all_objects_for","0","0","ANONYMOUS_INTERFACE","AllowNull","Argument","ArgumentType","Array","Array","Fd","Fd","Fixed","Fixed","INLINE_ARGS","Int","Int","Interface","Message","MessageDesc","NewId","NewId","No","Object","Object","ObjectInfo","ProtocolError","Str","Str","Uint","Uint","Unknown","Value","WEnum","WEnumError","Yes","a","arg_interfaces","args","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_ptr","child_interface","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","eq","eq","eq","eq","event_count","events","events","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_type","h","i","id","interface","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_destructor","map_fd","message","n","name","name","name","name","o","object_id","object_interface","opcode","provide","provide","request_count","requests","requests","s","same_interface","same_type","sender_id","signature","signature","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","u","version","version","version","wl_argument","wl_interface","wl_message","0","0","0","0","0","0","0","0","0","0","0","0","__interfaces","wl_buffer","wl_callback","wl_compositor","wl_data_device","wl_data_device_manager","wl_data_offer","wl_data_source","wl_keyboard","wl_output","wl_pointer","wl_region","wl_seat","wl_shell","wl_shell_surface","wl_shm","wl_shm_pool","wl_subcompositor","wl_subsurface","wl_surface","wl_touch","WL_BUFFER_INTERFACE","WL_CALLBACK_INTERFACE","WL_COMPOSITOR_INTERFACE","WL_DATA_DEVICE_INTERFACE","WL_DATA_DEVICE_MANAGER_INTERFACE","WL_DATA_OFFER_INTERFACE","WL_DATA_SOURCE_INTERFACE","WL_DISPLAY_INTERFACE","WL_KEYBOARD_INTERFACE","WL_OUTPUT_INTERFACE","WL_POINTER_INTERFACE","WL_REGION_INTERFACE","WL_REGISTRY_INTERFACE","WL_SEAT_INTERFACE","WL_SHELL_INTERFACE","WL_SHELL_SURFACE_INTERFACE","WL_SHM_INTERFACE","WL_SHM_POOL_INTERFACE","WL_SUBCOMPOSITOR_INTERFACE","WL_SUBSURFACE_INTERFACE","WL_SURFACE_INTERFACE","WL_TOUCH_INTERFACE","wl_buffer_events","wl_buffer_interface","wl_buffer_requests","wl_callback_events","wl_callback_interface","wl_compositor_interface","wl_compositor_requests","wl_data_device_events","wl_data_device_interface","wl_data_device_manager_interface","wl_data_device_manager_requests","wl_data_device_requests","wl_data_offer_events","wl_data_offer_interface","wl_data_offer_requests","wl_data_source_events","wl_data_source_interface","wl_data_source_requests","wl_display_events","wl_display_interface","wl_display_requests","wl_keyboard_events","wl_keyboard_interface","wl_keyboard_requests","wl_output_events","wl_output_interface","wl_output_requests","wl_pointer_events","wl_pointer_interface","wl_pointer_requests","wl_region_interface","wl_region_requests","wl_registry_events","wl_registry_interface","wl_registry_requests","wl_seat_events","wl_seat_interface","wl_seat_requests","wl_shell_interface","wl_shell_requests","wl_shell_surface_events","wl_shell_surface_interface","wl_shell_surface_requests","wl_shm_events","wl_shm_interface","wl_shm_pool_interface","wl_shm_pool_requests","wl_shm_requests","wl_subcompositor_interface","wl_subcompositor_requests","wl_subsurface_interface","wl_subsurface_requests","wl_surface_events","wl_surface_interface","wl_surface_requests","wl_touch_events","wl_touch_interface","wl_touch_requests","Destroy","EVT_RELEASE_OPCODE","EVT_RELEASE_SINCE","Event","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Release","Request","WlBuffer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","release","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","Event","Request","WlCallback","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","done","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","callback_data","CreateRegion","CreateSurface","Event","REQ_CREATE_REGION_OPCODE","REQ_CREATE_REGION_SINCE","REQ_CREATE_SURFACE_OPCODE","REQ_CREATE_SURFACE_SINCE","Request","WlCompositor","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","id","id","DataOffer","Drop","EVT_DATA_OFFER_OPCODE","EVT_DATA_OFFER_SINCE","EVT_DROP_OPCODE","EVT_DROP_SINCE","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","EVT_SELECTION_OPCODE","EVT_SELECTION_SINCE","Enter","Error","Event","Leave","Motion","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_SELECTION_OPCODE","REQ_SET_SELECTION_SINCE","REQ_START_DRAG_OPCODE","REQ_START_DRAG_SINCE","Release","Request","Role","Selection","SetSelection","StartDrag","WlDataDevice","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","data_offer","drop","enter","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leave","motion","object_data","opcode","opcode","parse_request","partial_cmp","selection","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","id","id","id","serial","surface","time","x","x","y","y","icon","origin","serial","serial","source","source","Ask","Copy","CreateDataSource","DndAction","Event","GetDataDevice","Move","None","REQ_CREATE_DATA_SOURCE_OPCODE","REQ_CREATE_DATA_SOURCE_SINCE","REQ_GET_DATA_DEVICE_OPCODE","REQ_GET_DATA_DEVICE_SINCE","Request","WlDataDeviceManager","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","data","difference","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","handle","hash","id","insert","interface","intersection","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","not","object_data","opcode","opcode","parse_request","partial_cmp","remove","send_event","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","version","write_event","id","id","seat","Accept","Action","Destroy","EVT_ACTION_OPCODE","EVT_ACTION_SINCE","EVT_OFFER_OPCODE","EVT_OFFER_SINCE","EVT_SOURCE_ACTIONS_OPCODE","EVT_SOURCE_ACTIONS_SINCE","Error","Event","Finish","InvalidAction","InvalidActionMask","InvalidFinish","InvalidOffer","Offer","REQ_ACCEPT_OPCODE","REQ_ACCEPT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FINISH_OPCODE","REQ_FINISH_SINCE","REQ_RECEIVE_OPCODE","REQ_RECEIVE_SINCE","REQ_SET_ACTIONS_OPCODE","REQ_SET_ACTIONS_SINCE","Receive","Request","SetActions","SourceActions","WlDataOffer","action","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","offer","opcode","opcode","parse_request","partial_cmp","send_event","source_actions","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","dnd_action","mime_type","source_actions","dnd_actions","fd","mime_type","mime_type","preferred_action","serial","Action","Cancelled","Destroy","DndDropPerformed","DndFinished","EVT_ACTION_OPCODE","EVT_ACTION_SINCE","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_DND_DROP_PERFORMED_OPCODE","EVT_DND_DROP_PERFORMED_SINCE","EVT_DND_FINISHED_OPCODE","EVT_DND_FINISHED_SINCE","EVT_SEND_OPCODE","EVT_SEND_SINCE","EVT_TARGET_OPCODE","EVT_TARGET_SINCE","Error","Event","InvalidActionMask","InvalidSource","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_OFFER_OPCODE","REQ_OFFER_SINCE","REQ_SET_ACTIONS_OPCODE","REQ_SET_ACTIONS_SINCE","Request","Send","SetActions","Target","WlDataSource","action","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancelled","clone","clone","clone_into","clone_into","cmp","data","dnd_drop_performed","dnd_finished","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send","send_event","target","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","dnd_action","fd","mime_type","mime_type","dnd_actions","mime_type","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_KEYMAP_OPCODE","EVT_KEYMAP_SINCE","EVT_KEY_OPCODE","EVT_KEY_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MODIFIERS_OPCODE","EVT_MODIFIERS_SINCE","EVT_REPEAT_INFO_OPCODE","EVT_REPEAT_INFO_SINCE","Enter","Event","Key","KeyState","Keymap","KeymapFormat","Leave","Modifiers","NoKeymap","Pressed","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Released","RepeatInfo","Request","WlKeyboard","XkbV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","enter","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","keymap","leave","modifiers","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","repeat_info","send_event","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","delay","fd","format","group","key","keys","mods_depressed","mods_latched","mods_locked","rate","serial","serial","serial","serial","size","state","surface","surface","time","Current","Description","Done","EVT_DESCRIPTION_OPCODE","EVT_DESCRIPTION_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_GEOMETRY_OPCODE","EVT_GEOMETRY_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_SCALE_OPCODE","EVT_SCALE_SINCE","Event","Flipped","Flipped180","Flipped270","Flipped90","Geometry","HorizontalBgr","HorizontalRgb","Mode","Mode","Name","None","Normal","Preferred","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Scale","Subpixel","Transform","Unknown","VerticalBgr","VerticalRgb","WlOutput","_180","_270","_90","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","data","description","difference","done","empty","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","geometry","handle","hash","hash","hash","id","insert","interface","intersection","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","mode","name","not","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","partial_cmp","remove","scale","send_event","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","version","write_event","description","factor","flags","height","make","model","name","physical_height","physical_width","refresh","subpixel","transform","width","x","y","Axis","Axis","AxisDiscrete","AxisSource","AxisSource","AxisStop","AxisValue120","Button","ButtonState","Continuous","EVT_AXIS_DISCRETE_OPCODE","EVT_AXIS_DISCRETE_SINCE","EVT_AXIS_OPCODE","EVT_AXIS_SINCE","EVT_AXIS_SOURCE_OPCODE","EVT_AXIS_SOURCE_SINCE","EVT_AXIS_STOP_OPCODE","EVT_AXIS_STOP_SINCE","EVT_AXIS_VALUE120_OPCODE","EVT_AXIS_VALUE120_SINCE","EVT_BUTTON_OPCODE","EVT_BUTTON_SINCE","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","Enter","Error","Event","Finger","Frame","HorizontalScroll","Leave","Motion","Pressed","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_CURSOR_OPCODE","REQ_SET_CURSOR_SINCE","Release","Released","Request","Role","SetCursor","VerticalScroll","Wheel","WheelTilt","WlPointer","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","axis","axis_discrete","axis_source","axis_stop","axis_value120","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","data","enter","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from","from","from_id","handle","hash","hash","hash","hash","id","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leave","motion","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","partial_cmp","partial_cmp","send_event","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","write_event","axis","axis","axis","axis","axis_source","button","discrete","serial","serial","serial","state","surface","surface","surface_x","surface_x","surface_y","surface_y","time","time","time","time","value","value120","hotspot_x","hotspot_y","serial","surface","Add","Destroy","Event","REQ_ADD_OPCODE","REQ_ADD_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SUBTRACT_OPCODE","REQ_SUBTRACT_SINCE","Request","Subtract","WlRegion","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","height","height","width","width","x","x","y","y","Capabilities","Capability","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","Error","Event","GetKeyboard","GetPointer","GetTouch","Keyboard","MissingCapability","Name","Pointer","REQ_GET_KEYBOARD_OPCODE","REQ_GET_KEYBOARD_SINCE","REQ_GET_POINTER_OPCODE","REQ_GET_POINTER_SINCE","REQ_GET_TOUCH_OPCODE","REQ_GET_TOUCH_SINCE","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Touch","WlSeat","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","data","difference","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_id","from_iter","handle","hash","hash","id","insert","interface","intersection","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_empty","name","not","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","remove","send_event","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","version","write_event","capabilities","name","id","id","id","Error","Event","GetShellSurface","REQ_GET_SHELL_SURFACE_OPCODE","REQ_GET_SHELL_SURFACE_SINCE","Request","Role","WlShell","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","id","surface","Bottom","BottomLeft","BottomRight","Configure","Default","Driver","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_PING_OPCODE","EVT_PING_SINCE","EVT_POPUP_DONE_OPCODE","EVT_POPUP_DONE_SINCE","Event","Fill","FullscreenMethod","Inactive","Left","Move","None","Ping","Pong","PopupDone","REQ_MOVE_OPCODE","REQ_MOVE_SINCE","REQ_PONG_OPCODE","REQ_PONG_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","REQ_SET_CLASS_OPCODE","REQ_SET_CLASS_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_POPUP_OPCODE","REQ_SET_POPUP_SINCE","REQ_SET_TITLE_OPCODE","REQ_SET_TITLE_SINCE","REQ_SET_TOPLEVEL_OPCODE","REQ_SET_TOPLEVEL_SINCE","REQ_SET_TRANSIENT_OPCODE","REQ_SET_TRANSIENT_SINCE","Request","Resize","Resize","Right","Scale","SetClass","SetFullscreen","SetMaximized","SetPopup","SetTitle","SetToplevel","SetTransient","Top","TopLeft","TopRight","Transient","WlShellSurface","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","configure","contains","contains","data","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_id","from_iter","from_iter","handle","hash","hash","hash","id","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_all","is_all","is_empty","is_empty","not","not","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","partial_cmp","ping","popup_done","remove","remove","send_event","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_event","edges","height","serial","width","class_","edges","flags","flags","framerate","method","output","output","parent","parent","seat","seat","seat","serial","serial","serial","serial","title","x","x","y","y","Abgr1555","Abgr16161616","Abgr16161616f","Abgr2101010","Abgr4444","Abgr8888","Argb1555","Argb16161616","Argb16161616f","Argb2101010","Argb4444","Argb8888","Axbxgxrx106106106106","Ayuv","Bgr233","Bgr565","Bgr565A8","Bgr888","Bgr888A8","Bgra1010102","Bgra4444","Bgra5551","Bgra8888","Bgrx1010102","Bgrx4444","Bgrx5551","Bgrx8888","Bgrx8888A8","C8","CreatePool","EVT_FORMAT_OPCODE","EVT_FORMAT_SINCE","Error","Event","Format","Format","Gr1616","Gr88","InvalidFd","InvalidFormat","InvalidStride","Nv12","Nv15","Nv16","Nv21","Nv24","Nv42","Nv61","P010","P012","P016","P210","Q401","Q410","R16","R8","REQ_CREATE_POOL_OPCODE","REQ_CREATE_POOL_SINCE","Request","Rg1616","Rg88","Rgb332","Rgb565","Rgb565A8","Rgb888","Rgb888A8","Rgba1010102","Rgba4444","Rgba5551","Rgba8888","Rgbx1010102","Rgbx4444","Rgbx5551","Rgbx8888","Rgbx8888A8","Uyvy","Vuy101010","Vuy888","Vyuy","WlShm","X0l0","X0l2","Xbgr1555","Xbgr16161616","Xbgr16161616f","Xbgr2101010","Xbgr4444","Xbgr8888","Xbgr8888A8","Xrgb1555","Xrgb16161616","Xrgb16161616f","Xrgb2101010","Xrgb4444","Xrgb8888","Xrgb8888A8","Xvyu1216161616","Xvyu16161616","Xvyu2101010","Xyuv8888","Y0l0","Y0l2","Y210","Y212","Y216","Y410","Y412","Y416","Yuv410","Yuv411","Yuv420","Yuv42010bit","Yuv4208bit","Yuv422","Yuv444","Yuyv","Yvu410","Yvu411","Yvu420","Yvu422","Yvu444","Yvyu","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","send_event","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","format","fd","id","size","CreateBuffer","Destroy","Event","REQ_CREATE_BUFFER_OPCODE","REQ_CREATE_BUFFER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","Request","Resize","WlShmPool","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","format","height","id","offset","size","stride","width","BadSurface","Destroy","Error","Event","GetSubsurface","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_SUBSURFACE_OPCODE","REQ_GET_SUBSURFACE_SINCE","Request","WlSubcompositor","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","id","parent","surface","BadSurface","Destroy","Error","Event","PlaceAbove","PlaceBelow","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_PLACE_ABOVE_OPCODE","REQ_PLACE_ABOVE_SINCE","REQ_PLACE_BELOW_OPCODE","REQ_PLACE_BELOW_SINCE","REQ_SET_DESYNC_OPCODE","REQ_SET_DESYNC_SINCE","REQ_SET_POSITION_OPCODE","REQ_SET_POSITION_SINCE","REQ_SET_SYNC_OPCODE","REQ_SET_SYNC_SINCE","Request","SetDesync","SetPosition","SetSync","WlSubsurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","sibling","sibling","x","y","Attach","Commit","Damage","DamageBuffer","Destroy","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","Enter","Error","Event","Frame","InvalidOffset","InvalidScale","InvalidSize","InvalidTransform","Leave","Offset","REQ_ATTACH_OPCODE","REQ_ATTACH_SINCE","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_DAMAGE_BUFFER_OPCODE","REQ_DAMAGE_BUFFER_SINCE","REQ_DAMAGE_OPCODE","REQ_DAMAGE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FRAME_OPCODE","REQ_FRAME_SINCE","REQ_OFFSET_OPCODE","REQ_OFFSET_SINCE","REQ_SET_BUFFER_SCALE_OPCODE","REQ_SET_BUFFER_SCALE_SINCE","REQ_SET_BUFFER_TRANSFORM_OPCODE","REQ_SET_BUFFER_TRANSFORM_SINCE","REQ_SET_INPUT_REGION_OPCODE","REQ_SET_INPUT_REGION_SINCE","REQ_SET_OPAQUE_REGION_OPCODE","REQ_SET_OPAQUE_REGION_SINCE","Request","SetBufferScale","SetBufferTransform","SetInputRegion","SetOpaqueRegion","WlSurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","enter","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leave","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","output","output","buffer","callback","height","height","region","region","scale","transform","width","width","x","x","x","x","y","y","y","y","Cancel","Down","EVT_CANCEL_OPCODE","EVT_CANCEL_SINCE","EVT_DOWN_OPCODE","EVT_DOWN_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","EVT_ORIENTATION_OPCODE","EVT_ORIENTATION_SINCE","EVT_SHAPE_OPCODE","EVT_SHAPE_SINCE","EVT_UP_OPCODE","EVT_UP_SINCE","Event","Frame","Motion","Orientation","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Shape","Up","WlTouch","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone_into","data","down","eq","eq","fmt","fmt","fmt","frame","from","from","from","from_id","handle","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","motion","object_data","opcode","opcode","orientation","parse_request","send_event","shape","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","up","version","write_event","id","id","id","id","id","major","minor","orientation","serial","serial","surface","time","time","time","x","x","y","y"],"q":["wayland_serverwayland_server::BindError","wayland_server::DispatchError","","","wayland_server::WEnum","","wayland_server::backendwayland_server::backend::DisconnectReason","wayland_server::backend::InitError","wayland_server::backend::protocolwayland_server::backend::protocol::Argument","","","","","","","","wayland_server::backend::protocol::ArgumentType","","wayland_server::backend::protocol::WEnum","","wayland_server::protocol","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::__interfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_callback","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_callback::Event","wayland_server::protocol::wl_compositor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_compositor::Request","","wayland_server::protocol::wl_data_device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_data_device::Event","","","","","","","","","","wayland_server::protocol::wl_data_device::Request","","","","","","wayland_server::protocol::wl_data_device_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_data_device_manager::Request","","","wayland_server::protocol::wl_data_offer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_data_offer::Event","","","wayland_server::protocol::wl_data_offer::Request","","","","","","wayland_server::protocol::wl_data_source","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_data_source::Event","","","","wayland_server::protocol::wl_data_source::Request","","wayland_server::protocol::wl_keyboard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_keyboard::Event","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_outputwayland_server::protocol::wl_output::Event","","","","","","","","","","","","","","","wayland_server::protocol::wl_pointerwayland_server::protocol::wl_pointer::Event","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_pointer::Request","","","","wayland_server::protocol::wl_region","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_region::Request","","","","","","","","wayland_server::protocol::wl_seat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_seat::Event","","wayland_server::protocol::wl_seat::Request","","","wayland_server::protocol::wl_shell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_shell::Request","","wayland_server::protocol::wl_shell_surfacewayland_server::protocol::wl_shell_surface::Event","","","","wayland_server::protocol::wl_shell_surface::Request","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_shmwayland_server::protocol::wl_shm::Event","wayland_server::protocol::wl_shm::Request","","","wayland_server::protocol::wl_shm_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_shm_pool::Request","","","","","","","wayland_server::protocol::wl_subcompositor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_subcompositor::Request","","","wayland_server::protocol::wl_subsurface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_subsurface::Request","","","","wayland_server::protocol::wl_surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_surface::Event","","wayland_server::protocol::wl_surface::Request","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_touch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_server::protocol::wl_touch::Event","","","","","","","","","","","","","","","","",""],"d":["The requested socket name is already in use","The received message does not match the specification for …","Error that can occur when trying to bind a <code>ListeningSocket</code>","A struct representing a Wayland client connected to your …","Helper to initialize client-created objects","A trait which provides an implementation for handling a …","An error generated if an illegal request was received from …","The Wayland display","A handle to the Wayland display","The event enum for this interface","A trait which provides an implementation for handling …","Some other IO error occured","An utility representing a unix socket on which your …","A newly created object that needs to be initialized. See …","The application was not able to create a file in …","The request enum for this interface","Trait representing a Wayland interface","The <code>ObjectData</code> implementation that is internally used by …","The Environment variable <code>XDG_RUNTIME_DIR</code> is not set","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","A weak handle to a Wayland object","Try to accept a new connection to the listening socket","","","","","","","","","","","","","","","","","","","","","","","Returns a file descriptor that may be polled for readiness.","","","Returns a file descriptor that may be polled for readiness.","","","","","Backend reexports","Access the underlying <code>Backend</code> of this <code>Display</code>","Returns the underlying <code>Handle</code> from <code>wayland-backend</code>.","Called when a client has bound this global.","Attempt to bind a listening socket with given name","Attempt to bind a listening socket with given name","Attempt to bind a listening socket from a sequence of names","","","","","","","","","","","","","","","","","","","","","","","Checks if the global should be advertised to some client.","Checks if the global should be advertised to some client.","The client owning this object","","","","","","","","","Create a new protocol global","Create a new Wayland object in the protocol state of this …","Create a new Wayland object in the protocol state of this …","Set a custom <code>ObjectData</code> for this object","Access the user-data associated with this object","A helper macro which delegates a set of <code>Dispatch</code> …","A helper macro which delegates a set of <code>GlobalDispatch</code> …","Called when the object this user data is associated with …","Called when the object this user data is associated with …","","Disable this global","Dispatch all requests received from clients to their …","Creates a weak handle to this object","","","","","","Flush outgoing buffers into their respective sockets.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>DisplayHandle</code> using a <code>Handle</code> from <code>wayland-backend</code>…","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an enum from the integer format used by the …","Returns the argument unchanged.","Returns the argument unchanged.","Create an object resource from its ID","Retrieve the <code>Client</code> which owns the object represented by …","Access the pid/uid/gid of this client","Access the data associated to this client","Access the object data associated with this object","Access the backend handle associated with this object","Retrieve a <code>DisplayHandle</code> for this <code>Display</code>.","","The ID of this object","The backend <code>ClientId</code> of this client","The underlying <code>ObjectId</code>","Initialize an object by assigning it its user-data","Insert a new client in your <code>Display</code>","The interface description","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>WEnum</code> into a result","Checks if the Wayland object associated with this proxy is …","Kill this client by triggering a protocol error","Create a new Wayland display","Access the raw data associated with this object.","Attempt to retrieve an object from this client’s …","Access the protocol information for a Wayland object","Parse a event for this object","Trigger a protocol error on this object","Trigger a protocol error on this object","Generated protocol definitions","","","Remove this global","Called when a request from a client is processed.","","Send an event to this object","Send an event to given Wayland object","Returns the name of the listening socket.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user-data associated with this object","Try to upgrade with weak handle back into a full resource.","The version of this object","Serialize an event for this object","","The interface of the target object","The opcode number","The id of the target object","","","A backend object that represents the state of a wayland …","A trait representing your data associated to a client","An ID representing a Wayland client","The connection has been closed by the server or client.","Holds the client credentials","Describes why a client has been disconnected from the …","A trait representing the handling of new bound globals","An Id representing a global","Main handle of a backend to the Wayland protocol","An error type representing the failure to initialize a …","An error generated when trying to act on an invalid …","Initialized failed due to an underlying I/O error","The wayland system library could not be loaded","A trait representing your data associated to an object","An ID representing a Wayland object","The server has sent the client a protocol error, …","A weak reference to a <code>Handle</code>","","","","","","","","","","","","","","","","","","","","","A global has been bound","","","","","","","","","","","","","","","","","","","","","Check if given client is allowed to interact with given …","","","","","","","","","","","","","","","","Creates a global of the specified interface and version …","Create a new object for given client","Helper for forwarding a Debug implementation of your …","Helper for forwarding a Debug implementation of your …","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Disables a global object that is currently active.","Notification that the client is disconnected","Dispatches all pending messages from all clients.","Dispatches all pending messages from the specified client.","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Get a <code>WeakHandle</code> from this handle","","","","Flushes pending events destined for a client.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the id of the client which owns the object.","Retrive the <code>Credentials</code> of a client","Returns the data associated with a client.","Returns the handler which manages the visibility and …","Returns the data associated with an object.","Returns the data associated with an object as a <code>dyn Any</code>","gid of the client","Returns information about a global.","Returns a handle which represents the server side state of …","","","","Notification that the client was initialized","Initializes a connection with a client.","Returns the interface of this object.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns whether this object is a null object.","Kills the connection to a client.","Initialize a new Wayland backend","Returns an object id that represents a null object.","Retrieve the <code>ObjectId</code> for a wayland object given its …","Get the detailed protocol information about a wayland …","pid of the client","Returns the underlying file descriptor.","Posts a protocol error on an object. This will also …","Types and utilities for manipulating the Wayland protocol","Return the protocol-level numerical ID of this object","","","Removes a global object and free its ressources.","Dispatch a request for the associated object","Check if two object IDs are associated with the same client","Send an event to the client","Sets the data associated with some object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uid of the client","Try to upgrade this weak handle to a <code>Handle</code>","Invokes a closure for all clients connected to this server","Invokes a closure for all objects owned by a client.","","","Special interface representing an anonymous object","Describes whether an argument may have a null value.","Enum of possible argument of the protocol","Enum of possible argument types as recognized by the wire","Vec","Vec","A file descriptor argument. Represented by a [<code>RawFd</code>].","A file descriptor argument. Represented by a [<code>RawFd</code>].","A signed fixed point number with 1/256 precision","A signed fixed point number with 1/256 precision","Number of arguments that are stocked inline in a <code>Message</code> …","An integer argument. Represented by a <code>i32</code>.","An integer argument. Represented by a <code>i32</code>.","Description of wayland interface.","Represents a message that has been sent from some object.","Wire metadata of a given message","Id of a newly created wayland object","Id of a newly created wayland object","Null values are forbidden.","Id of a wayland object","Id of a wayland object","Description of the protocol-level information of an object","A protocol error","A string. This is represented as a <code>CString</code> in a message.","CString","An unsigned integer argument. Represented by a <code>u32</code>.","An unsigned integer argument. Represented by a <code>u32</code>.","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","Error representing an unknown numeric variant for a <code>WEnum</code>","Null values are allowed.","","The interfaces passed into this message as arguments.","The arguments of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A C representation of this interface that may be used to …","The child interface created from this message.","","","","","","","","","","","","","","","","","The error code associated with the error","","","","","","","A list that describes every event this interface supports.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve the type of a given argument instance","","","The protocol ID","The interface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this message is a destructor","Map some closure on all Fd contained in this message, to …","The message sent by the server describing the error","","","","The name of the interface.","Name of this message","","The id of the object that caused the error","The interface of the object that caused the error","The opcode of the message.","","","","","A list that describes every request this interface …","","Returns true if the two interfaces are the same.","Returns true if the type of the argument is the same.","The id of the object that sent the message.","","Signature of the message","Minimum required version of the interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum supported version of the interface.","The version","","","","","","","","","","","","","","","","","content for a wl_surface","callback object","the compositor singleton","data transfer device","data transfer interface","offer to transfer data","offer to transfer data","keyboard input device","compositor output region","pointer input device","region interface","group of input devices","create desktop-style surfaces","desktop-style metadata interface","shared memory support","a shared memory pool","sub-surface compositing","sub-surface interface to a wl_surface","an onscreen surface","touchscreen input device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy a buffer","The wire opcode for this event","The minimal object version supporting this event","","The wire opcode for this request","The minimal object version supporting this request","compositor releases buffer","","content for a wl_surface","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","compositor releases buffer","","","","","","","","","","","","","","done event","The wire opcode for this event","The minimal object version supporting this event","","","callback object","","","","","","","","","","","","","","","","done event","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","request-specific data for the callback","create new region","create new surface","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the compositor singleton","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","the new surface","the new region","introduce a new wl_data_offer","end drag-and-drop session successfully","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","initiate drag-and-drop session","","","end drag-and-drop session","drag-and-drop session motion","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","destroy data device","","given wl_surface has another role","advertise new selection","copy data to the selection","start drag-and-drop operation","data transfer device","","","","","","","","","","","","","","","","","","","","","","","introduce a new wl_data_offer","end drag-and-drop session successfully","initiate drag-and-drop session","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","end drag-and-drop session","drag-and-drop session motion","","Get the opcode number of this message","Get the opcode number of this message","","","advertise new selection","","","","","","","","","","","","","","","","","","","the new data_offer object","source data_offer object","selection data_offer object","serial number of the enter event","client surface entered","timestamp with millisecond granularity","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","drag-and-drop icon surface","surface where the drag originates","serial number of the implicit grab on the origin","serial number of the event that triggered this request","data source for the eventual transfer","data source for the selection","ask action","copy action","create a new data source","drag and drop actions","","create a new data device","move action","no action","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","data transfer interface","Returns the set containing all flags.","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","data source to create","data device to create","seat associated with the data device","accept one of the offered mime types","notify the selected action","destroy data offer","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the offer will no longer be used","action argument has an invalid value","action mask contains invalid values","finish request was called untimely","offer doesn’t accept this request","advertise offered mime type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","request that the data is transferred","","set the available/preferred drag-and-drop actions","notify the source-side available actions","offer to transfer data","notify the selected action","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","advertise offered mime type","Get the opcode number of this message","Get the opcode number of this message","","","","notify the source-side available actions","","","","","","","","","","","","","","","","","","action selected by the compositor","offered mime type","actions offered by the data source","actions supported by the destination client","file descriptor for data transfer","mime type accepted by the client","mime type desired by receiver","action preferred by the destination client","serial number of the accept request","notify the selected action","selection was cancelled","destroy the data source","the drag-and-drop operation physically finished","the drag-and-drop operation concluded","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","action mask contains invalid values","source doesn’t accept this request","add an offered mime type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","send the data","set the available drag-and-drop actions","a target accepts an offered mime type","offer to transfer data","notify the selected action","","","","","","","","","","","","","","","","","selection was cancelled","","","","","","","the drag-and-drop operation physically finished","the drag-and-drop operation concluded","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","send the data","","a target accepts an offered mime type","","","","","","","","","","","","","","","","","","action selected by the compositor","file descriptor for the data","mime type accepted by the target","mime type for the data","actions supported by the data source","mime type offered by the data source","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enter event","","key event","physical key state","keyboard mapping","keyboard mapping format","leave event","modifier and group state","no keymap; client must understand how to interpret the raw …","key is pressed","The wire opcode for this request","The minimal object version supporting this request","release the keyboard object","key is not pressed","repeat rate and delay","","keyboard input device","libxkbcommon compatible, null-terminated string; to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","enter event","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","key event","keyboard mapping","leave event","modifier and group state","","Get the opcode number of this message","Get the opcode number of this message","","","","repeat rate and delay","","","","","","","","","","","","","","","","","","","","","","","","delay in milliseconds since key down until repeating starts","keymap file descriptor","keymap format","keyboard layout","key that produced the event","the currently pressed keys","depressed modifiers","latched modifiers","locked modifiers","the rate of repeating keys in characters per second","serial number of the enter event","serial number of the leave event","serial number of the key event","serial number of the modifiers event","keymap size, in bytes","physical state of the key","surface gaining keyboard focus","surface that lost keyboard focus","timestamp with millisecond granularity","indicates this is the current mode","human-readable description of this output","sent all information about output","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","180 degree flip around a vertical axis","flip and rotate 180 degrees counter-clockwise","flip and rotate 270 degrees counter-clockwise","flip and rotate 90 degrees counter-clockwise","properties of the output","horizontal BGR","horizontal RGB","mode information","advertise available modes for the output","name of this output","no geometry","no transform","indicates this is the preferred mode","The wire opcode for this request","The minimal object version supporting this request","release the output object","","output scaling properties","subpixel geometry information","transform from framebuffer to output","unknown geometry","vertical BGR","vertical RGB","compositor output region","180 degrees counter-clockwise","270 degrees counter-clockwise","90 degrees counter-clockwise","Returns the set containing all flags.","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","human-readable description of this output","Returns the difference between the flags in <code>self</code> and <code>other</code>.","sent all information about output","Returns an empty set of flags.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","properties of the output","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","advertise available modes for the output","name of this output","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","","Removes the specified flags in-place.","output scaling properties","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","output description","scaling factor of output","bitfield of mode flags","height of the mode in hardware units","textual description of the manufacturer","textual description of the model","output name","height in millimeters of the output","width in millimeters of the output","vertical refresh rate in mHz","subpixel orientation of the output","transform that maps framebuffer to output","width of the mode in hardware units","x position within the global compositor space","y position within the global compositor space","axis types","axis event","axis click event","axis source types","axis source event","axis stop event","axis high-resolution scroll event","pointer button event","physical button state","continuous coordinate space","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enter event","","","finger on a touch surface","end of a pointer event sequence","horizontal axis","leave event","pointer motion event","the button is pressed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","release the pointer object","the button is not pressed","","given wl_surface has another role","set the pointer surface","vertical axis","a physical wheel rotation","a physical wheel tilt","pointer input device","","","","","","","","","","","","","","","axis event","axis click event","axis source event","axis stop event","axis high-resolution scroll event","","","","","","","","","","","","","","","pointer button event","","","","","","","","","","","","","","","","enter event","","","","","","","","","","","","","","end of a pointer event sequence","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","leave event","pointer motion event","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","axis type","the axis stopped with this event","axis type","axis type","source of the axis event","button that produced the event","number of steps","serial number of the enter event","serial number of the leave event","serial number of the button event","physical state of the button","surface entered by the pointer","surface left by the pointer","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","length of vector in surface-local coordinate space","scroll distance as fraction of 120","surface-local x coordinate","surface-local y coordinate","serial number of the enter event","pointer surface","add rectangle to region","destroy region","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","subtract rectangle from region","region interface","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","rectangle height","rectangle height","rectangle width","rectangle width","region-local x coordinate","region-local x coordinate","region-local y coordinate","region-local y coordinate","seat capabilities changed","seat capability bitmask","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","wl_seat error values","","return keyboard object","return pointer object","return touch object","the seat has one or more keyboards","get_pointer, get_keyboard or get_touch called on seat …","unique identifier for this seat","the seat has pointer devices","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","release the seat object","","the seat has touch devices","group of input devices","Returns the set containing all flags.","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","seat capabilities changed","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","unique identifier for this seat","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","capabilities of the seat","seat identifier","seat pointer","seat keyboard","seat touch interface","","","create a shell surface from a surface","The wire opcode for this request","The minimal object version supporting this request","","given wl_surface has another role","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","shell surface to create","surface to be given the shell surface role","bottom edge","bottom and left edges","bottom and right edges","suggest resize","no preference, apply default policy","switch output mode to the smallest mode that can fit the …","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","no upscaling, center on output and add black borders to …","different method to set the surface fullscreen","do not set keyboard focus","left edge","start an interactive move","no edge","ping client","respond to a ping event","popup interaction is done","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","edge values for resizing","start an interactive resize","right edge","scale, preserve the surface’s aspect ratio and center on …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","top edge","top and left edges","top and right edges","details of transient behaviour","desktop-style metadata interface","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","suggest resize","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Get the opcode number of this message","Get the opcode number of this message","","","","","ping client","popup interaction is done","Removes the specified flags in-place.","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","how the surface was resized","new height of the surface","serial number of the ping","new width of the surface","surface class","which edge or corner is being dragged","transient surface behavior","transient surface behavior","framerate in mHz","method for resolving size conflict","output on which the surface is to be fullscreen","output on which the surface is to be maximized","parent surface","parent surface","seat whose pointer is used","seat whose pointer is used","seat whose pointer is used","serial number of the ping event","serial number of the implicit grab on the pointer","serial number of the implicit grab on the pointer","serial number of the implicit grab on the pointer","surface title","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …","[63:0] A:B:G:R 16:16:16:16 little endian","[63:0] A:B:G:R 16:16:16:16 little endian","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …","[63:0] A:R:G:B 16:16:16:16 little endian","[63:0] A:R:G:B 16:16:16:16 little endian","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian","[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …","8-bit BGR format, [7:0] B:G:R 2:3:3","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian","","24-bit BGR format, [23:0] B:G:R little endian","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian","","8-bit color index format, [7:0] C","create a shm pool","The wire opcode for this event","The minimal object version supporting this event","wl_shm error values","","pixel formats","pixel format description","[31:0] G:R 16:16 little endian","[15:0] G:R 8:8 little endian","mmapping the file descriptor failed","buffer format is not known","invalid size or stride during pool or buffer creation","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane","2x2 subsampled Cr:Cb plane","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane","non-subsampled Cr:Cb plane","non-subsampled Cb:Cr plane","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane","2x2 subsampled Cr:Cb plane 10 bits per channel","2x2 subsampled Cr:Cb plane 12 bits per channel","2x2 subsampled Cr:Cb plane 16 bits per channel","2x1 subsampled Cr:Cb plane, 10 bit per channel","","","[15:0] R little endian","[7:0] R","The wire opcode for this request","The minimal object version supporting this request","","[31:0] R:G 16:16 little endian","[15:0] R:G 8:8 little endian","8-bit RGB format, [7:0] R:G:B 3:3:2","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian","","24-bit RGB format, [23:0] R:G:B little endian","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …","Y followed by U then V, 10:10:10. Non-linear modifier only","[23:0] Cr:Cb:Y 8:8:8 little endian","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …","shared memory support","[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …","[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …","[63:0] x:B:G:R 16:16:16:16 little endian","[63:0] x:B:G:R 16:16:16:16 little endian","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian","","[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] X:Cr:Y:Cb 16:16:16:16 little endian","[31:0] X:Cr:Y:Cb 2:10:10:10 little endian","[31:0] X:Y:Cb:Cr 8:8:8:8 little endian","[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …","[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …","[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …","[31:0] A:Cr:Y:Cb 2:10:10:10 little endian","[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] A:Cr:Y:Cb 16:16:16:16 little endian","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …","","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pixel format description","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","buffer pixel format","file descriptor for the pool","pool to create","pool size, in bytes","create a buffer from the pool","destroy the pool","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","change the size of the pool mapping","a shared memory pool","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","buffer pixel format","buffer height, in pixels","buffer to create","buffer byte offset within the pool","new size of the pool, in bytes","number of bytes from the beginning of one row to the …","buffer width, in pixels","the to-be sub-surface is invalid","unbind from the subcompositor interface","","","give a surface the role sub-surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","sub-surface compositing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","the new sub-surface object ID","the parent surface","the surface to be turned into a sub-surface","wl_surface is not a sibling or the parent","remove sub-surface interface","","","restack the sub-surface","restack the sub-surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","sub-surface interface to a wl_surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","the reference surface","the reference surface","x coordinate in the parent surface","y coordinate in the parent surface","set the surface contents","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","delete surface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","surface enters an output","wl_surface error values","","request a frame throttling hint","buffer offset is invalid","buffer scale value is invalid","buffer size is invalid","buffer transform value is invalid","surface leaves an output","set the surface contents offset","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","an onscreen surface","","","","","","","","","","","","","","","","","","","","","","","surface enters an output","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","surface leaves an output","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","output entered by the surface","output left by the surface","buffer of surface contents","callback object for the frame request","height of damage rectangle","height of damage rectangle","opaque region of the surface","input region of the surface","positive scale for interpreting buffer contents","transform for interpreting buffer contents","width of damage rectangle","width of damage rectangle","surface-local x coordinate","surface-local x coordinate","buffer-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","buffer-local y coordinate","surface-local y coordinate","touch session cancelled","touch down event and beginning of a touch sequence","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","end of touch frame event","update of touch point coordinates","update orientation of touch point","The wire opcode for this request","The minimal object version supporting this request","release the touch object","","update shape of touch point","end of a touch event sequence","touchscreen input device","","","","","","","","","","","","","touch session cancelled","","","","touch down event and beginning of a touch sequence","","","","","","end of touch frame event","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","update of touch point coordinates","","Get the opcode number of this message","Get the opcode number of this message","update orientation of touch point","","","update shape of touch point","","","","","","","","","","","end of a touch event sequence","","","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","length of the major axis in surface-local coordinates","length of the minor axis in surface-local coordinates","angle between major axis and positive surface y-axis in …","serial number of the touch down event","serial number of the touch up event","surface touched","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate"],"i":[20,45,0,0,0,0,0,0,0,33,0,20,0,0,20,33,0,0,20,26,26,0,0,1,15,39,16,17,11,13,1,20,26,45,28,15,39,16,17,11,13,1,20,26,45,28,1,1,1,1,1,1,1,1,0,11,13,164,1,1,1,15,39,16,17,11,13,1,20,26,45,28,15,39,16,17,11,13,1,20,26,45,28,164,164,33,15,13,26,28,15,13,26,28,13,15,15,17,33,0,0,165,165,39,13,11,33,1,15,26,28,28,11,15,39,16,17,11,13,1,20,20,26,45,45,28,15,39,16,17,11,13,13,1,20,26,26,45,28,33,13,15,15,13,33,11,28,33,15,28,17,13,33,15,39,16,17,11,13,1,20,26,45,28,15,39,16,17,11,13,1,20,26,45,28,15,39,16,17,11,13,1,20,26,45,28,15,39,16,17,11,13,1,20,26,45,28,26,33,15,11,33,15,13,33,33,13,0,20,45,13,165,39,33,13,1,20,15,13,26,28,20,45,15,39,16,17,11,13,1,20,26,45,28,15,39,16,17,11,13,1,20,26,45,28,15,39,16,17,11,13,1,20,26,45,28,39,28,33,33,166,167,167,167,168,169,0,0,0,65,0,0,0,0,0,0,0,55,55,0,0,65,0,38,37,32,14,47,12,55,34,65,46,38,37,32,14,47,12,55,34,65,46,64,38,37,32,14,47,12,55,34,65,46,38,37,32,14,47,12,55,34,65,46,64,55,38,37,32,14,47,34,46,38,37,32,14,47,34,46,14,14,35,64,48,35,14,48,12,12,35,64,48,35,64,48,35,64,48,35,64,48,35,64,48,14,38,37,32,12,35,64,48,38,38,37,32,14,47,12,55,55,34,34,65,46,38,37,32,14,47,12,55,34,65,46,14,14,14,14,14,14,46,14,12,38,37,32,48,14,38,38,37,32,14,47,12,55,34,65,46,38,37,32,14,47,12,55,34,65,46,38,37,32,14,47,12,55,34,65,46,38,37,32,14,47,12,55,34,65,46,0,35,64,48,38,14,12,38,14,14,46,12,14,0,38,55,34,14,35,38,14,14,0,38,37,32,14,47,34,46,38,55,34,38,37,32,14,47,12,55,34,65,46,38,37,32,14,47,12,55,34,65,46,38,37,32,14,47,12,55,34,65,46,46,47,14,14,170,171,0,0,0,0,71,72,71,72,71,72,0,71,72,0,0,0,71,72,70,71,72,0,0,71,72,71,72,26,26,0,0,70,172,73,58,173,74,172,70,71,72,49,73,56,54,58,53,173,74,172,70,71,72,49,73,56,54,58,53,173,74,172,70,71,72,49,73,56,54,58,53,173,74,172,70,71,72,49,73,56,54,58,53,49,73,70,71,72,73,56,54,58,53,70,71,72,73,56,54,58,53,54,70,71,72,58,74,74,49,172,74,70,71,72,72,49,49,73,56,54,54,58,53,53,173,74,172,70,71,72,49,73,56,54,58,53,72,172,172,56,56,173,74,172,70,71,72,49,73,56,54,58,53,173,74,172,70,71,72,49,73,56,54,58,53,74,70,71,72,49,73,56,54,58,53,173,74,172,70,71,72,49,73,56,54,58,53,73,58,54,172,173,74,49,73,172,54,54,58,54,53,74,74,49,172,0,71,58,173,73,73,70,71,72,73,56,54,58,53,72,49,54,53,173,74,172,70,71,72,49,73,56,54,58,53,173,74,172,70,71,72,49,73,56,54,58,53,173,74,172,70,71,72,49,73,56,54,58,53,173,172,74,49,56,0,0,0,174,175,176,177,178,179,180,181,182,183,168,169,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,77,0,0,76,77,75,76,77,75,76,77,75,76,77,75,75,75,75,75,75,76,77,75,76,77,75,75,75,75,75,76,77,75,76,77,75,76,77,75,76,77,75,75,76,77,75,75,75,75,76,77,75,76,77,75,76,77,75,75,75,81,0,0,0,0,0,80,81,79,80,81,79,80,81,79,80,81,79,79,79,79,79,79,79,80,81,79,80,81,79,79,79,79,79,80,81,79,80,81,79,80,81,79,80,81,79,79,80,81,79,79,79,80,81,79,80,81,79,80,81,79,79,79,184,83,83,0,0,0,0,0,0,0,83,84,82,83,84,82,83,84,82,83,84,82,82,82,82,82,82,83,84,82,83,84,82,82,82,82,82,83,84,82,83,84,82,83,84,82,83,84,82,82,83,84,82,82,82,83,84,82,83,84,82,83,84,82,82,82,185,186,92,92,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,92,92,0,0,0,0,0,0,91,0,85,92,91,91,0,85,91,92,86,85,91,92,86,85,91,92,86,85,91,92,86,85,86,85,86,85,86,86,86,86,85,86,86,85,91,92,86,85,91,92,86,86,86,85,86,86,85,91,92,86,85,91,92,86,85,91,92,86,85,91,92,86,86,86,86,91,92,86,85,86,86,85,86,85,85,91,92,86,85,91,92,86,85,91,92,86,86,86,187,188,189,188,188,190,188,190,188,190,191,191,191,192,191,192,93,93,95,0,0,95,93,93,0,0,0,0,0,0,93,93,95,96,94,93,95,96,94,93,93,93,93,93,93,93,93,95,96,94,93,95,96,94,93,94,93,94,93,93,93,94,93,93,93,94,94,93,93,93,93,93,93,95,96,94,93,95,96,94,93,93,93,94,93,94,93,94,93,94,93,93,93,95,96,94,93,95,96,94,93,95,96,94,93,95,96,94,93,93,93,94,95,96,94,93,93,94,93,93,93,93,93,94,93,93,93,95,96,94,93,95,96,94,93,95,96,94,93,94,94,193,194,194,98,99,98,0,0,0,0,0,0,0,0,98,97,97,97,97,99,0,0,0,0,0,0,0,0,0,0,98,0,98,99,0,88,97,98,99,88,97,98,99,88,97,98,99,88,97,98,99,88,97,88,97,88,97,88,97,88,88,97,98,99,88,97,98,99,88,88,88,97,88,88,97,98,99,88,97,98,99,88,97,98,99,88,97,98,99,88,88,88,98,99,88,97,88,88,97,88,97,97,98,99,88,97,98,99,88,97,98,99,88,88,88,195,196,197,198,199,200,199,198,200,103,103,102,103,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,101,102,0,0,0,0,0,0,0,103,102,103,0,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,100,101,100,101,100,101,100,100,100,101,100,100,101,102,103,100,101,102,103,100,100,100,101,100,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,100,102,103,100,101,100,100,100,101,100,101,101,102,103,100,101,102,103,100,101,102,103,100,100,100,201,202,203,202,204,205,0,0,0,0,0,0,0,0,0,0,0,0,110,0,110,0,110,0,110,110,104,105,0,0,109,105,110,0,0,104,104,105,109,110,106,104,105,109,110,106,104,105,109,110,106,104,105,109,110,106,104,105,106,104,105,106,104,105,106,106,104,105,106,106,104,105,109,110,106,104,105,109,110,106,106,106,104,105,106,106,104,105,109,110,106,104,105,109,110,106,104,105,109,110,106,104,105,109,110,106,106,106,106,106,106,109,110,106,104,105,106,106,104,105,106,104,104,105,105,109,110,106,104,105,109,110,106,104,105,109,110,106,106,106,206,207,207,208,209,210,208,208,208,206,210,211,209,208,207,209,210,211,209,111,116,116,0,0,0,0,0,0,0,0,0,0,0,0,0,113,113,113,113,116,112,112,0,116,116,112,113,111,0,0,115,0,116,0,0,112,112,112,0,113,113,113,111,112,113,111,115,116,114,112,113,111,115,116,114,111,111,111,111,111,111,111,112,113,111,115,116,114,112,113,111,115,116,114,112,113,111,114,112,113,111,114,112,113,111,111,111,114,114,111,114,111,112,113,111,114,114,111,112,113,111,111,111,111,111,115,116,114,112,113,111,115,116,114,111,111,111,114,111,114,114,112,113,111,114,111,114,111,111,112,113,111,115,116,114,112,113,111,115,116,114,112,113,111,115,116,114,112,113,111,115,116,114,111,111,114,114,111,114,115,116,114,112,113,111,111,114,114,111,111,111,111,112,113,111,114,111,112,112,113,113,111,111,115,116,114,112,113,111,115,116,114,112,113,111,115,116,114,111,114,114,212,213,214,214,215,215,216,215,215,214,215,215,214,215,215,0,123,123,0,123,123,123,123,0,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,0,0,119,123,118,123,123,120,0,0,0,0,122,120,0,121,122,118,119,119,0,121,120,118,119,122,123,117,121,120,118,119,122,123,117,117,117,117,117,117,121,120,118,119,122,123,117,121,120,118,119,122,123,117,117,121,120,118,119,117,121,120,118,119,117,121,120,118,119,117,117,121,120,118,119,117,117,121,120,118,119,122,123,117,117,121,120,118,119,122,123,117,117,117,121,120,118,119,117,117,121,120,118,119,122,123,117,121,120,118,119,122,123,117,121,120,118,119,122,123,117,121,120,118,119,122,123,117,117,117,117,122,123,117,121,120,118,119,117,121,120,118,119,117,121,121,120,120,118,118,119,119,122,123,117,121,120,118,119,122,123,117,121,120,118,119,122,123,117,117,117,217,218,219,220,221,222,219,223,224,222,222,223,224,223,225,223,225,225,222,217,218,217,220,226,226,226,226,125,125,0,0,0,0,0,0,0,0,125,0,125,126,124,125,126,124,125,126,124,125,126,124,124,124,124,124,124,125,126,124,125,126,124,124,124,124,124,125,126,124,125,126,124,125,126,124,125,126,124,124,125,126,124,124,124,125,126,124,125,126,124,125,126,124,124,124,227,228,227,228,227,228,227,228,131,0,0,0,0,0,0,0,130,130,130,127,129,131,127,0,0,0,0,0,0,0,0,130,0,127,0,127,127,129,130,131,128,127,129,130,131,128,127,127,127,127,127,127,127,127,129,130,131,128,127,129,130,131,128,128,127,129,128,127,129,128,127,129,127,127,128,127,127,127,129,128,128,127,127,127,127,127,127,129,130,131,128,127,129,130,131,128,127,127,127,128,127,128,127,129,128,127,128,127,127,127,129,130,131,128,127,129,130,131,128,127,129,130,131,128,127,129,130,131,128,127,127,128,127,128,130,131,128,127,129,127,128,127,127,127,127,127,129,128,127,127,127,129,129,130,131,128,127,129,130,131,128,127,129,130,131,128,127,128,128,229,230,231,232,233,0,0,134,0,0,0,132,0,132,134,135,133,132,134,135,133,132,134,135,133,132,134,135,133,132,133,132,133,132,133,132,133,133,132,134,135,133,132,134,135,133,133,133,132,133,133,132,134,135,133,132,134,135,133,132,134,135,133,132,134,135,133,133,134,135,133,132,133,132,133,132,132,134,135,133,132,134,135,133,132,134,135,133,133,133,234,234,136,136,136,141,138,138,0,0,0,0,0,0,0,138,0,137,136,140,136,141,140,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,140,136,138,140,140,140,140,140,140,140,136,136,136,0,0,136,137,136,137,138,140,141,139,136,137,138,140,141,139,136,137,136,137,136,137,136,137,136,137,136,137,136,137,136,137,138,140,141,139,136,137,138,140,141,139,136,137,138,139,136,137,138,139,136,137,138,136,137,139,136,137,139,136,137,136,137,136,137,138,139,139,136,137,136,136,136,136,136,137,137,137,137,137,138,140,141,139,136,137,138,140,141,139,136,137,136,137,136,137,139,136,137,139,136,137,138,139,136,137,139,136,137,136,137,136,137,138,140,141,139,136,137,138,140,141,139,136,137,138,140,141,139,136,137,138,140,141,139,136,137,136,137,136,137,139,140,141,139,136,137,138,139,139,136,137,139,136,137,136,137,136,137,136,137,136,137,138,139,136,137,136,136,137,137,138,138,140,141,139,136,137,138,140,141,139,136,137,138,140,141,139,136,137,139,139,235,235,236,235,237,238,239,240,241,241,241,242,239,240,243,238,240,244,243,238,240,245,239,240,239,240,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,145,0,0,0,0,0,146,143,143,142,142,142,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,0,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,142,143,145,146,144,142,143,145,146,144,142,143,145,146,144,142,143,145,146,144,142,143,144,142,143,144,142,143,144,142,143,144,144,142,143,145,146,144,144,142,143,145,146,144,144,144,142,143,144,144,142,143,145,146,144,142,143,145,146,144,142,143,145,146,144,142,143,145,146,144,144,145,146,144,142,143,144,142,143,144,142,142,143,143,145,146,144,142,143,145,146,144,142,143,145,146,144,144,144,246,247,247,247,148,148,0,0,0,0,0,0,0,0,148,0,148,149,147,148,149,147,148,149,147,148,149,147,147,147,147,147,147,148,149,147,148,149,147,147,147,147,147,148,149,147,148,149,147,148,149,147,148,149,147,147,148,149,147,147,147,148,149,147,148,149,147,148,149,147,147,147,248,248,248,248,249,248,248,150,152,0,0,152,0,0,0,0,0,0,150,152,153,151,150,152,153,151,150,152,153,151,150,152,153,151,150,151,150,151,150,151,150,151,151,150,152,153,151,150,152,153,151,151,151,150,151,151,150,152,153,151,150,152,153,151,150,152,153,151,150,152,153,151,151,152,153,151,150,151,150,151,150,150,152,153,151,150,152,153,151,150,152,153,151,151,151,250,250,250,154,156,0,0,156,156,0,0,0,0,0,0,0,0,0,0,0,0,0,156,156,156,0,154,156,157,155,154,156,157,155,154,156,157,155,154,156,157,155,154,155,154,155,154,155,154,155,155,154,156,157,155,154,156,157,155,155,155,154,155,155,154,156,157,155,154,156,157,155,154,156,157,155,154,156,157,155,155,156,157,155,154,155,154,155,154,154,156,157,155,154,156,157,155,154,156,157,155,155,155,251,252,253,253,159,159,159,159,159,0,0,0,0,160,0,0,159,158,158,158,158,160,159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,159,159,159,159,0,158,159,160,89,158,159,160,89,158,159,160,89,158,159,160,89,158,89,158,89,158,89,89,158,89,89,158,159,160,89,158,159,160,89,89,89,158,89,89,158,159,160,89,158,159,160,89,158,159,160,89,158,159,160,89,89,89,159,160,89,158,89,158,89,158,158,159,160,89,158,159,160,89,158,159,160,89,89,89,254,255,256,257,258,259,260,261,262,263,258,259,256,258,259,264,256,258,259,264,163,163,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,163,163,163,0,0,162,0,163,163,0,162,163,161,162,163,161,162,163,161,162,163,161,161,161,161,161,161,161,161,162,163,161,161,162,163,161,161,161,161,161,162,163,161,162,163,161,162,163,161,162,163,161,161,161,162,163,161,161,161,161,161,162,163,161,162,163,161,162,163,161,161,161,161,265,266,267,268,269,268,268,269,265,266,265,265,266,267,265,267,265,267],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[1,6],[[],6],[[],7],[1,8],[[],9],[[],9],[[],6],[[],10],0,[11,12],[13,14],[[13,15,16,17]],[[[19,[18]]],[[21,[1,20]]]],[22,[[21,[1,20]]]],[[23,24],[[21,[1,20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,25],[15,25],[[],[[3,[15]]]],[15,15],[13,13],[26,26],[[[28,[27]]],[[28,[27]]]],[[]],[[]],[[]],[[]],[[13,29,[0,[30,31]]],32],[[15,13,29,[0,[30,31]]],[[21,[33,34]]]],[[15,13,29,[36,[35]]],[[21,[33,34]]]],[[17,[16,[33]],[36,[35]]],33],[[],3],0,0,[[37,38]],[[37,38]],[[[39,[33,[0,[30,31]]]],37,38]],[[13,32]],[11,[[4,[40]]]],[[],28],[1],[[15,15],25],[[26,26],25],[[28,28],25],[[[28,[33]]],25],[11,4],[[15,41],42],[[[39,[43,43]],41],42],[[[16,[43]],41],42],[[[17,[43]],41],42],[[[11,[43]],41],42],[[13,41],42],[[1,41],42],[[20,41],42],[[20,41],42],[[26,41],[[21,[44]]]],[[45,41],42],[[45,41],42],[[[28,[43]],41],42],[[]],[[]],[[]],[[]],[[]],[14,13],[[]],[[]],[[]],[[]],[29,26],[[]],[[]],[[13,38],[[21,[34]]]],[[13,38],[[21,[15,34]]]],[[15,13],[[21,[46,34]]]],[15,3],[[13,38],[[21,[[36,[5]],34]]]],[[],47],[11,13],[28],[[],38],[15,37],[[[28,[33]]],38],[[17,[16,[33]],[0,[30,31]]],33],[[13,2,[36,[48]]],[[4,[15]]]],[[],49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[26,[[21,[53]]]],[[],25],[[15,13,54]],[[],[[21,[11,55]]]],[[],[[3,[36]]]],[[15,13,29],[[21,[33,34]]]],[[13,38],[[21,[56,34]]]],[[13,[58,[38,57]]],[[21,[45]]]],[[[59,[29]],[59,[60]]]],[[13,29,60]],0,[61],[61],[[13,32]],[[15,13,17]],[[[36,[[39,[33,[0,[30,31]]]]]],14,37,[58,[38,57]]],[[3,[[36,[35]]]]]],[[],[[21,[34]]]],[13,[[21,[34]]]],[1,[[3,[18]]]],[20,[[3,[62]]]],[[]],[[]],[[]],[[]],[[],60],[[],60],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],0,[[[28,[33]]],[[21,[33,34]]]],[[],29],[13,[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[36,14,37,32,38],[[36,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[37,36,32],25],[55,[[3,[62]]]],[38,38],[37,37],[32,32],[14,14],[47,47],[34,34],[46,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[14,49,29,[36,[64]]],32],[[14,37,49,29,[36,[35]]],[[21,[38,34]]]],[41,[[21,[44]]]],[41,[[21,[44]]]],[41,[[21,[44]]]],[[37,38]],[[14,32]],[[37,65]],[12,[[21,[40,66]]]],[[12,37],[[21,[40,66]]]],[[[51,[35,50]]],[[21,[[51,[50]],[51,[35,50]]]]]],[[[51,[64,50]]],[[21,[[51,[50]],[51,[64,50]]]]]],[[[51,[48,50]]],[[21,[[51,[50]],[51,[48,50]]]]]],[[[36,[35]]],[[21,[36,[36,[35]]]]]],[[[36,[64]]],[[21,[36,[36,[64]]]]]],[[[36,[48]]],[[21,[36,[36,[48]]]]]],[35,3],[64,3],[48,3],[[[52,[35]]],[[21,[52,[52,[35]]]]]],[[[52,[64]]],[[21,[52,[52,[64]]]]]],[[[52,[48]]],[[21,[52,[52,[48]]]]]],[35,3],[64,3],[48,3],[14,47],[[38,38],25],[[37,37],25],[[32,32],25],[[12,[3,[37]]],[[21,[66]]]],[[35,41],[[21,[44]]]],[[64,41],[[21,[44]]]],[[48,41],[[21,[44]]]],[[38,41],[[21,[44]]]],[[38,41],[[21,[44]]]],[[37,41],[[21,[44]]]],[[32,41],[[21,[44]]]],[[14,41],[[21,[44]]]],[[47,41],[[21,[44]]]],[[12,41],[[21,[44]]]],[[55,41],[[21,[44]]]],[[55,41],[[21,[44]]]],[[34,41],[[21,[44]]]],[[34,41],[[21,[44]]]],[[65,41],[[21,[44]]]],[[46,41],[[21,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[14,38],[[21,[37,34]]]],[[14,37],[[21,[46,34]]]],[[14,37],[[21,[[36,[48]],34]]]],[[14,32],[[21,[[36,[64]],34]]]],[[14,38],[[21,[[36,[35]],34]]]],[[14,38],[[21,[[36,[5]],34]]]],0,[[14,32],[[21,[67,34]]]],[12,14],[38],[37],[32],[37],[[14,2,[36,[48]]],[[21,[37,66]]]],[38,49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],0,[35,25],[64,25],[48,25],[38,25],[[14,37,65]],[[],[[21,[12,55]]]],[[],38],[[14,37,49,29],[[21,[38,34]]]],[[14,38],[[21,[56,34]]]],0,[12,6],[[14,38,29,68]],0,[38,29],[61],[61],[[14,32]],[[36,14,37,[58,[38,57]]],[[3,[[36,[35]]]]]],[[38,38],25],[[14,[58,[38,9]]],[[21,[34]]]],[[14,38,[36,[35]]],[[21,[34]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],60],[[],60],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],0,[47,[[3,[14]]]],[[14,69]],[[14,37,69],[[21,[34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[70,70],[71,71],[72,72],[73,73],[56,56],[54,54],[58,58],[53,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[70,70],25],[[71,71],25],[[72,72],25],[[58,58],25],0,0,0,0,[[74,41],[[21,[44]]]],[[70,41],[[21,[44]]]],[[71,41],[[21,[44]]]],[[72,41],[[21,[44]]]],[[72,41],[[21,[44]]]],[[49,41],[[21,[44]]]],[[49,41],[[21,[44]]]],[[73,41],[[21,[44]]]],[[56,41],[[21,[44]]]],[[54,41],[[21,[44]]]],[[54,41],[[21,[44]]]],[[58,41],[[21,[44]]]],[[53,41],[[21,[44]]]],[[53,41],[[21,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,71],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],0,[[58,69],58],0,0,0,0,0,0,0,0,0,0,[61],[61],0,0,0,0,[[49,49],25],[[71,71],25],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],60],[[],60],[[],60],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[[]],[75,3],[[75,28],25],[[75,75],25],[[76,41],42],[[77,41],42],[[75,41],42],[[]],[[]],[[]],[[13,38],[[21,[75,34]]]],[75,47],[75,38],[[],49],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[75,[[3,[36]]]],[76,78],[77,78],[[13,[58,[38,57]]],[[21,[45]]]],[75],[75,[[21,[34]]]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[75,29],[[75,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[79,79],[[]],[79,3],[[79,29]],[[79,79],25],[[79,28],25],[[80,41],42],[[81,41],42],[[79,41],42],[[]],[[]],[[]],[[13,38],[[21,[79,34]]]],[79,47],[79,38],[[],49],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[79,[[3,[36]]]],[80,78],[81,78],[[13,[58,[38,57]]],[[21,[45]]]],[79,[[21,[34]]]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[79,29],[[79,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[82,82],[[]],[82,3],[[82,82],25],[[82,28],25],[[83,41],42],[[84,41],42],[[82,41],42],[[]],[[]],[[]],[[13,38],[[21,[82,34]]]],[82,47],[82,38],[[],49],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[82,[[3,[36]]]],[83,78],[84,78],[[13,[58,[38,57]]],[[21,[45]]]],[82,[[21,[34]]]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[82,29],[[82,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[86,86],[[]],[[]],[[85,85],87],[86,3],[[86,88]],[86],[[86,29,89,90,90,[3,[88]]]],[[85,85],25],[[86,86],25],[[86,28],25],[[85,41],42],[[91,41],42],[[92,41],42],[[86,41],42],[[]],[[]],[[]],[[]],[[13,38],[[21,[86,34]]]],[86,47],[85],[86,38],[[],49],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[86],[[86,29,90,90]],[86,[[3,[36]]]],[91,78],[92,78],[[13,[58,[38,57]]],[[21,[45]]]],[[85,85],[[3,[87]]]],[[86,[3,[88]]]],[86,[[21,[34]]]],[[]],[[]],[[],21],[29,[[21,[85]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[86,29],[[86,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],93],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[93,93],93],[[93,93]],[[93,93],93],[[93,93]],[93,29],[[93,93],93],[[93,93]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[93,93],[94,94],[[]],[[]],[[93,93],87],[93,93],[[93,93],25],[94,3],[[93,93],93],[[],93],[[93,93],25],[[94,28],25],[[94,94],25],[[93,24]],[[93,41],42],[[93,41],42],[[93,41],42],[[93,41],42],[[93,41],42],[[95,41],42],[[96,41],42],[[94,41],42],[[]],[[]],[[]],[[]],[29,[[3,[93]]]],[29,93],[29,93],[[13,38],[[21,[94,34]]]],[24,93],[94,47],[93],[94,38],[[93,93]],[[],49],[[93,93],93],[[93,93],25],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[93,25],[93,25],[93,93],[94,[[3,[36]]]],[95,78],[96,78],[[13,[58,[38,57]]],[[21,[45]]]],[[93,93],[[3,[87]]]],[[93,93]],[94,[[21,[34]]]],[[93,93,25]],[[93,93],93],[[93,93]],[[93,93],93],[[]],[[]],[[93,93]],[[],21],[29,[[21,[93]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[[93,93],93],[94,29],[[94,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[88,93]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,97],[88,88],[[]],[[]],[[97,97],87],[88,3],[[97,97],25],[[88,88],25],[[88,28],25],[[97,41],42],[[98,41],42],[[99,41],42],[[88,41],42],[[]],[[]],[[]],[[]],[[13,38],[[21,[88,34]]]],[88,47],[97],[88,38],[[],49],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[88,[[3,[36]]]],[[88,60]],[98,78],[99,78],[[13,[58,[38,57]]],[[21,[45]]]],[[97,97],[[3,[87]]]],[88,[[21,[34]]]],[[88,93]],[[]],[[]],[[],21],[29,[[21,[97]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[88,29],[[88,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[100,93]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100],[101,101],[100,100],[[]],[[]],[[101,101],87],[100,3],[100],[100],[[101,101],25],[[100,28],25],[[100,100],25],[[101,41],42],[[102,41],42],[[103,41],42],[[100,41],42],[[]],[[]],[[]],[[]],[[13,38],[[21,[100,34]]]],[100,47],[101],[100,38],[[],49],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[100,[[3,[36]]]],[102,78],[103,78],[[13,[58,[38,57]]],[[21,[45]]]],[[101,101],[[3,[87]]]],[[100,60,8]],[100,[[21,[34]]]],[[100,[3,[60]]]],[[]],[[]],[29,[[21,[101]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[100,29],[[100,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,104],[105,105],[106,106],[[]],[[]],[[]],[[104,104],87],[[105,105],87],[106,3],[[106,29,89,[108,[107]]]],[[104,104],25],[[105,105],25],[[106,28],25],[[106,106],25],[[104,41],42],[[105,41],42],[[109,41],42],[[110,41],42],[[106,41],42],[[]],[[]],[[]],[[]],[[]],[[13,38],[[21,[106,34]]]],[106,47],[104],[105],[106,38],[[],49],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[[106,29,29,29,105]],[[106,104,8,29]],[[106,29,89]],[[106,29,29,29,29,29]],[106,[[3,[36]]]],[109,78],[110,78],[[13,[58,[38,57]]],[[21,[45]]]],[[104,104],[[3,[87]]]],[[105,105],[[3,[87]]]],[[106,9,9]],[106,[[21,[34]]]],[[]],[[]],[[]],[[],21],[29,[[21,[104]]]],[29,[[21,[105]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[[],63],[106,29],[[106,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],111],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[111,111],111],[[111,111]],[[111,111],111],[[111,111]],[111,29],[[111,111],111],[[111,111]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,112],[113,113],[111,111],[114,114],[[]],[[]],[[]],[[]],[[112,112],87],[[113,113],87],[[111,111],87],[111,111],[[111,111],25],[114,3],[[114,60]],[[111,111],111],[114],[[],111],[[112,112],25],[[113,113],25],[[111,111],25],[[114,28],25],[[114,114],25],[[111,24]],[[112,41],42],[[113,41],42],[[111,41],42],[[111,41],42],[[111,41],42],[[111,41],42],[[111,41],42],[[115,41],42],[[116,41],42],[[114,41],42],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[3,[111]]]],[29,111],[29,111],[[13,38],[[21,[114,34]]]],[24,111],[[114,9,9,9,9,112,60,60,113]],[114,47],[112],[113],[111],[114,38],[[111,111]],[[],49],[[111,111],111],[[111,111],25],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[111,25],[111,25],[[114,111,9,9,9]],[[114,60]],[111,111],[114,[[3,[36]]]],[115,78],[116,78],[[13,[58,[38,57]]],[[21,[45]]]],[[112,112],[[3,[87]]]],[[113,113],[[3,[87]]]],[[111,111],[[3,[87]]]],[[111,111]],[[114,9]],[114,[[21,[34]]]],[[111,111,25]],[[111,111],111],[[111,111]],[[111,111],111],[[]],[[]],[[]],[[]],[[111,111]],[[],21],[29,[[21,[112]]]],[29,[[21,[113]]]],[[],21],[[],21],[29,[[21,[111]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[111,111],111],[114,29],[[114,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[117,29,118,90]],[[117,118,9]],[[117,119]],[[117,29,118]],[[117,118,9]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[117,29,29,29,120]],[121,121],[120,120],[118,118],[119,119],[117,117],[[]],[[]],[[]],[[]],[[]],[[121,121],87],[[120,120],87],[[118,118],87],[[119,119],87],[117,3],[[117,29,89,90,90]],[[121,121],25],[[120,120],25],[[118,118],25],[[119,119],25],[[117,117],25],[[117,28],25],[[121,41],42],[[120,41],42],[[118,41],42],[[119,41],42],[[122,41],42],[[123,41],42],[[117,41],42],[117],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,38],[[21,[117,34]]]],[117,47],[121],[120],[118],[119],[117,38],[[],49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[[117,29,89]],[[117,29,90,90]],[117,[[3,[36]]]],[122,78],[123,78],[[13,[58,[38,57]]],[[21,[45]]]],[[121,121],[[3,[87]]]],[[120,120],[[3,[87]]]],[[118,118],[[3,[87]]]],[[119,119],[[3,[87]]]],[117,[[21,[34]]]],[[]],[[]],[[]],[[]],[[]],[29,[[21,[121]]]],[[],21],[29,[[21,[120]]]],[[],21],[[],21],[29,[[21,[118]]]],[[],21],[29,[[21,[119]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[117,29],[[117,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[[]],[124,3],[[124,28],25],[[124,124],25],[[125,41],42],[[126,41],42],[[124,41],42],[[]],[[]],[[]],[[13,38],[[21,[124,34]]]],[124,47],[124,38],[[],49],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[124,[[3,[36]]]],[125,78],[126,78],[[13,[58,[38,57]]],[[21,[45]]]],[124,[[21,[34]]]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[124,29],[[124,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],127],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[127,127],127],[[127,127]],[[127,127],127],[[127,127]],[127,29],[[127,127],127],[[127,127]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[128,127]],[127,127],[129,129],[128,128],[[]],[[]],[[]],[[127,127],87],[[129,129],87],[127,127],[[127,127],25],[128,3],[[127,127],127],[[],127],[[127,127],25],[[129,129],25],[[128,28],25],[[128,128],25],[[127,24]],[[127,41],42],[[127,41],42],[[127,41],42],[[127,41],42],[[127,41],42],[[129,41],42],[[130,41],42],[[131,41],42],[[128,41],42],[[]],[[]],[[]],[[]],[[]],[29,[[3,[127]]]],[29,127],[29,127],[[13,38],[[21,[128,34]]]],[24,127],[128,47],[127],[129],[128,38],[[127,127]],[[],49],[[127,127],127],[[127,127],25],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[127,25],[127,25],[[128,60]],[127,127],[128,[[3,[36]]]],[130,78],[131,78],[[13,[58,[38,57]]],[[21,[45]]]],[[127,127],[[3,[87]]]],[[129,129],[[3,[87]]]],[[127,127]],[128,[[21,[34]]]],[[127,127,25]],[[127,127],127],[[127,127]],[[127,127],127],[[]],[[]],[[]],[[127,127]],[29,[[21,[127]]]],[[],21],[29,[[21,[129]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[[],63],[[127,127],127],[128,29],[[128,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132,132],[133,133],[[]],[[]],[[132,132],87],[133,3],[[132,132],25],[[133,133],25],[[133,28],25],[[132,41],42],[[134,41],42],[[135,41],42],[[133,41],42],[[]],[[]],[[]],[[]],[[13,38],[[21,[133,34]]]],[133,47],[132],[133,38],[[],49],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[133,[[3,[36]]]],[134,78],[135,78],[[13,[58,[38,57]]],[[21,[45]]]],[[132,132],[[3,[87]]]],[133,[[21,[34]]]],[[]],[[]],[[],21],[29,[[21,[132]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[133,29],[[133,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],136],[[],137],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[136,136],136],[[137,137],137],[[136,136]],[[137,137]],[[136,136],136],[[137,137],137],[[136,136]],[[137,137]],[136,29],[137,29],[[136,136],136],[[137,137],137],[[136,136]],[[137,137]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[136,136],[137,137],[138,138],[139,139],[[]],[[]],[[]],[[]],[[136,136],87],[[137,137],87],[[138,138],87],[136,136],[137,137],[[139,136,9,9]],[[136,136],25],[[137,137],25],[139,3],[[136,136],136],[[137,137],137],[[],136],[[],137],[[136,136],25],[[137,137],25],[[138,138],25],[[139,28],25],[[139,139],25],[[136,24]],[[137,24]],[[136,41],42],[[136,41],42],[[136,41],42],[[136,41],42],[[136,41],42],[[137,41],42],[[137,41],42],[[137,41],42],[[137,41],42],[[137,41],42],[[138,41],42],[[140,41],42],[[141,41],42],[[139,41],42],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[3,[136]]]],[29,[[3,[137]]]],[29,136],[29,137],[29,136],[29,137],[[13,38],[[21,[139,34]]]],[24,136],[24,137],[139,47],[136],[137],[138],[139,38],[[136,136]],[[137,137]],[[],49],[[136,136],136],[[137,137],137],[[136,136],25],[[137,137],25],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[136,25],[137,25],[136,25],[137,25],[136,136],[137,137],[139,[[3,[36]]]],[140,78],[141,78],[[13,[58,[38,57]]],[[21,[45]]]],[[136,136],[[3,[87]]]],[[137,137],[[3,[87]]]],[[138,138],[[3,[87]]]],[[139,29]],[139],[[136,136]],[[137,137]],[139,[[21,[34]]]],[[136,136,25]],[[137,137,25]],[[136,136],136],[[137,137],137],[[136,136]],[[137,137]],[[136,136],136],[[137,137],137],[[]],[[]],[[]],[[]],[[136,136]],[[137,137]],[29,[[21,[136]]]],[[],21],[29,[[21,[137]]]],[[],21],[29,[[21,[138]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[136,136],136],[[137,137],137],[139,29],[[139,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[142,142],[143,143],[144,144],[[]],[[]],[[]],[[142,142],87],[[143,143],87],[144,3],[[142,142],25],[[143,143],25],[[144,28],25],[[144,144],25],[[142,41],42],[[143,41],42],[[145,41],42],[[146,41],42],[[144,41],42],[[144,143]],[[]],[[]],[[]],[[]],[[]],[[13,38],[[21,[144,34]]]],[144,47],[142],[143],[144,38],[[],49],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[144,[[3,[36]]]],[145,78],[146,78],[[13,[58,[38,57]]],[[21,[45]]]],[[142,142],[[3,[87]]]],[[143,143],[[3,[87]]]],[144,[[21,[34]]]],[[]],[[]],[[]],[[],21],[29,[[21,[142]]]],[29,[[21,[143]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[[],63],[144,29],[[144,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[147,147],[[]],[147,3],[[147,28],25],[[147,147],25],[[148,41],42],[[149,41],42],[[147,41],42],[[]],[[]],[[]],[[13,38],[[21,[147,34]]]],[147,47],[147,38],[[],49],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[147,[[3,[36]]]],[148,78],[149,78],[[13,[58,[38,57]]],[[21,[45]]]],[147,[[21,[34]]]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[147,29],[[147,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150,150],[151,151],[[]],[[]],[[150,150],87],[151,3],[[150,150],25],[[151,28],25],[[151,151],25],[[150,41],42],[[152,41],42],[[153,41],42],[[151,41],42],[[]],[[]],[[]],[[]],[[13,38],[[21,[151,34]]]],[151,47],[150],[151,38],[[],49],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[151,[[3,[36]]]],[152,78],[153,78],[[13,[58,[38,57]]],[[21,[45]]]],[[150,150],[[3,[87]]]],[151,[[21,[34]]]],[[]],[[]],[[],21],[29,[[21,[150]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[151,29],[[151,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[154,154],[155,155],[[]],[[]],[[154,154],87],[155,3],[[154,154],25],[[155,28],25],[[155,155],25],[[154,41],42],[[156,41],42],[[157,41],42],[[155,41],42],[[]],[[]],[[]],[[]],[[13,38],[[21,[155,34]]]],[155,47],[154],[155,38],[[],49],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[155,[[3,[36]]]],[156,78],[157,78],[[13,[58,[38,57]]],[[21,[45]]]],[[154,154],[[3,[87]]]],[155,[[21,[34]]]],[[]],[[]],[29,[[21,[154]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[155,29],[[155,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[158,158],[89,89],[[]],[[]],[[158,158],87],[89,3],[[89,114]],[[158,158],25],[[89,89],25],[[89,28],25],[[158,41],42],[[159,41],42],[[160,41],42],[[89,41],42],[[]],[[]],[[]],[[]],[[13,38],[[21,[89,34]]]],[89,47],[158],[89,38],[[],49],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[[89,114]],[89,[[3,[36]]]],[159,78],[160,78],[[13,[58,[38,57]]],[[21,[45]]]],[[158,158],[[3,[87]]]],[89,[[21,[34]]]],[[]],[[]],[29,[[21,[158]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[],63],[89,29],[[89,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[161],[161,161],[[]],[161,3],[[161,29,29,89,9,90,90]],[[161,28],25],[[161,161],25],[[162,41],42],[[163,41],42],[[161,41],42],[161],[[]],[[]],[[]],[[13,38],[[21,[161,34]]]],[161,47],[161,38],[[],49],[[]],[[]],[[]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[[[51,[50]]],[[51,[5,50]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[36,[[36,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[52,[[52,[5]]]],[[161,29,9,90,90]],[161,[[3,[36]]]],[162,78],[163,78],[[161,9,90]],[[13,[58,[38,57]]],[[21,[45]]]],[161,[[21,[34]]]],[[161,9,90,90]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],63],[[],63],[[],63],[[161,29,29,9]],[161,29],[[161,13],[[21,[[58,[38,8]],34]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"ListeningSocket"],[3,"UnixStream"],[4,"Option"],[6,"Result"],[8,"Any"],[3,"BorrowedFd"],[3,"FilelikeView"],[6,"RawFd"],[15,"i32"],[3,"SocketlikeView"],[3,"Display"],[3,"Backend"],[3,"DisplayHandle"],[3,"Handle"],[3,"Client"],[3,"New"],[3,"DataInit"],[3,"OsStr"],[8,"AsRef"],[4,"BindError"],[4,"Result"],[3,"PathBuf"],[15,"str"],[8,"IntoIterator"],[15,"bool"],[4,"WEnum"],[8,"Clone"],[3,"Weak"],[15,"u32"],[8,"Send"],[8,"Sync"],[3,"GlobalId"],[8,"Resource"],[3,"InvalidId"],[8,"ObjectData"],[3,"Arc"],[3,"ClientId"],[3,"ObjectId"],[3,"ResourceData"],[15,"usize"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Error"],[4,"DispatchError"],[3,"Credentials"],[3,"WeakHandle"],[8,"ClientData"],[3,"Interface"],[3,"Global"],[3,"Box"],[3,"Rc"],[3,"WEnumError"],[3,"ProtocolError"],[4,"InitError"],[3,"ObjectInfo"],[3,"OwnedFd"],[3,"Message"],[8,"Into"],[3,"String"],[3,"Demand"],[8,"Error"],[3,"TypeId"],[8,"GlobalHandler"],[4,"DisconnectReason"],[3,"Error"],[3,"GlobalInfo"],[3,"CString"],[8,"FnMut"],[4,"AllowNull"],[4,"ArgumentType"],[4,"Argument"],[3,"MessageDesc"],[3,"wl_interface"],[3,"WlBuffer"],[4,"Request"],[4,"Event"],[15,"u16"],[3,"WlCallback"],[4,"Request"],[4,"Event"],[3,"WlCompositor"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"WlDataDevice"],[4,"Ordering"],[3,"WlDataOffer"],[3,"WlSurface"],[15,"f64"],[4,"Request"],[4,"Event"],[3,"DndAction"],[3,"WlDataDeviceManager"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlDataSource"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"KeymapFormat"],[4,"KeyState"],[3,"WlKeyboard"],[15,"u8"],[3,"Vec"],[4,"Request"],[4,"Event"],[3,"Mode"],[4,"Subpixel"],[4,"Transform"],[3,"WlOutput"],[4,"Request"],[4,"Event"],[3,"WlPointer"],[4,"Axis"],[4,"AxisSource"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlRegion"],[4,"Request"],[4,"Event"],[3,"Capability"],[3,"WlSeat"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"WlShell"],[4,"Request"],[4,"Event"],[3,"Resize"],[3,"Transient"],[4,"FullscreenMethod"],[3,"WlShellSurface"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Format"],[3,"WlShm"],[4,"Request"],[4,"Event"],[3,"WlShmPool"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"WlSubcompositor"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"WlSubsurface"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlTouch"],[4,"Request"],[4,"Event"],[8,"GlobalDispatch"],[8,"Dispatch"],[13,"Io"],[13,"BadMessage"],[13,"Value"],[13,"Unknown"],[13,"ProtocolError"],[13,"Io"],[19,"wl_argument"],[3,"wl_message"],[13,"Int"],[13,"Uint"],[13,"Fixed"],[13,"Str"],[13,"Object"],[13,"NewId"],[13,"Array"],[13,"Fd"],[13,"Str"],[13,"Object"],[13,"Done"],[13,"CreateSurface"],[13,"CreateRegion"],[13,"DataOffer"],[13,"Enter"],[13,"Selection"],[13,"Motion"],[13,"StartDrag"],[13,"SetSelection"],[13,"CreateDataSource"],[13,"GetDataDevice"],[13,"Action"],[13,"Offer"],[13,"SourceActions"],[13,"SetActions"],[13,"Receive"],[13,"Accept"],[13,"Action"],[13,"Send"],[13,"Target"],[13,"SetActions"],[13,"Offer"],[13,"RepeatInfo"],[13,"Keymap"],[13,"Modifiers"],[13,"Key"],[13,"Enter"],[13,"Leave"],[13,"Description"],[13,"Scale"],[13,"Mode"],[13,"Geometry"],[13,"Name"],[13,"Axis"],[13,"AxisStop"],[13,"AxisDiscrete"],[13,"AxisValue120"],[13,"AxisSource"],[13,"Button"],[13,"Enter"],[13,"Leave"],[13,"Motion"],[13,"SetCursor"],[13,"Add"],[13,"Subtract"],[13,"Capabilities"],[13,"Name"],[13,"GetPointer"],[13,"GetKeyboard"],[13,"GetTouch"],[13,"GetShellSurface"],[13,"Configure"],[13,"Ping"],[13,"SetClass"],[13,"Resize"],[13,"SetTransient"],[13,"SetPopup"],[13,"SetFullscreen"],[13,"SetMaximized"],[13,"Move"],[13,"Pong"],[13,"SetTitle"],[13,"Format"],[13,"CreatePool"],[13,"CreateBuffer"],[13,"Resize"],[13,"GetSubsurface"],[13,"PlaceAbove"],[13,"PlaceBelow"],[13,"SetPosition"],[13,"Enter"],[13,"Leave"],[13,"Attach"],[13,"Frame"],[13,"Damage"],[13,"DamageBuffer"],[13,"SetOpaqueRegion"],[13,"SetInputRegion"],[13,"SetBufferScale"],[13,"SetBufferTransform"],[13,"Offset"],[13,"Down"],[13,"Up"],[13,"Motion"],[13,"Shape"],[13,"Orientation"]]},\
"wayland_sys":{"doc":"FFI bindings to the wayland system libraries.","t":[0,0,14,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,4,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,19,3,6,5,5,6,5,5,3,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,6,4,6,4,6,6,6,6,4,4,6,3,6,4,6,4,3],"n":["client","common","ffi_dispatch","server","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_display","wl_event_queue","wl_proxy","a","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","event_count","events","f","fmt","from","from","from","from","from","h","i","into","into","into","into","into","n","name","name","next","o","prev","request_count","requests","s","signature","size","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","u","version","wl_argument","wl_array","wl_dispatcher_func_t","wl_fixed_from_double","wl_fixed_from_int","wl_fixed_t","wl_fixed_to_double","wl_fixed_to_int","wl_interface","wl_list","wl_log_func_t","wl_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","link","listener_list","notify","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wl_client","wl_client_for_each_resource_iterator_func_t","wl_display","wl_display_global_filter_func_t","wl_event_loop","wl_event_loop_fd_func_t","wl_event_loop_idle_func_t","wl_event_loop_signal_func_t","wl_event_loop_timer_func_t","wl_event_source","wl_global","wl_global_bind_func_t","wl_listener","wl_notify_func_t","wl_resource","wl_resource_destroy_func_t","wl_shm_buffer","wl_signal"],"q":["wayland_sys","","","","wayland_sys::client","","","","","","","","","","","","","","","","","","","","","","","","wayland_sys::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wayland_sys::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Bindings to the client library <code>libwayland-client.so</code>","Various types and functions that are used by both the …","","Bindings to the client library <code>libwayland-server.so</code>","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,0,0,0,12,13,14,3,15,13,12,14,3,15,13,12,13,3,3,12,3,14,3,15,13,12,12,12,14,3,15,13,12,12,14,3,15,12,15,3,3,12,14,13,14,3,15,13,12,14,3,15,13,12,14,3,15,13,12,14,12,3,0,0,0,0,0,0,0,0,0,0,0,0,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,23,24,23,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[3,4],5],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,[6,7],[8,7],0,[7,6],[7,8],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[4,"Result"],[3,"TypeId"],[3,"wl_interface"],[3,"Formatter"],[6,"Result"],[15,"f64"],[6,"wl_fixed_t"],[15,"i32"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[19,"wl_argument"],[3,"wl_array"],[3,"wl_message"],[3,"wl_list"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[3,"wl_listener"],[3,"wl_signal"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
