var searchIndex = new Map(JSON.parse('[\
["bitflags",{"doc":"Generate types for C-style flags with ergonomic APIs.","t":"TEKRTTFKNNQMNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNCNNNNNNCNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNFKKNNNNNNHHHNNNMNHHHNNNM","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","fmt","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","is_named","is_unnamed","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","from_str_strict","from_str_truncate","into","invalid_hex_flag","invalid_named_flag","parse_hex","to_string","to_writer","to_writer_strict","to_writer_truncate","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[66,"bitflags::iter"],[87,"bitflags::parser"],[111,"core::fmt"],[112,"core::fmt"],[113,"core::result"],[114,"core::any"],[115,"core::fmt"],[116,"core::fmt"]],"d":["A value with all bits set.","","A bits type that can be used as storage for a flags type.","The underlying bits type.","A value with all bits unset.","The set of defined flags.","A defined flags value that may be named or unnamed.","A set of defined flags using a bits type as storage.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Generate a flags type.","Get the underlying bits value.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether the flag is named.","Whether the flag is unnamed.","Yield the bits of a source flags value in a set of …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the name of this flag.","Define a flag.","Parsing flags from text.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the flags value of this flag.","An iterator over flags values.","An iterator over flags values.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get a flags value of any remaining bits that haven’t …","","","","","","","An error encountered while parsing flags from text.","Parse a value from a hex string.","Encode a value as a hex string.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a flags value from text.","Parse a flags value from text.","Parse a flags value from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","","Write a flags value as text.","Write only the contained, defined, named flags in a flags …","Write a flags value as text, ignoring any unknown bits.","","","","Write the value as hex."],"i":[3,0,0,2,3,2,0,0,2,2,0,2,5,5,2,2,2,2,2,2,2,2,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,5,5,0,2,2,2,2,5,5,0,2,2,2,2,2,2,2,2,5,5,5,2,2,5,0,0,12,13,12,13,12,13,12,13,12,13,12,13,13,12,13,12,13,12,13,0,0,0,16,16,16,16,16,16,0,0,0,16,16,16,18,16,0,0,0,16,16,16,22],"f":"````````{{}{{d{}{{b{c}}}}}f}0`{{{d{}{{b{c}}}}}cf}{ce{}{}}0{{{d{}{{b{c}}}}}{{d{}{{b{c}}}}}f}0{{{d{}{{b{c}}}}{d{}{{b{c}}}}}hf}0{{{d{}{{b{c}}}}{d{}{{b{c}}}}}{{d{}{{b{c}}}}}f}055{{{j{c}}l}nA`}{cc{}}{c{{Ab{{d{}{{b{c}}}}}}}f}0{c{{d{}{{b{c}}}}}f}00{Ad{{Ab{{d{}{{b{c}}}}}}}f}0{{{d{}{{b{c}}}}{d{}{{b{c}}}}}Aff}066779{{{d{}{{b{c}}}}}hf}000{{{j{c}}}h{}}0`{{{d{}{{b{c}}}}}{{Ah{{d{}{{b{c}}}}}}}f}0{{{d{}{{b{c}}}}}{{Aj{{d{}{{b{c}}}}}}}f}0{{{j{c}}}Ad{}}{{Adc}{{j{c}}}{}}`66{{{d{}{{b{c}}}}{d{}{{b{c}}}}h}Aff}0==77{c{{Al{e}}}{}{}}0{cAn{}}??{{{j{c}}}c{}}``{ce{}{}}000??0000{{{Ah{c}}}{{Ab{e}}}d{}}{{{Aj{c}}}{{Ab{e}}}d{}}{{{Aj{c}}}c{}}666655```33{{}B`}{{B`l}n}0{cc{}}{Ad{{Al{cB`}}}d}007{cB`Bb}0{Ad{{Al{BdB`}}}}{cBf{}}{{ce}{{Al{AfBh}}}dBj}00>>={{Blc}nBj}","c":[],"p":[[17,"Bits"],[10,"Flags",0],[10,"Bits",0],[1,"bool"],[5,"Flag",0],[5,"Formatter",111],[8,"Result",111],[10,"Debug",111],[6,"Option",112],[1,"str"],[1,"unit"],[5,"Iter",66],[5,"IterNames",66],[6,"Result",113],[5,"TypeId",114],[5,"ParseError",87],[10,"Display",111],[10,"ParseHex",87],[5,"String",115],[5,"Error",111],[10,"Write",111],[10,"WriteHex",87]],"b":[[93,"impl-Display-for-ParseError"],[94,"impl-Debug-for-ParseError"]]}],\
["cfg_if",{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"Q","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":"`","c":[],"p":[],"b":[]}],\
["cosmic_protocols",{"doc":"This crate provides bindings to the COSMIC wayland …","t":"CCCCCCCCCCCCCCJJJJJJJJJJJJPGSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPPGSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPPGSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCCCCCJJJJJJJJJJJJPGSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPPGSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPPGSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCCCCCCCJJJJJJJJJJJJJJGSSSSPGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPSSGGPPPSSSSPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOSSSSGPSSPGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPGGPPPSSSSSSSSPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCCCCCJJJJJJJJJJJJJJGSSSSPGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPSSGGPPPSSSSPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOSSSSGPSSPGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPGGPPPSSSSSSSSPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOCCCCCCCCJJJJJJJJJJJJJJJPPSSSSSSSSPGGPPPPSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOPPPPPPPSSSSSSSSSSGGPGPPPSSSSSSSSPGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOPPPGGPFTSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPPPPPPSSSSSSSSSSSSGSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOCCCCCJJJJJJJJJJJJJJJPPSSSSSSSSPGGPPPPSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPPPPPPPSSSSSSSSSSGGPGPPPSSSSSSSSPGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOPPPGGPFTSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOPPPPPPSSSSSSSSSSSSGSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOCCCCCCJJJJJJJJPPPPPSSSSSSSSSSSSSSSSSSGPPPPPSSGGPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOSSSSGPSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCCCJJJJJJJJPPPPPSSSSSSSSSSSSSSSSSSGPPPPPSSGGPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOSSSSGPSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCCCCCJJJJPPPPPPSSGGPPPPPPSSSSSSSSSSSSSSSSSSSSSSGPPPPPPPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOCCJJJJPPPPPPSSGGPPPPPPSSSSSSSSSSSSSSSSSSSSSSGPPPPPPPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOCCCCCCCJJJJJJJJJJJJPPPPSSSSSSSSSSGPPSSSSPGPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPPPPPPPPSSSSSSSSSSSSGPPPSSSSSSSSSSSSPPPPPGPPGPPGPPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOPPSSSSSSGPSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCCCCJJJJJJJJJJJJPPPPSSSSSSSSSSGPPSSSSPGPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPPPPPPPPSSSSSSSSSSSSGPPPSSSSSSSSSSSSPPPPPGPPGPPGPPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOPPSSSSSSGPSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNO","n":["image_source","output_management","screencopy","toplevel_info","toplevel_management","workspace","v1","client","server","__interfaces","zcosmic_image_source_v1","zcosmic_output_image_source_manager_v1","zcosmic_toplevel_image_source_manager_v1","zcosmic_workspace_image_source_manager_v1","ZCOSMIC_IMAGE_SOURCE_V1_INTERFACE","ZCOSMIC_OUTPUT_IMAGE_SOURCE_MANAGER_V1_INTERFACE","ZCOSMIC_TOPLEVEL_IMAGE_SOURCE_MANAGER_V1_INTERFACE","ZCOSMIC_WORKSPACE_IMAGE_SOURCE_MANAGER_V1_INTERFACE","zcosmic_image_source_v1_interface","zcosmic_image_source_v1_requests","zcosmic_output_image_source_manager_v1_interface","zcosmic_output_image_source_manager_v1_requests","zcosmic_toplevel_image_source_manager_v1_interface","zcosmic_toplevel_image_source_manager_v1_requests","zcosmic_workspace_image_source_manager_v1_interface","zcosmic_workspace_image_source_manager_v1_requests","Destroy","Event","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicImageSourceV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","CreateSource","Destroy","Event","REQ_CREATE_SOURCE_OPCODE","REQ_CREATE_SOURCE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicOutputImageSourceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_source","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","CreateSource","Destroy","Event","REQ_CREATE_SOURCE_OPCODE","REQ_CREATE_SOURCE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicToplevelImageSourceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_source","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","toplevel_handle","CreateSource","Destroy","Event","REQ_CREATE_SOURCE_OPCODE","REQ_CREATE_SOURCE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicWorkspaceImageSourceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_source","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","__interfaces","zcosmic_image_source_v1","zcosmic_output_image_source_manager_v1","zcosmic_toplevel_image_source_manager_v1","zcosmic_workspace_image_source_manager_v1","ZCOSMIC_IMAGE_SOURCE_V1_INTERFACE","ZCOSMIC_OUTPUT_IMAGE_SOURCE_MANAGER_V1_INTERFACE","ZCOSMIC_TOPLEVEL_IMAGE_SOURCE_MANAGER_V1_INTERFACE","ZCOSMIC_WORKSPACE_IMAGE_SOURCE_MANAGER_V1_INTERFACE","zcosmic_image_source_v1_interface","zcosmic_image_source_v1_requests","zcosmic_output_image_source_manager_v1_interface","zcosmic_output_image_source_manager_v1_requests","zcosmic_toplevel_image_source_manager_v1_interface","zcosmic_toplevel_image_source_manager_v1_requests","zcosmic_workspace_image_source_manager_v1_interface","zcosmic_workspace_image_source_manager_v1_requests","Destroy","Event","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicImageSourceV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","CreateSource","Destroy","Event","REQ_CREATE_SOURCE_OPCODE","REQ_CREATE_SOURCE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicOutputImageSourceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","output","source","CreateSource","Destroy","Event","REQ_CREATE_SOURCE_OPCODE","REQ_CREATE_SOURCE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicToplevelImageSourceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","source","toplevel_handle","CreateSource","Destroy","Event","REQ_CREATE_SOURCE_OPCODE","REQ_CREATE_SOURCE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicWorkspaceImageSourceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","output","source","v1","client","server","__interfaces","zcosmic_output_configuration_head_v1","zcosmic_output_configuration_v1","zcosmic_output_head_v1","zcosmic_output_manager_v1","ZCOSMIC_OUTPUT_CONFIGURATION_HEAD_V1_INTERFACE","ZCOSMIC_OUTPUT_CONFIGURATION_V1_INTERFACE","ZCOSMIC_OUTPUT_HEAD_V1_INTERFACE","ZCOSMIC_OUTPUT_MANAGER_V1_INTERFACE","zcosmic_output_configuration_head_v1_interface","zcosmic_output_configuration_head_v1_requests","zcosmic_output_configuration_v1_events","zcosmic_output_configuration_v1_interface","zcosmic_output_configuration_v1_requests","zcosmic_output_head_v1_events","zcosmic_output_head_v1_interface","zcosmic_output_head_v1_requests","zcosmic_output_manager_v1_interface","zcosmic_output_manager_v1_requests","Event","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_SCALE_1000_OPCODE","REQ_SET_SCALE_1000_SINCE","Release","Request","SetScale1000","ZcosmicOutputConfigurationHeadV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","release","send_constructor","send_request","set_scale_1000","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","scale_1000","AlreadyFinished","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","Error","Event","Finished","MirrorHead","MirroredHeadBusy","REQ_MIRROR_HEAD_OPCODE","REQ_MIRROR_HEAD_SINCE","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","ZcosmicOutputConfigurationV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mirror_head","object_data","opcode","opcode","parse_event","partial_cmp","release","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","head","mirroring","EVT_MIRRORING_OPCODE","EVT_MIRRORING_SINCE","EVT_SCALE_1000_OPCODE","EVT_SCALE_1000_SINCE","Event","Mirroring","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Scale1000","ZcosmicOutputHeadV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","release","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","name","scale_1000","AlreadyExtended","Error","Event","GetConfiguration","GetConfigurationHead","GetHead","REQ_GET_CONFIGURATION_HEAD_OPCODE","REQ_GET_CONFIGURATION_HEAD_SINCE","REQ_GET_CONFIGURATION_OPCODE","REQ_GET_CONFIGURATION_SINCE","REQ_GET_HEAD_OPCODE","REQ_GET_HEAD_SINCE","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","ZcosmicOutputManagerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_configuration","get_configuration_head","get_head","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","release","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","config","config_head","head","__interfaces","zcosmic_output_configuration_head_v1","zcosmic_output_configuration_v1","zcosmic_output_head_v1","zcosmic_output_manager_v1","ZCOSMIC_OUTPUT_CONFIGURATION_HEAD_V1_INTERFACE","ZCOSMIC_OUTPUT_CONFIGURATION_V1_INTERFACE","ZCOSMIC_OUTPUT_HEAD_V1_INTERFACE","ZCOSMIC_OUTPUT_MANAGER_V1_INTERFACE","zcosmic_output_configuration_head_v1_interface","zcosmic_output_configuration_head_v1_requests","zcosmic_output_configuration_v1_events","zcosmic_output_configuration_v1_interface","zcosmic_output_configuration_v1_requests","zcosmic_output_head_v1_events","zcosmic_output_head_v1_interface","zcosmic_output_head_v1_requests","zcosmic_output_manager_v1_interface","zcosmic_output_manager_v1_requests","Event","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_SCALE_1000_OPCODE","REQ_SET_SCALE_1000_SINCE","Release","Request","SetScale1000","ZcosmicOutputConfigurationHeadV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","scale_1000","AlreadyFinished","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","Error","Event","Finished","MirrorHead","MirroredHeadBusy","REQ_MIRROR_HEAD_OPCODE","REQ_MIRROR_HEAD_SINCE","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","ZcosmicOutputConfigurationV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","finished","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","head","id","mirroring","EVT_MIRRORING_OPCODE","EVT_MIRRORING_SINCE","EVT_SCALE_1000_OPCODE","EVT_SCALE_1000_SINCE","Event","Mirroring","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Scale1000","ZcosmicOutputHeadV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","mirroring","object_data","opcode","opcode","parse_request","scale_1000","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","name","scale_1000","AlreadyExtended","Error","Event","GetConfiguration","GetConfigurationHead","GetHead","REQ_GET_CONFIGURATION_HEAD_OPCODE","REQ_GET_CONFIGURATION_HEAD_SINCE","REQ_GET_CONFIGURATION_OPCODE","REQ_GET_CONFIGURATION_SINCE","REQ_GET_HEAD_OPCODE","REQ_GET_HEAD_SINCE","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","ZcosmicOutputManagerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","config","config_head","extended","extended","extended","head","v2","client","server","__interfaces","zcosmic_screencopy_cursor_session_v2","zcosmic_screencopy_frame_v2","zcosmic_screencopy_manager_v2","zcosmic_screencopy_session_v2","ZCOSMIC_SCREENCOPY_CURSOR_SESSION_V2_INTERFACE","ZCOSMIC_SCREENCOPY_FRAME_V2_INTERFACE","ZCOSMIC_SCREENCOPY_MANAGER_V2_INTERFACE","ZCOSMIC_SCREENCOPY_SESSION_V2_INTERFACE","zcosmic_screencopy_cursor_session_v2_events","zcosmic_screencopy_cursor_session_v2_interface","zcosmic_screencopy_cursor_session_v2_requests","zcosmic_screencopy_frame_v2_events","zcosmic_screencopy_frame_v2_interface","zcosmic_screencopy_frame_v2_requests","zcosmic_screencopy_manager_v2_interface","zcosmic_screencopy_manager_v2_requests","zcosmic_screencopy_session_v2_events","zcosmic_screencopy_session_v2_interface","zcosmic_screencopy_session_v2_requests","Destroy","DuplicateSession","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_HOTSPOT_OPCODE","EVT_HOTSPOT_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_POSITION_OPCODE","EVT_POSITION_SINCE","Enter","Error","Event","GetScreencopySession","Hotspot","Leave","Position","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_SCREENCOPY_SESSION_OPCODE","REQ_GET_SCREENCOPY_SESSION_SINCE","Request","ZcosmicScreencopyCursorSessionV2","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_screencopy_session","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","x","x","y","y","AlreadyCaptured","AttachBuffer","BufferConstraints","Capture","Damage","DamageBuffer","Destroy","EVT_DAMAGE_OPCODE","EVT_DAMAGE_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_PRESENTATION_TIME_OPCODE","EVT_PRESENTATION_TIME_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","EVT_TRANSFORM_OPCODE","EVT_TRANSFORM_SINCE","Error","Event","Failed","FailureReason","InvalidBufferDamage","NoBuffer","PresentationTime","REQ_ATTACH_BUFFER_OPCODE","REQ_ATTACH_BUFFER_SINCE","REQ_CAPTURE_OPCODE","REQ_CAPTURE_SINCE","REQ_DAMAGE_BUFFER_OPCODE","REQ_DAMAGE_BUFFER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","Stopped","Transform","Unknown","ZcosmicScreencopyFrameV2","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","attach_buffer","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","damage_buffer","data","destroy","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","height","reason","transform","tv_nsec","tv_sec_hi","tv_sec_lo","width","x","y","buffer","height","width","x","y","CreatePointerCursorSession","CreateSession","Destroy","Error","Event","InvalidOption","Options","PaintCursors","REQ_CREATE_POINTER_CURSOR_SESSION_OPCODE","REQ_CREATE_POINTER_CURSOR_SESSION_SINCE","REQ_CREATE_SESSION_OPCODE","REQ_CREATE_SESSION_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicScreencopyManagerV2","all","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","complement","contains","contains","create_pointer_cursor_session","create_session","data","destroy","difference","difference","empty","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","remove","remove","send_constructor","send_request","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","options","options","pointer","source","source","BufferSize","CreateFrame","Destroy","DmabufDevice","DmabufFormat","Done","EVT_BUFFER_SIZE_OPCODE","EVT_BUFFER_SIZE_SINCE","EVT_DMABUF_DEVICE_OPCODE","EVT_DMABUF_DEVICE_SINCE","EVT_DMABUF_FORMAT_OPCODE","EVT_DMABUF_FORMAT_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_SHM_FORMAT_OPCODE","EVT_SHM_FORMAT_SINCE","EVT_STOPPED_OPCODE","EVT_STOPPED_SINCE","Event","REQ_CREATE_FRAME_OPCODE","REQ_CREATE_FRAME_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ShmFormat","Stopped","ZcosmicScreencopySessionV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_frame","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","device","format","format","height","modifiers","width","__interfaces","zcosmic_screencopy_cursor_session_v2","zcosmic_screencopy_frame_v2","zcosmic_screencopy_manager_v2","zcosmic_screencopy_session_v2","ZCOSMIC_SCREENCOPY_CURSOR_SESSION_V2_INTERFACE","ZCOSMIC_SCREENCOPY_FRAME_V2_INTERFACE","ZCOSMIC_SCREENCOPY_MANAGER_V2_INTERFACE","ZCOSMIC_SCREENCOPY_SESSION_V2_INTERFACE","zcosmic_screencopy_cursor_session_v2_events","zcosmic_screencopy_cursor_session_v2_interface","zcosmic_screencopy_cursor_session_v2_requests","zcosmic_screencopy_frame_v2_events","zcosmic_screencopy_frame_v2_interface","zcosmic_screencopy_frame_v2_requests","zcosmic_screencopy_manager_v2_interface","zcosmic_screencopy_manager_v2_requests","zcosmic_screencopy_session_v2_events","zcosmic_screencopy_session_v2_interface","zcosmic_screencopy_session_v2_requests","Destroy","DuplicateSession","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_HOTSPOT_OPCODE","EVT_HOTSPOT_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_POSITION_OPCODE","EVT_POSITION_SINCE","Enter","Error","Event","GetScreencopySession","Hotspot","Leave","Position","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_SCREENCOPY_SESSION_OPCODE","REQ_GET_SCREENCOPY_SESSION_SINCE","Request","ZcosmicScreencopyCursorSessionV2","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","enter","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","hotspot","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leave","object_data","opcode","opcode","parse_request","partial_cmp","position","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","x","x","y","y","session","AlreadyCaptured","AttachBuffer","BufferConstraints","Capture","Damage","DamageBuffer","Destroy","EVT_DAMAGE_OPCODE","EVT_DAMAGE_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_PRESENTATION_TIME_OPCODE","EVT_PRESENTATION_TIME_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","EVT_TRANSFORM_OPCODE","EVT_TRANSFORM_SINCE","Error","Event","Failed","FailureReason","InvalidBufferDamage","NoBuffer","PresentationTime","REQ_ATTACH_BUFFER_OPCODE","REQ_ATTACH_BUFFER_SINCE","REQ_CAPTURE_OPCODE","REQ_CAPTURE_SINCE","REQ_DAMAGE_BUFFER_OPCODE","REQ_DAMAGE_BUFFER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","Stopped","Transform","Unknown","ZcosmicScreencopyFrameV2","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","damage","data","eq","eq","eq","eq","failed","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","handle","hash","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","presentation_time","ready","send_event","to_owned","to_owned","to_owned","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","height","reason","transform","tv_nsec","tv_sec_hi","tv_sec_lo","width","x","y","buffer","height","width","x","y","CreatePointerCursorSession","CreateSession","Destroy","Error","Event","InvalidOption","Options","PaintCursors","REQ_CREATE_POINTER_CURSOR_SESSION_OPCODE","REQ_CREATE_POINTER_CURSOR_SESSION_SINCE","REQ_CREATE_SESSION_OPCODE","REQ_CREATE_SESSION_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZcosmicScreencopyManagerV2","all","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","complement","contains","contains","data","difference","difference","empty","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","handle","hash","hash","hash","id","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_request","partial_cmp","remove","remove","send_event","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","version","write_event","options","options","pointer","session","session","source","source","BufferSize","CreateFrame","Destroy","DmabufDevice","DmabufFormat","Done","EVT_BUFFER_SIZE_OPCODE","EVT_BUFFER_SIZE_SINCE","EVT_DMABUF_DEVICE_OPCODE","EVT_DMABUF_DEVICE_SINCE","EVT_DMABUF_FORMAT_OPCODE","EVT_DMABUF_FORMAT_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_SHM_FORMAT_OPCODE","EVT_SHM_FORMAT_SINCE","EVT_STOPPED_OPCODE","EVT_STOPPED_SINCE","Event","REQ_CREATE_FRAME_OPCODE","REQ_CREATE_FRAME_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ShmFormat","Stopped","ZcosmicScreencopySessionV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer_size","clone","clone_into","data","dmabuf_device","dmabuf_format","done","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","shm_format","stopped","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","device","format","format","height","modifiers","width","frame","v1","client","server","__interfaces","zcosmic_toplevel_handle_v1","zcosmic_toplevel_info_v1","ZCOSMIC_TOPLEVEL_HANDLE_V1_INTERFACE","ZCOSMIC_TOPLEVEL_INFO_V1_INTERFACE","zcosmic_toplevel_handle_v1_events","zcosmic_toplevel_handle_v1_interface","zcosmic_toplevel_handle_v1_requests","zcosmic_toplevel_info_v1_events","zcosmic_toplevel_info_v1_interface","zcosmic_toplevel_info_v1_requests","Activated","AppId","Closed","Destroy","Done","EVT_APP_ID_OPCODE","EVT_APP_ID_SINCE","EVT_CLOSED_OPCODE","EVT_CLOSED_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","EVT_TITLE_OPCODE","EVT_TITLE_SINCE","EVT_WORKSPACE_ENTER_OPCODE","EVT_WORKSPACE_ENTER_SINCE","EVT_WORKSPACE_LEAVE_OPCODE","EVT_WORKSPACE_LEAVE_SINCE","Event","Fullscreen","Maximized","Minimized","OutputEnter","OutputLeave","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","State","State","Title","WorkspaceEnter","WorkspaceLeave","ZcosmicToplevelHandleV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","app_id","output","output","state","title","workspace","workspace","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_TOPLEVEL_OPCODE","EVT_TOPLEVEL_SINCE","Event","Finished","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","Toplevel","ZcosmicToplevelInfoV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","toplevel","__interfaces","zcosmic_toplevel_handle_v1","zcosmic_toplevel_info_v1","ZCOSMIC_TOPLEVEL_HANDLE_V1_INTERFACE","ZCOSMIC_TOPLEVEL_INFO_V1_INTERFACE","zcosmic_toplevel_handle_v1_events","zcosmic_toplevel_handle_v1_interface","zcosmic_toplevel_handle_v1_requests","zcosmic_toplevel_info_v1_events","zcosmic_toplevel_info_v1_interface","zcosmic_toplevel_info_v1_requests","Activated","AppId","Closed","Destroy","Done","EVT_APP_ID_OPCODE","EVT_APP_ID_SINCE","EVT_CLOSED_OPCODE","EVT_CLOSED_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","EVT_TITLE_OPCODE","EVT_TITLE_SINCE","EVT_WORKSPACE_ENTER_OPCODE","EVT_WORKSPACE_ENTER_SINCE","EVT_WORKSPACE_LEAVE_OPCODE","EVT_WORKSPACE_LEAVE_SINCE","Event","Fullscreen","Maximized","Minimized","OutputEnter","OutputLeave","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","State","State","Title","WorkspaceEnter","WorkspaceLeave","ZcosmicToplevelHandleV1","app_id","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","closed","cmp","data","done","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","output_enter","output_leave","parse_request","partial_cmp","send_event","state","title","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","workspace_enter","workspace_leave","write_event","app_id","output","output","state","title","workspace","workspace","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_TOPLEVEL_OPCODE","EVT_TOPLEVEL_SINCE","Event","Finished","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","Toplevel","ZcosmicToplevelInfoV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","finished","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","toplevel","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","toplevel","v1","client","server","__interfaces","zcosmic_toplevel_manager_v1","ZCOSMIC_TOPLEVEL_MANAGER_V1_INTERFACE","zcosmic_toplevel_manager_v1_events","zcosmic_toplevel_manager_v1_interface","zcosmic_toplevel_manager_v1_requests","Activate","Activate","Capabilities","Close","Close","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","Error","Event","Fullscreen","InvalidRectangle","Maximize","Minimize","MoveToWorkspace","MoveToWorkspace","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_CLOSE_OPCODE","REQ_CLOSE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_MOVE_TO_WORKSPACE_OPCODE","REQ_MOVE_TO_WORKSPACE_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_RECTANGLE_OPCODE","REQ_SET_RECTANGLE_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","REQ_UNSET_MINIMIZED_OPCODE","REQ_UNSET_MINIMIZED_SINCE","Request","SetFullscreen","SetMaximized","SetMinimized","SetRectangle","UnsetFullscreen","UnsetMaximized","UnsetMinimized","ZcosmicToplelevelManagementCapabilitiesV1","ZcosmicToplevelManagerV1","activate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","close","cmp","cmp","data","destroy","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","move_to_workspace","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","set_fullscreen","set_maximized","set_minimized","set_rectangle","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","unset_minimized","version","write_request","capabilities","height","output","output","seat","surface","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","width","workspace","x","y","__interfaces","zcosmic_toplevel_manager_v1","ZCOSMIC_TOPLEVEL_MANAGER_V1_INTERFACE","zcosmic_toplevel_manager_v1_events","zcosmic_toplevel_manager_v1_interface","zcosmic_toplevel_manager_v1_requests","Activate","Activate","Capabilities","Close","Close","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","Error","Event","Fullscreen","InvalidRectangle","Maximize","Minimize","MoveToWorkspace","MoveToWorkspace","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_CLOSE_OPCODE","REQ_CLOSE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_MOVE_TO_WORKSPACE_OPCODE","REQ_MOVE_TO_WORKSPACE_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_RECTANGLE_OPCODE","REQ_SET_RECTANGLE_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","REQ_UNSET_MINIMIZED_OPCODE","REQ_UNSET_MINIMIZED_SINCE","Request","SetFullscreen","SetMaximized","SetMinimized","SetRectangle","UnsetFullscreen","UnsetMaximized","UnsetMinimized","ZcosmicToplelevelManagementCapabilitiesV1","ZcosmicToplevelManagerV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","handle","hash","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","send_event","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","capabilities","height","output","output","seat","surface","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","toplevel","width","workspace","x","y","v1","client","server","__interfaces","zcosmic_workspace_group_handle_v1","zcosmic_workspace_handle_v1","zcosmic_workspace_manager_v1","ZCOSMIC_WORKSPACE_GROUP_HANDLE_V1_INTERFACE","ZCOSMIC_WORKSPACE_HANDLE_V1_INTERFACE","ZCOSMIC_WORKSPACE_MANAGER_V1_INTERFACE","zcosmic_workspace_group_handle_v1_events","zcosmic_workspace_group_handle_v1_interface","zcosmic_workspace_group_handle_v1_requests","zcosmic_workspace_handle_v1_events","zcosmic_workspace_handle_v1_interface","zcosmic_workspace_handle_v1_requests","zcosmic_workspace_manager_v1_events","zcosmic_workspace_manager_v1_interface","zcosmic_workspace_manager_v1_requests","Capabilities","CreateWorkspace","CreateWorkspace","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_REMOVE_OPCODE","EVT_REMOVE_SINCE","EVT_WORKSPACE_OPCODE","EVT_WORKSPACE_SINCE","Event","OutputEnter","OutputLeave","REQ_CREATE_WORKSPACE_OPCODE","REQ_CREATE_WORKSPACE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Remove","Request","Workspace","ZcosmicWorkspaceGroupCapabilitiesV1","ZcosmicWorkspaceGroupHandleV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","create_workspace","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","capabilities","output","output","workspace","workspace","Activate","Activate","Active","Capabilities","Coordinates","Deactivate","Deactivate","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_COORDINATES_OPCODE","EVT_COORDINATES_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_REMOVE_OPCODE","EVT_REMOVE_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","EVT_TILING_STATE_OPCODE","EVT_TILING_STATE_SINCE","Event","FloatingOnly","Hidden","Name","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_DEACTIVATE_OPCODE","REQ_DEACTIVATE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_REMOVE_OPCODE","REQ_REMOVE_SINCE","REQ_RENAME_OPCODE","REQ_RENAME_SINCE","REQ_SET_TILING_STATE_OPCODE","REQ_SET_TILING_STATE_SINCE","Remove","Remove","Remove","Rename","Rename","Request","SetTilingState","SetTilingState","State","State","TilingEnabled","TilingState","TilingState","Urgent","ZcosmicWorkspaceCapabilitiesV1","ZcosmicWorkspaceHandleV1","activate","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","data","deactivate","destroy","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_id","hash","hash","hash","hash","id","inert","interface","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","remove","rename","send_constructor","send_request","set_tiling_state","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","version","write_request","capabilities","coordinates","name","state","state","name","state","Commit","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_WORKSPACE_GROUP_OPCODE","EVT_WORKSPACE_GROUP_SINCE","Event","Finished","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","WorkspaceGroup","ZcosmicWorkspaceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","workspace_group","__interfaces","zcosmic_workspace_group_handle_v1","zcosmic_workspace_handle_v1","zcosmic_workspace_manager_v1","ZCOSMIC_WORKSPACE_GROUP_HANDLE_V1_INTERFACE","ZCOSMIC_WORKSPACE_HANDLE_V1_INTERFACE","ZCOSMIC_WORKSPACE_MANAGER_V1_INTERFACE","zcosmic_workspace_group_handle_v1_events","zcosmic_workspace_group_handle_v1_interface","zcosmic_workspace_group_handle_v1_requests","zcosmic_workspace_handle_v1_events","zcosmic_workspace_handle_v1_interface","zcosmic_workspace_handle_v1_requests","zcosmic_workspace_manager_v1_events","zcosmic_workspace_manager_v1_interface","zcosmic_workspace_manager_v1_requests","Capabilities","CreateWorkspace","CreateWorkspace","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_REMOVE_OPCODE","EVT_REMOVE_SINCE","EVT_WORKSPACE_OPCODE","EVT_WORKSPACE_SINCE","Event","OutputEnter","OutputLeave","REQ_CREATE_WORKSPACE_OPCODE","REQ_CREATE_WORKSPACE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Remove","Request","Workspace","ZcosmicWorkspaceGroupCapabilitiesV1","ZcosmicWorkspaceGroupHandleV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","output_enter","output_leave","parse_request","partial_cmp","remove","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","workspace","write_event","capabilities","output","output","workspace","workspace","Activate","Activate","Active","Capabilities","Coordinates","Deactivate","Deactivate","Destroy","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_COORDINATES_OPCODE","EVT_COORDINATES_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_REMOVE_OPCODE","EVT_REMOVE_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","EVT_TILING_STATE_OPCODE","EVT_TILING_STATE_SINCE","Event","FloatingOnly","Hidden","Name","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_DEACTIVATE_OPCODE","REQ_DEACTIVATE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_REMOVE_OPCODE","REQ_REMOVE_SINCE","REQ_RENAME_OPCODE","REQ_RENAME_SINCE","REQ_SET_TILING_STATE_OPCODE","REQ_SET_TILING_STATE_SINCE","Remove","Remove","Remove","Rename","Rename","Request","SetTilingState","SetTilingState","State","State","TilingEnabled","TilingState","TilingState","Urgent","ZcosmicWorkspaceCapabilitiesV1","ZcosmicWorkspaceHandleV1","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","coordinates","data","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_id","handle","hash","hash","hash","hash","id","interface","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","name","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","partial_cmp","remove","send_event","state","tiling_state","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","version","write_event","capabilities","coordinates","name","state","state","name","state","Commit","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_WORKSPACE_GROUP_OPCODE","EVT_WORKSPACE_GROUP_SINCE","Event","Finished","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","WorkspaceGroup","ZcosmicWorkspaceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","done","eq","eq","finished","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","workspace_group","write_event","workspace_group"],"q":[[0,"cosmic_protocols"],[6,"cosmic_protocols::image_source"],[7,"cosmic_protocols::image_source::v1"],[9,"cosmic_protocols::image_source::v1::client"],[14,"cosmic_protocols::image_source::v1::client::__interfaces"],[26,"cosmic_protocols::image_source::v1::client::zcosmic_image_source_v1"],[93,"cosmic_protocols::image_source::v1::client::zcosmic_output_image_source_manager_v1"],[164,"cosmic_protocols::image_source::v1::client::zcosmic_output_image_source_manager_v1::Request"],[165,"cosmic_protocols::image_source::v1::client::zcosmic_toplevel_image_source_manager_v1"],[236,"cosmic_protocols::image_source::v1::client::zcosmic_toplevel_image_source_manager_v1::Request"],[237,"cosmic_protocols::image_source::v1::client::zcosmic_workspace_image_source_manager_v1"],[308,"cosmic_protocols::image_source::v1::client::zcosmic_workspace_image_source_manager_v1::Request"],[309,"cosmic_protocols::image_source::v1::server"],[314,"cosmic_protocols::image_source::v1::server::__interfaces"],[326,"cosmic_protocols::image_source::v1::server::zcosmic_image_source_v1"],[390,"cosmic_protocols::image_source::v1::server::zcosmic_output_image_source_manager_v1"],[457,"cosmic_protocols::image_source::v1::server::zcosmic_output_image_source_manager_v1::Request"],[459,"cosmic_protocols::image_source::v1::server::zcosmic_toplevel_image_source_manager_v1"],[526,"cosmic_protocols::image_source::v1::server::zcosmic_toplevel_image_source_manager_v1::Request"],[528,"cosmic_protocols::image_source::v1::server::zcosmic_workspace_image_source_manager_v1"],[595,"cosmic_protocols::image_source::v1::server::zcosmic_workspace_image_source_manager_v1::Request"],[597,"cosmic_protocols::output_management"],[598,"cosmic_protocols::output_management::v1"],[600,"cosmic_protocols::output_management::v1::client"],[605,"cosmic_protocols::output_management::v1::client::__interfaces"],[619,"cosmic_protocols::output_management::v1::client::zcosmic_output_configuration_head_v1"],[690,"cosmic_protocols::output_management::v1::client::zcosmic_output_configuration_head_v1::Request"],[691,"cosmic_protocols::output_management::v1::client::zcosmic_output_configuration_v1"],[789,"cosmic_protocols::output_management::v1::client::zcosmic_output_configuration_v1::Request"],[791,"cosmic_protocols::output_management::v1::client::zcosmic_output_head_v1"],[864,"cosmic_protocols::output_management::v1::client::zcosmic_output_head_v1::Event"],[866,"cosmic_protocols::output_management::v1::client::zcosmic_output_manager_v1"],[968,"cosmic_protocols::output_management::v1::client::zcosmic_output_manager_v1::Request"],[971,"cosmic_protocols::output_management::v1::server"],[976,"cosmic_protocols::output_management::v1::server::__interfaces"],[990,"cosmic_protocols::output_management::v1::server::zcosmic_output_configuration_head_v1"],[1057,"cosmic_protocols::output_management::v1::server::zcosmic_output_configuration_head_v1::Request"],[1058,"cosmic_protocols::output_management::v1::server::zcosmic_output_configuration_v1"],[1153,"cosmic_protocols::output_management::v1::server::zcosmic_output_configuration_v1::Request"],[1156,"cosmic_protocols::output_management::v1::server::zcosmic_output_head_v1"],[1228,"cosmic_protocols::output_management::v1::server::zcosmic_output_head_v1::Event"],[1230,"cosmic_protocols::output_management::v1::server::zcosmic_output_manager_v1"],[1326,"cosmic_protocols::output_management::v1::server::zcosmic_output_manager_v1::Request"],[1332,"cosmic_protocols::screencopy"],[1333,"cosmic_protocols::screencopy::v2"],[1335,"cosmic_protocols::screencopy::v2::client"],[1340,"cosmic_protocols::screencopy::v2::client::__interfaces"],[1355,"cosmic_protocols::screencopy::v2::client::zcosmic_screencopy_cursor_session_v2"],[1461,"cosmic_protocols::screencopy::v2::client::zcosmic_screencopy_cursor_session_v2::Event"],[1465,"cosmic_protocols::screencopy::v2::client::zcosmic_screencopy_frame_v2"],[1609,"cosmic_protocols::screencopy::v2::client::zcosmic_screencopy_frame_v2::Event"],[1618,"cosmic_protocols::screencopy::v2::client::zcosmic_screencopy_frame_v2::Request"],[1623,"cosmic_protocols::screencopy::v2::client::zcosmic_screencopy_manager_v2"],[1804,"cosmic_protocols::screencopy::v2::client::zcosmic_screencopy_manager_v2::Request"],[1809,"cosmic_protocols::screencopy::v2::client::zcosmic_screencopy_session_v2"],[1898,"cosmic_protocols::screencopy::v2::client::zcosmic_screencopy_session_v2::Event"],[1904,"cosmic_protocols::screencopy::v2::server"],[1909,"cosmic_protocols::screencopy::v2::server::__interfaces"],[1924,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_cursor_session_v2"],[2030,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_cursor_session_v2::Event"],[2034,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_cursor_session_v2::Request"],[2035,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_frame_v2"],[2178,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_frame_v2::Event"],[2187,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_frame_v2::Request"],[2192,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_manager_v2"],[2368,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_manager_v2::Request"],[2375,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_session_v2"],[2466,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_session_v2::Event"],[2472,"cosmic_protocols::screencopy::v2::server::zcosmic_screencopy_session_v2::Request"],[2473,"cosmic_protocols::toplevel_info"],[2474,"cosmic_protocols::toplevel_info::v1"],[2476,"cosmic_protocols::toplevel_info::v1::client"],[2479,"cosmic_protocols::toplevel_info::v1::client::__interfaces"],[2487,"cosmic_protocols::toplevel_info::v1::client::zcosmic_toplevel_handle_v1"],[2607,"cosmic_protocols::toplevel_info::v1::client::zcosmic_toplevel_handle_v1::Event"],[2614,"cosmic_protocols::toplevel_info::v1::client::zcosmic_toplevel_info_v1"],[2687,"cosmic_protocols::toplevel_info::v1::client::zcosmic_toplevel_info_v1::Event"],[2688,"cosmic_protocols::toplevel_info::v1::server"],[2691,"cosmic_protocols::toplevel_info::v1::server::__interfaces"],[2699,"cosmic_protocols::toplevel_info::v1::server::zcosmic_toplevel_handle_v1"],[2825,"cosmic_protocols::toplevel_info::v1::server::zcosmic_toplevel_handle_v1::Event"],[2832,"cosmic_protocols::toplevel_info::v1::server::zcosmic_toplevel_info_v1"],[2904,"cosmic_protocols::toplevel_info::v1::server::zcosmic_toplevel_info_v1::Event"],[2905,"cosmic_protocols::toplevel_management"],[2906,"cosmic_protocols::toplevel_management::v1"],[2908,"cosmic_protocols::toplevel_management::v1::client"],[2910,"cosmic_protocols::toplevel_management::v1::client::__interfaces"],[2914,"cosmic_protocols::toplevel_management::v1::client::zcosmic_toplevel_manager_v1"],[3075,"cosmic_protocols::toplevel_management::v1::client::zcosmic_toplevel_manager_v1::Event"],[3076,"cosmic_protocols::toplevel_management::v1::client::zcosmic_toplevel_manager_v1::Request"],[3095,"cosmic_protocols::toplevel_management::v1::server"],[3097,"cosmic_protocols::toplevel_management::v1::server::__interfaces"],[3101,"cosmic_protocols::toplevel_management::v1::server::zcosmic_toplevel_manager_v1"],[3250,"cosmic_protocols::toplevel_management::v1::server::zcosmic_toplevel_manager_v1::Event"],[3251,"cosmic_protocols::toplevel_management::v1::server::zcosmic_toplevel_manager_v1::Request"],[3270,"cosmic_protocols::workspace"],[3271,"cosmic_protocols::workspace::v1"],[3273,"cosmic_protocols::workspace::v1::client"],[3277,"cosmic_protocols::workspace::v1::client::__interfaces"],[3289,"cosmic_protocols::workspace::v1::client::zcosmic_workspace_group_handle_v1"],[3398,"cosmic_protocols::workspace::v1::client::zcosmic_workspace_group_handle_v1::Event"],[3402,"cosmic_protocols::workspace::v1::client::zcosmic_workspace_group_handle_v1::Request"],[3403,"cosmic_protocols::workspace::v1::client::zcosmic_workspace_handle_v1"],[3584,"cosmic_protocols::workspace::v1::client::zcosmic_workspace_handle_v1::Event"],[3589,"cosmic_protocols::workspace::v1::client::zcosmic_workspace_handle_v1::Request"],[3591,"cosmic_protocols::workspace::v1::client::zcosmic_workspace_manager_v1"],[3671,"cosmic_protocols::workspace::v1::client::zcosmic_workspace_manager_v1::Event"],[3672,"cosmic_protocols::workspace::v1::server"],[3676,"cosmic_protocols::workspace::v1::server::__interfaces"],[3688,"cosmic_protocols::workspace::v1::server::zcosmic_workspace_group_handle_v1"],[3798,"cosmic_protocols::workspace::v1::server::zcosmic_workspace_group_handle_v1::Event"],[3802,"cosmic_protocols::workspace::v1::server::zcosmic_workspace_group_handle_v1::Request"],[3803,"cosmic_protocols::workspace::v1::server::zcosmic_workspace_handle_v1"],[3982,"cosmic_protocols::workspace::v1::server::zcosmic_workspace_handle_v1::Event"],[3987,"cosmic_protocols::workspace::v1::server::zcosmic_workspace_handle_v1::Request"],[3989,"cosmic_protocols::workspace::v1::server::zcosmic_workspace_manager_v1"],[4068,"cosmic_protocols::workspace::v1::server::zcosmic_workspace_manager_v1::Event"],[4069,"core::any"],[4070,"wayland_backend::rs::client"],[4071,"wayland_backend::rs::client"],[4072,"core::marker"],[4073,"core::marker"],[4074,"core::fmt"],[4075,"core::fmt"],[4076,"wayland_backend::types::client"],[4077,"core::result"],[4078,"core::hash"],[4079,"wayland_backend::protocol"],[4080,"alloc::boxed"],[4081,"alloc::sync"],[4082,"alloc::rc"],[4083,"wayland_backend::rs::client"],[4084,"wayland_backend::protocol"],[4085,"wayland_client::event_queue"],[4086,"wayland_client::event_queue"],[4087,"wayland_server"],[4088,"wayland_server::display"],[4089,"wayland_backend::types::server"],[4090,"wayland_backend::rs::server"],[4091,"wayland_protocols_wlr::output_management::v1::generated::client::zwlr_output_head_v1"],[4092,"wayland_protocols_wlr::output_management::v1::generated::client::zwlr_output_configuration_head_v1"],[4093,"wayland_protocols_wlr::output_management::v1::generated::client::zwlr_output_configuration_v1"],[4094,"alloc::string"],[4095,"wayland_client::protocol::wl_buffer"],[4096,"wayland_client::protocol::wl_pointer"],[4097,"core::iter::traits::collect"],[4098,"bitflags::iter"],[4099,"bitflags::iter"],[4100,"alloc::vec"],[4101,"wayland_server::protocol::wl_output"],[4102,"wayland_client::protocol::wl_surface"]],"d":["Capture interface.","Output management interface.","Capture interface.","Receive information about toplevel surfaces.","Modify state toplevel surfaces.","Receive information about and control workspaces.","","Client-side API of this protocol","Server-side API of this protocol","","opaque image source object","image source manager for outputs","image source manager for toplevels","image source manager for outputs","","","","","","","","","","","","","delete this object","","The wire opcode for this request","The minimal object version supporting this request","","opaque image source object","","","","","","","","","","","","","","","","","","delete this object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","create source object for output","delete this object","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","image source manager for outputs","","","","","","","","","","","","","","","","","create source object for output","","delete this object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","create source object for toplevel","delete this object","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","image source manager for toplevels","","","","","","","","","","","","","","","","","create source object for toplevel","","delete this object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","create source object for output","delete this object","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","image source manager for outputs","","","","","","","","","","","","","","","","","create source object for output","","delete this object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","opaque image source object","image source manager for outputs","image source manager for toplevels","image source manager for outputs","","","","","","","","","","","","","delete this object","","The wire opcode for this request","The minimal object version supporting this request","","opaque image source object","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","create source object for output","delete this object","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","image source manager for outputs","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","create source object for toplevel","delete this object","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","image source manager for toplevels","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","create source object for output","delete this object","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","image source manager for outputs","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","Client-side API of this protocol","Server-side API of this protocol","","Output configuration head extension object","Output configuration extension object","Output extension object","Output configuration manager","","","","","","","","","","","","","","","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","destroy the output configuration head","","set the scale multiplied by 1000","Output configuration head extension object","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","destroy the output configuration head","","","set the scale multiplied by 1000","","","","","","","","","","","","","","underlying configuration has already been used","The wire opcode for this event","The minimal object version supporting this event","","","the configuration was used","enable and configure a head to mirror another head","mirrored head is not enabled","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","destroy the output configuration","","Output configuration extension object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","enable and configure a head to mirror another head","","Get the opcode number of this message","Get the opcode number of this message","","","destroy the output configuration","","","","","","","","","","","","","","","","","","","","the head to be enabled","the head to be mirrored","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","mirroring other output","The wire opcode for this request","The minimal object version supporting this request","destroy the output head","","current scale","Output extension object","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","destroy the output head","","","","","","","","","","","","","","","","","object already created","","","Get a zcosmic_output_configuration_v1 for an existing …","Get a zcosmic_output_configuration_head_v1 for an existing …","Get a zcosmic_output_head_v1 for an existing …","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","Destroy this global","","Output configuration manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get a zcosmic_output_configuration_v1 for an existing …","Get a zcosmic_output_configuration_head_v1 for an existing …","Get a zcosmic_output_head_v1 for an existing …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","Destroy this global","","","","","","","","","","","","","","","","","","","","","","","","Output configuration head extension object","Output configuration extension object","Output extension object","Output configuration manager","","","","","","","","","","","","","","","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","destroy the output configuration head","","set the scale multiplied by 1000","Output configuration head extension object","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","underlying configuration has already been used","The wire opcode for this event","The minimal object version supporting this event","","","the configuration was used","enable and configure a head to mirror another head","mirrored head is not enabled","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","destroy the output configuration","","Output configuration extension object","","","","","","","","","","","","","","","","","","","","","","","","","","","the configuration was used","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","the head to be enabled","a new object to configure the head","the head to be mirrored","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","mirroring other output","The wire opcode for this request","The minimal object version supporting this request","destroy the output head","","current scale","Output extension object","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","mirroring other output","","Get the opcode number of this message","Get the opcode number of this message","","current scale","","","","","","","","","","","","","","","","object already created","","","Get a zcosmic_output_configuration_v1 for an existing …","Get a zcosmic_output_configuration_head_v1 for an existing …","Get a zcosmic_output_head_v1 for an existing …","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","Destroy this global","","Output configuration manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","Server-side API of this protocol","","cursor capture session","screen capture frame","manager to inform clients and begin capturing","screen capture session","","","","","","","","","","","","","","","","delete this object","get_screencopy_session sent twice","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","cursor entered captured area","","","get screencopy session","hotspot changed","cursor left captured area","position changed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","cursor capture session","","","","","","","","","","","","","","","","","","","","","","","","","delete this object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get screencopy session","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","position x coordinates","hotspot x coordinates","position y coordinates","hotspot y coordinates","capture request has been sent","attach buffer to session","buffer constraints mismatch","capture a frame","buffer damaged region","damage buffer","destroy this object","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","capture failed","","invalid buffer damage","capture sent without attach_buffer","presentation time of the frame","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","frame is available for reading","","session is no longer available","buffer transform","unknown runtime error","screen capture frame","","","","","","","","","","","attach buffer to session","","","","","","","","","","","","","capture a frame","","","","","","","","","damage buffer","","destroy this object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","damage height","","","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","damage width","damage x coordinate","damage y coordinate","","region height","region width","region x coordinate","region y coordinate","capture the pointer cursor of an image source","capture an image source","destroy the manager","","","invalid option flag","","paint cursors onto captured frames","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to inform clients and begin capturing","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","capture the pointer cursor of an image source","capture an image source","","destroy the manager","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","image source dimensions","create a frame","delete this object","dma-buf device","dma-buf format","all constraints have been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","shm buffer format","session is no longer available","screen capture session","","","","","","","","","","","","","","","","","create a frame","","delete this object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","device dev_t value","shm format","drm format code","buffer height","drm format modifiers","buffer width","","cursor capture session","screen capture frame","manager to inform clients and begin capturing","screen capture session","","","","","","","","","","","","","","","","delete this object","get_screencopy_session sent twice","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","cursor entered captured area","","","get screencopy session","hotspot changed","cursor left captured area","position changed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","cursor capture session","","","","","","","","","","","","","","","","","","","","","","","","cursor entered captured area","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","hotspot changed","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","cursor left captured area","","Get the opcode number of this message","Get the opcode number of this message","","","position changed","","","","","","","","","","","","","","","","","","","position x coordinates","hotspot x coordinates","position y coordinates","hotspot y coordinates","","capture request has been sent","attach buffer to session","buffer constraints mismatch","capture a frame","buffer damaged region","damage buffer","destroy this object","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","capture failed","","invalid buffer damage","capture sent without attach_buffer","presentation time of the frame","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","frame is available for reading","","session is no longer available","buffer transform","unknown runtime error","screen capture frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","buffer damaged region","","","","","","capture failed","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","presentation time of the frame","frame is available for reading","","","","","buffer transform","","","","","","","","","","","","","","","","","","","","damage height","","","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","damage width","damage x coordinate","damage y coordinate","","region height","region width","region x coordinate","region y coordinate","capture the pointer cursor of an image source","capture an image source","destroy the manager","","","invalid option flag","","paint cursors onto captured frames","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to inform clients and begin capturing","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","image source dimensions","create a frame","delete this object","dma-buf device","dma-buf format","all constraints have been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","shm buffer format","session is no longer available","screen capture session","","","","","","","","","","","","","","image source dimensions","","","","dma-buf device","dma-buf format","all constraints have been sent","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","shm buffer format","session is no longer available","","","","","","","","","","","","","device dev_t value","shm format","drm format code","buffer height","drm format modifiers","buffer width","","","Client-side API of this protocol","Server-side API of this protocol","","an open toplevel","list toplevels and properties thereof","","","","","","","","","the toplevel is active","app_id change","the toplevel has been closed","destroy the zcosmic_toplevel_handle_v1 object","all information about the toplevel has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the toplevel is fullscreen","the toplevel is maximized","the toplevel is minimized","toplevel entered an output","toplevel left an output","The wire opcode for this request","The minimal object version supporting this request","","types of states on the toplevel","the toplevel state changed","title change","toplevel entered an workspace","toplevel left an workspace","an open toplevel","","","","","","","","","","","","","","","","","","","","","","","","","destroy the zcosmic_toplevel_handle_v1 object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the toplevel manager","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a toplevel has been created","list toplevels and properties thereof","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","stop sending events","","","","","","","","","","","","","","","an open toplevel","list toplevels and properties thereof","","","","","","","","","the toplevel is active","app_id change","the toplevel has been closed","destroy the zcosmic_toplevel_handle_v1 object","all information about the toplevel has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the toplevel is fullscreen","the toplevel is maximized","the toplevel is minimized","toplevel entered an output","toplevel left an output","The wire opcode for this request","The minimal object version supporting this request","","types of states on the toplevel","the toplevel state changed","title change","toplevel entered an workspace","toplevel left an workspace","an open toplevel","app_id change","","","","","","","","","","","","","","","","","","","","","","the toplevel has been closed","","","all information about the toplevel has been sent","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","toplevel entered an output","toplevel left an output","","","","the toplevel state changed","title change","","","","","","","","","","","","","","","","","toplevel entered an workspace","toplevel left an workspace","","","","","","","","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the toplevel manager","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a toplevel has been created","list toplevels and properties thereof","","","","","","","","","","","","","","","","","","","the compositor has finished with the toplevel manager","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","a toplevel has been created","","","","","","","","","","","","","","Client-side API of this protocol","Server-side API of this protocol","","control open apps","","","","","activate request is available","request that a toplevel be activated","compositor capabilities","close request is available","request that a toplevel be closed","destroy the zcosmic_toplevel_manager_v1","The wire opcode for this event","The minimal object version supporting this event","","","set_fullscreen and unset_fullscreen requests are available","the provided rectangle is invalid","set_maximized and unset_maximized requests are available","set_minimized and unset_minimized requests are available","move_to_workspace request is available","move toplevel to workspace","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","request that a toplevel be fullscreened","request that a toplevel be maximized","request that a toplevel be minimized","designate a rectangle to represent a toplevel","request that a toplevel be unfullscreened","request that a toplevel be unmaximized","request that a toplevel be unminimized","","control open apps","request that a toplevel be activated","","","","","","","","","","","","","","","","","","","","","","","","","","","","","request that a toplevel be closed","","","","destroy the zcosmic_toplevel_manager_v1","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","move toplevel to workspace","","Get the opcode number of this message","Get the opcode number of this message","","","","","","request that a toplevel be fullscreened","request that a toplevel be maximized","request that a toplevel be minimized","designate a rectangle to represent a toplevel","","","","","","","","","","","","","","","","","","","","","request that a toplevel be unfullscreened","request that a toplevel be unmaximized","request that a toplevel be unminimized","","","array of 32-bit capabilities","","","","","","","","","","","","","","","","","","","","","control open apps","","","","","activate request is available","request that a toplevel be activated","compositor capabilities","close request is available","request that a toplevel be closed","destroy the zcosmic_toplevel_manager_v1","The wire opcode for this event","The minimal object version supporting this event","","","set_fullscreen and unset_fullscreen requests are available","the provided rectangle is invalid","set_maximized and unset_maximized requests are available","set_minimized and unset_minimized requests are available","move_to_workspace request is available","move toplevel to workspace","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","request that a toplevel be fullscreened","request that a toplevel be maximized","request that a toplevel be minimized","designate a rectangle to represent a toplevel","request that a toplevel be unfullscreened","request that a toplevel be unmaximized","request that a toplevel be unminimized","","control open apps","","","","","","","","","","","","","","","","","","","","","","compositor capabilities","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","array of 32-bit capabilities","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","Server-side API of this protocol","","a workspace group assigned to a set of outputs","a workspace handing a group of surfaces","list and control workspaces","","","","","","","","","","","","","compositor capabilities","create_workspace request is available","create a new workspace","destroy the zcosmic_workspace_group_handle_v1 object","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","output assigned to workspace group","output removed from workspace group","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","this workspace group has been destroyed","","workspace added to workspace group","","a workspace group assigned to a set of outputs","","","","","","","","","","","","","","","","","","","","","","","","create a new workspace","","destroy the zcosmic_workspace_group_handle_v1 object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","array of 32-bit capabilities","","","","","activate request is available","activate the workspace","the workspace is active","compositor capabilities","workspace coordinates changed","deactivate request is available","activate the workspace","destroy the zcosmic_workspace_handle_v1 object","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","The workspace has no active tiling properties","the workspace is not visible","workspace name changed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","remove request is available","remove the workspace","this workspace has been destroyed","rename request is available","rename this workspace","","set_tiling_state request is available","change the tiling state of this workspace","types of states on the workspace","the state of the workspace changed","Tiling behavior is enabled for the workspace","types of tiling state a workspace may have","indicates if tiling behavior is enabled for this workspace","the workspace requests attention","","a workspace handing a group of surfaces","activate the workspace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","activate the workspace","destroy the zcosmic_workspace_handle_v1 object","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","remove the workspace","rename this workspace","","","change the tiling state of this workspace","","","","","","","","","","","","","","","","","","","","","","","","","","","","array of 32-bit capabilities","","","","","new name of the workspace","the new tiling state of the workspace","all requests about the workspaces have been sent","all information about the workspace groups has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the workspace_manager","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a workspace group has been created","list and control workspaces","","","","","","","","","","","","","","","","","all requests about the workspaces have been sent","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","stop sending events","","","","","","","","","","","","","","","a workspace group assigned to a set of outputs","a workspace handing a group of surfaces","list and control workspaces","","","","","","","","","","","","","compositor capabilities","create_workspace request is available","create a new workspace","destroy the zcosmic_workspace_group_handle_v1 object","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","output assigned to workspace group","output removed from workspace group","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","this workspace group has been destroyed","","workspace added to workspace group","","a workspace group assigned to a set of outputs","","","","","","","","","","","","","","","","","","compositor capabilities","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","output assigned to workspace group","output removed from workspace group","","","this workspace group has been destroyed","","","","","","","","","","","","","","","","","","workspace added to workspace group","","array of 32-bit capabilities","","","","","activate request is available","activate the workspace","the workspace is active","compositor capabilities","workspace coordinates changed","deactivate request is available","activate the workspace","destroy the zcosmic_workspace_handle_v1 object","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","The workspace has no active tiling properties","the workspace is not visible","workspace name changed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","remove request is available","remove the workspace","this workspace has been destroyed","rename request is available","rename this workspace","","set_tiling_state request is available","change the tiling state of this workspace","types of states on the workspace","the state of the workspace changed","Tiling behavior is enabled for the workspace","types of tiling state a workspace may have","indicates if tiling behavior is enabled for this workspace","the workspace requests attention","","a workspace handing a group of surfaces","","","","","","","","","","","","","","","","","","","","","","","","","","compositor capabilities","","","","","","","","","","","","workspace coordinates changed","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","workspace name changed","","Get the opcode number of this message","Get the opcode number of this message","","","","","this workspace has been destroyed","","the state of the workspace changed","indicates if tiling behavior is enabled for this workspace","","","","","","","","","","","","","","","","","","","","","","","","","","","","array of 32-bit capabilities","","","","","new name of the workspace","the new tiling state of the workspace","all requests about the workspaces have been sent","all information about the workspace groups has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the workspace_manager","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a workspace group has been created","list and control workspaces","","","","","","","","","","","","","","","","","all information about the workspace groups has been sent","","","the compositor has finished with the workspace_manager","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","a workspace group has been created","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,11,14,2,11,14,2,2,11,14,2,2,11,14,2,2,2,2,2,2,2,11,14,2,11,14,2,2,2,2,2,2,11,14,2,11,14,2,11,14,2,11,14,2,2,11,14,2,2,2,2,11,14,2,11,14,2,11,14,2,2,2,37,37,0,0,0,0,0,0,0,37,38,33,37,38,33,33,37,38,33,33,37,38,33,33,33,33,33,33,33,33,37,38,33,37,38,33,33,33,33,33,33,37,38,33,37,38,33,37,38,33,37,38,33,33,37,38,33,33,33,33,37,38,33,37,38,33,37,38,33,33,33,194,41,41,0,0,0,0,0,0,0,41,42,39,41,42,39,39,41,42,39,39,41,42,39,39,39,39,39,39,39,39,41,42,39,41,42,39,39,39,39,39,39,41,42,39,41,42,39,41,42,39,41,42,39,39,41,42,39,39,39,39,41,42,39,41,42,39,41,42,39,39,39,195,45,45,0,0,0,0,0,0,0,45,46,43,45,46,43,43,45,46,43,43,45,46,43,43,43,43,43,43,43,43,45,46,43,45,46,43,43,43,43,43,43,45,46,43,45,46,43,45,46,43,45,46,43,43,45,46,43,43,43,43,45,46,43,45,46,43,45,46,43,43,43,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,0,50,51,47,50,51,47,50,51,47,47,50,51,47,47,47,47,47,47,50,51,47,50,51,47,47,47,47,47,47,50,51,47,50,51,47,50,51,47,50,51,47,47,50,51,47,47,47,50,51,47,50,51,47,50,51,47,47,47,57,57,0,0,0,0,0,0,0,57,58,56,57,58,56,57,58,56,56,57,58,56,56,56,56,56,56,57,58,56,57,58,56,56,56,56,56,56,57,58,56,57,58,56,57,58,56,57,58,56,56,57,58,56,56,56,57,58,56,57,58,56,57,58,56,56,56,197,197,60,60,0,0,0,0,0,0,0,60,61,59,60,61,59,60,61,59,59,60,61,59,59,59,59,59,59,60,61,59,60,61,59,59,59,59,59,59,60,61,59,60,61,59,60,61,59,60,61,59,59,60,61,59,59,59,60,61,59,60,61,59,60,61,59,59,59,198,198,63,63,0,0,0,0,0,0,0,63,64,62,63,64,62,63,64,62,62,63,64,62,62,62,62,62,62,63,64,62,63,64,62,62,62,62,62,62,63,64,62,63,64,62,63,64,62,63,64,62,62,63,64,62,62,62,63,64,62,63,64,62,63,64,62,62,62,199,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,66,0,66,67,65,66,67,65,65,66,67,65,65,66,67,65,65,65,65,65,65,66,67,65,66,67,65,65,65,65,65,65,66,67,65,66,67,65,66,67,65,66,67,65,65,66,67,65,65,65,65,65,65,66,67,65,66,67,65,66,67,65,65,65,200,70,0,0,0,0,73,72,70,0,0,0,0,72,0,0,70,72,73,69,70,72,73,69,69,70,72,73,69,69,70,72,73,69,70,69,70,69,70,69,70,69,69,70,72,73,69,70,72,73,69,69,70,69,69,69,69,70,72,73,69,70,72,73,69,70,72,73,69,70,72,73,69,69,69,72,73,69,70,69,69,69,70,69,70,70,72,73,69,70,72,73,69,70,72,73,69,69,69,201,201,0,0,0,0,0,78,0,0,77,0,78,0,77,78,76,77,78,76,76,77,78,76,76,77,78,76,76,76,76,76,76,77,78,76,77,78,76,76,76,76,76,76,77,78,76,77,78,76,77,78,76,77,78,76,76,77,78,76,76,76,76,76,77,78,76,77,78,76,77,78,76,76,76,202,203,80,0,0,81,81,81,0,0,0,0,0,0,0,0,81,0,0,80,81,82,79,80,81,82,79,79,80,81,82,79,79,80,81,82,79,80,79,80,79,80,79,80,79,79,80,81,82,79,80,81,82,79,79,79,79,79,80,79,79,79,79,80,81,82,79,80,81,82,79,80,81,82,79,80,81,82,79,79,81,82,79,80,79,79,79,80,79,80,80,81,82,79,80,81,82,79,80,81,82,79,79,79,204,205,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,0,85,0,85,86,84,85,86,84,85,86,84,84,85,86,84,84,84,84,84,84,85,86,84,85,86,84,84,84,84,84,84,85,86,84,85,86,84,85,86,84,85,86,84,84,85,86,84,84,84,85,86,84,85,86,84,85,86,84,84,84,207,88,0,0,0,0,90,89,88,0,0,0,0,89,0,0,88,89,90,87,88,89,90,87,88,89,90,87,87,88,89,90,87,88,87,88,87,88,87,88,87,87,87,88,89,90,87,88,89,90,87,87,87,88,87,87,87,88,89,90,87,88,89,90,87,88,89,90,87,88,89,90,87,87,89,90,87,88,87,88,87,88,88,89,90,87,88,89,90,87,88,89,90,87,87,87,208,208,208,0,0,0,0,0,93,0,0,92,0,93,0,92,93,91,92,93,91,92,93,91,91,92,93,91,91,91,91,91,91,92,93,91,92,93,91,91,91,91,91,91,92,93,91,92,93,91,92,93,91,92,93,91,91,91,92,93,91,91,91,91,92,93,91,92,93,91,92,93,91,91,91,209,210,96,0,0,97,97,97,0,0,0,0,0,0,0,0,97,0,0,96,97,98,95,96,97,98,95,96,97,98,95,95,96,97,98,95,96,95,96,95,96,95,96,95,95,96,97,98,95,96,97,98,95,95,95,96,95,95,95,96,97,98,95,96,97,98,95,96,97,98,95,96,97,98,95,95,97,98,95,96,95,96,95,96,96,97,98,95,96,97,98,95,96,97,98,95,95,95,211,212,213,211,212,213,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,100,0,0,0,0,0,0,0,0,102,0,0,101,102,102,102,0,0,0,0,0,0,100,101,102,99,100,101,102,99,99,100,101,102,99,99,100,101,102,99,100,99,100,99,100,99,99,100,99,99,100,101,102,99,100,101,102,99,99,99,100,99,99,99,99,100,101,102,99,100,101,102,99,100,101,102,99,100,101,102,99,99,101,102,99,100,99,99,100,99,100,100,101,102,99,100,101,102,99,100,101,102,99,99,99,214,215,214,215,106,108,107,108,109,108,108,0,0,0,0,0,0,0,0,0,0,0,0,109,0,106,106,109,0,0,0,0,0,0,0,0,109,0,107,109,107,0,106,107,108,109,104,106,107,108,109,104,104,104,106,107,108,109,104,104,106,107,108,109,104,104,106,107,104,106,107,104,106,107,104,104,104,106,107,104,104,106,107,108,109,104,106,107,108,109,104,104,106,107,104,104,104,104,106,107,108,109,104,106,107,108,109,104,106,107,108,109,104,106,107,108,109,104,104,108,109,104,106,107,104,104,106,107,104,106,106,107,107,108,109,104,106,107,108,109,104,106,107,108,109,104,104,104,216,217,218,219,219,219,216,216,216,220,221,221,221,221,116,116,116,0,0,112,0,110,0,0,0,0,0,0,0,0,110,110,112,110,116,117,111,112,110,116,117,111,111,110,110,110,110,110,110,110,110,110,112,110,116,117,111,111,112,110,116,117,111,112,110,111,112,110,111,112,110,110,110,110,111,111,111,111,110,110,110,110,112,110,111,111,110,112,110,110,110,110,110,116,117,111,112,110,116,117,111,110,110,110,110,110,110,110,111,110,110,110,112,110,111,111,111,110,110,111,110,110,110,110,112,110,116,117,111,112,110,116,117,111,112,110,116,117,111,112,110,116,117,111,110,110,110,110,110,110,110,110,110,110,111,116,117,111,112,110,110,111,111,110,110,110,110,110,110,112,110,111,110,110,112,112,110,110,116,117,111,112,110,116,117,111,112,110,116,117,111,110,110,111,111,222,223,223,222,223,122,121,121,122,122,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,122,0,121,122,103,121,122,103,103,121,122,103,103,121,122,103,103,103,103,103,103,103,103,121,122,103,121,122,103,103,103,103,103,103,121,122,103,121,122,103,121,122,103,121,122,103,103,121,122,103,103,103,103,121,122,103,121,122,103,121,122,103,103,103,224,225,226,227,226,227,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,124,0,0,0,0,0,0,0,0,126,0,0,125,126,126,126,0,0,0,0,0,0,124,125,126,123,124,125,126,123,124,125,126,123,123,124,125,126,123,124,123,124,123,124,123,123,124,123,123,124,125,126,123,124,125,126,123,123,123,124,123,123,123,123,124,125,126,123,124,125,126,123,124,125,126,123,124,125,126,123,123,123,125,126,123,124,123,123,124,123,124,124,125,126,123,124,125,126,123,124,125,126,123,123,123,228,229,228,229,230,128,130,129,130,131,130,130,0,0,0,0,0,0,0,0,0,0,0,0,131,0,128,128,131,0,0,0,0,0,0,0,0,131,0,129,131,129,0,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,127,128,129,130,131,127,128,129,127,128,129,127,128,129,127,127,128,129,127,127,127,128,129,130,131,127,128,129,130,131,127,127,127,128,129,127,127,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,128,129,130,131,127,127,130,131,127,128,129,127,127,127,128,129,127,127,128,128,129,129,130,131,127,128,129,130,131,127,128,129,130,131,127,127,127,231,232,233,234,234,234,231,231,231,235,236,236,236,236,136,136,136,0,0,135,0,133,0,0,0,0,0,0,0,0,133,133,135,133,136,137,134,135,133,136,137,134,133,133,133,133,133,133,133,133,133,135,133,136,137,134,134,135,133,136,137,134,135,133,134,135,133,134,135,133,133,133,133,134,133,133,133,133,135,133,134,134,133,135,133,133,133,133,133,136,137,134,135,133,136,137,134,133,133,133,133,133,133,133,134,133,133,133,134,135,133,134,134,133,133,134,133,133,133,133,135,133,136,137,134,135,133,136,137,134,135,133,136,137,134,135,133,136,137,134,133,133,133,133,133,133,133,133,133,133,134,136,137,134,135,133,133,134,133,133,133,133,133,133,135,133,134,133,133,135,135,133,133,136,137,134,135,133,136,137,134,135,133,136,137,134,133,133,134,134,237,238,238,237,238,237,238,142,141,141,142,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,142,0,141,142,138,141,142,138,141,142,138,138,141,142,138,138,138,138,138,138,138,138,138,138,141,142,138,141,142,138,138,138,138,138,138,141,142,138,141,142,138,141,142,138,141,142,138,138,141,142,138,138,138,138,138,141,142,138,141,142,138,141,142,138,138,138,239,240,241,242,241,242,243,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,145,145,144,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,143,143,145,145,0,0,0,0,145,145,145,145,0,143,144,145,40,143,144,145,40,40,143,144,145,40,40,143,144,145,40,143,40,143,40,143,40,40,143,40,40,143,144,145,40,143,144,145,40,40,143,40,40,40,40,143,144,145,40,143,144,145,40,143,144,145,40,143,144,145,40,40,144,145,40,143,40,40,143,40,143,143,144,145,40,143,144,145,40,143,144,145,40,40,40,244,245,246,247,248,249,250,0,0,0,0,0,148,0,0,0,147,148,0,147,148,146,147,148,146,146,147,148,146,146,147,148,146,146,146,146,146,146,147,148,146,147,148,146,146,146,146,146,146,147,148,146,147,148,146,147,148,146,147,148,146,146,147,148,146,146,146,146,146,147,148,146,147,148,146,147,148,146,146,146,251,0,0,0,0,0,0,0,0,0,0,0,150,152,152,151,152,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,150,150,150,152,152,0,0,0,0,152,152,152,152,0,149,150,151,152,149,150,151,152,149,150,151,152,149,149,150,151,152,149,150,149,150,149,149,150,149,149,150,149,149,150,151,152,149,150,151,152,149,149,149,150,149,149,149,150,151,152,149,150,151,152,149,150,151,152,149,150,151,152,149,149,151,152,149,149,149,150,149,149,149,150,149,150,150,151,152,149,150,151,152,149,150,151,152,149,149,149,149,149,252,253,254,255,256,257,258,0,0,0,0,0,157,0,0,0,156,157,0,156,157,155,156,157,155,156,157,155,155,156,157,155,155,155,155,155,155,155,156,157,155,156,157,155,155,155,155,155,155,156,157,155,156,157,155,156,157,155,156,157,155,155,156,157,155,155,155,155,156,157,155,156,157,155,156,157,155,155,155,259,0,0,0,0,0,0,0,0,0,160,162,163,160,162,162,0,0,0,0,160,161,160,160,160,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,162,162,162,162,162,162,162,0,0,158,160,161,162,163,158,160,161,162,163,158,158,160,161,162,163,158,158,160,161,162,163,158,160,161,158,160,161,158,158,160,161,158,158,160,161,158,158,160,161,162,163,158,160,161,162,163,158,158,160,161,158,158,158,158,160,161,162,163,158,160,161,162,163,158,160,161,162,163,158,160,161,162,163,158,158,158,162,163,158,160,161,158,158,158,158,158,158,160,161,158,160,160,161,161,162,163,158,160,161,162,163,158,160,161,162,163,158,158,158,158,158,158,260,261,262,263,264,261,265,264,266,267,268,269,262,270,261,263,261,263,261,261,0,0,0,0,0,0,166,168,169,166,168,168,0,0,0,0,166,167,166,166,166,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,168,168,168,168,168,168,0,0,166,167,168,169,165,166,167,168,169,165,166,167,168,169,165,165,166,167,168,169,165,165,166,167,165,166,167,165,166,167,165,166,167,165,165,166,167,168,169,165,166,167,168,169,165,165,165,166,167,165,165,165,166,167,168,169,165,166,167,168,169,165,166,167,168,169,165,166,167,168,169,165,165,168,169,165,166,167,165,166,167,165,166,166,167,167,168,169,165,166,167,168,169,165,166,167,168,169,165,165,165,271,272,273,274,275,272,276,275,277,278,279,280,273,281,272,274,272,274,272,272,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,173,171,172,172,0,0,0,0,0,0,0,0,0,0,0,173,173,0,0,0,0,173,0,173,0,0,171,172,173,170,171,172,173,170,170,171,172,173,170,170,171,172,173,170,171,170,171,170,171,170,170,170,171,170,170,171,172,173,170,171,172,173,170,170,171,170,170,170,170,171,172,173,170,171,172,173,170,171,172,173,170,171,172,173,170,170,172,173,170,171,170,170,171,170,171,171,172,173,170,171,172,173,170,171,172,173,170,170,170,282,283,284,285,286,175,177,174,178,178,175,177,177,0,0,0,0,0,0,0,0,0,0,0,0,0,176,174,178,0,0,0,0,0,0,0,0,0,0,0,0,175,177,178,175,177,0,175,177,0,178,176,0,178,174,0,0,44,174,175,176,177,178,44,174,175,176,177,178,44,44,174,175,176,177,178,44,44,174,175,176,177,178,44,174,175,176,44,174,175,176,44,174,175,176,44,44,44,174,175,176,44,44,174,175,176,177,178,44,174,175,176,177,178,44,44,174,175,176,44,44,44,44,174,175,176,177,178,44,174,175,176,177,178,44,174,175,176,177,178,44,174,175,176,177,178,44,44,177,178,44,174,175,176,44,44,44,44,44,174,175,176,44,174,174,175,175,176,176,177,178,44,174,175,176,177,178,44,174,175,176,177,178,44,44,44,287,288,289,290,291,292,293,180,181,0,0,0,0,0,0,0,181,0,0,0,0,0,180,181,0,180,181,179,180,181,179,179,180,181,179,179,180,181,179,179,179,179,179,179,179,180,181,179,180,181,179,179,179,179,179,179,180,181,179,180,181,179,180,181,179,180,181,179,179,180,181,179,179,179,179,179,180,181,179,180,181,179,180,181,179,179,179,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,185,183,184,184,0,0,0,0,0,0,0,0,0,0,0,185,185,0,0,0,0,185,0,185,0,0,183,184,185,182,183,184,185,182,183,184,185,182,182,183,184,185,182,182,183,182,183,182,183,182,183,182,182,183,184,185,182,183,184,185,182,182,182,183,182,182,182,183,184,185,182,183,184,185,182,183,184,185,182,183,184,185,182,182,184,185,182,182,182,183,182,182,183,182,183,183,184,185,182,183,184,185,182,183,184,185,182,182,182,182,295,296,297,298,299,187,189,186,190,190,187,189,189,0,0,0,0,0,0,0,0,0,0,0,0,0,188,186,190,0,0,0,0,0,0,0,0,0,0,0,0,187,189,190,187,189,0,187,189,0,190,188,0,190,186,0,0,186,187,188,189,190,154,186,187,188,189,190,154,186,187,188,189,190,154,154,186,187,188,189,190,154,154,186,187,188,154,186,187,188,154,186,187,188,154,154,186,187,188,154,154,186,187,188,189,190,154,186,187,188,189,190,154,154,154,186,187,188,154,154,154,186,187,188,189,190,154,186,187,188,189,190,154,186,187,188,189,190,154,186,187,188,189,190,154,154,154,189,190,154,186,187,188,154,154,154,154,186,187,188,154,186,186,187,187,188,188,189,190,154,186,187,188,189,190,154,186,187,188,189,190,154,154,154,300,301,302,303,304,305,306,192,193,0,0,0,0,0,0,0,193,0,0,0,0,0,192,193,0,192,193,191,192,193,191,192,193,191,191,192,193,191,191,191,191,191,191,191,191,192,193,191,192,193,191,191,191,191,191,191,192,193,191,192,193,191,192,193,191,192,193,191,191,192,193,191,191,191,192,193,191,192,193,191,192,193,191,191,191,191,307],"f":"````````````````````````````````{cb{}}00000{df}{ce{}{}}0{dh}1111{dd}{{ce}j{}{}}{d{{l{c}}}{nA`}}{dj}{{d{Ab{d}}}Ad}{{dd}Ad}{{AfAh}Aj}{{AlAh}Aj}{{dAh}Aj}{cc{}}00{{Anh}{{Bb{dB`}}}}{{dc}jBd}<{fd}{{}Bf}???{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{d{{l{{Bj{Bn}}}}}}{AfC`}{AlC`}{{An{Cd{hCb}}}{{Bb{{Cf{dc}}Ch}}}{}}{{dc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{dc}{{Bb{jB`}}}{}}{ce{}{}}{c{{Bb{e}}}{}{}}00000{cCl{}}00{dCn}{{dAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}`````````{cb{}}00000{Dbf}666{Dbh}777{DbDb}{{ce}j{}{}}{{DbDd{Df{e}}c}d{nA`}{{Dh{dc}}}}{Db{{l{c}}}{nA`}}{Dbj}{{Db{Ab{Db}}}Ad}{{DbDb}Ad}{{DjAh}Aj}{{DlAh}Aj}{{DbAh}Aj}{cc{}}00{{Anh}{{Bb{DbB`}}}}{{Dbc}jBd}={fDb}{{}Bf}{ce{}{}}00{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{Db{{l{{Bj{Bn}}}}}}{DjC`}{DlC`}{{An{Cd{hCb}}}{{Bb{{Cf{Dbc}}Ch}}}{}}{{Dbc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Dbc}{{Bb{jB`}}}{}}9{c{{Bb{e}}}{}{}}00000{cCl{}}00{DbCn}{{DbAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}``````````{cb{}}00000{Dnf}??{Dnh}{ce{}{}}000{DnDn}{{ce}j{}{}}{{DnE`{Df{e}}c}d{nA`}{{Dh{dc}}}}{Dn{{l{c}}}{nA`}}{Dnj}{{DnDn}Ad}{{Dn{Ab{Dn}}}Ad}{{EbAh}Aj}{{EdAh}Aj}{{DnAh}Aj}{cc{}}00{{Anh}{{Bb{DnB`}}}}{{Dnc}jBd}>{fDn}{{}Bf}???{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{Dn{{l{{Bj{Bn}}}}}}{EbC`}{EdC`}{{An{Cd{hCb}}}{{Bb{{Cf{Dnc}}Ch}}}{}}{{Dnc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Dnc}{{Bb{jB`}}}{}}{ce{}{}}{c{{Bb{e}}}{}{}}00000{cCl{}}00{DnCn}{{DnAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}``````````{cb{}}00000{Eff}666{Efh}777{EfEf}{{ce}j{}{}}{{EfEh{Df{e}}c}d{nA`}{{Dh{dc}}}}{Ef{{l{c}}}{nA`}}{Efj}{{Ef{Ab{Ef}}}Ad}{{EfEf}Ad}{{EjAh}Aj}{{ElAh}Aj}{{EfAh}Aj}{cc{}}00{{Anh}{{Bb{EfB`}}}}{{Efc}jBd}={fEf}{{}Bf}{ce{}{}}00{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{Ef{{l{{Bj{Bn}}}}}}{EjC`}{ElC`}{{An{Cd{hCb}}}{{Bb{{Cf{Efc}}Ch}}}{}}{{Efc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Efc}{{Bb{jB`}}}{}}9{c{{Bb{e}}}{}{}}00000{cCl{}}00{EfCn}{{EfAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}````````````````````````{cb{}}00000>>{EnF`}????{EnEn}{{ce}j{}{}}{En{{l{c}}}{}}{{EnEn}Ad}{{En{Fb{En}}}Ad}{{FdAh}Aj}{{FfAh}Aj}{{EnAh}Aj}{cc{}}00{{FhF`}{{Bb{EnFj}}}}{EnFl}{{Enc}jBd}<{{}Bf}{ce{}{}}00{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{En{{l{{Bj{b}}}}}}{FdC`}{FfC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{Enc}}Fn}}}{}}{{Enc}{{Bb{jFj}}}{}}8{c{{Bb{e}}}{}{}}00000{cCl{}}00{EnCn}{{EnFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}`````````{cb{}}00000==={G`F`}>>>{G`G`}{{ce}j{}{}}{G`{{l{c}}}{}}{{G`{Fb{G`}}}Ad}{{G`G`}Ad}{{GbAh}Aj}{{GdAh}Aj}{{G`Ah}Aj}{cc{}}00{{FhF`}{{Bb{G`Fj}}}}{G`Fl}{{G`c}jBd}<{{}Bf}{ce{}{}}00{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{G`{{l{{Bj{b}}}}}}{GbC`}{GdC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{G`c}}Fn}}}{}}{{G`c}{{Bb{jFj}}}{}}8{c{{Bb{e}}}{}{}}00000{cCl{}}00{G`Cn}{{G`Fhc}{{Bb{{Cd{F`D`}}Fj}}}{}}```````````{cb{}}00000=={GfF`}>>>>{GfGf}{{ce}j{}{}}{Gf{{l{c}}}{}}{{Gf{Fb{Gf}}}Ad}{{GfGf}Ad}{{GhAh}Aj}{{GjAh}Aj}{{GfAh}Aj}{cc{}}00{{FhF`}{{Bb{GfFj}}}}{GfFl}{{Gfc}jBd}<{{}Bf}{ce{}{}}00{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{Gf{{l{{Bj{b}}}}}}{GhC`}{GjC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{Gfc}}Fn}}}{}}{{Gfc}{{Bb{jFj}}}{}}8{c{{Bb{e}}}{}{}}00000{cCl{}}00{GfCn}{{GfFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}```````````{cb{}}00000==={GlF`}>>>{GlGl}{{ce}j{}{}}{Gl{{l{c}}}{}}{{Gl{Fb{Gl}}}Ad}{{GlGl}Ad}{{GnAh}Aj}{{H`Ah}Aj}{{GlAh}Aj}{cc{}}00{{FhF`}{{Bb{GlFj}}}}{GlFl}{{Glc}jBd}<{{}Bf}{ce{}{}}00{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{Gl{{l{{Bj{b}}}}}}{GnC`}{H`C`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{Glc}}Fn}}}{}}{{Glc}{{Bb{jFj}}}{}}8{c{{Bb{e}}}{}{}}00000{cCl{}}00{GlCn}{{GlFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}`````````````````````````````````{cb{}}00000{Hbf}>>>{Hbh}???{HbHb}{{ce}j{}{}}{Hb{{l{c}}}{nA`}}{{Hb{Ab{Hb}}}Ad}{{HbHb}Ad}{{HdAh}Aj}{{HfAh}Aj}{{HbAh}Aj}{cc{}}00{{Anh}{{Bb{HbB`}}}}{{Hbc}jBd};{fHb}{{}Bf}{ce{}{}}00{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{Hb{{l{{Bj{Bn}}}}}}{HdC`}{HfC`}{{An{Cd{hCb}}}{{Bb{{Cf{Hbc}}Ch}}}{}}{Hbj}{{Hbc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Hbc}{{Bb{jB`}}}{}}{{HbHh}j};{c{{Bb{e}}}{}{}}00000{cCl{}}00{HbCn}{{HbAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}````````````````{cb{}}0000000{Hjf}{ce{}{}}00{Hjh}11111{HlHl}{HjHj}{{ce}j{}{}}0{{HlHl}Hn}{Hj{{l{c}}}{nA`}}{{HlHl}Ad}{{Hj{Ab{Hj}}}Ad}{{HjHj}Ad}{{HlAh}Aj}{{I`Ah}Aj}{{IbAh}Aj}{{HjAh}Aj}{cc{}}000{{Anh}{{Bb{HjB`}}}}{{Hlc}jBd}{{Hjc}jBd}{Hjh}{fHj}{{}Bf}{ce{}{}}000{{{Bh{c}}}{{Bh{b}}}{}}000{{{Bj{c}}}{{Bj{b}}}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{HjIdId{Df{e}}c}If{nA`}{{Dh{Ifc}}}}{Hj{{l{{Bj{Bn}}}}}}{I`C`}{IbC`}{{An{Cd{hCb}}}{{Bb{{Cf{Hjc}}Ch}}}{}}{{HlHl}{{l{Hn}}}}{Hjj}{{Hjc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Hjc}{{Bb{jB`}}}{}}<<{Cn{{Bb{Hlj}}}}{c{{Bb{e}}}{}{}}0000000{cCl{}}000{HjCn}{{HjAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}``````````````{cb{}}00000{Ihf}{ce{}{}}0{Ihh}1111{IhIh}{{ce}j{}{}}{Ih{{l{c}}}{nA`}}{{Ih{Ab{Ih}}}Ad}{{IhIh}Ad}{{IjAh}Aj}{{IlAh}Aj}{{IhAh}Aj}{cc{}}00{{Anh}{{Bb{IhB`}}}}{{Ihc}jBd};{fIh}{{}Bf}>>>{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{Ih{{l{{Bj{Bn}}}}}}{IjC`}{IlC`}{{An{Cd{hCb}}}{{Bb{{Cf{Ihc}}Ch}}}{}}{Ihj}{{Ihc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Ihc}{{Bb{jB`}}}{}}{ce{}{}}{c{{Bb{e}}}{}{}}00000{cCl{}}00{IhCn}{{IhAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}```````````````````{cb{}}0000000{Inf}666{Inh}77777{J`J`}{InIn}{{ce}j{}{}}0{{J`J`}Hn}{In{{l{c}}}{nA`}}{{J`J`}Ad}{{InIn}Ad}{{In{Ab{In}}}Ad}{{J`Ah}Aj}{{JbAh}Aj}{{JdAh}Aj}{{InAh}Aj}{cc{}}000{{Anh}{{Bb{InB`}}}}{{InJf{Df{e}}c}Hj{nA`}{{Dh{Hjc}}}}{{InIf{Df{e}}c}Hb{nA`}{{Dh{Hbc}}}}{{InId{Df{e}}c}Ih{nA`}{{Dh{Ihc}}}}{{J`c}jBd}{{Inc}jBd}{Inh}{fIn}{{}Bf}{ce{}{}}000{{{Bh{c}}}{{Bh{b}}}{}}000{{{Bj{c}}}{{Bj{b}}}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{In{{l{{Bj{Bn}}}}}}{JbC`}{JdC`}{{An{Cd{hCb}}}{{Bb{{Cf{Inc}}Ch}}}{}}{{J`J`}{{l{Hn}}}}{Inj}{{Inc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Inc}{{Bb{jB`}}}{}};;{Cn{{Bb{J`j}}}}{c{{Bb{e}}}{}{}}0000000{cCl{}}000{InCn}{{InAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}```````````````````````````````{cb{}}00000{ce{}{}}0{JhF`}1111{JhJh}{{ce}j{}{}}{Jh{{l{c}}}{}}{{Jh{Fb{Jh}}}Ad}{{JhJh}Ad}{{JjAh}Aj}{{JlAh}Aj}{{JhAh}Aj}{cc{}}00{{FhF`}{{Bb{JhFj}}}}{JhFl}{{Jhc}jBd}<{{}Bf}>>>{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{Jh{{l{{Bj{b}}}}}}{JjC`}{JlC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{Jhc}}Fn}}}{}}{{Jhc}{{Bb{jFj}}}{}}{ce{}{}}{c{{Bb{e}}}{}{}}00000{cCl{}}00{JhCn}{{JhFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}````````````````{cb{}}00000005555{JnF`}6666{K`K`}{JnJn}{{ce}j{}{}}0{{K`K`}Hn}{Jn{{l{c}}}{}}{{K`K`}Ad}{{Jn{Fb{Jn}}}Ad}{{JnJn}Ad}{Jnj}{{K`Ah}Aj}{{KbAh}Aj}{{KdAh}Aj}{{JnAh}Aj}{cc{}}000{{FhF`}{{Bb{JnFj}}}}{JnFl}{{K`c}jBd}{{Jnc}jBd}{JnF`}{{}Bf}{ce{}{}}000{{{Bh{c}}}{{Bh{b}}}{}}000{{{Bj{c}}}{{Bj{b}}}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{Jn{{l{{Bj{b}}}}}}{KbC`}{KdC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{Jnc}}Fn}}}{}}{{K`K`}{{l{Hn}}}}{{Jnc}{{Bb{jFj}}}{}}99{Cn{{Bb{K`j}}}}{c{{Bb{e}}}{}{}}0000000{cCl{}}000{JnCn}{{JnFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}```````````````{cb{}}00000???{KfF`}{ce{}{}}00{KfKf}{{ce}j{}{}}{Kf{{l{c}}}{}}{{KfKf}Ad}{{Kf{Fb{Kf}}}Ad}{{KhAh}Aj}{{KjAh}Aj}{{KfAh}Aj}{cc{}}00{{FhF`}{{Bb{KfFj}}}}{KfFl}{{Kfc}jBd}={{}Bf}==={{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{Kf{l{Kl}}}j}{Kf{{l{{Bj{b}}}}}}{KhC`}{KjC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{Kfc}}Fn}}}{}}{{KfHh}j}{{Kfc}{{Bb{jFj}}}{}}{ce{}{}}{c{{Bb{e}}}{}{}}00000{cCl{}}00{KfCn}{{KfFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}```````````````````{cb{}}0000000555{KnF`}66666{L`L`}{KnKn}{{ce}j{}{}}0{{L`L`}Hn}{Kn{{l{c}}}{}}{{L`L`}Ad}{{Kn{Fb{Kn}}}Ad}{{KnKn}Ad}{{L`Ah}Aj}{{LbAh}Aj}{{LdAh}Aj}{{KnAh}Aj}{cc{}}000{{FhF`}{{Bb{KnFj}}}}{KnFl}{{L`c}jBd}{{Knc}jBd}{KnF`}{{}Bf}{ce{}{}}000{{{Bh{c}}}{{Bh{b}}}{}}000{{{Bj{c}}}{{Bj{b}}}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{Kn{{l{{Bj{b}}}}}}{LbC`}{LdC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{Knc}}Fn}}}{}}{{L`L`}{{l{Hn}}}}{{Knc}{{Bb{jFj}}}{}}99{c{{Bb{e}}}{}{}}{Cn{{Bb{L`j}}}}1111111{cCl{}}000{KnCn}{{KnFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}````````````````````````````````````````````````````{cb{}}0000000{Lff}{ce{}{}}000{Lfh}1111{LhLh}{LfLf}{{ce}j{}{}}0{{LhLh}Hn}{Lf{{l{c}}}{nA`}}{Lfj}{{LhLh}Ad}{{LfLf}Ad}{{Lf{Ab{Lf}}}Ad}{{LhAh}Aj}{{LjAh}Aj}{{LlAh}Aj}{{LfAh}Aj}{cc{}}000{{Anh}{{Bb{LfB`}}}}{{Lf{Df{e}}c}Ln{nA`}{{Dh{Lnc}}}}{{Lhc}jBd}{{Lfc}jBd}{Lfh}{fLf}{{}Bf}{ce{}{}}000{{{Bh{c}}}{{Bh{b}}}{}}000{{{Bj{c}}}{{Bj{b}}}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{Lf{{l{{Bj{Bn}}}}}}{LjC`}{LlC`}{{An{Cd{hCb}}}{{Bb{{Cf{Lfc}}Ch}}}{}}{{LhLh}{{l{Hn}}}}{{Lfc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Lfc}{{Bb{jB`}}}{}}::{Cn{{Bb{Lhj}}}}{c{{Bb{e}}}{}{}}0000000{cCl{}}000{LfCn}{{LfAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}``````````````````````````````````````````{cb{}}000000000{{M`Mb}j}{M`f}{ce{}{}}000{M`h}111111{M`j}{MdMd}{MfMf}{M`M`}{{ce}j{}{}}00{{MdMd}Hn}{{MfMf}Hn}{{M`HhHhHhHh}j}{M`{{l{c}}}{nA`}}8{{MdMd}Ad}{{MfMf}Ad}{{M`M`}Ad}{{M`{Ab{M`}}}Ad}{{MdAh}Aj}{{MfAh}Aj}{{MhAh}Aj}{{MjAh}Aj}{{M`Ah}Aj}{cc{}}0000{{Anh}{{Bb{M`B`}}}}{{Mdc}jBd}{{Mfc}jBd}{{M`c}jBd}{M`h}{fM`}{{}Bf}{ce{}{}}0000{{{Bh{c}}}{{Bh{b}}}{}}0000{{{Bj{c}}}{{Bj{b}}}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{M`{{l{{Bj{Bn}}}}}}{MhC`}{MjC`}{{An{Cd{hCb}}}{{Bb{{Cf{M`c}}Ch}}}{}}{{MdMd}{{l{Hn}}}}{{MfMf}{{l{Hn}}}}{{M`c{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{M`c}{{Bb{jB`}}}{}};;;{c{{Bb{e}}}{}{}}{Cn{{Bb{Mdj}}}}1{Cn{{Bb{Mfj}}}}22222222{cCl{}}0000{M`Cn}{{M`Anc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}``````````````````````````````{{}Ml}0{cb{}}000000000{Mnf}{{MlMl}Ml}{{MlMl}j}10{MlCn}0021{ce{}{}}0000{Mnh}11111{N`N`}{MlMl}{MnMn}{{ce}j{}{}}00{{N`N`}Hn}33{{MlMl}Ad}0{{MndNbCn{Df{e}}c}Lf{nA`}{{Dh{Lfc}}}}{{MndMl{Df{e}}c}Ln{nA`}{{Dh{Lnc}}}}{Mn{{l{c}}}{nA`}}{Mnj}>>{{}Ml}0{{N`N`}Ad}6{{MnMn}Ad}{{Mn{Ab{Mn}}}Ad}{{Mlc}j{{Nf{}{{Nd{Ml}}}}}}{{N`Ah}Aj}{{MlAh}Aj}0000{{NhAh}Aj}{{NjAh}Aj}{{MnAh}Aj}{cc{}}0000{Cn{{l{Ml}}}}0{CnMl}0000{{Anh}{{Bb{MnB`}}}}{cMl{{Nf{}{{Nd{Ml}}}}}}{Nl{{l{Ml}}}}0{{N`c}jBd}{{Mlc}jBd}{{Mnc}jBd}{Mnh}{fMn}{{MlMl}j}0{{}Bf}{{MlMl}Ml}0{{MlMl}Ad}0{ce{}{}}0000{{{Bh{c}}}{{Bh{b}}}{}}0000{{{Bj{c}}}{{Bj{b}}}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{Mlc{}}{MlAd}000{Ml{{Nn{Ml}}}}0{Ml{{O`{Ml}}}}0{MlMl}{Mn{{l{{Bj{Bn}}}}}}{NhC`}{NjC`}{{An{Cd{hCb}}}{{Bb{{Cf{Mnc}}Ch}}}{}}{{N`N`}{{l{Hn}}}}{{MlMl}j}0{{Mnc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Mnc}{{Bb{jB`}}}{}}{{MlMlAd}j}0{{MlMl}Ml}400{ce{}{}}0055{Cn{{Bb{N`j}}}}{c{{Bb{e}}}{}{}}{Cn{{Bb{Mlj}}}}111111111{cCl{}}000055{MnCn}{{MnAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}````````````````````````````````{cb{}}00000{Lnf}888{Lnh}999{LnLn}{{ce}j{}{}}{{Ln{Df{e}}c}M`{nA`}{{Dh{M`c}}}}{Ln{{l{c}}}{nA`}}{Lnj}{{LnLn}Ad}{{Ln{Ab{Ln}}}Ad}{{ObAh}Aj}{{OdAh}Aj}{{LnAh}Aj}{cc{}}00{{Anh}{{Bb{LnB`}}}}{{Lnc}jBd}={fLn}{{}Bf}{ce{}{}}00{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{Ln{{l{{Bj{Bn}}}}}}{ObC`}{OdC`}{{An{Cd{hCb}}}{{Bb{{Cf{Lnc}}Ch}}}{}}{{Lnc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Lnc}{{Bb{jB`}}}{}}9{c{{Bb{e}}}{}{}}00000{cCl{}}00{LnCn}{{LnAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}`````````````````````````````````````````````````{cb{}}0000000>>>>{OfF`}????{OhOh}{OfOf}{{ce}j{}{}}0{{OhOh}Hn}{Of{{l{c}}}{}}{Ofj}{{OhOh}Ad}{{OfOf}Ad}{{Of{Fb{Of}}}Ad}{{OhAh}Aj}{{OjAh}Aj}{{OlAh}Aj}{{OfAh}Aj}{cc{}}000{{FhF`}{{Bb{OfFj}}}}{OfFl}{{Ohc}jBd}{{Ofc}jBd}{{OfHhHh}j}{OfF`}{{}Bf}{ce{}{}}000{{{Bh{c}}}{{Bh{b}}}{}}000{{{Bj{c}}}{{Bj{b}}}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{Ofj}{Of{{l{{Bj{b}}}}}}{OjC`}{OlC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{Ofc}}Fn}}}{}}{{OhOh}{{l{Hn}}}}<{{Ofc}{{Bb{jFj}}}{}}::{Cn{{Bb{Ohj}}}}{c{{Bb{e}}}{}{}}0000000{cCl{}}000{OfCn}{{OfFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}```````````````````````````````````````````{cb{}}000000000{ce{}{}}0000{OnF`}11111{A`A`}{AbAb}{OnOn}{{ce}j{}{}}00{{A`A`}Hn}{{AbAb}Hn}{{OnHhHhHhHh}j}{On{{l{c}}}{}}{{A`A`}Ad}{{AbAb}Ad}{{OnOn}Ad}{{On{Fb{On}}}Ad}{{OnAb}j}{{A`Ah}Aj}{{AbAh}Aj}{{AdAh}Aj}{{AfAh}Aj}{{OnAh}Aj}{cc{}}0000{{FhF`}{{Bb{OnFj}}}}{OnFl}{{A`c}jBd}{{Abc}jBd}{{Onc}jBd}{OnF`}{{}Bf}{ce{}{}}0000{{{Bh{c}}}{{Bh{b}}}{}}0000{{{Bj{c}}}{{Bj{b}}}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{On{{l{{Bj{b}}}}}}{AdC`}{AfC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{Onc}}Fn}}}{}}{{A`A`}{{l{Hn}}}}{{AbAb}{{l{Hn}}}}{{OnCnCnCn}j}{Onj}{{Onc}{{Bb{jFj}}}{}}<<<{{OnAh}j}{c{{Bb{e}}}{}{}}{Cn{{Bb{A`j}}}}1{Cn{{Bb{Abj}}}}22222222{cCl{}}0000{OnCn}{{OnFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}``````````````````````````````{{}Aj}0{cb{}}000000000{{AjAj}Aj}{{AjAj}j}10{AjCn}0021{ce{}{}}0000{AlF`}11111{AnAn}{AjAj}{AlAl}{{ce}j{}{}}00{{AnAn}Hn}33{{AjAj}Ad}0{Al{{l{c}}}{}};;=={{AnAn}Ad}2{{AlAl}Ad}{{Al{Fb{Al}}}Ad}{{Ajc}j{{Nf{}{{Nd{Aj}}}}}}{{AnAh}Aj}{{AjAh}Aj}0000{{AA`Ah}Aj}{{AAbAh}Aj}{{AlAh}Aj}{cc{}}0000{Cn{{l{Aj}}}}0{CnAj}0000{{FhF`}{{Bb{AlFj}}}}{cAj{{Nf{}{{Nd{Aj}}}}}}{Nl{{l{Aj}}}}0{AlFl}{{Anc}jBd}{{Ajc}jBd}{{Alc}jBd}{AlF`}{{AjAj}j}0{{}Bf}{{AjAj}Aj}0{{AjAj}Ad}0{ce{}{}}0000{{{Bh{c}}}{{Bh{b}}}{}}0000{{{Bj{c}}}{{Bj{b}}}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{Ajc{}}{AjAd}000{Aj{{Nn{Aj}}}}0{Aj{{O`{Aj}}}}0{AjAj}{Al{{l{{Bj{b}}}}}}{AA`C`}{AAbC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{Alc}}Fn}}}{}}{{AnAn}{{l{Hn}}}}{{AjAj}j}0{{Alc}{{Bb{jFj}}}{}}{{AjAjAd}j}0{{AjAj}Aj}300{ce{}{}}0044{Cn{{Bb{Anj}}}}{c{{Bb{e}}}{}{}}0{Cn{{Bb{Ajj}}}}11111111{cCl{}}000055{AlCn}{{AlFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}``````````````````````````````````{cb{}}0000077{AAdF`}8888{{AAdCnCn}j}{AAdAAd}{{ce}j{}{}}{AAd{{l{c}}}{}}{{AAd{AAh{AAf}}}j}{{AAdCn{AAh{AAf}}}j}{AAdj}{{AAdAAd}Ad}{{AAd{Fb{AAd}}}Ad}{{AAjAh}Aj}{{AAlAh}Aj}{{AAdAh}Aj}{cc{}}00{{FhF`}{{Bb{AAdFj}}}}{AAdFl}{{AAdc}jBd}{AAdF`}{{}Bf}{ce{}{}}00{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{AAd{{l{{Bj{b}}}}}}{AAjC`}{AAlC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{AAdc}}Fn}}}{}}{{AAdc}{{Bb{jFj}}}{}}{{AAdCn}j}{AAdj}:{c{{Bb{e}}}{}{}}00000{cCl{}}00{AAdCn}{{AAdFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}```````````````````````````````````````````````````````````{cb{}}0000000{E`f}{ce{}{}}00{E`h}11111{AAnAAn}{E`E`}{{ce}j{}{}}0{{AAnAAn}Hn}{E`{{l{c}}}{nA`}}{E`j}{{AAnAAn}Ad}{{E`{Ab{E`}}}Ad}{{E`E`}Ad}{{AAnAh}Aj}{{AB`Ah}Aj}{{ABbAh}Aj}{{E`Ah}Aj}{cc{}}000{{Anh}{{Bb{E`B`}}}}{{AAnc}jBd}{{E`c}jBd}{E`h}{fE`}{{}Bf}{ce{}{}}000{{{Bh{c}}}{{Bh{b}}}{}}000{{{Bj{c}}}{{Bj{b}}}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{E`{{l{{Bj{Bn}}}}}}{AB`C`}{ABbC`}{{An{Cd{hCb}}}{{Bb{{Cf{E`c}}Ch}}}{}}{{AAnAAn}{{l{Hn}}}}{{E`c{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{E`c}{{Bb{jB`}}}{}}::{c{{Bb{e}}}{}{}}{Cn{{Bb{AAnj}}}}1111111{cCl{}}000{E`Cn}{{E`Anc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}```````````````````{cb{}}00000{ABdf}{ce{}{}}0{ABdh}1111{ABdABd}{{ce}j{}{}}{ABd{{l{c}}}{nA`}}{{ABd{Ab{ABd}}}Ad}{{ABdABd}Ad}{{ABfAh}Aj}{{ABhAh}Aj}{{ABdAh}Aj}{cc{}}00{{Anh}{{Bb{ABdB`}}}}{{ABdc}jBd};{fABd}{{}Bf}>>>{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{ABd{{l{{Bj{Bn}}}}}}{ABfC`}{ABhC`}{{An{Cd{hCb}}}{{Bb{{Cf{ABdc}}Ch}}}{}}{{ABdc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{ABdc}{{Bb{jB`}}}{}}{ABdj}{ce{}{}}{c{{Bb{e}}}{}{}}00000{cCl{}}00{ABdCn}{{ABdAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}``````````````````````````````````````````````````{{ABjKl}j}{cb{}}00000006666{ABjF`}7777{ABlABl}{ABjABj}{{ce}j{}{}}0{ABjj}{{ABlABl}Hn}{ABj{{l{c}}}{}}2{{ABlABl}Ad}{{ABj{Fb{ABj}}}Ad}{{ABjABj}Ad}{{ABlAh}Aj}{{ABnAh}Aj}{{AC`Ah}Aj}{{ABjAh}Aj}{cc{}}000{{FhF`}{{Bb{ABjFj}}}}{ABjFl}{{ABlc}jBd}{{ABjc}jBd}{ABjF`}{{}Bf}{ce{}{}}000{{{Bh{c}}}{{Bh{b}}}{}}000{{{Bj{c}}}{{Bj{b}}}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{ABj{{l{{Bj{b}}}}}}{ABnC`}{AC`C`}{{ABjACb}j}0{{Fh{Cd{F`Cb}}}{{Bb{{Cf{ABjc}}Fn}}}{}}{{ABlABl}{{l{Hn}}}}{{ABjc}{{Bb{jFj}}}{}}{{ABj{AAh{AAf}}}j}{{ABjKl}j}<<{Cn{{Bb{ABlj}}}}{c{{Bb{e}}}{}{}}0000000{cCl{}}000{ABjCn}{{ABjACd}j}0{{ABjFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}```````````````````{cb{}}00000{ce{}{}}0{ACfF`}1111{ACfACf}{{ce}j{}{}}{ACf{{l{c}}}{}}{{ACf{Fb{ACf}}}Ad}{{ACfACf}Ad}{ACfj}{{AChAh}Aj}{{ACjAh}Aj}{{ACfAh}Aj}{cc{}}00{{FhF`}{{Bb{ACfFj}}}}{ACfFl}{{ACfc}jBd}={{}Bf}???{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{ACf{{l{{Bj{b}}}}}}{AChC`}{ACjC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{ACfc}}Fn}}}{}}{{ACfc}{{Bb{jFj}}}{}}{ce{}{}}{{ACfABj}j}{c{{Bb{e}}}{}{}}00000{cCl{}}00{ACfCn}{{ACfFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}``````````````````````````````````````````````````````````{{AClE`ACn}j}{cb{}}000000000{AClf}8888{AClh}999999{AD`AD`}{ADbADb}{AClACl}{{ce}j{}{}}00{{AClE`}j}{{AD`AD`}Hn}{{ADbADb}Hn}{ACl{{l{c}}}{nA`}}{AClj}{{AD`AD`}Ad}{{ADbADb}Ad}{{ACl{Ab{ACl}}}Ad}{{AClACl}Ad}{{AD`Ah}Aj}{{ADbAh}Aj}{{ADdAh}Aj}{{ADfAh}Aj}{{AClAh}Aj}{cc{}}0000{{Anh}{{Bb{AClB`}}}}{{AD`c}jBd}{{ADbc}jBd}{{AClc}jBd}{AClh}{fACl}{{}Bf}{ce{}{}}0000{{{Bh{c}}}{{Bh{b}}}{}}0000{{{Bj{c}}}{{Bj{b}}}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{AClE`EhDd}j}{ACl{{l{{Bj{Bn}}}}}}{ADdC`}{ADfC`}{{An{Cd{hCb}}}{{Bb{{Cf{AClc}}Ch}}}{}}{{AD`AD`}{{l{Hn}}}}{{ADbADb}{{l{Hn}}}}{{AClc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{AClc}{{Bb{jB`}}}{}}{{AClE`{l{Dd}}}j}{{AClE`}j}0{{AClE`ADhHhHhHhHh}j}???{c{{Bb{e}}}{}{}}{Cn{{Bb{AD`j}}}}1{Cn{{Bb{ADbj}}}}22222222{cCl{}}0000555{AClCn}{{AClAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}``````````````````````````````````````````````````````````````````````````{cb{}}000000000{ce{}{}}000{ADjF`}111111{{ADj{AAh{AAf}}}j}{ADlADl}{ADnADn}{ADjADj}{{ce}j{}{}}00{{ADlADl}Hn}{{ADnADn}Hn}{ADj{{l{c}}}{}}{{ADlADl}Ad}{{ADnADn}Ad}{{ADjADj}Ad}{{ADj{Fb{ADj}}}Ad}{{ADlAh}Aj}{{ADnAh}Aj}{{AE`Ah}Aj}{{AEbAh}Aj}{{ADjAh}Aj}{cc{}}0000{{FhF`}{{Bb{ADjFj}}}}{ADjFl}{{ADlc}jBd}{{ADnc}jBd}{{ADjc}jBd}{ADjF`}{{}Bf}{ce{}{}}0000{{{Bh{c}}}{{Bh{b}}}{}}0000{{{Bj{c}}}{{Bj{b}}}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{ADj{{l{{Bj{b}}}}}}{AE`C`}{AEbC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{ADjc}}Fn}}}{}}{{ADlADl}{{l{Hn}}}}{{ADnADn}{{l{Hn}}}}{{ADjc}{{Bb{jFj}}}{}}:::{Cn{{Bb{ADlj}}}}{c{{Bb{e}}}{}{}}0{Cn{{Bb{ADnj}}}}11111111{cCl{}}0000{ADjCn}{{ADjFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}`````````````````````````````````````````````````````````````````{cb{}}0000000{AEdf}{ce{}{}}00{AEdh}11111{AEfAEf}{AEdAEd}{{ce}j{}{}}0{{AEfAEf}Hn}{{AEdKl}j}{AEd{{l{c}}}{nA`}}{AEdj}{{AEfAEf}Ad}{{AEd{Ab{AEd}}}Ad}{{AEdAEd}Ad}{{AEfAh}Aj}{{AEhAh}Aj}{{AEjAh}Aj}{{AEdAh}Aj}{cc{}}000{{Anh}{{Bb{AEdB`}}}}{{AEfc}jBd}{{AEdc}jBd}{AEdh}{fAEd}{{}Bf}{ce{}{}}000{{{Bh{c}}}{{Bh{b}}}{}}000{{{Bj{c}}}{{Bj{b}}}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{AEd{{l{{Bj{Bn}}}}}}{AEhC`}{AEjC`}{{An{Cd{hCb}}}{{Bb{{Cf{AEdc}}Ch}}}{}}{{AEfAEf}{{l{Hn}}}}{{AEdc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{AEdc}{{Bb{jB`}}}{}}::{Cn{{Bb{AEfj}}}}{c{{Bb{e}}}{}{}}0000000{cCl{}}000{AEdCn}{{AEdAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}`````````````````````````````````````````````````````````{Ehj}{cb{}}00000000000{Ehf}{ce{}{}}00000{Ehh}111111{AElAEl}{AEnAEn}{AF`AF`}{EhEh}{{ce}j{}{}}000{{AElAEl}Hn}{{AEnAEn}Hn}{{AF`AF`}Hn}{Eh{{l{c}}}{nA`}}=={{AElAEl}Ad}{{AEnAEn}Ad}{{AF`AF`}Ad}{{Eh{Ab{Eh}}}Ad}{{EhEh}Ad}{{AElAh}Aj}{{AEnAh}Aj}{{AF`Ah}Aj}{{AFbAh}Aj}{{AFdAh}Aj}{{EhAh}Aj}{cc{}}00000{{Anh}{{Bb{EhB`}}}}{{AElc}jBd}{{AEnc}jBd}{{AF`c}jBd}{{Ehc}jBd}{Ehh}{fEh}{{}Bf}{ce{}{}}00000{{{Bh{c}}}{{Bh{b}}}{}}00000{{{Bj{c}}}{{Bj{b}}}{}}00000{{{Bl{c}}}{{Bl{b}}}{}}00000{Eh{{l{{Bj{Bn}}}}}}{AFbC`}{AFdC`}{{An{Cd{hCb}}}{{Bb{{Cf{Ehc}}Ch}}}{}}{{AElAEl}{{l{Hn}}}}{{AEnAEn}{{l{Hn}}}}{{AF`AF`}{{l{Hn}}}}{Ehj}{{EhKl}j}{{Ehc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{Ehc}{{Bb{jB`}}}{}}{{EhAF`}j}????{Cn{{Bb{AElj}}}}{c{{Bb{e}}}{}{}}{Cn{{Bb{AEnj}}}}11{Cn{{Bb{AF`j}}}}222222222{cCl{}}00000{EhCn}{{EhAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}`````````````````````````{cb{}}00000{AFff}{ce{}{}}0{AFfh}1111{AFfAFf}{{ce}j{}{}}{AFfj}{AFf{{l{c}}}{nA`}}{{AFf{Ab{AFf}}}Ad}{{AFfAFf}Ad}{{AFhAh}Aj}{{AFjAh}Aj}{{AFfAh}Aj}{cc{}}00{{Anh}{{Bb{AFfB`}}}}{{AFfc}jBd}<{fAFf}{{}Bf}???{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{AFf{{l{{Bj{Bn}}}}}}{AFhC`}{AFjC`}{{An{Cd{hCb}}}{{Bb{{Cf{AFfc}}Ch}}}{}}{{AFfc{Bj{Bn}}}{{Bb{eB`}}}{}Cj}{{AFfc}{{Bb{jB`}}}{}}{AFfj}{ce{}{}}{c{{Bb{e}}}{}{}}00000{cCl{}}00{AFfCn}{{AFfAnc}{{Bb{{Cf{{Cd{hD`}}{l{{Cf{BfCn}}}}}}B`}}}{}}```````````````````````````````````````````{cb{}}00000005555{AFlF`}6666{{AFl{AAh{AAf}}}j}{AFnAFn}{AFlAFl}{{ce}j{}{}}0{{AFnAFn}Hn}{AFl{{l{c}}}{}}{{AFnAFn}Ad}{{AFl{Fb{AFl}}}Ad}{{AFlAFl}Ad}{{AFnAh}Aj}{{AG`Ah}Aj}{{AGbAh}Aj}{{AFlAh}Aj}{cc{}}000{{FhF`}{{Bb{AFlFj}}}}{AFlFl}{{AFnc}jBd}{{AFlc}jBd}{AFlF`}{{}Bf}{ce{}{}}000{{{Bh{c}}}{{Bh{b}}}{}}000{{{Bj{c}}}{{Bj{b}}}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{AFl{{l{{Bj{b}}}}}}{AG`C`}{AGbC`}{{AFlACb}j}0{{Fh{Cd{F`Cb}}}{{Bb{{Cf{AFlc}}Fn}}}{}}{{AFnAFn}{{l{Hn}}}}{AFlj}{{AFlc}{{Bb{jFj}}}{}};;{c{{Bb{e}}}{}{}}{Cn{{Bb{AFnj}}}}1111111{cCl{}}000{AFlCn}{{AFlACd}j}{{AFlFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}`````````````````````````````````````````````````````````{cb{}}00000000000{ce{}{}}00000{ACdF`}111111{{ACd{AAh{AAf}}}j}{AGdAGd}{AGfAGf}{AGhAGh}{ACdACd}{{ce}j{}{}}000{{AGdAGd}Hn}{{AGfAGf}Hn}{{AGhAGh}Hn}8{ACd{{l{c}}}{}}{{AGdAGd}Ad}{{AGfAGf}Ad}{{AGhAGh}Ad}{{ACd{Fb{ACd}}}Ad}{{ACdACd}Ad}{{AGdAh}Aj}{{AGfAh}Aj}{{AGhAh}Aj}{{AGjAh}Aj}{{AGlAh}Aj}{{ACdAh}Aj}{cc{}}00000{{FhF`}{{Bb{ACdFj}}}}{ACdFl}{{AGdc}jBd}{{AGfc}jBd}{{AGhc}jBd}{{ACdc}jBd}{ACdF`}{{}Bf}{ce{}{}}00000{{{Bh{c}}}{{Bh{b}}}{}}00000{{{Bj{c}}}{{Bj{b}}}{}}00000{{{Bl{c}}}{{Bl{b}}}{}}00000{{ACdKl}j}{ACd{{l{{Bj{b}}}}}}{AGjC`}{AGlC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{ACdc}}Fn}}}{}}{{AGdAGd}{{l{Hn}}}}{{AGfAGf}{{l{Hn}}}}{{AGhAGh}{{l{Hn}}}}{ACdj}{{ACdc}{{Bb{jFj}}}{}}{{ACd{AAh{AAf}}}j}{{ACdAGh}j}????{c{{Bb{e}}}{}{}}{Cn{{Bb{AGdj}}}}{Cn{{Bb{AGfj}}}}2{Cn{{Bb{AGhj}}}}3333333333{cCl{}}00000{ACdCn}{{ACdFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}`````````````````````````{cb{}}00000{ce{}{}}0{AGnF`}1111{AGnAGn}{{ce}j{}{}}{AGn{{l{c}}}{}}{AGnj}{{AGn{Fb{AGn}}}Ad}{{AGnAGn}Ad}2{{AH`Ah}Aj}{{AHbAh}Aj}{{AGnAh}Aj}{cc{}}00{{FhF`}{{Bb{AGnFj}}}}{AGnFl}{{AGnc}jBd}={{}Bf}???{{{Bh{c}}}{{Bh{b}}}{}}00{{{Bj{c}}}{{Bj{b}}}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{AGn{{l{{Bj{b}}}}}}{AH`C`}{AHbC`}{{Fh{Cd{F`Cb}}}{{Bb{{Cf{AGnc}}Fn}}}{}}{{AGnc}{{Bb{jFj}}}{}}{ce{}{}}{c{{Bb{e}}}{}{}}00000{cCl{}}00{AGnCn}{{AGnAFl}j}{{AGnFhc}{{Bb{{Cd{F`D`}}Fj}}}{}}`","c":[],"p":[[10,"Any",4069],[5,"ZcosmicImageSourceV1",26],[5,"WeakBackend",4070],[5,"ObjectId",4070],[1,"unit"],[6,"Option",4071],[10,"Send",4072],[10,"Sync",4072],[5,"Weak",4073],[1,"bool"],[6,"Request",26],[5,"Formatter",4074],[8,"Result",4074],[6,"Event",26],[5,"Connection",4075],[5,"InvalidId",4076],[6,"Result",4077],[10,"Hasher",4078],[5,"Interface",4079],[5,"Box",4080],[5,"Arc",4081],[5,"Rc",4082],[10,"ObjectData",4070],[1,"u16"],[5,"OwnedFd",4083],[5,"Message",4079],[1,"tuple"],[6,"DispatchError",4073],[10,"Proxy",4073],[5,"TypeId",4069],[1,"u32"],[5,"BorrowedFd",4083],[5,"ZcosmicOutputImageSourceManagerV1",93],[5,"WlOutput",4084],[5,"QueueHandle",4085],[10,"Dispatch",4085],[6,"Request",93],[6,"Event",93],[5,"ZcosmicToplevelImageSourceManagerV1",165],[5,"ZcosmicToplevelHandleV1",2487],[6,"Request",165],[6,"Event",165],[5,"ZcosmicWorkspaceImageSourceManagerV1",237],[5,"ZcosmicWorkspaceHandleV1",3403],[6,"Request",237],[6,"Event",237],[5,"ZcosmicImageSourceV1",326],[5,"ObjectId",4086],[5,"Weak",4087],[6,"Request",326],[6,"Event",326],[5,"DisplayHandle",4088],[5,"InvalidId",4089],[5,"WeakHandle",4086],[6,"DispatchError",4087],[5,"ZcosmicOutputImageSourceManagerV1",390],[6,"Request",390],[6,"Event",390],[5,"ZcosmicToplevelImageSourceManagerV1",459],[6,"Request",459],[6,"Event",459],[5,"ZcosmicWorkspaceImageSourceManagerV1",528],[6,"Request",528],[6,"Event",528],[5,"ZcosmicOutputConfigurationHeadV1",619],[6,"Request",619],[6,"Event",619],[1,"i32"],[5,"ZcosmicOutputConfigurationV1",691],[6,"Error",691],[6,"Ordering",4090],[6,"Request",691],[6,"Event",691],[5,"ZwlrOutputHeadV1",4091],[5,"ZwlrOutputConfigurationHeadV1",4092],[5,"ZcosmicOutputHeadV1",791],[6,"Request",791],[6,"Event",791],[5,"ZcosmicOutputManagerV1",866],[6,"Error",866],[6,"Request",866],[6,"Event",866],[5,"ZwlrOutputConfigurationV1",4093],[5,"ZcosmicOutputConfigurationHeadV1",990],[6,"Request",990],[6,"Event",990],[5,"ZcosmicOutputConfigurationV1",1058],[6,"Error",1058],[6,"Request",1058],[6,"Event",1058],[5,"ZcosmicOutputHeadV1",1156],[6,"Request",1156],[6,"Event",1156],[5,"String",4094],[5,"ZcosmicOutputManagerV1",1230],[6,"Error",1230],[6,"Request",1230],[6,"Event",1230],[5,"ZcosmicScreencopyCursorSessionV2",1355],[6,"Error",1355],[6,"Request",1355],[6,"Event",1355],[5,"ZcosmicScreencopySessionV2",1809],[5,"ZcosmicScreencopyFrameV2",1465],[5,"WlBuffer",4095],[6,"Error",1465],[6,"FailureReason",1465],[6,"Request",1465],[6,"Event",1465],[5,"Options",1623],[5,"ZcosmicScreencopyManagerV2",1623],[6,"Error",1623],[5,"WlPointer",4096],[17,"Item"],[10,"IntoIterator",4097],[6,"Request",1623],[6,"Event",1623],[1,"str"],[5,"Iter",4098],[5,"IterNames",4098],[6,"Request",1809],[6,"Event",1809],[5,"ZcosmicScreencopyCursorSessionV2",1924],[6,"Error",1924],[6,"Request",1924],[6,"Event",1924],[5,"ZcosmicScreencopyFrameV2",2035],[6,"Error",2035],[6,"FailureReason",2035],[6,"Request",2035],[6,"Event",2035],[6,"Transform",4099],[5,"Options",2192],[5,"ZcosmicScreencopyManagerV2",2192],[6,"Error",2192],[6,"Request",2192],[6,"Event",2192],[5,"ZcosmicScreencopySessionV2",2375],[1,"u8"],[5,"Vec",4100],[6,"Request",2375],[6,"Event",2375],[6,"State",2487],[6,"Request",2487],[6,"Event",2487],[5,"ZcosmicToplevelInfoV1",2614],[6,"Request",2614],[6,"Event",2614],[5,"ZcosmicToplevelHandleV1",2699],[6,"State",2699],[6,"Request",2699],[6,"Event",2699],[5,"WlOutput",4099],[5,"ZcosmicWorkspaceHandleV1",3803],[5,"ZcosmicToplevelInfoV1",2832],[6,"Request",2832],[6,"Event",2832],[5,"ZcosmicToplevelManagerV1",2914],[5,"WlSeat",4101],[6,"ZcosmicToplelevelManagementCapabilitiesV1",2914],[6,"Error",2914],[6,"Request",2914],[6,"Event",2914],[5,"WlSurface",4102],[5,"ZcosmicToplevelManagerV1",3101],[6,"ZcosmicToplelevelManagementCapabilitiesV1",3101],[6,"Error",3101],[6,"Request",3101],[6,"Event",3101],[5,"ZcosmicWorkspaceGroupHandleV1",3289],[6,"ZcosmicWorkspaceGroupCapabilitiesV1",3289],[6,"Request",3289],[6,"Event",3289],[6,"State",3403],[6,"ZcosmicWorkspaceCapabilitiesV1",3403],[6,"TilingState",3403],[6,"Request",3403],[6,"Event",3403],[5,"ZcosmicWorkspaceManagerV1",3591],[6,"Request",3591],[6,"Event",3591],[5,"ZcosmicWorkspaceGroupHandleV1",3688],[6,"ZcosmicWorkspaceGroupCapabilitiesV1",3688],[6,"Request",3688],[6,"Event",3688],[6,"State",3803],[6,"ZcosmicWorkspaceCapabilitiesV1",3803],[6,"TilingState",3803],[6,"Request",3803],[6,"Event",3803],[5,"ZcosmicWorkspaceManagerV1",3989],[6,"Request",3989],[6,"Event",3989],[15,"CreateSource",164],[15,"CreateSource",236],[15,"CreateSource",308],[15,"CreateSource",457],[15,"CreateSource",526],[15,"CreateSource",595],[15,"SetScale1000",690],[15,"MirrorHead",789],[15,"Mirroring",864],[15,"Scale1000",864],[15,"GetConfiguration",968],[15,"GetConfigurationHead",968],[15,"GetHead",968],[15,"SetScale1000",1057],[15,"MirrorHead",1153],[15,"Mirroring",1228],[15,"Scale1000",1228],[15,"GetConfiguration",1326],[15,"GetConfigurationHead",1326],[15,"GetHead",1326],[15,"Position",1461],[15,"Hotspot",1461],[15,"Damage",1609],[15,"Failed",1609],[15,"Transform",1609],[15,"PresentationTime",1609],[15,"AttachBuffer",1618],[15,"DamageBuffer",1618],[15,"CreateSession",1804],[15,"CreatePointerCursorSession",1804],[15,"DmabufDevice",1898],[15,"ShmFormat",1898],[15,"DmabufFormat",1898],[15,"BufferSize",1898],[15,"Position",2030],[15,"Hotspot",2030],[15,"GetScreencopySession",2034],[15,"Damage",2178],[15,"Failed",2178],[15,"Transform",2178],[15,"PresentationTime",2178],[15,"AttachBuffer",2187],[15,"DamageBuffer",2187],[15,"CreateSession",2368],[15,"CreatePointerCursorSession",2368],[15,"DmabufDevice",2466],[15,"ShmFormat",2466],[15,"DmabufFormat",2466],[15,"BufferSize",2466],[15,"CreateFrame",2472],[15,"AppId",2607],[15,"OutputEnter",2607],[15,"OutputLeave",2607],[15,"State",2607],[15,"Title",2607],[15,"WorkspaceEnter",2607],[15,"WorkspaceLeave",2607],[15,"Toplevel",2687],[15,"AppId",2825],[15,"OutputEnter",2825],[15,"OutputLeave",2825],[15,"State",2825],[15,"Title",2825],[15,"WorkspaceEnter",2825],[15,"WorkspaceLeave",2825],[15,"Toplevel",2904],[15,"Capabilities",3075],[15,"SetRectangle",3076],[15,"SetFullscreen",3076],[15,"MoveToWorkspace",3076],[15,"Activate",3076],[15,"Close",3076],[15,"SetMaximized",3076],[15,"UnsetMaximized",3076],[15,"SetMinimized",3076],[15,"UnsetMinimized",3076],[15,"UnsetFullscreen",3076],[15,"Capabilities",3250],[15,"SetRectangle",3251],[15,"SetFullscreen",3251],[15,"MoveToWorkspace",3251],[15,"Activate",3251],[15,"Close",3251],[15,"SetMaximized",3251],[15,"UnsetMaximized",3251],[15,"SetMinimized",3251],[15,"UnsetMinimized",3251],[15,"UnsetFullscreen",3251],[15,"Capabilities",3398],[15,"OutputEnter",3398],[15,"OutputLeave",3398],[15,"Workspace",3398],[15,"CreateWorkspace",3402],[15,"Capabilities",3584],[15,"Coordinates",3584],[15,"Name",3584],[15,"State",3584],[15,"TilingState",3584],[15,"Rename",3589],[15,"SetTilingState",3589],[15,"WorkspaceGroup",3671],[15,"Capabilities",3798],[15,"OutputEnter",3798],[15,"OutputLeave",3798],[15,"Workspace",3798],[15,"CreateWorkspace",3802],[15,"Capabilities",3982],[15,"Coordinates",3982],[15,"Name",3982],[15,"State",3982],[15,"TilingState",3982],[15,"Rename",3987],[15,"SetTilingState",3987],[15,"WorkspaceGroup",4068]],"b":[[50,"impl-PartialEq%3CWeak%3CZcosmicImageSourceV1%3E%3E-for-ZcosmicImageSourceV1"],[51,"impl-PartialEq-for-ZcosmicImageSourceV1"],[121,"impl-PartialEq%3CWeak%3CZcosmicOutputImageSourceManagerV1%3E%3E-for-ZcosmicOutputImageSourceManagerV1"],[122,"impl-PartialEq-for-ZcosmicOutputImageSourceManagerV1"],[193,"impl-PartialEq-for-ZcosmicToplevelImageSourceManagerV1"],[194,"impl-PartialEq%3CWeak%3CZcosmicToplevelImageSourceManagerV1%3E%3E-for-ZcosmicToplevelImageSourceManagerV1"],[265,"impl-PartialEq%3CWeak%3CZcosmicWorkspaceImageSourceManagerV1%3E%3E-for-ZcosmicWorkspaceImageSourceManagerV1"],[266,"impl-PartialEq-for-ZcosmicWorkspaceImageSourceManagerV1"],[348,"impl-PartialEq-for-ZcosmicImageSourceV1"],[349,"impl-PartialEq%3CWeak%3CZcosmicImageSourceV1%3E%3E-for-ZcosmicImageSourceV1"],[415,"impl-PartialEq%3CWeak%3CZcosmicOutputImageSourceManagerV1%3E%3E-for-ZcosmicOutputImageSourceManagerV1"],[416,"impl-PartialEq-for-ZcosmicOutputImageSourceManagerV1"],[484,"impl-PartialEq%3CWeak%3CZcosmicToplevelImageSourceManagerV1%3E%3E-for-ZcosmicToplevelImageSourceManagerV1"],[485,"impl-PartialEq-for-ZcosmicToplevelImageSourceManagerV1"],[553,"impl-PartialEq%3CWeak%3CZcosmicWorkspaceImageSourceManagerV1%3E%3E-for-ZcosmicWorkspaceImageSourceManagerV1"],[554,"impl-PartialEq-for-ZcosmicWorkspaceImageSourceManagerV1"],[645,"impl-PartialEq%3CWeak%3CZcosmicOutputConfigurationHeadV1%3E%3E-for-ZcosmicOutputConfigurationHeadV1"],[646,"impl-PartialEq-for-ZcosmicOutputConfigurationHeadV1"],[731,"impl-PartialEq%3CWeak%3CZcosmicOutputConfigurationV1%3E%3E-for-ZcosmicOutputConfigurationV1"],[732,"impl-PartialEq-for-ZcosmicOutputConfigurationV1"],[820,"impl-PartialEq%3CWeak%3CZcosmicOutputHeadV1%3E%3E-for-ZcosmicOutputHeadV1"],[821,"impl-PartialEq-for-ZcosmicOutputHeadV1"],[908,"impl-PartialEq-for-ZcosmicOutputManagerV1"],[909,"impl-PartialEq%3CWeak%3CZcosmicOutputManagerV1%3E%3E-for-ZcosmicOutputManagerV1"],[1015,"impl-PartialEq%3CWeak%3CZcosmicOutputConfigurationHeadV1%3E%3E-for-ZcosmicOutputConfigurationHeadV1"],[1016,"impl-PartialEq-for-ZcosmicOutputConfigurationHeadV1"],[1097,"impl-PartialEq%3CWeak%3CZcosmicOutputConfigurationV1%3E%3E-for-ZcosmicOutputConfigurationV1"],[1098,"impl-PartialEq-for-ZcosmicOutputConfigurationV1"],[1184,"impl-PartialEq-for-ZcosmicOutputHeadV1"],[1185,"impl-PartialEq%3CWeak%3CZcosmicOutputHeadV1%3E%3E-for-ZcosmicOutputHeadV1"],[1271,"impl-PartialEq%3CWeak%3CZcosmicOutputManagerV1%3E%3E-for-ZcosmicOutputManagerV1"],[1272,"impl-PartialEq-for-ZcosmicOutputManagerV1"],[1404,"impl-PartialEq-for-ZcosmicScreencopyCursorSessionV2"],[1405,"impl-PartialEq%3CWeak%3CZcosmicScreencopyCursorSessionV2%3E%3E-for-ZcosmicScreencopyCursorSessionV2"],[1540,"impl-PartialEq-for-ZcosmicScreencopyFrameV2"],[1541,"impl-PartialEq%3CWeak%3CZcosmicScreencopyFrameV2%3E%3E-for-ZcosmicScreencopyFrameV2"],[1639,"impl-Options"],[1640,"impl-Options"],[1656,"impl-Options"],[1657,"impl-Flags-for-Options"],[1658,"impl-Options"],[1679,"impl-Options"],[1680,"impl-Options"],[1681,"impl-Options"],[1682,"impl-Options"],[1687,"impl-Options"],[1688,"impl-Options"],[1689,"impl-Options"],[1690,"impl-Options"],[1693,"impl-PartialEq-for-ZcosmicScreencopyManagerV2"],[1694,"impl-PartialEq%3CWeak%3CZcosmicScreencopyManagerV2%3E%3E-for-ZcosmicScreencopyManagerV2"],[1697,"impl-Debug-for-Options"],[1698,"impl-UpperHex-for-Options"],[1699,"impl-Binary-for-Options"],[1700,"impl-Octal-for-Options"],[1701,"impl-LowerHex-for-Options"],[1710,"impl-Options"],[1711,"impl-Options"],[1712,"impl-Options"],[1713,"impl-Options"],[1714,"impl-Flags-for-Options"],[1715,"impl-Options"],[1716,"impl-Options"],[1719,"impl-Options"],[1720,"impl-Options"],[1726,"impl-Options"],[1727,"impl-Options"],[1729,"impl-Options"],[1730,"impl-Options"],[1731,"impl-Options"],[1732,"impl-Options"],[1754,"impl-Options"],[1755,"impl-Options"],[1756,"impl-Options"],[1757,"impl-Options"],[1758,"impl-Options"],[1759,"impl-Options"],[1760,"impl-Options"],[1761,"impl-Options"],[1768,"impl-Options"],[1769,"impl-Options"],[1772,"impl-Options"],[1773,"impl-Options"],[1776,"impl-Options"],[1777,"impl-Options"],[1781,"impl-Options"],[1782,"impl-Options"],[1800,"impl-Options"],[1801,"impl-Options"],[1855,"impl-PartialEq-for-ZcosmicScreencopySessionV2"],[1856,"impl-PartialEq%3CWeak%3CZcosmicScreencopySessionV2%3E%3E-for-ZcosmicScreencopySessionV2"],[1972,"impl-PartialEq-for-ZcosmicScreencopyCursorSessionV2"],[1973,"impl-PartialEq%3CWeak%3CZcosmicScreencopyCursorSessionV2%3E%3E-for-ZcosmicScreencopyCursorSessionV2"],[2106,"impl-PartialEq-for-ZcosmicScreencopyFrameV2"],[2107,"impl-PartialEq%3CWeak%3CZcosmicScreencopyFrameV2%3E%3E-for-ZcosmicScreencopyFrameV2"],[2208,"impl-Options"],[2209,"impl-Options"],[2224,"impl-Options"],[2225,"impl-Options"],[2226,"impl-Flags-for-Options"],[2247,"impl-Options"],[2248,"impl-Options"],[2249,"impl-Options"],[2250,"impl-Options"],[2252,"impl-Options"],[2253,"impl-Options"],[2254,"impl-Options"],[2255,"impl-Options"],[2258,"impl-PartialEq-for-ZcosmicScreencopyManagerV2"],[2259,"impl-PartialEq%3CWeak%3CZcosmicScreencopyManagerV2%3E%3E-for-ZcosmicScreencopyManagerV2"],[2262,"impl-LowerHex-for-Options"],[2263,"impl-Debug-for-Options"],[2264,"impl-UpperHex-for-Options"],[2265,"impl-Octal-for-Options"],[2266,"impl-Binary-for-Options"],[2275,"impl-Options"],[2276,"impl-Options"],[2277,"impl-Options"],[2278,"impl-Options"],[2279,"impl-Flags-for-Options"],[2280,"impl-Options"],[2281,"impl-Options"],[2284,"impl-Options"],[2285,"impl-Options"],[2291,"impl-Options"],[2292,"impl-Options"],[2294,"impl-Options"],[2295,"impl-Options"],[2296,"impl-Options"],[2297,"impl-Options"],[2319,"impl-Options"],[2320,"impl-Options"],[2321,"impl-Options"],[2322,"impl-Options"],[2323,"impl-Options"],[2324,"impl-Options"],[2325,"impl-Options"],[2326,"impl-Options"],[2333,"impl-Options"],[2334,"impl-Options"],[2336,"impl-Options"],[2337,"impl-Options"],[2340,"impl-Options"],[2341,"impl-Options"],[2345,"impl-Options"],[2346,"impl-Options"],[2364,"impl-Options"],[2365,"impl-Options"],[2422,"impl-PartialEq-for-ZcosmicScreencopySessionV2"],[2423,"impl-PartialEq%3CWeak%3CZcosmicScreencopySessionV2%3E%3E-for-ZcosmicScreencopySessionV2"],[2551,"impl-PartialEq%3CWeak%3CZcosmicToplevelHandleV1%3E%3E-for-ZcosmicToplevelHandleV1"],[2552,"impl-PartialEq-for-ZcosmicToplevelHandleV1"],[2643,"impl-PartialEq%3CWeak%3CZcosmicToplevelInfoV1%3E%3E-for-ZcosmicToplevelInfoV1"],[2644,"impl-PartialEq-for-ZcosmicToplevelInfoV1"],[2764,"impl-PartialEq%3CWeak%3CZcosmicToplevelHandleV1%3E%3E-for-ZcosmicToplevelHandleV1"],[2765,"impl-PartialEq-for-ZcosmicToplevelHandleV1"],[2860,"impl-PartialEq%3CWeak%3CZcosmicToplevelInfoV1%3E%3E-for-ZcosmicToplevelInfoV1"],[2861,"impl-PartialEq-for-ZcosmicToplevelInfoV1"],[2998,"impl-PartialEq%3CWeak%3CZcosmicToplevelManagerV1%3E%3E-for-ZcosmicToplevelManagerV1"],[2999,"impl-PartialEq-for-ZcosmicToplevelManagerV1"],[3182,"impl-PartialEq-for-ZcosmicToplevelManagerV1"],[3183,"impl-PartialEq%3CWeak%3CZcosmicToplevelManagerV1%3E%3E-for-ZcosmicToplevelManagerV1"],[3342,"impl-PartialEq%3CWeak%3CZcosmicWorkspaceGroupHandleV1%3E%3E-for-ZcosmicWorkspaceGroupHandleV1"],[3343,"impl-PartialEq-for-ZcosmicWorkspaceGroupHandleV1"],[3499,"impl-PartialEq%3CWeak%3CZcosmicWorkspaceHandleV1%3E%3E-for-ZcosmicWorkspaceHandleV1"],[3500,"impl-PartialEq-for-ZcosmicWorkspaceHandleV1"],[3627,"impl-PartialEq%3CWeak%3CZcosmicWorkspaceManagerV1%3E%3E-for-ZcosmicWorkspaceManagerV1"],[3628,"impl-PartialEq-for-ZcosmicWorkspaceManagerV1"],[3739,"impl-PartialEq%3CWeak%3CZcosmicWorkspaceGroupHandleV1%3E%3E-for-ZcosmicWorkspaceGroupHandleV1"],[3740,"impl-PartialEq-for-ZcosmicWorkspaceGroupHandleV1"],[3897,"impl-PartialEq%3CWeak%3CZcosmicWorkspaceHandleV1%3E%3E-for-ZcosmicWorkspaceHandleV1"],[3898,"impl-PartialEq-for-ZcosmicWorkspaceHandleV1"],[4024,"impl-PartialEq%3CWeak%3CZcosmicWorkspaceManagerV1%3E%3E-for-ZcosmicWorkspaceManagerV1"],[4025,"impl-PartialEq-for-ZcosmicWorkspaceManagerV1"]]}],\
["dlib",{"doc":"dlib is a small crate providing macros to make easy the …","t":"PPPPPGPPPPPPPPPPPGPPPNNNNQQQNNNNNNNNNNNNNNNNNNOOOOOOOOO","n":["CantOpen","CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlError","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","LibLoadingError","LoadLibraryExW","LoadLibraryExWUnknown","MissingSymbol","borrow","borrow","borrow_mut","borrow_mut","external_library","ffi_dispatch","ffi_dispatch_static","fmt","fmt","fmt","fmt","from","from","into","into","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","desc","desc","desc","source","source","source","source","source","source"],"q":[[0,"dlib"],[46,"dlib::LibLoadingError"],[55,"core::fmt"],[56,"core::fmt"],[57,"core::error"],[58,"core::option"],[59,"alloc::string"],[60,"core::any"]],"d":["The requested library would not be opened","Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","An error generated when failing to load a library","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","Errors.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Some required symbol was missing in the library","","","","","Main macro of this library, used to generate the the FFI …","Macro for generically invoking a FFI function","Macro for generically accessing a FFI static","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error."],"i":[1,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,0,4,4,1,1,4,1,4,0,0,0,1,1,4,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,12,13,14,15,16,17,18,19,20],"f":"`````````````````````{ce{}{}}000```{{bd}f}0{{hd}{{n{jl}}}}0{cc{}}033{b{{Ab{A`}}}}{h{{Ab{A`}}}}{cAd{}}0{c{{n{e}}}{}{}}000{cAf{}}0`````````","c":[],"p":[[6,"DlError",0],[5,"Formatter",55],[8,"Result",55],[6,"LibLoadingError",0],[1,"unit"],[5,"Error",55],[6,"Result",56],[10,"Error",57],[6,"Option",58],[5,"String",59],[5,"TypeId",60],[15,"DlOpen",46],[15,"DlSym",46],[15,"DlClose",46],[15,"LoadLibraryExW",46],[15,"GetModuleHandleExW",46],[15,"GetProcAddress",46],[15,"FreeLibrary",46],[15,"CreateCString",46],[15,"CreateCStringWithTrailing",46]],"b":[[28,"impl-Display-for-DlError"],[29,"impl-Debug-for-DlError"],[30,"impl-Debug-for-Error"],[31,"impl-Display-for-Error"]]}],\
["downcast_rs",{"doc":"Build status Latest version Documentation","t":"KKMMQMMM","n":["Downcast","DowncastSync","as_any","as_any_mut","impl_downcast","into_any","into_any_arc","into_any_rc"],"q":[[0,"downcast_rs"],[8,"core::any"],[9,"alloc::boxed"],[10,"alloc::sync"],[11,"alloc::rc"]],"d":["Supports conversion to <code>Any</code>. Traits to be extended by …","Extends <code>Downcast</code> to support <code>Sync</code> traits that thus support …","Convert <code>&amp;Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This is …","Convert <code>&amp;mut Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This …","Adds downcasting support to traits that extend …","Convert <code>Box&lt;dyn Trait&gt;</code> (where <code>Trait: Downcast</code>) to …","Convert <code>Arc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Arc&lt;Any&gt;</code>. …","Convert <code>Rc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Rc&lt;Any&gt;</code>. …"],"i":[0,0,1,1,0,1,4,1],"f":"``{bd}0`{{{f{b}}}{{f{d}}}}{{{j{h}}}{{j{d}}}}{{{l{b}}}{{l{d}}}}","c":[],"p":[[10,"Downcast",0],[10,"Any",8],[5,"Box",9],[10,"DowncastSync",0],[5,"Arc",10],[5,"Rc",11]],"b":[]}],\
["io_lifetimes",{"doc":"Experimental new types and traits to replace the <code>Raw</code> …","t":"KKKFIIKKKKKKFIIMNNMNNMNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNMNMNNNNMNNNMNMNNNNMNNNCNNNNNNNNNCKKKKKKIIMMMMMMFKFKNNNNNNNNNNNNNNNNNNNNNN","n":["AsFd","AsFilelike","AsSocketlike","BorrowedFd","BorrowedFilelike","BorrowedSocketlike","FromFd","FromFilelike","FromSocketlike","IntoFd","IntoFilelike","IntoSocketlike","OwnedFd","OwnedFilelike","OwnedSocketlike","as_fd","as_fd","as_fd","as_filelike","as_filelike","as_filelike","as_filelike_view","as_filelike_view","as_filelike_view","as_raw_fd","as_raw_fd","as_raw_filelike","as_raw_filelike","as_raw_socketlike","as_raw_socketlike","as_socketlike","as_socketlike","as_socketlike","as_socketlike_view","as_socketlike_view","as_socketlike_view","borrow","borrow","borrow_mut","borrow_mut","borrow_raw","clone","clone_into","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fd","from_fd","from_filelike","from_filelike","from_into_fd","from_into_fd","from_into_filelike","from_into_filelike","from_into_socketlike","from_into_socketlike","from_raw_fd","from_raw_filelike","from_raw_socketlike","from_socketlike","from_socketlike","into","into","into_fd","into_fd","into_filelike","into_filelike","into_raw_fd","into_raw_filelike","into_raw_socketlike","into_socketlike","into_socketlike","is_terminal","is_terminal","raw","to_owned","try_clone","try_clone_to_owned","try_from","try_from","try_into","try_into","type_id","type_id","views","AsRawFilelike","AsRawSocketlike","FromRawFilelike","FromRawSocketlike","IntoRawFilelike","IntoRawSocketlike","RawFilelike","RawSocketlike","as_raw_filelike","as_raw_socketlike","from_raw_filelike","from_raw_socketlike","into_raw_filelike","into_raw_socketlike","FilelikeView","FilelikeViewType","SocketlikeView","SocketlikeViewType","borrow","borrow","borrow_mut","borrow_mut","deref","deref","drop","drop","fmt","fmt","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","view_raw","view_raw"],"q":[[0,"io_lifetimes"],[98,"io_lifetimes::raw"],[112,"io_lifetimes::views"],[138,"core::fmt"],[139,"core::fmt"],[140,"std::process"],[141,"std::fs"],[142,"std::os::unix::net::listener"],[143,"std::process"],[144,"std::net::tcp"],[145,"std::process"],[146,"std::net::udp"],[147,"std::os::unix::net::stream"],[148,"core::convert"],[149,"std::io::error"],[150,"core::any"],[151,"core::fmt"]],"d":["A trait to borrow the file descriptor from an underlying …","A portable trait to borrow a reference from an underlying …","A portable trait to borrow a reference from an underlying …","A borrowed file descriptor.","A reference to a filelike object.","A reference to a socketlike object.","A trait to express the ability to construct an object from …","A portable trait to express the ability to construct an …","A portable trait to express the ability to construct an …","A trait to express the ability to consume an object and …","A portable trait to express the ability to consume an …","A portable trait to express the ability to consume an …","An owned file descriptor.","An owned filelike object.","An owned socketlike object.","Borrows the file descriptor.","","","Borrows the reference.","","","Return a borrowing view of a resource which dereferences …","","","","","","","","","Borrows the reference.","","","Return a borrowing view of a resource which dereferences …","","","","","","","Return a <code>BorrowedFd</code> holding the given raw file descriptor.","","","","","","Takes ownership of a <code>ChildStdin</code>’s file descriptor.","Takes ownership of a <code>File</code>’s underlying file descriptor.","Takes ownership of a <code>UnixListener</code>’s socket file …","Takes ownership of a <code>ChildStdout</code>’s file descriptor.","Takes ownership of a <code>TcpListener</code>’s socket file …","Takes ownership of a <code>TcpStream</code>’s socket file descriptor.","Takes ownership of a <code>UnixDatagram</code>’s socket file …","Takes ownership of a <code>ChildStderr</code>’s file descriptor.","","Takes ownership of a <code>UdpSocket</code>’s file descriptor.","Returns the argument unchanged.","Takes ownership of a <code>UnixStream</code>’s socket file descriptor.","Returns the argument unchanged.","Constructs a new instance of <code>Self</code> from the given file …","","Constructs a new instance of <code>Self</code> from the given filelike …","","Constructs a new instance of <code>Self</code> from the given file …","Constructs a new instance of <code>Self</code> from the given file …","Constructs a new instance of <code>Self</code> from the given filelike …","","Constructs a new instance of <code>Self</code> from the given …","","Constructs a new instance of <code>Self</code> from the given raw file …","","","Constructs a new instance of <code>Self</code> from the given …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this object, returning the underlying file …","","Consumes this object, returning the underlying filelike …","","","","","Consumes this object, returning the underlying socketlike …","","","","Portability abstractions over <code>Raw*</code>.","","Creates a new <code>OwnedFd</code> instance that shares the same …","Creates a new <code>OwnedFd</code> instance that shares the same …","","","","","","","Typed views using temporary objects.","A portable trait to obtain the raw value of an underlying …","This is a portability abstraction over Unix-like <code>AsRawFd</code> …","This is a portability abstraction over Unix-like <code>FromRawFd</code> …","This is a portability abstraction over Unix-like <code>FromRawFd</code> …","This is a portability abstraction over Unix-like <code>IntoRawFd</code> …","This is a portability abstraction over Unix-like <code>IntoRawFd</code> …","A raw filelike object.","A raw socketlike object.","Returns the raw value.","Returns the raw value.","Constructs <code>Self</code> from the raw value.","Constructs <code>Self</code> from the raw value.","Returns the raw value.","Returns the raw value.","A non-owning view of a resource which dereferences to a …","Declare that a type is safe to use in a <code>FilelikeView</code>.","A non-owning view of a resource which dereferences to a …","Declare that a type is safe to use in a <code>SocketlikeView</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Construct a temporary <code>Target</code> from raw and wrap it in a …","Construct a temporary <code>Target</code> from raw and wrap it in a …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,2,4,3,2,4,3,2,3,2,3,2,3,2,9,3,2,9,3,2,3,2,3,2,2,2,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,28,3,30,3,28,28,30,3,33,3,3,3,3,33,3,3,2,36,3,32,3,3,3,3,34,3,3,2,0,2,3,2,3,2,3,2,3,2,0,0,0,0,0,0,0,0,0,40,42,44,45,46,47,0,0,0,0,6,11,6,11,6,11,6,11,6,11,6,11,6,11,6,11,6,11,6,11,6,11],"f":"```````````````{bd}{fd}{dd}{hj}{cd{}}0{h{{l{c}}}n}{c{{l{e}}}{}n}0{fA`}{dA`}{cA`{}}000{AbAd}66{Ab{{Af{c}}}Ah}{c{{Af{e}}}{}Ah}0{ce{}{}}000{A`d}<{{ce}Aj{}{}}{fAj}{{fAl}{{B`{AjAn}}}}{{dAl}{{B`{AjAn}}}}{Bbf}{Bdf}{Bff}{Bhf}{Bjf}{Blf}{Bnf}{C`f}{Cbf}{Cdf}{cc{}}{Cff}1{fCh}{fc{}}{CjCl}1{cCh{{Cn{f}}}}0{cClD`}{ceD`{}}{cDbDd}{ceDd{}}{A`f}{A`c{}}0{DfDb}9{ce{}{}}0{Dhf}{cf{}}{D`Cj}1{fA`}{cA`{}}0{DdDf}4{fDj}{dDj}`8{f{{B`{fDl}}}}{d{{B`{fDl}}}}{c{{B`{e}}}{}{}}000{cDn{}}0`````````{E`Eb}{EdEf}{EbEh}{EfEj}{ElEb}{EnEf}````{ce{}{}}000{{{l{c}}}en{}}{{{Af{c}}}eAh{}}{{{l{c}}}Ajn}{{{Af{c}}}AjAh}{{{l{c}}Al}F`n}{{{Af{c}}Al}F`Ah}{cc{}}077????>>{Eb{{l{c}}}n}{Ef{{Af{c}}}Ah}","c":[9,59,76],"p":[[10,"AsFd",0],[5,"BorrowedFd",0],[5,"OwnedFd",0],[10,"AsFilelike",0],[8,"BorrowedFilelike",0],[5,"FilelikeView",112],[10,"FilelikeViewType",112],[1,"i32"],[10,"AsSocketlike",0],[8,"BorrowedSocketlike",0],[5,"SocketlikeView",112],[10,"SocketlikeViewType",112],[1,"unit"],[5,"Formatter",138],[5,"Error",138],[6,"Result",139],[5,"ChildStdin",140],[5,"File",141],[5,"UnixListener",142],[5,"ChildStdout",140],[5,"TcpListener",143],[5,"TcpStream",143],[5,"UnixDatagram",144],[5,"ChildStderr",140],[5,"PidFd",145],[5,"UdpSocket",146],[5,"UnixStream",147],[10,"FromFd",0],[8,"OwnedFilelike",0],[10,"FromFilelike",0],[10,"Into",148],[10,"IntoFilelike",0],[10,"FromSocketlike",0],[10,"IntoSocketlike",0],[8,"OwnedSocketlike",0],[10,"IntoFd",0],[1,"bool"],[5,"Error",149],[5,"TypeId",150],[10,"AsRawFilelike",98],[8,"RawFilelike",98],[10,"AsRawSocketlike",98],[8,"RawSocketlike",98],[10,"FromRawFilelike",98],[10,"FromRawSocketlike",98],[10,"IntoRawFilelike",98],[10,"IntoRawSocketlike",98],[8,"Result",138]],"b":[[46,"impl-From%3CChildStdin%3E-for-OwnedFd"],[47,"impl-From%3CFile%3E-for-OwnedFd"],[48,"impl-From%3CUnixListener%3E-for-OwnedFd"],[49,"impl-From%3CChildStdout%3E-for-OwnedFd"],[50,"impl-From%3CTcpListener%3E-for-OwnedFd"],[51,"impl-From%3CTcpStream%3E-for-OwnedFd"],[52,"impl-From%3CUnixDatagram%3E-for-OwnedFd"],[53,"impl-From%3CChildStderr%3E-for-OwnedFd"],[54,"impl-From%3CPidFd%3E-for-OwnedFd"],[55,"impl-From%3CUdpSocket%3E-for-OwnedFd"],[57,"impl-From%3CUnixStream%3E-for-OwnedFd"]]}],\
["libloading",{"doc":"Bindings around the platform’s dynamic library loading …","t":"PPPPPPPPGPPPPPPPFPPFNNNNNNCNNNNNNNNNNNNNNNNNNHNNCNNNNNNNNNNNNOOOOOOOOOCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCFSSSSFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","Error","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","Library","LoadLibraryExW","LoadLibraryExWUnknown","Symbol","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","changelog","clone","clone_into","close","deref","fmt","fmt","fmt","fmt","from","from","from","from","from_raw","get","into","into","into","into_raw","library_filename","lift_option","new","os","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","desc","desc","desc","source","source","source","source","source","source","r0_3_0","r0_3_1","r0_3_2","r0_3_3","r0_3_4","r0_4_0","r0_4_1","r0_4_2","r0_4_3","r0_5_0","r0_5_1","r0_5_2","r0_6_0","r0_6_1","r0_6_2","r0_6_3","r0_6_4","r0_6_5","r0_6_6","r0_6_7","r0_7_0","r0_7_1","r0_7_2","r0_7_3","r0_7_4","r0_8_0","r0_8_1","r0_8_2","r0_8_3","unix","Library","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NOW","Symbol","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","close","deref","drop","fmt","fmt","from","from","from","from_raw","get","get_singlethreaded","into","into","into_raw","into_raw","lift_option","new","open","this","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_dlerror"],"q":[[0,"libloading"],[61,"libloading::Error"],[70,"libloading::changelog"],[99,"libloading::os"],[100,"libloading::os::unix"],[139,"core::result"],[140,"core::fmt"],[141,"core::fmt"],[142,"std::ffi::os_str"],[143,"core::option"],[144,"core::error"],[145,"alloc::string"],[146,"core::any"],[147,"std::os::raw"],[148,"std::os::raw"],[149,"core::ops::function"]],"d":["Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","Errors.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","A loaded dynamic library.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Symbol from a library.","","","","","","","The change log.","","","Unload the library.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Wrap the <code>os::platform::Symbol</code> into this safe wrapper.","Get a pointer to a function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the wrapped <code>os::platform::Symbol</code>.","Converts a library name to a filename generally …","Lift Option out of the symbol.","Find and load a dynamic library.","Unsafe but flexible platform-specific bindings to dynamic …","","","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","Release 0.3.0 (2016-07-27)","Release 0.3.1 (2016-10-01)","Release 0.3.2 (2017-02-10)","Release 0.3.3 (2017-03-25)","Release 0.3.4 (2017-03-25)","Release 0.4.0 (2017-05-01)","Release 0.4.1 (2017-08-29)","Release 0.4.2 (2017-09-24)","Release 0.4.3 (2017-12-07)","Release 0.5.0 (2018-01-11)","Release 0.5.1 (2019-06-01)","Release 0.5.2 (2019-07-07)","Release 0.6.0 (2020-04-05)","Release 0.6.1 (2020-04-15)","Release 0.6.2 (2020-05-06)","Release 0.6.3 (2020-08-22)","Release 0.6.4 (2020-10-10)","Release 0.6.5 (2020-10-23)","Release 0.6.6 (2020-12-03)","Release 0.6.7 (2021-01-14)","Release 0.7.0 (2021-02-06)","Release 0.7.1 (2021-10-09)","Release 0.7.2 (2021-11-14)","Release 0.7.3 (2022-01-15)","Release 0.7.4 (2022-11-07)","Release 0.8.0 (2023-04-11)","Release 0.8.1 (2023-09-30)","Release 0.8.2 (2024-03-01)","Release 0.8.3 (2024-03-05)","UNIX implementation of dynamic library loading.","A platform-specific counterpart of the cross-platform …","Make loaded symbols available for resolution globally.","Perform lazy binding.","Load symbols into an isolated namespace.","Perform eager binding.","Symbol from a library.","","","","","","","Unload the library.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert a raw handle returned by <code>dlopen</code>-family of calls to …","Get a pointer to a function or static variable by symbol …","Get a pointer to function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the <code>Library</code> to a raw handle.","Convert the loaded <code>Symbol</code> into a raw pointer.","Lift Option out of the symbol.","Find and eagerly load a shared library (module).","Find and load an executable object file (shared library).","Load the <code>Library</code> representing the current executable.","","","","","","","","Run code and handle errors reported by <code>dlerror</code>."],"i":[4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,0,4,4,0,3,1,4,3,1,4,0,1,1,3,1,3,1,4,4,3,3,1,4,1,3,3,1,4,1,0,1,3,0,4,1,4,3,1,4,3,1,4,3,1,4,25,26,27,28,29,30,31,32,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,8,9,9,9,8,9,8,8,9,8,8,9,8,8,8,8,9,8,9,9,8,8,8,9,8,9,8,9,8,9,0],"f":"````````````````````{ce{}{}}00000`{{{b{c}}}{{b{c}}}{}}{{ce}d{}{}}{f{{j{dh}}}}{{{b{c}}}c{}}{{fl}n}{{{b{c}}l}n{}}{{hl}n}0{cc{}}{A`f}11{{{Ab{c}}e}{{b{c}}}{}{}}{{f{Af{Ad}}}{{j{{b{c}}h}}}{}};;;{{{b{c}}}{{Ab{c}}}{}}{cAh{{Al{Aj}}}}{{{b{{An{c}}}}}{{An{{b{c}}}}}{}}{c{{j{fh}}}{{Al{Aj}}}}`{h{{An{B`}}}}{ce{}{}}{cBb{}}{c{{j{e}}}{}{}}00000{cBd{}}00`````````````````````````````````````````````3333{{{Ab{c}}}{{Ab{c}}}{}}{{ce}d{}{}}{A`{{j{dh}}}}{{{Ab{c}}}c{}}{A`d}{{A`l}n}{{{Ab{c}}l}n{}}{fA`}{cc{}}0{BfA`}{{A`{Af{Ad}}}{{j{{Ab{c}}h}}}{}}0>>{A`Bf}{{{Ab{c}}}Bf{}}{{{Ab{{An{c}}}}}{{An{{Ab{c}}}}}{}}{c{{j{A`h}}}{{Al{Aj}}}}{{{An{c}}Bh}{{j{A`h}}}{{Al{Aj}}}}{{}A`}{ce{}{}}{c{{j{e}}}{}{}}000{cBd{}}0{{e{Bn{Bj}{{Bl{g}}}}}{{j{c{An{g}}}}}{}{{C`{}{{Bl{{An{c}}}}}}}{}}","c":[],"p":[[5,"Symbol",0],[1,"unit"],[5,"Library",0],[6,"Error",0],[6,"Result",139],[5,"Formatter",140],[8,"Result",140],[5,"Library",100],[5,"Symbol",100],[1,"u8"],[1,"slice"],[5,"OsString",141],[5,"OsStr",141],[10,"AsRef",142],[6,"Option",143],[10,"Error",144],[5,"String",145],[5,"TypeId",146],[8,"c_void",147],[8,"c_int",147],[5,"CStr",148],[17,"Output"],[1,"fn"],[10,"FnOnce",149],[15,"DlOpen",61],[15,"DlSym",61],[15,"DlClose",61],[15,"LoadLibraryExW",61],[15,"GetModuleHandleExW",61],[15,"GetProcAddress",61],[15,"FreeLibrary",61],[15,"CreateCString",61],[15,"CreateCStringWithTrailing",61]],"b":[[33,"impl-Display-for-Error"],[34,"impl-Debug-for-Error"]]}],\
["linux_raw_sys",{"doc":"","t":"","n":["cmsg_macros","ctypes","elf","errno","general","if_ether","ioctl","net","netlink","prctl","select_macros","signal_macros","xdp","CMSG_ALIGN","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","borrow","borrow_mut","c_char","c_double","c_float","c_int","c_long","c_longlong","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","fmt","from","into","try_from","try_into","type_id","DT_HASH","DT_NULL","DT_REL","DT_RELA","DT_RELAENT","DT_RELASZ","DT_RELENT","DT_RELSZ","DT_STRTAB","DT_SYMENT","DT_SYMTAB","DT_VERDEF","DT_VERSYM","EI_ABIVERSION","EI_CLASS","EI_DATA","EI_NIDENT","EI_OSABI","EI_VERSION","ELFABIVERSION","ELFCLASS","ELFDATA","ELFMAG","ELFOSABI_LINUX","ELFOSABI_SYSV","ELF_ST_BIND","ELF_ST_TYPE","ELF_ST_VISIBILITY","EM_CURRENT","ET_DYN","EV_CURRENT","Elf_Dyn","Elf_Dyn_Union","Elf_Ehdr","Elf_Phdr","Elf_Rel","Elf_Rela","Elf_Sym","Elf_Verdaux","Elf_Verdef","Elf_auxv_t","PF_R","PF_W","PF_X","PN_XNUM","PT_DYNAMIC","PT_GNU_RELRO","PT_GNU_STACK","PT_INTERP","PT_LOAD","PT_PHDR","PT_TLS","R_RELATIVE","SELFMAG","SHN_ABS","SHN_UNDEF","STB_GLOBAL","STB_WEAK","STN_UNDEF","STT_FUNC","STT_NOTYPE","STV_DEFAULT","VER_DEF_CURRENT","VER_FLG_BASE","_vda_next","a_type","a_val","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","d_ptr","d_tag","d_un","d_val","e_ehsize","e_entry","e_flags","e_ident","e_machine","e_phentsize","e_phnum","e_phoff","e_shentsize","e_shnum","e_shoff","e_shstrndx","e_type","e_version","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","p_align","p_filesz","p_flags","p_memsz","p_offset","p_paddr","p_type","p_vaddr","r_addend","r_info","r_info","r_offset","r_offset","st_info","st_name","st_other","st_shndx","st_size","st_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vd_aux","vd_cnt","vd_flags","vd_hash","vd_ndx","vd_next","vd_version","vda_name","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","AAFS_MAGIC","ADDRB","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","AFS_FS_MAGIC","AFS_SUPER_MAGIC","ANON_INODE_FS_MAGIC","ARCH_SET_FS","ARG_MAX","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_MINSIGSTKSZ","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_RECURSIVE","AT_REMOVEDIR","AT_RSEQ_ALIGN","AT_RSEQ_FEATURE_SIZE","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_SYSINFO_EHDR","AT_UID","AT_VECTOR_SIZE_ARCH","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BDEVFS_MAGIC","BINDERFS_SUPER_MAGIC","BINFMTFS_MAGIC","BLOCK_SIZE","BLOCK_SIZE_BITS","BMAP_IOCTL","BOTHER","BPF_FS_MAGIC","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BTRFS_TEST_MAGIC","BUS_ADRALN","BUS_ADRERR","BUS_MCEERR_AO","BUS_MCEERR_AR","BUS_OBJERR","CAP_AUDIT_CONTROL","CAP_AUDIT_READ","CAP_AUDIT_WRITE","CAP_BLOCK_SUSPEND","CAP_BPF","CAP_CHECKPOINT_RESTORE","CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_DAC_READ_SEARCH","CAP_FOWNER","CAP_FSETID","CAP_IPC_LOCK","CAP_IPC_OWNER","CAP_KILL","CAP_LAST_CAP","CAP_LEASE","CAP_LINUX_IMMUTABLE","CAP_MAC_ADMIN","CAP_MAC_OVERRIDE","CAP_MKNOD","CAP_NET_ADMIN","CAP_NET_BIND_SERVICE","CAP_NET_BROADCAST","CAP_NET_RAW","CAP_PERFMON","CAP_SETFCAP","CAP_SETGID","CAP_SETPCAP","CAP_SETUID","CAP_SYSLOG","CAP_SYS_ADMIN","CAP_SYS_BOOT","CAP_SYS_CHROOT","CAP_SYS_MODULE","CAP_SYS_NICE","CAP_SYS_PACCT","CAP_SYS_PTRACE","CAP_SYS_RAWIO","CAP_SYS_RESOURCE","CAP_SYS_TIME","CAP_SYS_TTY_CONFIG","CAP_WAKE_ALARM","CBAUD","CBAUDEX","CEPH_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CIFS_SUPER_MAGIC","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCKS_MASK","CLOCKS_MONO","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_SGI_CYCLE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_ARGS_SIZE_VER0","CLONE_ARGS_SIZE_VER1","CLONE_ARGS_SIZE_VER2","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_CLEAR_SIGHAND","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_INTO_CGROUP","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWTIME","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CMSPAR","CODA_SUPER_MAGIC","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRAMFS_MAGIC_WEND","CRDLY","CREAD","CRTSCTS","CS5","CS6","CS7","CS8","CSIGNAL","CSIZE","CSTOPB","DAXFS_MAGIC","DEBUGFS_MAGIC","DEVMEM_MAGIC","DEVPTS_SUPER_MAGIC","DMA_BUF_MAGIC","DN_ACCESS","DN_ATTRIB","DN_CREATE","DN_DELETE","DN_MODIFY","DN_MULTISHOT","DN_RENAME","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECRYPTFS_SUPER_MAGIC","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFIVARFS_MAGIC","EFS_SUPER_MAGIC","EMT_TAGOVF","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLNVAL","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EROFS_SUPER_MAGIC_V1","EXFAT_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_NO_HIDE_STALE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FASYNC","FD_CLOEXEC","FF0","FF1","FFDLY","FILE_DEDUPE_RANGE_DIFFERS","FILE_DEDUPE_RANGE_SAME","FLUSHO","FPE_CONDTRAP","FPE_FLTDIV","FPE_FLTINV","FPE_FLTOVF","FPE_FLTRES","FPE_FLTSUB","FPE_FLTUND","FPE_FLTUNK","FPE_INTDIV","FPE_INTOVF","FSCONFIG_CMD_CREATE","FSCONFIG_CMD_RECONFIGURE","FSCONFIG_SET_BINARY","FSCONFIG_SET_FD","FSCONFIG_SET_FLAG","FSCONFIG_SET_PATH","FSCONFIG_SET_PATH_EMPTY","FSCONFIG_SET_STRING","FSCRYPT_KEY_DESCRIPTOR_SIZE","FSCRYPT_KEY_DESC_PREFIX","FSCRYPT_KEY_DESC_PREFIX_SIZE","FSCRYPT_KEY_IDENTIFIER_SIZE","FSCRYPT_KEY_REMOVAL_STATUS_FLAG_FILES_BUSY","FSCRYPT_KEY_REMOVAL_STATUS_FLAG_OTHER_USERS","FSCRYPT_KEY_SPEC_TYPE_DESCRIPTOR","FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER","FSCRYPT_KEY_STATUS_ABSENT","FSCRYPT_KEY_STATUS_FLAG_ADDED_BY_SELF","FSCRYPT_KEY_STATUS_INCOMPLETELY_REMOVED","FSCRYPT_KEY_STATUS_PRESENT","FSCRYPT_MAX_KEY_SIZE","FSCRYPT_MODE_ADIANTUM","FSCRYPT_MODE_AES_128_CBC","FSCRYPT_MODE_AES_128_CTS","FSCRYPT_MODE_AES_256_CTS","FSCRYPT_MODE_AES_256_HCTR2","FSCRYPT_MODE_AES_256_XTS","FSCRYPT_MODE_SM4_CTS","FSCRYPT_MODE_SM4_XTS","FSCRYPT_POLICY_FLAGS_PAD_16","FSCRYPT_POLICY_FLAGS_PAD_32","FSCRYPT_POLICY_FLAGS_PAD_4","FSCRYPT_POLICY_FLAGS_PAD_8","FSCRYPT_POLICY_FLAGS_PAD_MASK","FSCRYPT_POLICY_FLAG_DIRECT_KEY","FSCRYPT_POLICY_FLAG_IV_INO_LBLK_32","FSCRYPT_POLICY_FLAG_IV_INO_LBLK_64","FSCRYPT_POLICY_V1","FSCRYPT_POLICY_V2","FSLABEL_MAX","FSMOUNT_CLOEXEC","FSOPEN_CLOEXEC","FSPICK_CLOEXEC","FSPICK_EMPTY_PATH","FSPICK_NO_AUTOMOUNT","FSPICK_SYMLINK_NOFOLLOW","FS_APPEND_FL","FS_BTREE_FL","FS_CASEFOLD_FL","FS_COMPRBLK_FL","FS_COMPR_FL","FS_DAX_FL","FS_DIRSYNC_FL","FS_DIRTY_FL","FS_EA_INODE_FL","FS_ENCRYPTION_MODE_ADIANTUM","FS_ENCRYPTION_MODE_AES_128_CBC","FS_ENCRYPTION_MODE_AES_128_CTS","FS_ENCRYPTION_MODE_AES_256_CBC","FS_ENCRYPTION_MODE_AES_256_CTS","FS_ENCRYPTION_MODE_AES_256_GCM","FS_ENCRYPTION_MODE_AES_256_XTS","FS_ENCRYPTION_MODE_INVALID","FS_ENCRYPT_FL","FS_EOFBLOCKS_FL","FS_EXTENT_FL","FS_FL_USER_MODIFIABLE","FS_FL_USER_VISIBLE","FS_HUGE_FILE_FL","FS_IMAGIC_FL","FS_IMMUTABLE_FL","FS_INDEX_FL","FS_INLINE_DATA_FL","FS_JOURNAL_DATA_FL","FS_KEY_DESCRIPTOR_SIZE","FS_KEY_DESC_PREFIX","FS_KEY_DESC_PREFIX_SIZE","FS_MAX_KEY_SIZE","FS_NOATIME_FL","FS_NOCOMP_FL","FS_NOCOW_FL","FS_NODUMP_FL","FS_NOTAIL_FL","FS_POLICY_FLAGS_PAD_16","FS_POLICY_FLAGS_PAD_32","FS_POLICY_FLAGS_PAD_4","FS_POLICY_FLAGS_PAD_8","FS_POLICY_FLAGS_PAD_MASK","FS_POLICY_FLAGS_VALID","FS_POLICY_FLAG_DIRECT_KEY","FS_PROJINHERIT_FL","FS_RESERVED_FL","FS_SECRM_FL","FS_SYNC_FL","FS_TOPDIR_FL","FS_UNRM_FL","FS_VERITY_FL","FS_XFLAG_APPEND","FS_XFLAG_COWEXTSIZE","FS_XFLAG_DAX","FS_XFLAG_EXTSIZE","FS_XFLAG_EXTSZINHERIT","FS_XFLAG_FILESTREAM","FS_XFLAG_HASATTR","FS_XFLAG_IMMUTABLE","FS_XFLAG_NOATIME","FS_XFLAG_NODEFRAG","FS_XFLAG_NODUMP","FS_XFLAG_NOSYMLINKS","FS_XFLAG_PREALLOC","FS_XFLAG_PROJINHERIT","FS_XFLAG_REALTIME","FS_XFLAG_RTINHERIT","FS_XFLAG_SYNC","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FUTEX_32","FUTEX_BITSET_MATCH_ANY","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_CMP_REQUEUE_PI_PRIVATE","FUTEX_CMP_REQUEUE_PRIVATE","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_LOCK_PI2","FUTEX_LOCK_PI2_PRIVATE","FUTEX_LOCK_PI_PRIVATE","FUTEX_OP_ADD","FUTEX_OP_ANDN","FUTEX_OP_CMP_EQ","FUTEX_OP_CMP_GE","FUTEX_OP_CMP_GT","FUTEX_OP_CMP_LE","FUTEX_OP_CMP_LT","FUTEX_OP_CMP_NE","FUTEX_OP_OPARG_SHIFT","FUTEX_OP_OR","FUTEX_OP_SET","FUTEX_OP_XOR","FUTEX_OWNER_DIED","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_REQUEUE_PRIVATE","FUTEX_TID_MASK","FUTEX_TRYLOCK_PI","FUTEX_TRYLOCK_PI_PRIVATE","FUTEX_UNLOCK_PI","FUTEX_UNLOCK_PI_PRIVATE","FUTEX_WAIT","FUTEX_WAITERS","FUTEX_WAITV_MAX","FUTEX_WAIT_BITSET","FUTEX_WAIT_BITSET_PRIVATE","FUTEX_WAIT_PRIVATE","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAIT_REQUEUE_PI_PRIVATE","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_BITSET_PRIVATE","FUTEX_WAKE_OP","FUTEX_WAKE_OP_PRIVATE","FUTEX_WAKE_PRIVATE","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_EXLCK","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETOWNER_UIDS","F_GETOWN_EX","F_GETPIPE_SZ","F_GETSIG","F_GET_FILE_RW_HINT","F_GET_RW_HINT","F_GET_SEALS","F_LINUX_SPECIFIC_BASE","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_OWNER_PGRP","F_OWNER_PID","F_OWNER_TID","F_RDLCK","F_SEAL_EXEC","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETOWN_EX","F_SETPIPE_SZ","F_SETSIG","F_SET_FILE_RW_HINT","F_SET_RW_HINT","F_SHLCK","F_UNLCK","F_WRLCK","GRND_INSECURE","GRND_NONBLOCK","GRND_RANDOM","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16KB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","IBSHIFT","ICANON","ICRNL","IEXTEN","IGNBRK","IGNCR","IGNPAR","ILL_BADIADDR","ILL_BADSTK","ILL_COPROC","ILL_ILLADR","ILL_ILLOPC","ILL_ILLOPN","ILL_ILLTRP","ILL_PRVOPC","ILL_PRVREG","IMAXBEL","INLCR","INPCK","INR_OPEN_CUR","INR_OPEN_MAX","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_EXCL_UNLINK","IN_IGNORED","IN_ISDIR","IN_MASK_ADD","IN_MASK_CREATE","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IOCSIZE_MASK","IOCSIZE_SHIFT","IOC_IN","IOC_INOUT","IOC_OUT","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUCLC","IUTF8","IXANY","IXOFF","IXON","JFFS2_SUPER_MAGIC","LINK_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LINUX_VERSION_CODE","LINUX_VERSION_MAJOR","LINUX_VERSION_PATCHLEVEL","LINUX_VERSION_SUBLEVEL","LOCK_EX","LOCK_MAND","LOCK_NB","LOCK_READ","LOCK_RW","LOCK_SH","LOCK_UN","LOCK_WRITE","MADV_COLD","MADV_COLLAPSE","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_DONTNEED_LOCKED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_KEEPONFORK","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_PAGEOUT","MADV_POPULATE_READ","MADV_POPULATE_WRITE","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MADV_WIPEONFORK","MAP_32BIT","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16KB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAP_UNINITIALIZED","MAX_CANON","MAX_CLOCKS","MAX_INPUT","MCL_CURRENT","MCL_FUTURE","MCL_ONFAULT","MEMBARRIER_CMD_FLAG_CPU","MEMBARRIER_CMD_GET_REGISTRATIONS","MEMBARRIER_CMD_GLOBAL","MEMBARRIER_CMD_GLOBAL_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_QUERY","MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_SHARED","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_EXEC","MFD_HUGETLB","MFD_HUGE_16GB","MFD_HUGE_16MB","MFD_HUGE_1GB","MFD_HUGE_1MB","MFD_HUGE_256MB","MFD_HUGE_2GB","MFD_HUGE_2MB","MFD_HUGE_32MB","MFD_HUGE_512KB","MFD_HUGE_512MB","MFD_HUGE_64KB","MFD_HUGE_8MB","MFD_HUGE_MASK","MFD_HUGE_SHIFT","MFD_NOEXEC_SEAL","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_LIMIT","MLOCK_ONFAULT","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MOUNT_ATTR_IDMAP","MOUNT_ATTR_NOATIME","MOUNT_ATTR_NODEV","MOUNT_ATTR_NODIRATIME","MOUNT_ATTR_NOEXEC","MOUNT_ATTR_NOSUID","MOUNT_ATTR_NOSYMFOLLOW","MOUNT_ATTR_RDONLY","MOUNT_ATTR_RELATIME","MOUNT_ATTR_SIZE_VER0","MOUNT_ATTR_STRICTATIME","MOUNT_ATTR__ATIME","MOVE_MOUNT_F_AUTOMOUNTS","MOVE_MOUNT_F_EMPTY_PATH","MOVE_MOUNT_F_SYMLINKS","MOVE_MOUNT_SET_GROUP","MOVE_MOUNT_T_AUTOMOUNTS","MOVE_MOUNT_T_EMPTY_PATH","MOVE_MOUNT_T_SYMLINKS","MOVE_MOUNT__MASK","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSDOS_SUPER_MAGIC","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_BORN","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOREMOTELOCK","MS_NOSEC","MS_NOSUID","MS_NOSYMFOLLOW","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SUBMOUNT","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","MS_VERBOSE","MTD_INODE_FS_MAGIC","NAME_MAX","NCC","NCCS","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","NGROUPS_MAX","NILFS_SUPER_MAGIC","NL0","NL1","NLDLY","NOFLSH","NR_FILE","NR_OPEN","NSFS_MAGIC","NSIG","NSIGBUS","NSIGCHLD","NSIGEMT","NSIGFPE","NSIGILL","NSIGPOLL","NSIGSEGV","NSIGSYS","NSIGTRAP","None","None","None","None","None","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPEN_TREE_CLOEXEC","OPEN_TREE_CLONE","OPOST","OVERCOMMIT_ALWAYS","OVERCOMMIT_GUESS","OVERCOMMIT_NEVER","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_SYNC","O_TMPFILE","O_TMPFILE_MASK","O_TRUNC","O_WRONLY","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PIPEFS_MAGIC","PIPE_BUF","PKEY_ACCESS_MASK","PKEY_DISABLE_ACCESS","PKEY_DISABLE_WRITE","POLLERR","POLLHUP","POLLIN","POLLMSG","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLREMOVE","POLLWRBAND","POLLWRNORM","POLL_ERR","POLL_HUP","POLL_IN","POLL_MSG","POLL_OUT","POLL_PRI","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_SEM","PROT_WRITE","PSTOREFS_MAGIC","P_ALL","P_PGID","P_PID","P_PIDFD","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","RAMFS_MAGIC","RDTGROUP_SUPER_MAGIC","REISER2FS_JR_SUPER_MAGIC_STRING","REISER2FS_SUPER_MAGIC_STRING","REISERFS_SUPER_MAGIC","REISERFS_SUPER_MAGIC_STRING","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RLIM64_INFINITY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","ROBUST_LIST_LIMIT","RTSIG_MAX","RUSAGE_BOTH","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","RWF_WRITE_LIFE_NOT_SET","RWH_WRITE_LIFE_EXTREME","RWH_WRITE_LIFE_LONG","RWH_WRITE_LIFE_MEDIUM","RWH_WRITE_LIFE_NONE","RWH_WRITE_LIFE_NOT_SET","RWH_WRITE_LIFE_SHORT","R_OK","SA_EXPOSE_TAGBITS","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_NOMASK","SA_ONESHOT","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_RESTORER","SA_SIGINFO","SA_UNSUPPORTED","SCHED_BATCH","SCHED_DEADLINE","SCHED_FIFO","SCHED_FLAG_ALL","SCHED_FLAG_DL_OVERRUN","SCHED_FLAG_KEEP_ALL","SCHED_FLAG_KEEP_PARAMS","SCHED_FLAG_KEEP_POLICY","SCHED_FLAG_RECLAIM","SCHED_FLAG_RESET_ON_FORK","SCHED_FLAG_UTIL_CLAMP","SCHED_FLAG_UTIL_CLAMP_MAX","SCHED_FLAG_UTIL_CLAMP_MIN","SCHED_IDLE","SCHED_NORMAL","SCHED_RESET_ON_FORK","SCHED_RR","SECRETMEM_MAGIC","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_MAX","SEEK_SET","SEGV_ACCADI","SEGV_ACCERR","SEGV_ADIDERR","SEGV_ADIPERR","SEGV_BNDERR","SEGV_MAPERR","SEGV_MTEAERR","SEGV_MTESERR","SEGV_PKUERR","SELINUX_MAGIC","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_MAX_SIZE","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_SETMASK","SIG_UNBLOCK","SI_ASYNCIO","SI_ASYNCNL","SI_DETHREAD","SI_KERNEL","SI_MAX_SIZE","SI_MESGQ","SI_QUEUE","SI_SIGIO","SI_TIMER","SI_TKILL","SI_USER","SMACK_MAGIC","SMB2_SUPER_MAGIC","SMB_SUPER_MAGIC","SOCKFS_MAGIC","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SQUASHFS_MAGIC","SS_AUTODISARM","SS_DISABLE","SS_FLAG_BITS","SS_ONSTACK","STACK_END_MAGIC","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_DAX","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_MOUNT_ROOT","STATX_ATTR_NODUMP","STATX_ATTR_VERITY","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_DIOALIGN","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STAT_HAVE_NSEC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYNC_FILE_RANGE_WRITE_AND_WAIT","SYSFS_MAGIC","SYS_SECCOMP","SYS_USER_DISPATCH","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","Some","Some","Some","Some","Some","TAB0","TAB1","TAB2","TAB3","TABDLY","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCSADRAIN","TCSAFLUSH","TCSANOW","TFD_CLOEXEC","TFD_CREATE_FLAGS","TFD_NONBLOCK","TFD_SETTIME_FLAGS","TFD_SHARED_FCNTL_FLAGS","TFD_TIMER_ABSTIME","TFD_TIMER_CANCEL_ON_SET","TIMER_ABSTIME","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_LOOP","TIOCM_OUT1","TIOCM_OUT2","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCPKT_DATA","TIOCPKT_DOSTOP","TIOCPKT_FLUSHREAD","TIOCPKT_FLUSHWRITE","TIOCPKT_IOCTL","TIOCPKT_NOSTOP","TIOCPKT_START","TIOCPKT_STOP","TIOCSER_TEMT","TMPFS_MAGIC","TOSTOP","TRACEFS_MAGIC","TRAP_BRANCH","TRAP_BRKPT","TRAP_HWBKPT","TRAP_PERF","TRAP_PERF_FLAG_ASYNC","TRAP_TRACE","TRAP_UNK","UDF_SUPER_MAGIC","UFFDIO","UFFDIO_COPY_MODE_DONTWAKE","UFFDIO_COPY_MODE_WP","UFFDIO_REGISTER_MODE_MINOR","UFFDIO_REGISTER_MODE_MISSING","UFFDIO_REGISTER_MODE_WP","UFFDIO_ZEROPAGE_MODE_DONTWAKE","UFFD_API","UFFD_EVENT_FORK","UFFD_EVENT_PAGEFAULT","UFFD_EVENT_REMAP","UFFD_EVENT_REMOVE","UFFD_EVENT_UNMAP","UFFD_FEATURE_EVENT_FORK","UFFD_FEATURE_EVENT_REMAP","UFFD_FEATURE_EVENT_REMOVE","UFFD_FEATURE_EVENT_UNMAP","UFFD_FEATURE_EXACT_ADDRESS","UFFD_FEATURE_MINOR_HUGETLBFS","UFFD_FEATURE_MINOR_SHMEM","UFFD_FEATURE_MISSING_HUGETLBFS","UFFD_FEATURE_MISSING_SHMEM","UFFD_FEATURE_PAGEFAULT_FLAG_WP","UFFD_FEATURE_SIGBUS","UFFD_FEATURE_THREAD_ID","UFFD_FEATURE_WP_HUGETLBFS_SHMEM","UFFD_PAGEFAULT_FLAG_MINOR","UFFD_PAGEFAULT_FLAG_WP","UFFD_PAGEFAULT_FLAG_WRITE","UFFD_USER_MODE_ONLY","UIO_FASTIOV","UIO_MAXIOV","UMOUNT_NOFOLLOW","UMOUNT_UNUSED","USBDEVICE_SUPER_MAGIC","USERFAULTFD_IOC","UTIME_NOW","UTIME_OMIT","V9FS_MAGIC","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VFS_CAP_FLAGS_EFFECTIVE","VFS_CAP_FLAGS_MASK","VFS_CAP_REVISION","VFS_CAP_REVISION_1","VFS_CAP_REVISION_2","VFS_CAP_REVISION_3","VFS_CAP_REVISION_MASK","VFS_CAP_REVISION_SHIFT","VFS_CAP_U32","VFS_CAP_U32_1","VFS_CAP_U32_2","VFS_CAP_U32_3","VINTR","VKILL","VLNEXT","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WEXITED","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","W_OK","XATTR_APPARMOR_SUFFIX","XATTR_BTRFS_PREFIX","XATTR_CAPS_SUFFIX","XATTR_CREATE","XATTR_EVM_SUFFIX","XATTR_HURD_PREFIX","XATTR_IMA_SUFFIX","XATTR_LIST_MAX","XATTR_MAC_OSX_PREFIX","XATTR_NAME_APPARMOR","XATTR_NAME_CAPS","XATTR_NAME_EVM","XATTR_NAME_IMA","XATTR_NAME_MAX","XATTR_NAME_POSIX_ACL_ACCESS","XATTR_NAME_POSIX_ACL_DEFAULT","XATTR_NAME_SELINUX","XATTR_NAME_SMACK","XATTR_NAME_SMACKEXEC","XATTR_NAME_SMACKIPIN","XATTR_NAME_SMACKIPOUT","XATTR_NAME_SMACKMMAP","XATTR_NAME_SMACKTRANSMUTE","XATTR_OS2_PREFIX","XATTR_POSIX_ACL_ACCESS","XATTR_POSIX_ACL_DEFAULT","XATTR_REPLACE","XATTR_SECURITY_PREFIX","XATTR_SELINUX_SUFFIX","XATTR_SIZE_MAX","XATTR_SMACK_EXEC","XATTR_SMACK_IPIN","XATTR_SMACK_IPOUT","XATTR_SMACK_MMAP","XATTR_SMACK_SUFFIX","XATTR_SMACK_TRANSMUTE","XATTR_SYSTEM_PREFIX","XATTR_TRUSTED_PREFIX","XATTR_USER_PREFIX","XCASE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","ZONEFS_MAGIC","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_WRITE","_LINUX_CAPABILITY_U32S","_LINUX_CAPABILITY_U32S_1","_LINUX_CAPABILITY_U32S_2","_LINUX_CAPABILITY_U32S_3","_LINUX_CAPABILITY_VERSION","_LINUX_CAPABILITY_VERSION_1","_LINUX_CAPABILITY_VERSION_2","_LINUX_CAPABILITY_VERSION_3","_NSIG","_STK_LIM","_UFFDIO_API","_UFFDIO_CONTINUE","_UFFDIO_COPY","_UFFDIO_REGISTER","_UFFDIO_UNREGISTER","_UFFDIO_WAKE","_UFFDIO_WRITEPROTECT","_UFFDIO_ZEROPAGE","__BindgenBitfieldUnit","__FD_SETSIZE","__FPE_DECDIV","__FPE_DECERR","__FPE_DECOVF","__FPE_INVASC","__FPE_INVDEC","__ILL_BNDMOD","__ILL_BREAK","__IncompleteArrayField","__NR__sysctl","__NR_accept","__NR_accept4","__NR_access","__NR_acct","__NR_add_key","__NR_adjtimex","__NR_afs_syscall","__NR_alarm","__NR_arch_prctl","__NR_bind","__NR_bpf","__NR_brk","__NR_capget","__NR_capset","__NR_chdir","__NR_chmod","__NR_chown","__NR_chroot","__NR_clock_adjtime","__NR_clock_getres","__NR_clock_gettime","__NR_clock_nanosleep","__NR_clock_settime","__NR_clone","__NR_clone3","__NR_close","__NR_close_range","__NR_connect","__NR_copy_file_range","__NR_creat","__NR_create_module","__NR_delete_module","__NR_dup","__NR_dup2","__NR_dup3","__NR_epoll_create","__NR_epoll_create1","__NR_epoll_ctl","__NR_epoll_ctl_old","__NR_epoll_pwait","__NR_epoll_pwait2","__NR_epoll_wait","__NR_epoll_wait_old","__NR_eventfd","__NR_eventfd2","__NR_execve","__NR_execveat","__NR_exit","__NR_exit_group","__NR_faccessat","__NR_faccessat2","__NR_fadvise64","__NR_fallocate","__NR_fanotify_init","__NR_fanotify_mark","__NR_fchdir","__NR_fchmod","__NR_fchmodat","__NR_fchown","__NR_fchownat","__NR_fcntl","__NR_fdatasync","__NR_fgetxattr","__NR_finit_module","__NR_flistxattr","__NR_flock","__NR_fork","__NR_fremovexattr","__NR_fsconfig","__NR_fsetxattr","__NR_fsmount","__NR_fsopen","__NR_fspick","__NR_fstat","__NR_fstatfs","__NR_fsync","__NR_ftruncate","__NR_futex","__NR_futex_waitv","__NR_futimesat","__NR_get_kernel_syms","__NR_get_mempolicy","__NR_get_robust_list","__NR_get_thread_area","__NR_getcpu","__NR_getcwd","__NR_getdents","__NR_getdents64","__NR_getegid","__NR_geteuid","__NR_getgid","__NR_getgroups","__NR_getitimer","__NR_getpeername","__NR_getpgid","__NR_getpgrp","__NR_getpid","__NR_getpmsg","__NR_getppid","__NR_getpriority","__NR_getrandom","__NR_getresgid","__NR_getresuid","__NR_getrlimit","__NR_getrusage","__NR_getsid","__NR_getsockname","__NR_getsockopt","__NR_gettid","__NR_gettimeofday","__NR_getuid","__NR_getxattr","__NR_init_module","__NR_inotify_add_watch","__NR_inotify_init","__NR_inotify_init1","__NR_inotify_rm_watch","__NR_io_cancel","__NR_io_destroy","__NR_io_getevents","__NR_io_pgetevents","__NR_io_setup","__NR_io_submit","__NR_io_uring_enter","__NR_io_uring_register","__NR_io_uring_setup","__NR_ioctl","__NR_ioperm","__NR_iopl","__NR_ioprio_get","__NR_ioprio_set","__NR_kcmp","__NR_kexec_file_load","__NR_kexec_load","__NR_keyctl","__NR_kill","__NR_landlock_add_rule","__NR_landlock_create_ruleset","__NR_landlock_restrict_self","__NR_lchown","__NR_lgetxattr","__NR_link","__NR_linkat","__NR_listen","__NR_listxattr","__NR_llistxattr","__NR_lookup_dcookie","__NR_lremovexattr","__NR_lseek","__NR_lsetxattr","__NR_lstat","__NR_madvise","__NR_mbind","__NR_membarrier","__NR_memfd_create","__NR_memfd_secret","__NR_migrate_pages","__NR_mincore","__NR_mkdir","__NR_mkdirat","__NR_mknod","__NR_mknodat","__NR_mlock","__NR_mlock2","__NR_mlockall","__NR_mmap","__NR_modify_ldt","__NR_mount","__NR_mount_setattr","__NR_move_mount","__NR_move_pages","__NR_mprotect","__NR_mq_getsetattr","__NR_mq_notify","__NR_mq_open","__NR_mq_timedreceive","__NR_mq_timedsend","__NR_mq_unlink","__NR_mremap","__NR_msgctl","__NR_msgget","__NR_msgrcv","__NR_msgsnd","__NR_msync","__NR_munlock","__NR_munlockall","__NR_munmap","__NR_name_to_handle_at","__NR_nanosleep","__NR_newfstatat","__NR_nfsservctl","__NR_open","__NR_open_by_handle_at","__NR_open_tree","__NR_openat","__NR_openat2","__NR_pause","__NR_perf_event_open","__NR_personality","__NR_pidfd_getfd","__NR_pidfd_open","__NR_pidfd_send_signal","__NR_pipe","__NR_pipe2","__NR_pivot_root","__NR_pkey_alloc","__NR_pkey_free","__NR_pkey_mprotect","__NR_poll","__NR_ppoll","__NR_prctl","__NR_pread64","__NR_preadv","__NR_preadv2","__NR_prlimit64","__NR_process_madvise","__NR_process_mrelease","__NR_process_vm_readv","__NR_process_vm_writev","__NR_pselect6","__NR_ptrace","__NR_putpmsg","__NR_pwrite64","__NR_pwritev","__NR_pwritev2","__NR_query_module","__NR_quotactl","__NR_quotactl_fd","__NR_read","__NR_readahead","__NR_readlink","__NR_readlinkat","__NR_readv","__NR_reboot","__NR_recvfrom","__NR_recvmmsg","__NR_recvmsg","__NR_remap_file_pages","__NR_removexattr","__NR_rename","__NR_renameat","__NR_renameat2","__NR_request_key","__NR_restart_syscall","__NR_rmdir","__NR_rseq","__NR_rt_sigaction","__NR_rt_sigpending","__NR_rt_sigprocmask","__NR_rt_sigqueueinfo","__NR_rt_sigreturn","__NR_rt_sigsuspend","__NR_rt_sigtimedwait","__NR_rt_tgsigqueueinfo","__NR_sched_get_priority_max","__NR_sched_get_priority_min","__NR_sched_getaffinity","__NR_sched_getattr","__NR_sched_getparam","__NR_sched_getscheduler","__NR_sched_rr_get_interval","__NR_sched_setaffinity","__NR_sched_setattr","__NR_sched_setparam","__NR_sched_setscheduler","__NR_sched_yield","__NR_seccomp","__NR_security","__NR_select","__NR_semctl","__NR_semget","__NR_semop","__NR_semtimedop","__NR_sendfile","__NR_sendmmsg","__NR_sendmsg","__NR_sendto","__NR_set_mempolicy","__NR_set_mempolicy_home_node","__NR_set_robust_list","__NR_set_thread_area","__NR_set_tid_address","__NR_setdomainname","__NR_setfsgid","__NR_setfsuid","__NR_setgid","__NR_setgroups","__NR_sethostname","__NR_setitimer","__NR_setns","__NR_setpgid","__NR_setpriority","__NR_setregid","__NR_setresgid","__NR_setresuid","__NR_setreuid","__NR_setrlimit","__NR_setsid","__NR_setsockopt","__NR_settimeofday","__NR_setuid","__NR_setxattr","__NR_shmat","__NR_shmctl","__NR_shmdt","__NR_shmget","__NR_shutdown","__NR_sigaltstack","__NR_signalfd","__NR_signalfd4","__NR_socket","__NR_socketpair","__NR_splice","__NR_stat","__NR_statfs","__NR_statx","__NR_swapoff","__NR_swapon","__NR_symlink","__NR_symlinkat","__NR_sync","__NR_sync_file_range","__NR_syncfs","__NR_sysfs","__NR_sysinfo","__NR_syslog","__NR_tee","__NR_tgkill","__NR_time","__NR_timer_create","__NR_timer_delete","__NR_timer_getoverrun","__NR_timer_gettime","__NR_timer_settime","__NR_timerfd_create","__NR_timerfd_gettime","__NR_timerfd_settime","__NR_times","__NR_tkill","__NR_truncate","__NR_tuxcall","__NR_umask","__NR_umount2","__NR_uname","__NR_unlink","__NR_unlinkat","__NR_unshare","__NR_uselib","__NR_userfaultfd","__NR_ustat","__NR_utime","__NR_utimensat","__NR_utimes","__NR_vfork","__NR_vhangup","__NR_vmsplice","__NR_vserver","__NR_wait4","__NR_waitid","__NR_write","__NR_writev","__O_SYNC","__O_TMPFILE","__WALL","__WCLONE","__WNOTHREAD","__X32_SYSCALL_BIT","__be16","__be32","__be64","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_padding_0","__fsword_t","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_itimerspec","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_itimerval","__kernel_old_time_t","__kernel_old_timespec","__kernel_old_timeval","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_rwf_t","__kernel_sighandler_t","__kernel_size_t","__kernel_sock_timeval","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time64_t","__kernel_time_t","__kernel_timer_t","__kernel_timespec","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__old_kernel_stat","__out_reserved","__pad0","__poll_t","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__restorefn_t","__s16","__s32","__s64","__s8","__sifields","__sifields__bindgen_ty_1","__sifields__bindgen_ty_2","__sifields__bindgen_ty_3","__sifields__bindgen_ty_4","__sifields__bindgen_ty_5","__sifields__bindgen_ty_5__bindgen_ty_1","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3","__sifields__bindgen_ty_6","__sifields__bindgen_ty_7","__sighandler_t","__signalfn_t","__sigrestore_t","__spare0","__spare3","__sum16","__u16","__u32","__u64","__u8","__unused","__user_cap_data_struct","__user_cap_header_struct","__wsum","_addr","_addr_bnd","_addr_lsb","_addr_pkey","_arch","_attribute","_band","_bitfield_1","_bitfield_align_1","_call_addr","_data","_dummy_bnd","_dummy_pkey","_fd","_flags","_function","_kill","_lower","_overrun","_pad","_perf","_pid","_pid","_pid","_pkey","_rt","_si_pad","_sifields","_sigchld","_sigev_thread","_sigev_un","_sigev_un","_sigfault","_sigpoll","_sigsys","_sigval","_sigval","_status","_stime","_sys_private","_syscall","_tid","_tid","_timer","_trapno","_type","_uid","_uid","_uid","_upper","_utime","address","api","arg","as_mut_ptr","as_mut_slice","as_ptr","as_slice","attr_clr","attr_set","base_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","buf_size","bytes_deduped","c_cc","c_cc","c_cc","c_cc","c_cflag","c_cflag","c_cflag","c_cflag","c_iflag","c_iflag","c_iflag","c_iflag","c_ispeed","c_ispeed","c_lflag","c_lflag","c_lflag","c_lflag","c_line","c_line","c_line","c_line","c_oflag","c_oflag","c_oflag","c_oflag","c_ospeed","c_ospeed","cap_user_data_t","cap_user_header_t","cc_t","cgroup","child_tid","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_args","cmp","compat_statfs64","contents","contents_encryption_mode","contents_encryption_mode","cookie","copy","d_ino","d_name","d_off","d_reclen","d_type","data","data","data","default","default","descriptor","dest_count","dest_fd","dest_offset","dest_offset","dst","dummy","effective","end","entropy_count","entry_number","epoll_event","eq","eq","eq","eq","eq","event","events","events","exit_signal","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_flags","f_flags","f_flags","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namelen","f_owner_ex","f_spare","f_spare","f_spare","f_type","f_type","f_type","fd","fds_bits","feat","features","file_clone_range","file_dedupe_range","file_dedupe_range_info","filenames_encryption_mode","filenames_encryption_mode","files_stat_struct","flags","flags","flags","flags","flags","flags","flock","flock64","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsconfig_command","fscrypt_add_key_arg","fscrypt_get_key_status_arg","fscrypt_get_policy_ex_arg","fscrypt_get_policy_ex_arg__bindgen_ty_1","fscrypt_key","fscrypt_key_specifier","fscrypt_key_specifier__bindgen_ty_1","fscrypt_policy_v1","fscrypt_policy_v2","fscrypt_provisioning_key_payload","fscrypt_remove_key_arg","fstrim_range","fsx_cowextsize","fsx_extsize","fsx_nextents","fsx_pad","fsx_projid","fsx_xflags","fsxattr","futex_offset","futex_waitv","get","get_bit","hash","hash","hash","hash","identifier","info","inheritable","inheritable","inheritable","inodes_stat_t","inotify_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ioctls","ioctls","iov_base","iov_len","iovec","it_interval","it_interval","it_interval","it_interval","it_value","it_value","it_value","it_value","itimerspec","itimerval","kernel_sigaction","kernel_sigset_t","key_id","key_spec","key_spec","key_spec","ktermios","l_len","l_len","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","len","len","len","len","len","limit","limit_in_pages","linux_dirent64","list","list_op_pending","lm","magic_etc","magic_etc","mapped","mask","master_key_descriptor","master_key_identifier","max_files","membarrier_cmd","membarrier_cmd_flag","minlen","mode","mode","mode","mode","mode","mode","mode","mount_attr","name","new","new","new_bitfield_1","next","nr_files","nr_free_files","nr_inodes","nr_unused","open_how","pagefault","parent_tid","partial_cmp","permitted","permitted","permitted","pid","pid","pidfd","policy","policy_size","pollfd","propagation","ptid","rand_pool_info","range","range","range","range","raw","raw","raw","raw_size","read_exec_only","remap","removal_status_flags","remove","reserved","reserved","reserved1","reserved1","reserved1","reserved2","reserved2","reserved2","reserved3","reserved3","resolve","revents","rlim_cur","rlim_cur","rlim_max","rlim_max","rlimit","rlimit64","robust_list","robust_list_head","rootid","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","sa_flags","sa_flags","sa_handler","sa_handler_kernel","sa_mask","sa_mask","sa_restorer","sa_restorer","seg_32bit","seg_not_present","set","set_bit","set_contents","set_limit_in_pages","set_lm","set_read_exec_only","set_seg_32bit","set_seg_not_present","set_tid","set_tid_size","set_useable","si_code","si_errno","si_signo","sig","sigaction","sigaltstack","sigev_notify","sigev_notify","sigev_signo","sigev_signo","sigev_value","sigev_value","sigevent","sigevent__bindgen_ty_1","sigevent__bindgen_ty_1__bindgen_ty_1","sigevent_t","siginfo","siginfo__bindgen_ty_1","siginfo__bindgen_ty_1__bindgen_ty_1","siginfo_t","sigset_t","sigval","sigval_t","sival_int","sival_int","sival_ptr","sival_ptr","size","speed_t","src","src_fd","src_length","src_length","src_offset","src_offset","ss_flags","ss_flags","ss_size","ss_size","ss_sp","ss_sp","st_atime","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_nlink","st_nlink","st_rdev","st_rdev","st_size","st_size","st_uid","st_uid","stack","stack_size","stack_t","start","start","start","stat","statfs","statfs64","status","status","status_flags","statx","statx_timestamp","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","tcflag_t","termio","termios","termios2","timespec","timeval","timezone","tls","to","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_nsec","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tv_usec","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","tz_dsttime","tz_minuteswest","u","uaddr","ufd","uffd_msg","uffd_msg__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_2","uffd_msg__bindgen_ty_1__bindgen_ty_3","uffd_msg__bindgen_ty_1__bindgen_ty_4","uffd_msg__bindgen_ty_1__bindgen_ty_5","uffdio_api","uffdio_continue","uffdio_copy","uffdio_range","uffdio_register","uffdio_writeprotect","uffdio_zeropage","useable","user_count","user_desc","userns_fd","v1","v2","val","val","version","version","version","version","vfs_cap_data","vfs_cap_data__bindgen_ty_1","vfs_ns_cap_data","vfs_ns_cap_data__bindgen_ty_1","wd","winsize","ws_col","ws_row","ws_xpixel","ws_ypixel","zeropage","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_MAX_MTU","ETH_MIN_MTU","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CAN","ETH_P_CANFD","ETH_P_CANXL","ETH_P_CFM","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_DSA_8021Q","ETH_P_DSA_A5PSW","ETH_P_ECONET","ETH_P_EDSA","ETH_P_ERSPAN","ETH_P_ERSPAN2","ETH_P_ETHERCAT","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_HSR","ETH_P_IBOE","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IFE","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LLDP","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MACSEC","ETH_P_MAP","ETH_P_MCTP","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MRP","ETH_P_MVRP","ETH_P_NCSI","ETH_P_NSH","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PREAUTH","ETH_P_PROFINET","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_REALTEK","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_TSN","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_P_XDSA","ETH_TLEN","ETH_ZLEN","__be16","__be32","__be64","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_time_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_size_t","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time64_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__poll_t","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__wsum","borrow","borrow_mut","clone","ethhdr","fmt","from","h_dest","h_proto","h_source","into","try_from","try_into","type_id","ACRN_IOCTL_ASSIGN_PCIDEV","ACRN_IOCTL_ATTACH_IOREQ_CLIENT","ACRN_IOCTL_CLEAR_VM_IOREQ","ACRN_IOCTL_CREATE_IOREQ_CLIENT","ACRN_IOCTL_CREATE_VM","ACRN_IOCTL_DEASSIGN_PCIDEV","ACRN_IOCTL_DESTROY_IOREQ_CLIENT","ACRN_IOCTL_DESTROY_VM","ACRN_IOCTL_INJECT_MSI","ACRN_IOCTL_IOEVENTFD","ACRN_IOCTL_IRQFD","ACRN_IOCTL_NOTIFY_REQUEST_FINISH","ACRN_IOCTL_PAUSE_VM","ACRN_IOCTL_PM_GET_CPU_STATE","ACRN_IOCTL_RESET_PTDEV_INTR","ACRN_IOCTL_RESET_VM","ACRN_IOCTL_SET_IRQLINE","ACRN_IOCTL_SET_MEMSEG","ACRN_IOCTL_SET_PTDEV_INTR","ACRN_IOCTL_SET_VCPU_REGS","ACRN_IOCTL_START_VM","ACRN_IOCTL_UNSET_MEMSEG","ACRN_IOCTL_VM_INTR_MONITOR","AGPIOC_ALLOCATE","APM_IOC_STANDBY","APM_IOC_SUSPEND","ASPEED_LPC_CTRL_IOCTL_GET_SIZE","ASPEED_LPC_CTRL_IOCTL_MAP","ASPEED_P2A_CTRL_IOCTL_GET_MEMORY_CONFIG","ASPEED_P2A_CTRL_IOCTL_SET_WINDOW","ATMARPD_CTRL","ATMARP_ENCAP","ATMARP_MKIP","ATMARP_SETENTRY","ATMLEC_CTRL","ATMLEC_DATA","ATMLEC_MCAST","ATMMPC_CTRL","ATMMPC_DATA","ATMSIGD_CTRL","ATMTCP_CREATE","ATMTCP_REMOVE","ATM_ADDADDR","ATM_ADDLECSADDR","ATM_ADDPARTY","ATM_DELADDR","ATM_DELLECSADDR","ATM_DROPPARTY","ATM_GETADDR","ATM_GETCIRANGE","ATM_GETESI","ATM_GETLECSADDR","ATM_GETLINKRATE","ATM_GETLOOP","ATM_GETNAMES","ATM_GETSTAT","ATM_GETSTATZ","ATM_GETTYPE","ATM_NEWBACKENDIF","ATM_QUERYLOOP","ATM_RSTADDR","ATM_SETBACKEND","ATM_SETCIRANGE","ATM_SETESI","ATM_SETESIF","ATM_SETLOOP","ATM_SETSC","AUTOFS_DEV_IOCTL_ASKUMOUNT","AUTOFS_DEV_IOCTL_CATATONIC","AUTOFS_DEV_IOCTL_CLOSEMOUNT","AUTOFS_DEV_IOCTL_EXPIRE","AUTOFS_DEV_IOCTL_FAIL","AUTOFS_DEV_IOCTL_ISMOUNTPOINT","AUTOFS_DEV_IOCTL_OPENMOUNT","AUTOFS_DEV_IOCTL_PROTOSUBVER","AUTOFS_DEV_IOCTL_PROTOVER","AUTOFS_DEV_IOCTL_READY","AUTOFS_DEV_IOCTL_REQUESTER","AUTOFS_DEV_IOCTL_SETPIPEFD","AUTOFS_DEV_IOCTL_TIMEOUT","AUTOFS_DEV_IOCTL_VERSION","AUTOFS_IOC_ASKUMOUNT","AUTOFS_IOC_CATATONIC","AUTOFS_IOC_EXPIRE","AUTOFS_IOC_EXPIRE_MULTI","AUTOFS_IOC_FAIL","AUTOFS_IOC_PROTOSUBVER","AUTOFS_IOC_PROTOVER","AUTOFS_IOC_READY","AUTOFS_IOC_SETTIMEOUT","BLKALIGNOFF","BLKBSZGET","BLKBSZSET","BLKCLOSEZONE","BLKDISCARD","BLKDISCARDZEROES","BLKFINISHZONE","BLKFLSBUF","BLKFRAGET","BLKFRASET","BLKGETDISKSEQ","BLKGETNRZONES","BLKGETSIZE","BLKGETSIZE64","BLKGETZONESZ","BLKIOMIN","BLKIOOPT","BLKOPENZONE","BLKPBSZGET","BLKPG","BLKRAGET","BLKRASET","BLKREPORTZONE","BLKRESETZONE","BLKROGET","BLKROSET","BLKROTATIONAL","BLKRRPART","BLKSECDISCARD","BLKSECTGET","BLKSECTSET","BLKSSZGET","BLKTRACESETUP","BLKTRACESTART","BLKTRACESTOP","BLKTRACETEARDOWN","BLKZEROOUT","BR2684_SETFILT","BTRFS_IOC_ADD_DEV","BTRFS_IOC_BALANCE","BTRFS_IOC_BALANCE_CTL","BTRFS_IOC_BALANCE_PROGRESS","BTRFS_IOC_BALANCE_V2","BTRFS_IOC_CLONE","BTRFS_IOC_CLONE_RANGE","BTRFS_IOC_DEFAULT_SUBVOL","BTRFS_IOC_DEFRAG","BTRFS_IOC_DEFRAG_RANGE","BTRFS_IOC_DEVICES_READY","BTRFS_IOC_DEV_INFO","BTRFS_IOC_DEV_REPLACE","BTRFS_IOC_FILE_EXTENT_SAME","BTRFS_IOC_FORGET_DEV","BTRFS_IOC_FS_INFO","BTRFS_IOC_GET_DEV_STATS","BTRFS_IOC_GET_FEATURES","BTRFS_IOC_GET_SUBVOL_INFO","BTRFS_IOC_GET_SUBVOL_ROOTREF","BTRFS_IOC_GET_SUPPORTED_FEATURES","BTRFS_IOC_INO_LOOKUP","BTRFS_IOC_INO_LOOKUP_USER","BTRFS_IOC_INO_PATHS","BTRFS_IOC_LOGICAL_INO","BTRFS_IOC_LOGICAL_INO_V2","BTRFS_IOC_QGROUP_ASSIGN","BTRFS_IOC_QGROUP_CREATE","BTRFS_IOC_QGROUP_LIMIT","BTRFS_IOC_QUOTA_CTL","BTRFS_IOC_QUOTA_RESCAN","BTRFS_IOC_QUOTA_RESCAN_STATUS","BTRFS_IOC_QUOTA_RESCAN_WAIT","BTRFS_IOC_RESIZE","BTRFS_IOC_RM_DEV","BTRFS_IOC_RM_DEV_V2","BTRFS_IOC_SCAN_DEV","BTRFS_IOC_SCRUB","BTRFS_IOC_SCRUB_CANCEL","BTRFS_IOC_SCRUB_PROGRESS","BTRFS_IOC_SEND","BTRFS_IOC_SET_FEATURES","BTRFS_IOC_SET_RECEIVED_SUBVOL","BTRFS_IOC_SNAP_CREATE","BTRFS_IOC_SNAP_CREATE_V2","BTRFS_IOC_SNAP_DESTROY","BTRFS_IOC_SNAP_DESTROY_V2","BTRFS_IOC_SPACE_INFO","BTRFS_IOC_START_SYNC","BTRFS_IOC_SUBVOL_CREATE","BTRFS_IOC_SUBVOL_CREATE_V2","BTRFS_IOC_SUBVOL_GETFLAGS","BTRFS_IOC_SUBVOL_SETFLAGS","BTRFS_IOC_SYNC","BTRFS_IOC_TRANS_END","BTRFS_IOC_TRANS_START","BTRFS_IOC_TREE_SEARCH","BTRFS_IOC_TREE_SEARCH_V2","BTRFS_IOC_WAIT_SYNC","BT_BMC_IOCTL_SMS_ATN","CAPI_CLR_FLAGS","CAPI_GET_ERRCODE","CAPI_GET_FLAGS","CAPI_GET_MANUFACTURER","CAPI_GET_PROFILE","CAPI_GET_SERIAL","CAPI_GET_VERSION","CAPI_INSTALLED","CAPI_MANUFACTURER_CMD","CAPI_NCCI_GETUNIT","CAPI_NCCI_OPENCOUNT","CAPI_REGISTER","CAPI_SET_FLAGS","CCISS_BIG_PASSTHRU","CCISS_DEREGDISK","CCISS_GETBUSTYPES","CCISS_GETDRIVVER","CCISS_GETFIRMVER","CCISS_GETHEARTBEAT","CCISS_GETINTINFO","CCISS_GETLUNINFO","CCISS_GETNODENAME","CCISS_GETPCIINFO","CCISS_PASSTHRU","CCISS_REGNEWD","CCISS_REGNEWDISK","CCISS_RESCANDISK","CCISS_REVALIDVOLS","CCISS_SETINTINFO","CCISS_SETNODENAME","CEC_ADAP_G_CAPS","CEC_ADAP_G_CONNECTOR_INFO","CEC_ADAP_G_LOG_ADDRS","CEC_ADAP_G_PHYS_ADDR","CEC_ADAP_S_LOG_ADDRS","CEC_ADAP_S_PHYS_ADDR","CEC_DQEVENT","CEC_G_MODE","CEC_RECEIVE","CEC_S_MODE","CEC_TRANSMIT","CHIOEXCHANGE","CHIOGELEM","CHIOGPARAMS","CHIOGPICKER","CHIOGSTATUS","CHIOGVPARAMS","CHIOINITELEM","CHIOMOVE","CHIOPOSITION","CHIOSPICKER","CHIOSVOLTAG","CIOC_KERNEL_VERSION","CXL_MEM_QUERY_COMMANDS","CXL_MEM_SEND_COMMAND","DELL_WMI_SMBIOS_CMD","DFL_FPGA_CHECK_EXTENSION","DFL_FPGA_FME_ERR_GET_IRQ_NUM","DFL_FPGA_FME_ERR_SET_IRQ","DFL_FPGA_FME_PORT_ASSIGN","DFL_FPGA_FME_PORT_PR","DFL_FPGA_FME_PORT_RELEASE","DFL_FPGA_GET_API_VERSION","DFL_FPGA_PORT_DMA_MAP","DFL_FPGA_PORT_DMA_UNMAP","DFL_FPGA_PORT_ERR_GET_IRQ_NUM","DFL_FPGA_PORT_ERR_SET_IRQ","DFL_FPGA_PORT_GET_INFO","DFL_FPGA_PORT_GET_REGION_INFO","DFL_FPGA_PORT_RESET","DFL_FPGA_PORT_UINT_GET_IRQ_NUM","DFL_FPGA_PORT_UINT_SET_IRQ","DMA_BUF_IOCTL_SYNC","DMA_BUF_SET_NAME","DMA_BUF_SET_NAME_A","DMA_BUF_SET_NAME_B","DMA_HEAP_IOCTL_ALLOC","DM_DEV_ARM_POLL","DM_DEV_CREATE","DM_DEV_REMOVE","DM_DEV_RENAME","DM_DEV_SET_GEOMETRY","DM_DEV_STATUS","DM_DEV_SUSPEND","DM_DEV_WAIT","DM_GET_TARGET_VERSION","DM_LIST_DEVICES","DM_LIST_VERSIONS","DM_REMOVE_ALL","DM_TABLE_CLEAR","DM_TABLE_DEPS","DM_TABLE_LOAD","DM_TABLE_STATUS","DM_TARGET_MSG","DM_VERSION","ENI_MEMDUMP","ENI_SETMULT","EVIOCGEFFECTS","EVIOCGID","EVIOCGKEYCODE","EVIOCGKEYCODE_V2","EVIOCGMASK","EVIOCGRAB","EVIOCGREP","EVIOCGVERSION","EVIOCREVOKE","EVIOCRMFF","EVIOCSCLOCKID","EVIOCSFF","EVIOCSKEYCODE","EVIOCSKEYCODE_V2","EVIOCSMASK","EVIOCSREP","EXT4_IOC32_GETRSVSZ","EXT4_IOC32_GETVERSION","EXT4_IOC32_GETVERSION_OLD","EXT4_IOC32_GROUP_EXTEND","EXT4_IOC32_SETRSVSZ","EXT4_IOC32_SETVERSION","EXT4_IOC32_SETVERSION_OLD","EXT4_IOC_ALLOC_DA_BLKS","EXT4_IOC_CHECKPOINT","EXT4_IOC_CLEAR_ES_CACHE","EXT4_IOC_GETRSVSZ","EXT4_IOC_GETSTATE","EXT4_IOC_GETVERSION","EXT4_IOC_GETVERSION_OLD","EXT4_IOC_GET_ES_CACHE","EXT4_IOC_GROUP_EXTEND","EXT4_IOC_MIGRATE","EXT4_IOC_PRECACHE_EXTENTS","EXT4_IOC_RESIZE_FS","EXT4_IOC_SETRSVSZ","EXT4_IOC_SETVERSION","EXT4_IOC_SETVERSION_OLD","EXT4_IOC_SHUTDOWN","EXT4_IOC_SWAP_BOOT","F2FS_IOC_COMMIT_ATOMIC_WRITE","F2FS_IOC_COMPRESS_FILE","F2FS_IOC_DECOMPRESS_FILE","F2FS_IOC_DEFRAGMENT","F2FS_IOC_FLUSH_DEVICE","F2FS_IOC_GARBAGE_COLLECT","F2FS_IOC_GARBAGE_COLLECT_RANGE","F2FS_IOC_GET_COMPRESS_BLOCKS","F2FS_IOC_GET_COMPRESS_OPTION","F2FS_IOC_GET_FEATURES","F2FS_IOC_GET_PIN_FILE","F2FS_IOC_MOVE_RANGE","F2FS_IOC_PRECACHE_EXTENTS","F2FS_IOC_RELEASE_COMPRESS_BLOCKS","F2FS_IOC_RELEASE_VOLATILE_WRITE","F2FS_IOC_RESERVE_COMPRESS_BLOCKS","F2FS_IOC_RESIZE_FS","F2FS_IOC_SEC_TRIM_FILE","F2FS_IOC_SET_COMPRESS_OPTION","F2FS_IOC_SET_PIN_FILE","F2FS_IOC_SHUTDOWN","F2FS_IOC_START_ATOMIC_WRITE","F2FS_IOC_START_VOLATILE_WRITE","F2FS_IOC_WRITE_CHECKPOINT","FAT_IOCTL_GET_ATTRIBUTES","FAT_IOCTL_GET_VOLUME_ID","FAT_IOCTL_SET_ATTRIBUTES","FBIOGET_VBLANK","FBIO_CURSOR","FBIO_GETCONTROL2","FBIO_RADEON_GET_MIRROR","FBIO_RADEON_SET_MIRROR","FBIO_WAITEVENT","FBIO_WAITFORVSYNC","FDCLRPRM","FDDEFPRM","FDEJECT","FDFLUSH","FDFMTBEG","FDFMTEND","FDFMTTRK","FDGETDRVPRM","FDGETDRVSTAT","FDGETDRVTYP","FDGETFDCSTAT","FDGETMAXERRS","FDGETPRM","FDMSGOFF","FDMSGON","FDPOLLDRVSTAT","FDRAWCMD","FDRESET","FDSETDRVPRM","FDSETEMSGTRESH","FDSETMAXERRS","FDSETPRM","FDTWADDLE","FDWERRORCLR","FDWERRORGET","FIBMAP","FICLONE","FICLONERANGE","FIDEDUPERANGE","FIEMAP_EXTENT_DATA_ENCRYPTED","FIEMAP_EXTENT_DATA_INLINE","FIEMAP_EXTENT_DATA_TAIL","FIEMAP_EXTENT_DELALLOC","FIEMAP_EXTENT_ENCODED","FIEMAP_EXTENT_LAST","FIEMAP_EXTENT_MERGED","FIEMAP_EXTENT_NOT_ALIGNED","FIEMAP_EXTENT_SHARED","FIEMAP_EXTENT_UNKNOWN","FIEMAP_EXTENT_UNWRITTEN","FIEMAP_FLAGS_COMPAT","FIEMAP_FLAG_CACHE","FIEMAP_FLAG_SYNC","FIEMAP_FLAG_XATTR","FIEMAP_MAX_OFFSET","FIFREEZE","FIGETBSZ","FIOASYNC","FIOCLEX","FIOGETOWN","FIONBIO","FIONCLEX","FIONREAD","FIOQSIZE","FIOSETOWN","FITHAW","FITRIM","FSI_SCOM_CHECK","FSI_SCOM_READ","FSI_SCOM_RESET","FSI_SCOM_WRITE","FSL_HV_IOCTL_DOORBELL","FSL_HV_IOCTL_GETPROP","FSL_HV_IOCTL_MEMCPY","FSL_HV_IOCTL_PARTITION_GET_STATUS","FSL_HV_IOCTL_PARTITION_RESTART","FSL_HV_IOCTL_PARTITION_START","FSL_HV_IOCTL_PARTITION_STOP","FSL_HV_IOCTL_SETPROP","FSL_MC_SEND_MC_COMMAND","FS_IOC32_GETFLAGS","FS_IOC32_GETVERSION","FS_IOC32_SETFLAGS","FS_IOC32_SETVERSION","FS_IOC_ADD_ENCRYPTION_KEY","FS_IOC_ENABLE_VERITY","FS_IOC_FIEMAP","FS_IOC_FSGETXATTR","FS_IOC_FSSETXATTR","FS_IOC_GETFLAGS","FS_IOC_GETFSLABEL","FS_IOC_GETFSMAP","FS_IOC_GETVERSION","FS_IOC_GET_ENCRYPTION_KEY_STATUS","FS_IOC_GET_ENCRYPTION_NONCE","FS_IOC_GET_ENCRYPTION_POLICY","FS_IOC_GET_ENCRYPTION_POLICY_EX","FS_IOC_GET_ENCRYPTION_PWSALT","FS_IOC_MEASURE_VERITY","FS_IOC_READ_VERITY_METADATA","FS_IOC_REMOVE_ENCRYPTION_KEY","FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS","FS_IOC_SETFLAGS","FS_IOC_SETFSLABEL","FS_IOC_SETVERSION","FS_IOC_SET_ENCRYPTION_POLICY","FUSE_DEV_IOC_CLONE","FW_CDEV_IOC_ADD_DESCRIPTOR","FW_CDEV_IOC_ALLOCATE","FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE","FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE_ONCE","FW_CDEV_IOC_CREATE_ISO_CONTEXT","FW_CDEV_IOC_DEALLOCATE","FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE","FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE_ONCE","FW_CDEV_IOC_FLUSH_ISO","FW_CDEV_IOC_GET_CYCLE_TIMER","FW_CDEV_IOC_GET_CYCLE_TIMER2","FW_CDEV_IOC_GET_INFO","FW_CDEV_IOC_GET_SPEED","FW_CDEV_IOC_INITIATE_BUS_RESET","FW_CDEV_IOC_QUEUE_ISO","FW_CDEV_IOC_RECEIVE_PHY_PACKETS","FW_CDEV_IOC_REMOVE_DESCRIPTOR","FW_CDEV_IOC_SEND_BROADCAST_REQUEST","FW_CDEV_IOC_SEND_PHY_PACKET","FW_CDEV_IOC_SEND_REQUEST","FW_CDEV_IOC_SEND_RESPONSE","FW_CDEV_IOC_SEND_STREAM_PACKET","FW_CDEV_IOC_SET_ISO_CHANNELS","FW_CDEV_IOC_START_ISO","FW_CDEV_IOC_STOP_ISO","GIO_CMAP","GIO_FONT","GIO_FONTX","GIO_SCRNMAP","GIO_UNIMAP","GIO_UNISCRNMAP","GPIOHANDLE_GET_LINE_VALUES_IOCTL","GPIOHANDLE_SET_CONFIG_IOCTL","GPIOHANDLE_SET_LINE_VALUES_IOCTL","GPIO_GET_CHIPINFO_IOCTL","GPIO_GET_LINEEVENT_IOCTL","GPIO_GET_LINEHANDLE_IOCTL","GPIO_GET_LINEINFO_IOCTL","GPIO_GET_LINEINFO_UNWATCH_IOCTL","GPIO_GET_LINEINFO_WATCH_IOCTL","GPIO_V2_GET_LINEINFO_IOCTL","GPIO_V2_GET_LINEINFO_WATCH_IOCTL","GPIO_V2_GET_LINE_IOCTL","GPIO_V2_LINE_GET_VALUES_IOCTL","GPIO_V2_LINE_SET_CONFIG_IOCTL","GPIO_V2_LINE_SET_VALUES_IOCTL","GSMIOC_DISABLE_NET","GSMIOC_ENABLE_NET","GSMIOC_GETCONF","GSMIOC_GETFIRST","GSMIOC_SETCONF","HE_GET_REG","HIDIOCAPPLICATION","HIDIOCGCOLLECTIONINDEX","HIDIOCGCOLLECTIONINFO","HIDIOCGDEVINFO","HIDIOCGFIELDINFO","HIDIOCGFLAG","HIDIOCGRAWINFO","HIDIOCGRDESC","HIDIOCGRDESCSIZE","HIDIOCGREPORT","HIDIOCGREPORTINFO","HIDIOCGSTRING","HIDIOCGUCODE","HIDIOCGUSAGE","HIDIOCGUSAGES","HIDIOCGVERSION","HIDIOCINITREPORT","HIDIOCSFLAG","HIDIOCSREPORT","HIDIOCSUSAGE","HIDIOCSUSAGES","HPET_DPI","HPET_EPI","HPET_IE_OFF","HPET_IE_ON","HPET_INFO","HPET_IRQFREQ","I2OEVTGET","I2OEVTREG","I2OGETIOPS","I2OHRTGET","I2OHTML","I2OLCTGET","I2OPARMGET","I2OPARMSET","I2OPASSTHRU","I2OPASSTHRU32","I2OSWDEL","I2OSWDL","I2OSWUL","I2OVALIDATE","I8K_GET_FAN","I8K_GET_SPEED","I8K_SET_FAN","IDT77105_GETSTAT","IDT77105_GETSTATZ","INOTIFY_IOC_SETNEXTWD","IOCTL_MEI_CONNECT_CLIENT","IOCTL_MEI_CONNECT_CLIENT_VTAG","IOCTL_MEI_NOTIFY_GET","IOCTL_MEI_NOTIFY_SET","IOCTL_VM_SOCKETS_GET_LOCAL_CID","IOC_OPAL_ACTIVATE_LSP","IOC_OPAL_ACTIVATE_USR","IOC_OPAL_ADD_USR_TO_LR","IOC_OPAL_ENABLE_DISABLE_MBR","IOC_OPAL_ERASE_LR","IOC_OPAL_GENERIC_TABLE_RW","IOC_OPAL_LOCK_UNLOCK","IOC_OPAL_LR_SETUP","IOC_OPAL_MBR_DONE","IOC_OPAL_PSID_REVERT_TPR","IOC_OPAL_REVERT_TPR","IOC_OPAL_SAVE","IOC_OPAL_SECURE_ERASE_LR","IOC_OPAL_SET_PW","IOC_OPAL_TAKE_OWNERSHIP","IOC_OPAL_WRITE_SHADOW_MBR","IOC_PR_CLEAR","IOC_PR_PREEMPT","IOC_PR_PREEMPT_ABORT","IOC_PR_REGISTER","IOC_PR_RELEASE","IOC_PR_RESERVE","IOC_WATCH_QUEUE_SET_FILTER","IOC_WATCH_QUEUE_SET_SIZE","IPMICTL_GET_MAINTENANCE_MODE_CMD","IPMICTL_GET_MY_ADDRESS_CMD","IPMICTL_GET_MY_CHANNEL_ADDRESS_CMD","IPMICTL_GET_MY_CHANNEL_LUN_CMD","IPMICTL_GET_MY_LUN_CMD","IPMICTL_GET_TIMING_PARMS_CMD","IPMICTL_RECEIVE_MSG","IPMICTL_RECEIVE_MSG_TRUNC","IPMICTL_REGISTER_FOR_CMD","IPMICTL_REGISTER_FOR_CMD_CHANS","IPMICTL_SEND_COMMAND","IPMICTL_SEND_COMMAND_SETTIME","IPMICTL_SET_GETS_EVENTS_CMD","IPMICTL_SET_MAINTENANCE_MODE_CMD","IPMICTL_SET_MY_ADDRESS_CMD","IPMICTL_SET_MY_CHANNEL_ADDRESS_CMD","IPMICTL_SET_MY_CHANNEL_LUN_CMD","IPMICTL_SET_MY_LUN_CMD","IPMICTL_SET_TIMING_PARMS_CMD","IPMICTL_UNREGISTER_FOR_CMD","IPMICTL_UNREGISTER_FOR_CMD_CHANS","IPMI_BMC_IOCTL_CLEAR_SMS_ATN","IPMI_BMC_IOCTL_FORCE_ABORT","IPMI_BMC_IOCTL_SET_SMS_ATN","ISST_IF_GET_PHY_ID","ISST_IF_GET_PLATFORM_INFO","ISST_IF_IO_CMD","ISST_IF_MBOX_COMMAND","ISST_IF_MSR_COMMAND","IVTVFB_IOC_DMA_FRAME","JSIOCGAXES","JSIOCGAXMAP","JSIOCGBTNMAP","JSIOCGBUTTONS","JSIOCGCORR","JSIOCGVERSION","JSIOCSAXMAP","JSIOCSBTNMAP","JSIOCSCORR","KCOV_DISABLE","KCOV_ENABLE","KCOV_INIT_TRACE","KCOV_REMOTE_ENABLE","KDADDIO","KDDELIO","KDDISABIO","KDENABIO","KDGETKEYCODE","KDGETLED","KDGETMODE","KDGKBDIACR","KDGKBENT","KDGKBLED","KDGKBMETA","KDGKBMODE","KDGKBSENT","KDGKBTYPE","KDMKTONE","KDSETKEYCODE","KDSETLED","KDSETMODE","KDSIGACCEPT","KDSKBENT","KDSKBLED","KDSKBMETA","KDSKBMODE","KDSKBSENT","KIOCSOUND","KVM_ARM_SET_DEVICE_ADDR","KVM_ARM_VCPU_FINALIZE","KVM_ASSIGN_DEV_IRQ","KVM_ASSIGN_PCI_DEVICE","KVM_ASSIGN_SET_INTX_MASK","KVM_ASSIGN_SET_MSIX_ENTRY","KVM_ASSIGN_SET_MSIX_NR","KVM_CHECK_EXTENSION","KVM_CLEAR_DIRTY_LOG","KVM_CREATE_DEVICE","KVM_CREATE_IRQCHIP","KVM_CREATE_PIT","KVM_CREATE_PIT2","KVM_CREATE_VCPU","KVM_CREATE_VM","KVM_DEASSIGN_DEV_IRQ","KVM_DEASSIGN_PCI_DEVICE","KVM_DIRTY_TLB","KVM_ENABLE_CAP","KVM_GET_API_VERSION","KVM_GET_CLOCK","KVM_GET_DEVICE_ATTR","KVM_GET_DIRTY_LOG","KVM_GET_FPU","KVM_GET_IRQCHIP","KVM_GET_MP_STATE","KVM_GET_NR_MMU_PAGES","KVM_GET_ONE_REG","KVM_GET_REGS","KVM_GET_REG_LIST","KVM_GET_SREGS","KVM_GET_STATS_FD","KVM_GET_TSC_KHZ","KVM_GET_VCPU_MMAP_SIZE","KVM_HAS_DEVICE_ATTR","KVM_HYPERV_EVENTFD","KVM_INTERRUPT","KVM_IOEVENTFD","KVM_IRQFD","KVM_IRQ_LINE","KVM_IRQ_LINE_STATUS","KVM_KVMCLOCK_CTRL","KVM_MEMORY_ENCRYPT_OP","KVM_MEMORY_ENCRYPT_REG_REGION","KVM_MEMORY_ENCRYPT_UNREG_REGION","KVM_NMI","KVM_PPC_ALLOCATE_HTAB","KVM_PPC_GET_PVINFO","KVM_PPC_GET_SMMU_INFO","KVM_PPC_RESIZE_HPT_COMMIT","KVM_PPC_RESIZE_HPT_PREPARE","KVM_PPC_SVM_OFF","KVM_REGISTER_COALESCED_MMIO","KVM_REINJECT_CONTROL","KVM_RESET_DIRTY_RINGS","KVM_RUN","KVM_S390_CLEAR_RESET","KVM_S390_ENABLE_SIE","KVM_S390_GET_CMMA_BITS","KVM_S390_GET_IRQ_STATE","KVM_S390_GET_SKEYS","KVM_S390_INITIAL_RESET","KVM_S390_INTERRUPT","KVM_S390_IRQ","KVM_S390_MEM_OP","KVM_S390_NORMAL_RESET","KVM_S390_PV_COMMAND","KVM_S390_SET_CMMA_BITS","KVM_S390_SET_INITIAL_PSW","KVM_S390_SET_IRQ_STATE","KVM_S390_SET_SKEYS","KVM_S390_STORE_STATUS","KVM_S390_UCAS_MAP","KVM_S390_UCAS_UNMAP","KVM_S390_VCPU_FAULT","KVM_SET_BOOT_CPU_ID","KVM_SET_CLOCK","KVM_SET_DEVICE_ATTR","KVM_SET_FPU","KVM_SET_GSI_ROUTING","KVM_SET_GUEST_DEBUG","KVM_SET_IDENTITY_MAP_ADDR","KVM_SET_IRQCHIP","KVM_SET_MP_STATE","KVM_SET_NR_MMU_PAGES","KVM_SET_ONE_REG","KVM_SET_REGS","KVM_SET_SIGNAL_MASK","KVM_SET_SREGS","KVM_SET_TSC_KHZ","KVM_SET_TSS_ADDR","KVM_SET_USER_MEMORY_REGION","KVM_SET_VAPIC_ADDR","KVM_SIGNAL_MSI","KVM_SMI","KVM_TPR_ACCESS_REPORTING","KVM_TRANSLATE","KVM_UNREGISTER_COALESCED_MMIO","KVM_X86_GET_MCE_CAP_SUPPORTED","KVM_X86_SETUP_MCE","KVM_XEN_HVM_GET_ATTR","KVM_XEN_HVM_SET_ATTR","KVM_XEN_VCPU_GET_ATTR","KVM_XEN_VCPU_SET_ATTR","LIRC_GET_FEATURES","LIRC_GET_LENGTH","LIRC_GET_MAX_TIMEOUT","LIRC_GET_MIN_TIMEOUT","LIRC_GET_REC_MODE","LIRC_GET_REC_RESOLUTION","LIRC_GET_REC_TIMEOUT","LIRC_GET_SEND_MODE","LIRC_SET_MEASURE_CARRIER_MODE","LIRC_SET_REC_CARRIER","LIRC_SET_REC_CARRIER_RANGE","LIRC_SET_REC_MODE","LIRC_SET_REC_TIMEOUT","LIRC_SET_REC_TIMEOUT_REPORTS","LIRC_SET_SEND_CARRIER","LIRC_SET_SEND_DUTY_CYCLE","LIRC_SET_SEND_MODE","LIRC_SET_TRANSMITTER_MASK","LIRC_SET_WIDEBAND_RECEIVER","LPSETTIMEOUT_NEW","MATROXFB_GET_ALL_OUTPUTS","MATROXFB_GET_AVAILABLE_OUTPUTS","MATROXFB_GET_OUTPUT_CONNECTION","MATROXFB_GET_OUTPUT_MODE","MATROXFB_SET_OUTPUT_CONNECTION","MATROXFB_SET_OUTPUT_MODE","MEDIA_IOC_DEVICE_INFO","MEDIA_IOC_ENUM_ENTITIES","MEDIA_IOC_ENUM_LINKS","MEDIA_IOC_G_TOPOLOGY","MEDIA_IOC_SETUP_LINK","MEDIA_REQUEST_IOC_QUEUE","MEDIA_REQUEST_IOC_REINIT","MGSL_IOCCLRMODCOUNT","MGSL_IOCGGPIO","MGSL_IOCGIF","MGSL_IOCGPARAMS","MGSL_IOCGSTATS","MGSL_IOCGTXIDLE","MGSL_IOCGXCTRL","MGSL_IOCGXSYNC","MGSL_IOCLOOPTXDONE","MGSL_IOCRXENABLE","MGSL_IOCSGPIO","MGSL_IOCSIF","MGSL_IOCSPARAMS","MGSL_IOCSTXIDLE","MGSL_IOCSXCTRL","MGSL_IOCSXSYNC","MGSL_IOCTXABORT","MGSL_IOCTXENABLE","MGSL_IOCWAITEVENT","MGSL_IOCWAITGPIO","MMTIMER_GETBITS","MMTIMER_GETCOUNTER","MMTIMER_GETFREQ","MMTIMER_GETOFFSET","MMTIMER_GETRES","MMTIMER_MMAPAVAIL","MTIOCGET","MTIOCPOS","MTIOCTOP","NBD_CLEAR_QUE","NBD_CLEAR_SOCK","NBD_DISCONNECT","NBD_DO_IT","NBD_PRINT_DEBUG","NBD_SET_BLKSIZE","NBD_SET_FLAGS","NBD_SET_SIZE","NBD_SET_SIZE_BLOCKS","NBD_SET_SOCK","NBD_SET_TIMEOUT","ND_IOCTL_ARS_CAP","ND_IOCTL_ARS_START","ND_IOCTL_ARS_STATUS","ND_IOCTL_CALL","ND_IOCTL_CLEAR_ERROR","ND_IOCTL_DIMM_FLAGS","ND_IOCTL_GET_CONFIG_DATA","ND_IOCTL_GET_CONFIG_SIZE","ND_IOCTL_SET_CONFIG_DATA","ND_IOCTL_VENDOR","NE_ADD_VCPU","NE_CREATE_VM","NE_GET_IMAGE_LOAD_INFO","NE_SET_USER_MEMORY_REGION","NE_START_ENCLAVE","NILFS_IOCTL_CHANGE_CPMODE","NILFS_IOCTL_CLEAN_SEGMENTS","NILFS_IOCTL_DELETE_CHECKPOINT","NILFS_IOCTL_GET_BDESCS","NILFS_IOCTL_GET_CPINFO","NILFS_IOCTL_GET_CPSTAT","NILFS_IOCTL_GET_SUINFO","NILFS_IOCTL_GET_SUSTAT","NILFS_IOCTL_GET_VINFO","NILFS_IOCTL_RESIZE","NILFS_IOCTL_SET_ALLOC_RANGE","NILFS_IOCTL_SET_SUINFO","NILFS_IOCTL_SYNC","NS_ADJBUFLEV","NS_GETPSTAT","NS_GET_NSTYPE","NS_GET_OWNER_UID","NS_GET_PARENT","NS_GET_USERNS","NS_SETBUFLEV","NVME_IOCTL_ADMIN64_CMD","NVME_IOCTL_ADMIN_CMD","NVME_IOCTL_ID","NVME_IOCTL_IO64_CMD","NVME_IOCTL_IO_CMD","NVME_IOCTL_RESCAN","NVME_IOCTL_RESET","NVME_IOCTL_SUBMIT_IO","NVME_IOCTL_SUBSYS_RESET","NVRAM_INIT","NVRAM_SETCKS","PACKET_CTRL_CMD","PCITEST_BAR","PCITEST_CLEAR_IRQ","PCITEST_COPY","PCITEST_GET_IRQTYPE","PCITEST_LEGACY_IRQ","PCITEST_MSI","PCITEST_MSIX","PCITEST_READ","PCITEST_SET_IRQTYPE","PCITEST_WRITE","PERF_EVENT_IOC_ID","PERF_EVENT_IOC_MODIFY_ATTRIBUTES","PERF_EVENT_IOC_PAUSE_OUTPUT","PERF_EVENT_IOC_PERIOD","PERF_EVENT_IOC_QUERY_BPF","PERF_EVENT_IOC_SET_BPF","PERF_EVENT_IOC_SET_FILTER","PHN_GETREG","PHN_GETREGS","PHN_GET_REG","PHN_GET_REGS","PHN_NOT_OH","PHN_SETREG","PHN_SETREGS","PHN_SET_REG","PHN_SET_REGS","PIO_CMAP","PIO_FONT","PIO_FONTRESET","PIO_FONTX","PIO_SCRNMAP","PIO_UNIMAP","PIO_UNIMAPCLR","PIO_UNISCRNMAP","PMU_IOC_CAN_SLEEP","PMU_IOC_GET_BACKLIGHT","PMU_IOC_GET_MODEL","PMU_IOC_GRAB_BACKLIGHT","PMU_IOC_HAS_ADB","PMU_IOC_SET_BACKLIGHT","PMU_IOC_SLEEP","PPCLAIM","PPCLRIRQ","PPDATADIR","PPEXCL","PPFCONTROL","PPGETFLAGS","PPGETMODE","PPGETMODES","PPGETPHASE","PPGETTIME","PPNEGOT","PPPIOCATTACH","PPPIOCATTCHAN","PPPIOCBRIDGECHAN","PPPIOCCONNECT","PPPIOCDETACH","PPPIOCDISCONN","PPPIOCGASYNCMAP","PPPIOCGCHAN","PPPIOCGDEBUG","PPPIOCGFLAGS","PPPIOCGIDLE","PPPIOCGIDLE32","PPPIOCGIDLE64","PPPIOCGL2TPSTATS","PPPIOCGMRU","PPPIOCGNPMODE","PPPIOCGRASYNCMAP","PPPIOCGUNIT","PPPIOCGXASYNCMAP","PPPIOCNEWUNIT","PPPIOCSACTIVE","PPPIOCSASYNCMAP","PPPIOCSCOMPRESS","PPPIOCSDEBUG","PPPIOCSFLAGS","PPPIOCSMAXCID","PPPIOCSMRRU","PPPIOCSMRU","PPPIOCSNPMODE","PPPIOCSPASS","PPPIOCSRASYNCMAP","PPPIOCSXASYNCMAP","PPPIOCUNBRIDGECHAN","PPPIOCXFERUNIT","PPPOEIOCDFWD","PPPOEIOCSFWD","PPRCONTROL","PPRDATA","PPRELEASE","PPRSTATUS","PPSETFLAGS","PPSETMODE","PPSETPHASE","PPSETTIME","PPS_FETCH","PPS_GETCAP","PPS_GETPARAMS","PPS_KC_BIND","PPS_SETPARAMS","PPWCONTROL","PPWCTLONIRQ","PPWDATA","PPYIELD","PTP_CLOCK_GETCAPS","PTP_CLOCK_GETCAPS2","PTP_ENABLE_PPS","PTP_ENABLE_PPS2","PTP_EXTTS_REQUEST","PTP_EXTTS_REQUEST2","PTP_PEROUT_REQUEST","PTP_PEROUT_REQUEST2","PTP_PIN_GETFUNC","PTP_PIN_GETFUNC2","PTP_PIN_SETFUNC","PTP_PIN_SETFUNC2","PTP_SYS_OFFSET","PTP_SYS_OFFSET2","PTP_SYS_OFFSET_EXTENDED","PTP_SYS_OFFSET_EXTENDED2","PTP_SYS_OFFSET_PRECISE","PTP_SYS_OFFSET_PRECISE2","REISERFS_IOC_UNPACK","RFKILL_IOCTL_NOINPUT","RIO_ALLOC_DMA","RIO_CM_CHAN_ACCEPT","RIO_CM_CHAN_BIND","RIO_CM_CHAN_CLOSE","RIO_CM_CHAN_CONNECT","RIO_CM_CHAN_CREATE","RIO_CM_CHAN_LISTEN","RIO_CM_CHAN_RECEIVE","RIO_CM_CHAN_SEND","RIO_CM_EP_GET_LIST","RIO_CM_EP_GET_LIST_SIZE","RIO_CM_MPORT_GET_LIST","RIO_DEV_ADD","RIO_DEV_DEL","RIO_DISABLE_DOORBELL_RANGE","RIO_DISABLE_PORTWRITE_RANGE","RIO_ENABLE_DOORBELL_RANGE","RIO_ENABLE_PORTWRITE_RANGE","RIO_FREE_DMA","RIO_GET_EVENT_MASK","RIO_MAP_INBOUND","RIO_MAP_OUTBOUND","RIO_MPORT_GET_PROPERTIES","RIO_MPORT_MAINT_COMPTAG_SET","RIO_MPORT_MAINT_HDID_SET","RIO_MPORT_MAINT_PORT_IDX_GET","RIO_MPORT_MAINT_READ_LOCAL","RIO_MPORT_MAINT_READ_REMOTE","RIO_MPORT_MAINT_WRITE_LOCAL","RIO_MPORT_MAINT_WRITE_REMOTE","RIO_SET_EVENT_MASK","RIO_TRANSFER","RIO_UNMAP_INBOUND","RIO_UNMAP_OUTBOUND","RIO_WAIT_FOR_ASYNC","RNDADDENTROPY","RNDADDTOENTCNT","RNDCLEARPOOL","RNDGETENTCNT","RNDGETPOOL","RNDRESEEDCRNG","RNDZAPENTCNT","RPMSG_CREATE_EPT_IOCTL","RPMSG_DESTROY_EPT_IOCTL","RPROC_GET_SHUTDOWN_ON_RELEASE","RPROC_SET_SHUTDOWN_ON_RELEASE","RTC_AIE_OFF","RTC_AIE_ON","RTC_ALM_READ","RTC_ALM_SET","RTC_EPOCH_READ","RTC_EPOCH_SET","RTC_IRQP_READ","RTC_IRQP_SET","RTC_PIE_OFF","RTC_PIE_ON","RTC_PLL_GET","RTC_PLL_SET","RTC_RD_TIME","RTC_SET_TIME","RTC_UIE_OFF","RTC_UIE_ON","RTC_VL_CLR","RTC_VL_READ","RTC_WIE_OFF","RTC_WIE_ON","RTC_WKALM_RD","RTC_WKALM_SET","SCIF_ACCEPTREG","SCIF_ACCEPTREQ","SCIF_BIND","SCIF_CONNECT","SCIF_FENCE_MARK","SCIF_FENCE_SIGNAL","SCIF_FENCE_WAIT","SCIF_GET_NODEIDS","SCIF_LISTEN","SCIF_READFROM","SCIF_RECV","SCIF_REG","SCIF_SEND","SCIF_UNREG","SCIF_VREADFROM","SCIF_VWRITETO","SCIF_WRITETO","SEV_ISSUE_CMD","SIOCADDDLCI","SIOCADDMULTI","SIOCADDRT","SIOCATMARK","SIOCDARP","SIOCDELDLCI","SIOCDELMULTI","SIOCDELRT","SIOCDEVPRIVATE","SIOCDIFADDR","SIOCDRARP","SIOCGARP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGPGRP","SIOCGRARP","SIOCGSTAMP","SIOCGSTAMPNS_NEW","SIOCGSTAMP_NEW","SIOCMKCLIP","SIOCPROTOPRIVATE","SIOCRTMSG","SIOCSARP","SIOCSIFADDR","SIOCSIFATMTCP","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNAME","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSPGRP","SIOCSRARP","SIOGIFINDEX","SNAPSHOT_ALLOC_SWAP_PAGE","SNAPSHOT_ATOMIC_RESTORE","SNAPSHOT_AVAIL_SWAP_SIZE","SNAPSHOT_CREATE_IMAGE","SNAPSHOT_FREE","SNAPSHOT_FREEZE","SNAPSHOT_FREE_SWAP_PAGES","SNAPSHOT_GET_IMAGE_SIZE","SNAPSHOT_PLATFORM_SUPPORT","SNAPSHOT_POWER_OFF","SNAPSHOT_PREF_IMAGE_SIZE","SNAPSHOT_S2RAM","SNAPSHOT_SET_SWAP_AREA","SNAPSHOT_UNFREEZE","SONET_CLRDIAG","SONET_GETDIAG","SONET_GETFRAMING","SONET_GETFRSENSE","SONET_GETSTAT","SONET_GETSTATZ","SONET_SETDIAG","SONET_SETFRAMING","SONYPI_IOCGBAT1CAP","SONYPI_IOCGBAT1REM","SONYPI_IOCGBAT2CAP","SONYPI_IOCGBAT2REM","SONYPI_IOCGBATFLAGS","SONYPI_IOCGBLUE","SONYPI_IOCGBRT","SONYPI_IOCGFAN","SONYPI_IOCGTEMP","SONYPI_IOCSBLUE","SONYPI_IOCSBRT","SONYPI_IOCSFAN","SPIOCSTYPE","STP_POLICY_ID_GET","STP_POLICY_ID_SET","STP_SET_OPTIONS","SWITCHTEC_IOCTL_EVENT_CTL","SWITCHTEC_IOCTL_EVENT_SUMMARY","SWITCHTEC_IOCTL_EVENT_SUMMARY_LEGACY","SWITCHTEC_IOCTL_FLASH_INFO","SWITCHTEC_IOCTL_FLASH_PART_INFO","SWITCHTEC_IOCTL_PFF_TO_PORT","SWITCHTEC_IOCTL_PORT_TO_PFF","SYNC_IOC_FILE_INFO","SYNC_IOC_MERGE","TCFLSH","TCGETA","TCGETS","TCGETS2","TCGETX","TCSBRK","TCSBRKP","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCSETX","TCSETXF","TCSETXW","TCXONC","TEE_IOC_CANCEL","TEE_IOC_CLOSE_SESSION","TEE_IOC_INVOKE","TEE_IOC_OPEN_SESSION","TEE_IOC_SHM_ALLOC","TEE_IOC_SHM_REGISTER","TEE_IOC_SUPPL_RECV","TEE_IOC_SUPPL_SEND","TEE_IOC_VERSION","TFD_IOC_SET_TICKS","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGDEV","TIOCGETD","TIOCGEXCL","TIOCGICOUNT","TIOCGLCKTRMIOS","TIOCGPGRP","TIOCGPKT","TIOCGPTLCK","TIOCGPTN","TIOCGPTPEER","TIOCGRS485","TIOCGSERIAL","TIOCGSID","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMIWAIT","TIOCMSET","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCSBRK","TIOCSCTTY","TIOCSERCONFIG","TIOCSERGETLSR","TIOCSERGETMULTI","TIOCSERGSTRUCT","TIOCSERGWILD","TIOCSERSETMULTI","TIOCSERSWILD","TIOCSETD","TIOCSIG","TIOCSLCKTRMIOS","TIOCSPGRP","TIOCSPTLCK","TIOCSRS485","TIOCSSERIAL","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TIOCVHANGUP","TOSHIBA_ACPI_SCI","TOSH_SMM","TUNATTACHFILTER","TUNDETACHFILTER","TUNGETDEVNETNS","TUNGETFEATURES","TUNGETFILTER","TUNGETIFF","TUNGETSNDBUF","TUNGETVNETBE","TUNGETVNETHDRSZ","TUNGETVNETLE","TUNSETCARRIER","TUNSETDEBUG","TUNSETFILTEREBPF","TUNSETGROUP","TUNSETIFF","TUNSETIFINDEX","TUNSETLINK","TUNSETNOCSUM","TUNSETOFFLOAD","TUNSETOWNER","TUNSETPERSIST","TUNSETQUEUE","TUNSETSNDBUF","TUNSETSTEERINGEBPF","TUNSETTXFILTER","TUNSETVNETBE","TUNSETVNETHDRSZ","TUNSETVNETLE","UDF_GETEABLOCK","UDF_GETEASIZE","UDF_GETVOLIDENT","UDF_RELOCATE_BLOCKS","UDMABUF_CREATE","UDMABUF_CREATE_LIST","UFFDIO_API","UFFDIO_CONTINUE","UFFDIO_COPY","UFFDIO_REGISTER","UFFDIO_UNREGISTER","UFFDIO_WAKE","UFFDIO_WRITEPROTECT","UFFDIO_ZEROPAGE","UI_ABS_SETUP","UI_BEGIN_FF_ERASE","UI_BEGIN_FF_UPLOAD","UI_DEV_CREATE","UI_DEV_DESTROY","UI_DEV_SETUP","UI_END_FF_ERASE","UI_END_FF_UPLOAD","UI_GET_VERSION","UI_SET_ABSBIT","UI_SET_EVBIT","UI_SET_FFBIT","UI_SET_KEYBIT","UI_SET_LEDBIT","UI_SET_MSCBIT","UI_SET_PHYS","UI_SET_PROPBIT","UI_SET_RELBIT","UI_SET_SNDBIT","UI_SET_SWBIT","USBDEVFS_ALLOC_STREAMS","USBDEVFS_ALLOW_SUSPEND","USBDEVFS_BULK","USBDEVFS_CLAIMINTERFACE","USBDEVFS_CLAIM_PORT","USBDEVFS_CLEAR_HALT","USBDEVFS_CONNECT","USBDEVFS_CONNECTINFO","USBDEVFS_CONTROL","USBDEVFS_DISCARDURB","USBDEVFS_DISCONNECT","USBDEVFS_DISCONNECT_CLAIM","USBDEVFS_DISCSIGNAL","USBDEVFS_DROP_PRIVILEGES","USBDEVFS_FORBID_SUSPEND","USBDEVFS_FREE_STREAMS","USBDEVFS_GETDRIVER","USBDEVFS_GET_CAPABILITIES","USBDEVFS_GET_SPEED","USBDEVFS_HUB_PORTINFO","USBDEVFS_IOCTL","USBDEVFS_REAPURB","USBDEVFS_REAPURB32","USBDEVFS_REAPURBNDELAY","USBDEVFS_REAPURBNDELAY32","USBDEVFS_RELEASEINTERFACE","USBDEVFS_RELEASE_PORT","USBDEVFS_RESET","USBDEVFS_RESETEP","USBDEVFS_SETCONFIGURATION","USBDEVFS_SETINTERFACE","USBDEVFS_SUBMITURB","USBDEVFS_WAIT_FOR_RESUME","UVCIOC_CTRL_MAP","UVCIOC_CTRL_QUERY","VBG_IOCTL_ACQUIRE_GUEST_CAPABILITIES","VBG_IOCTL_CHANGE_FILTER_MASK","VBG_IOCTL_CHANGE_GUEST_CAPABILITIES","VBG_IOCTL_CHECK_BALLOON","VBG_IOCTL_DRIVER_VERSION_INFO","VBG_IOCTL_HGCM_CONNECT","VBG_IOCTL_HGCM_DISCONNECT","VBG_IOCTL_INTERRUPT_ALL_WAIT_FOR_EVENTS","VBG_IOCTL_VMMDEV_REQUEST_BIG","VBG_IOCTL_WAIT_FOR_EVENTS","VBG_IOCTL_WRITE_CORE_DUMP","VDUSE_CREATE_DEV","VDUSE_DESTROY_DEV","VDUSE_DEV_GET_FEATURES","VDUSE_DEV_INJECT_CONFIG_IRQ","VDUSE_DEV_SET_CONFIG","VDUSE_GET_API_VERSION","VDUSE_IOTLB_GET_FD","VDUSE_SET_API_VERSION","VDUSE_VQ_GET_INFO","VDUSE_VQ_INJECT_IRQ","VDUSE_VQ_SETUP","VDUSE_VQ_SETUP_KICKFD","VFAT_IOCTL_READDIR_BOTH","VFAT_IOCTL_READDIR_SHORT","VFIO_CHECK_EXTENSION","VFIO_DEVICE_FEATURE","VFIO_DEVICE_GET_GFX_DMABUF","VFIO_DEVICE_GET_INFO","VFIO_DEVICE_GET_IRQ_INFO","VFIO_DEVICE_GET_PCI_HOT_RESET_INFO","VFIO_DEVICE_GET_REGION_INFO","VFIO_DEVICE_IOEVENTFD","VFIO_DEVICE_PCI_HOT_RESET","VFIO_DEVICE_QUERY_GFX_PLANE","VFIO_DEVICE_RESET","VFIO_DEVICE_SET_IRQS","VFIO_EEH_PE_OP","VFIO_GET_API_VERSION","VFIO_GROUP_GET_DEVICE_FD","VFIO_GROUP_GET_STATUS","VFIO_GROUP_SET_CONTAINER","VFIO_GROUP_UNSET_CONTAINER","VFIO_IOMMU_DIRTY_PAGES","VFIO_IOMMU_DISABLE","VFIO_IOMMU_ENABLE","VFIO_IOMMU_GET_INFO","VFIO_IOMMU_MAP_DMA","VFIO_IOMMU_SPAPR_REGISTER_MEMORY","VFIO_IOMMU_SPAPR_TCE_CREATE","VFIO_IOMMU_SPAPR_TCE_GET_INFO","VFIO_IOMMU_SPAPR_TCE_REMOVE","VFIO_IOMMU_SPAPR_UNREGISTER_MEMORY","VFIO_IOMMU_UNMAP_DMA","VFIO_SET_IOMMU","VHOST_GET_BACKEND_FEATURES","VHOST_GET_FEATURES","VHOST_GET_VRING_BASE","VHOST_GET_VRING_BUSYLOOP_TIMEOUT","VHOST_GET_VRING_ENDIAN","VHOST_NET_SET_BACKEND","VHOST_RESET_OWNER","VHOST_SCSI_CLEAR_ENDPOINT","VHOST_SCSI_GET_ABI_VERSION","VHOST_SCSI_GET_EVENTS_MISSED","VHOST_SCSI_SET_ENDPOINT","VHOST_SCSI_SET_EVENTS_MISSED","VHOST_SET_BACKEND_FEATURES","VHOST_SET_FEATURES","VHOST_SET_LOG_BASE","VHOST_SET_LOG_FD","VHOST_SET_MEM_TABLE","VHOST_SET_OWNER","VHOST_SET_VRING_ADDR","VHOST_SET_VRING_BASE","VHOST_SET_VRING_BUSYLOOP_TIMEOUT","VHOST_SET_VRING_CALL","VHOST_SET_VRING_ENDIAN","VHOST_SET_VRING_ERR","VHOST_SET_VRING_KICK","VHOST_SET_VRING_NUM","VHOST_VDPA_GET_CONFIG","VHOST_VDPA_GET_DEVICE_ID","VHOST_VDPA_GET_IOVA_RANGE","VHOST_VDPA_GET_STATUS","VHOST_VDPA_GET_VRING_NUM","VHOST_VDPA_SET_CONFIG","VHOST_VDPA_SET_CONFIG_CALL","VHOST_VDPA_SET_STATUS","VHOST_VDPA_SET_VRING_ENABLE","VHOST_VSOCK_SET_GUEST_CID","VHOST_VSOCK_SET_RUNNING","VIDIOC_AM437X_CCDC_CFG","VIDIOC_CREATE_BUFS","VIDIOC_CROPCAP","VIDIOC_DBG_G_CHIP_INFO","VIDIOC_DBG_G_REGISTER","VIDIOC_DBG_S_REGISTER","VIDIOC_DECODER_CMD","VIDIOC_DQBUF","VIDIOC_DQEVENT","VIDIOC_DV_TIMINGS_CAP","VIDIOC_ENCODER_CMD","VIDIOC_ENUMAUDIO","VIDIOC_ENUMAUDOUT","VIDIOC_ENUMINPUT","VIDIOC_ENUMOUTPUT","VIDIOC_ENUMSTD","VIDIOC_ENUM_DV_TIMINGS","VIDIOC_ENUM_FMT","VIDIOC_ENUM_FRAMEINTERVALS","VIDIOC_ENUM_FRAMESIZES","VIDIOC_ENUM_FREQ_BANDS","VIDIOC_EXPBUF","VIDIOC_G_AUDIO","VIDIOC_G_AUDOUT","VIDIOC_G_CROP","VIDIOC_G_CTRL","VIDIOC_G_DV_TIMINGS","VIDIOC_G_EDID","VIDIOC_G_ENC_INDEX","VIDIOC_G_EXT_CTRLS","VIDIOC_G_FBUF","VIDIOC_G_FMT","VIDIOC_G_FREQUENCY","VIDIOC_G_INPUT","VIDIOC_G_JPEGCOMP","VIDIOC_G_MODULATOR","VIDIOC_G_OUTPUT","VIDIOC_G_PARM","VIDIOC_G_PRIORITY","VIDIOC_G_SELECTION","VIDIOC_G_SLICED_VBI_CAP","VIDIOC_G_STD","VIDIOC_G_TUNER","VIDIOC_LOG_STATUS","VIDIOC_OMAP3ISP_AEWB_CFG","VIDIOC_OMAP3ISP_AF_CFG","VIDIOC_OMAP3ISP_CCDC_CFG","VIDIOC_OMAP3ISP_HIST_CFG","VIDIOC_OMAP3ISP_PRV_CFG","VIDIOC_OMAP3ISP_STAT_EN","VIDIOC_OMAP3ISP_STAT_REQ","VIDIOC_OVERLAY","VIDIOC_PREPARE_BUF","VIDIOC_QBUF","VIDIOC_QUERYBUF","VIDIOC_QUERYCAP","VIDIOC_QUERYCTRL","VIDIOC_QUERYMENU","VIDIOC_QUERYSTD","VIDIOC_QUERY_DV_TIMINGS","VIDIOC_QUERY_EXT_CTRL","VIDIOC_REQBUFS","VIDIOC_STREAMOFF","VIDIOC_STREAMON","VIDIOC_SUBDEV_DV_TIMINGS_CAP","VIDIOC_SUBDEV_ENUMSTD","VIDIOC_SUBDEV_ENUM_DV_TIMINGS","VIDIOC_SUBDEV_ENUM_FRAME_INTERVAL","VIDIOC_SUBDEV_ENUM_FRAME_SIZE","VIDIOC_SUBDEV_ENUM_MBUS_CODE","VIDIOC_SUBDEV_G_CROP","VIDIOC_SUBDEV_G_DV_TIMINGS","VIDIOC_SUBDEV_G_EDID","VIDIOC_SUBDEV_G_FMT","VIDIOC_SUBDEV_G_FRAME_INTERVAL","VIDIOC_SUBDEV_G_SELECTION","VIDIOC_SUBDEV_G_STD","VIDIOC_SUBDEV_QUERYCAP","VIDIOC_SUBDEV_QUERYSTD","VIDIOC_SUBDEV_QUERY_DV_TIMINGS","VIDIOC_SUBDEV_S_CROP","VIDIOC_SUBDEV_S_DV_TIMINGS","VIDIOC_SUBDEV_S_EDID","VIDIOC_SUBDEV_S_FMT","VIDIOC_SUBDEV_S_FRAME_INTERVAL","VIDIOC_SUBDEV_S_SELECTION","VIDIOC_SUBDEV_S_STD","VIDIOC_SUBSCRIBE_EVENT","VIDIOC_S_AUDIO","VIDIOC_S_AUDOUT","VIDIOC_S_CROP","VIDIOC_S_CTRL","VIDIOC_S_DV_TIMINGS","VIDIOC_S_EDID","VIDIOC_S_EXT_CTRLS","VIDIOC_S_FBUF","VIDIOC_S_FMT","VIDIOC_S_FREQUENCY","VIDIOC_S_HW_FREQ_SEEK","VIDIOC_S_INPUT","VIDIOC_S_JPEGCOMP","VIDIOC_S_MODULATOR","VIDIOC_S_OUTPUT","VIDIOC_S_PARM","VIDIOC_S_PRIORITY","VIDIOC_S_SELECTION","VIDIOC_S_STD","VIDIOC_S_TUNER","VIDIOC_TRY_DECODER_CMD","VIDIOC_TRY_ENCODER_CMD","VIDIOC_TRY_EXT_CTRLS","VIDIOC_TRY_FMT","VIDIOC_UNSUBSCRIBE_EVENT","VTPM_PROXY_IOC_NEW_DEV","VT_ACTIVATE","VT_DISALLOCATE","VT_GETMODE","VT_GETSTATE","VT_OPENQRY","VT_RELDISP","VT_RESIZE","VT_RESIZEX","VT_SETMODE","VT_WAITACTIVE","WDIOC_GETBOOTSTATUS","WDIOC_GETPRETIMEOUT","WDIOC_GETSTATUS","WDIOC_GETSUPPORT","WDIOC_GETTEMP","WDIOC_GETTIMELEFT","WDIOC_GETTIMEOUT","WDIOC_KEEPALIVE","WDIOC_SETOPTIONS","WDIOC_SETPRETIMEOUT","WDIOC_SETTIMEOUT","ZATM_GETPOOL","ZATM_GETPOOLZ","ZATM_SETPOOL","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KCM","AF_KEY","AF_LLC","AF_MAX","AF_MCTP","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_QIPCRTR","AF_RDS","AF_ROSE","AF_RXRPC","AF_SECURITY","AF_SMC","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","ALTIFNAMSIZ","CLOCK_DEFAULT","CLOCK_EXT","CLOCK_INT","CLOCK_TXFROMRX","CLOCK_TXINT","DEVCONF_ACCEPT_DAD","DEVCONF_ACCEPT_DAD","DEVCONF_ACCEPT_RA","DEVCONF_ACCEPT_RA","DEVCONF_ACCEPT_RA_DEFRTR","DEVCONF_ACCEPT_RA_DEFRTR","DEVCONF_ACCEPT_RA_FROM_LOCAL","DEVCONF_ACCEPT_RA_FROM_LOCAL","DEVCONF_ACCEPT_RA_MIN_HOP_LIMIT","DEVCONF_ACCEPT_RA_MIN_HOP_LIMIT","DEVCONF_ACCEPT_RA_MTU","DEVCONF_ACCEPT_RA_MTU","DEVCONF_ACCEPT_RA_PINFO","DEVCONF_ACCEPT_RA_PINFO","DEVCONF_ACCEPT_RA_RTR_PREF","DEVCONF_ACCEPT_RA_RTR_PREF","DEVCONF_ACCEPT_RA_RT_INFO_MAX_PLEN","DEVCONF_ACCEPT_RA_RT_INFO_MAX_PLEN","DEVCONF_ACCEPT_RA_RT_INFO_MIN_PLEN","DEVCONF_ACCEPT_RA_RT_INFO_MIN_PLEN","DEVCONF_ACCEPT_REDIRECTS","DEVCONF_ACCEPT_REDIRECTS","DEVCONF_ACCEPT_SOURCE_ROUTE","DEVCONF_ACCEPT_SOURCE_ROUTE","DEVCONF_ACCEPT_UNTRACKED_NA","DEVCONF_ACCEPT_UNTRACKED_NA","DEVCONF_ADDR_GEN_MODE","DEVCONF_ADDR_GEN_MODE","DEVCONF_AUTOCONF","DEVCONF_AUTOCONF","DEVCONF_DAD_TRANSMITS","DEVCONF_DAD_TRANSMITS","DEVCONF_DISABLE_IPV6","DEVCONF_DISABLE_IPV6","DEVCONF_DISABLE_POLICY","DEVCONF_DISABLE_POLICY","DEVCONF_DROP_UNICAST_IN_L2_MULTICAST","DEVCONF_DROP_UNICAST_IN_L2_MULTICAST","DEVCONF_DROP_UNSOLICITED_NA","DEVCONF_DROP_UNSOLICITED_NA","DEVCONF_ENHANCED_DAD","DEVCONF_ENHANCED_DAD","DEVCONF_FORCE_MLD_VERSION","DEVCONF_FORCE_MLD_VERSION","DEVCONF_FORCE_TLLAO","DEVCONF_FORCE_TLLAO","DEVCONF_FORWARDING","DEVCONF_FORWARDING","DEVCONF_HOPLIMIT","DEVCONF_HOPLIMIT","DEVCONF_IGNORE_ROUTES_WITH_LINKDOWN","DEVCONF_IGNORE_ROUTES_WITH_LINKDOWN","DEVCONF_IOAM6_ENABLED","DEVCONF_IOAM6_ENABLED","DEVCONF_IOAM6_ID","DEVCONF_IOAM6_ID","DEVCONF_IOAM6_ID_WIDE","DEVCONF_IOAM6_ID_WIDE","DEVCONF_KEEP_ADDR_ON_DOWN","DEVCONF_KEEP_ADDR_ON_DOWN","DEVCONF_MAX","DEVCONF_MAX","DEVCONF_MAX_ADDRESSES","DEVCONF_MAX_ADDRESSES","DEVCONF_MAX_DESYNC_FACTOR","DEVCONF_MAX_DESYNC_FACTOR","DEVCONF_MC_FORWARDING","DEVCONF_MC_FORWARDING","DEVCONF_MLDV1_UNSOLICITED_REPORT_INTERVAL","DEVCONF_MLDV1_UNSOLICITED_REPORT_INTERVAL","DEVCONF_MLDV2_UNSOLICITED_REPORT_INTERVAL","DEVCONF_MLDV2_UNSOLICITED_REPORT_INTERVAL","DEVCONF_MTU6","DEVCONF_MTU6","DEVCONF_NDISC_EVICT_NOCARRIER","DEVCONF_NDISC_EVICT_NOCARRIER","DEVCONF_NDISC_NOTIFY","DEVCONF_NDISC_NOTIFY","DEVCONF_NDISC_TCLASS","DEVCONF_NDISC_TCLASS","DEVCONF_OPTIMISTIC_DAD","DEVCONF_OPTIMISTIC_DAD","DEVCONF_PROXY_NDP","DEVCONF_PROXY_NDP","DEVCONF_RA_DEFRTR_METRIC","DEVCONF_RA_DEFRTR_METRIC","DEVCONF_REGEN_MAX_RETRY","DEVCONF_REGEN_MAX_RETRY","DEVCONF_RPL_SEG_ENABLED","DEVCONF_RPL_SEG_ENABLED","DEVCONF_RTR_PROBE_INTERVAL","DEVCONF_RTR_PROBE_INTERVAL","DEVCONF_RTR_SOLICITS","DEVCONF_RTR_SOLICITS","DEVCONF_RTR_SOLICIT_DELAY","DEVCONF_RTR_SOLICIT_DELAY","DEVCONF_RTR_SOLICIT_INTERVAL","DEVCONF_RTR_SOLICIT_INTERVAL","DEVCONF_RTR_SOLICIT_MAX_INTERVAL","DEVCONF_RTR_SOLICIT_MAX_INTERVAL","DEVCONF_SEG6_ENABLED","DEVCONF_SEG6_ENABLED","DEVCONF_SEG6_REQUIRE_HMAC","DEVCONF_SEG6_REQUIRE_HMAC","DEVCONF_STABLE_SECRET","DEVCONF_STABLE_SECRET","DEVCONF_SUPPRESS_FRAG_NDISC","DEVCONF_SUPPRESS_FRAG_NDISC","DEVCONF_TEMP_PREFERED_LFT","DEVCONF_TEMP_PREFERED_LFT","DEVCONF_TEMP_VALID_LFT","DEVCONF_TEMP_VALID_LFT","DEVCONF_USE_OIF_ADDRS_ONLY","DEVCONF_USE_OIF_ADDRS_ONLY","DEVCONF_USE_OPTIMISTIC","DEVCONF_USE_OPTIMISTIC","DEVCONF_USE_TEMPADDR","DEVCONF_USE_TEMPADDR","ENCODING_DEFAULT","ENCODING_FM_MARK","ENCODING_FM_SPACE","ENCODING_MANCHESTER","ENCODING_NRZ","ENCODING_NRZI","GENERIC_HDLC_VERSION","IFALIASZ","IFF_ALLMULTI","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_NOARP","IFF_NOTRAILERS","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_UP","IFHWADDRLEN","IFNAMSIZ","IF_GET_IFACE","IF_GET_PROTO","IF_IFACE_E1","IF_IFACE_SYNC_SERIAL","IF_IFACE_T1","IF_IFACE_V24","IF_IFACE_V35","IF_IFACE_X21","IF_IFACE_X21D","IF_LINK_MODE_DEFAULT","IF_LINK_MODE_DEFAULT","IF_LINK_MODE_DORMANT","IF_LINK_MODE_DORMANT","IF_LINK_MODE_TESTING","IF_LINK_MODE_TESTING","IF_OPER_DORMANT","IF_OPER_DORMANT","IF_OPER_DOWN","IF_OPER_DOWN","IF_OPER_LOWERLAYERDOWN","IF_OPER_LOWERLAYERDOWN","IF_OPER_NOTPRESENT","IF_OPER_NOTPRESENT","IF_OPER_TESTING","IF_OPER_TESTING","IF_OPER_UNKNOWN","IF_OPER_UNKNOWN","IF_OPER_UP","IF_OPER_UP","IF_PROTO_CISCO","IF_PROTO_FR","IF_PROTO_FR_ADD_ETH_PVC","IF_PROTO_FR_ADD_PVC","IF_PROTO_FR_DEL_ETH_PVC","IF_PROTO_FR_DEL_PVC","IF_PROTO_FR_ETH_PVC","IF_PROTO_FR_PVC","IF_PROTO_HDLC","IF_PROTO_HDLC_ETH","IF_PROTO_PPP","IF_PROTO_RAW","IF_PROTO_X25","INADDR_ALLHOSTS_GROUP","INADDR_ALLRTRS_GROUP","INADDR_ALLSNOOPERS_GROUP","INADDR_LOOPBACK","INADDR_MAX_LOCAL_GROUP","INADDR_UNSPEC_GROUP","IN_CLASSA_HOST","IN_CLASSA_MAX","IN_CLASSA_NET","IN_CLASSA_NSHIFT","IN_CLASSB_HOST","IN_CLASSB_MAX","IN_CLASSB_NET","IN_CLASSB_NSHIFT","IN_CLASSC_HOST","IN_CLASSC_NET","IN_CLASSC_NSHIFT","IN_CLASSE_NET","IN_CLASSE_NSHIFT","IN_LOOPBACKNET","IN_MULTICAST_NET","IP6T_BASE_CTL","IP6T_CONTINUE","IP6T_ERROR_TARGET","IP6T_FUNCTION_MAXNAMELEN","IP6T_F_GOTO","IP6T_F_MASK","IP6T_F_PROTO","IP6T_F_TOS","IP6T_ICMP_INV","IP6T_INV_DSTIP","IP6T_INV_FRAG","IP6T_INV_MASK","IP6T_INV_PROTO","IP6T_INV_SRCIP","IP6T_INV_TOS","IP6T_INV_VIA_IN","IP6T_INV_VIA_OUT","IP6T_RETURN","IP6T_SO_GET_ENTRIES","IP6T_SO_GET_INFO","IP6T_SO_GET_MAX","IP6T_SO_GET_REVISION_MATCH","IP6T_SO_GET_REVISION_TARGET","IP6T_SO_ORIGINAL_DST","IP6T_SO_SET_ADD_COUNTERS","IP6T_SO_SET_MAX","IP6T_SO_SET_REPLACE","IP6T_STANDARD_TARGET","IP6T_TABLE_MAXNAMELEN","IP6T_TCP_INV_DSTPT","IP6T_TCP_INV_FLAGS","IP6T_TCP_INV_MASK","IP6T_TCP_INV_OPTION","IP6T_TCP_INV_SRCPT","IP6T_UDP_INV_DSTPT","IP6T_UDP_INV_MASK","IP6T_UDP_INV_SRCPT","IPDEFTTL","IPOPT_CIPSO","IPOPT_CLASS_MASK","IPOPT_CONTROL","IPOPT_COPY","IPOPT_END","IPOPT_EOL","IPOPT_LSRR","IPOPT_MEASUREMENT","IPOPT_MINOFF","IPOPT_NOOP","IPOPT_NOP","IPOPT_NUMBER_MASK","IPOPT_OFFSET","IPOPT_OLEN","IPOPT_OPTVAL","IPOPT_RA","IPOPT_RESERVED1","IPOPT_RESERVED2","IPOPT_RR","IPOPT_SEC","IPOPT_SID","IPOPT_SSRR","IPOPT_TIMESTAMP","IPOPT_TS","IPOPT_TS_PRESPEC","IPOPT_TS_TSANDADDR","IPOPT_TS_TSONLY","IPPROTO_AH","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_ESP","IPPROTO_ETHERNET","IPPROTO_ETHERNET","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_IPV6","IPPROTO_L2TP","IPPROTO_L2TP","IPPROTO_MAX","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDP","IPPROTO_UDPLITE","IPPROTO_UDPLITE","IPTOS_LOWDELAY","IPTOS_MINCOST","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASH","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_MASK","IPTOS_PREC_NETCONTROL","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_RELIABILITY","IPTOS_THROUGHPUT","IPTOS_TOS_MASK","IPV4_BEET_PHMAXLEN","IPV4_DEVCONF_ACCEPT_LOCAL","IPV4_DEVCONF_ACCEPT_LOCAL","IPV4_DEVCONF_ACCEPT_REDIRECTS","IPV4_DEVCONF_ACCEPT_REDIRECTS","IPV4_DEVCONF_ACCEPT_SOURCE_ROUTE","IPV4_DEVCONF_ACCEPT_SOURCE_ROUTE","IPV4_DEVCONF_ARPFILTER","IPV4_DEVCONF_ARPFILTER","IPV4_DEVCONF_ARP_ACCEPT","IPV4_DEVCONF_ARP_ACCEPT","IPV4_DEVCONF_ARP_ANNOUNCE","IPV4_DEVCONF_ARP_ANNOUNCE","IPV4_DEVCONF_ARP_EVICT_NOCARRIER","IPV4_DEVCONF_ARP_EVICT_NOCARRIER","IPV4_DEVCONF_ARP_IGNORE","IPV4_DEVCONF_ARP_IGNORE","IPV4_DEVCONF_ARP_NOTIFY","IPV4_DEVCONF_ARP_NOTIFY","IPV4_DEVCONF_BC_FORWARDING","IPV4_DEVCONF_BC_FORWARDING","IPV4_DEVCONF_BOOTP_RELAY","IPV4_DEVCONF_BOOTP_RELAY","IPV4_DEVCONF_DROP_GRATUITOUS_ARP","IPV4_DEVCONF_DROP_GRATUITOUS_ARP","IPV4_DEVCONF_DROP_UNICAST_IN_L2_MULTICAST","IPV4_DEVCONF_DROP_UNICAST_IN_L2_MULTICAST","IPV4_DEVCONF_FORCE_IGMP_VERSION","IPV4_DEVCONF_FORCE_IGMP_VERSION","IPV4_DEVCONF_FORWARDING","IPV4_DEVCONF_FORWARDING","IPV4_DEVCONF_IGMPV2_UNSOLICITED_REPORT_INTERVAL","IPV4_DEVCONF_IGMPV2_UNSOLICITED_REPORT_INTERVAL","IPV4_DEVCONF_IGMPV3_UNSOLICITED_REPORT_INTERVAL","IPV4_DEVCONF_IGMPV3_UNSOLICITED_REPORT_INTERVAL","IPV4_DEVCONF_IGNORE_ROUTES_WITH_LINKDOWN","IPV4_DEVCONF_IGNORE_ROUTES_WITH_LINKDOWN","IPV4_DEVCONF_LOG_MARTIANS","IPV4_DEVCONF_LOG_MARTIANS","IPV4_DEVCONF_MC_FORWARDING","IPV4_DEVCONF_MC_FORWARDING","IPV4_DEVCONF_MEDIUM_ID","IPV4_DEVCONF_MEDIUM_ID","IPV4_DEVCONF_NOPOLICY","IPV4_DEVCONF_NOPOLICY","IPV4_DEVCONF_NOXFRM","IPV4_DEVCONF_NOXFRM","IPV4_DEVCONF_PROMOTE_SECONDARIES","IPV4_DEVCONF_PROMOTE_SECONDARIES","IPV4_DEVCONF_PROXY_ARP","IPV4_DEVCONF_PROXY_ARP","IPV4_DEVCONF_PROXY_ARP_PVLAN","IPV4_DEVCONF_PROXY_ARP_PVLAN","IPV4_DEVCONF_ROUTE_LOCALNET","IPV4_DEVCONF_ROUTE_LOCALNET","IPV4_DEVCONF_RP_FILTER","IPV4_DEVCONF_RP_FILTER","IPV4_DEVCONF_SECURE_REDIRECTS","IPV4_DEVCONF_SECURE_REDIRECTS","IPV4_DEVCONF_SEND_REDIRECTS","IPV4_DEVCONF_SEND_REDIRECTS","IPV4_DEVCONF_SHARED_MEDIA","IPV4_DEVCONF_SHARED_MEDIA","IPV4_DEVCONF_SRC_VMARK","IPV4_DEVCONF_SRC_VMARK","IPV4_DEVCONF_TAG","IPV4_DEVCONF_TAG","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADDR_PREFERENCES","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_AUTOFLOWLABEL","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_FLOWINFO","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_FLOWINFO_SEND","IPV6_FLOWLABEL_MGR","IPV6_FL_A_GET","IPV6_FL_A_PUT","IPV6_FL_A_RENEW","IPV6_FL_F_CREATE","IPV6_FL_F_EXCL","IPV6_FL_F_REFLECT","IPV6_FL_F_REMOTE","IPV6_FL_S_ANY","IPV6_FL_S_EXCL","IPV6_FL_S_NONE","IPV6_FL_S_PROCESS","IPV6_FL_S_USER","IPV6_FREEBIND","IPV6_HDRINCL","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_MINHOPCOUNT","IPV6_MIN_MTU","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_ALL","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_OPT_ROUTERALERT_MLD","IPV6_ORIGDSTADDR","IPV6_PATHMTU","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_NONCGA","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_TMP","IPV6_PRIORITY_10","IPV6_PRIORITY_11","IPV6_PRIORITY_12","IPV6_PRIORITY_13","IPV6_PRIORITY_14","IPV6_PRIORITY_15","IPV6_PRIORITY_8","IPV6_PRIORITY_9","IPV6_PRIORITY_BULK","IPV6_PRIORITY_CONTROL","IPV6_PRIORITY_FILLER","IPV6_PRIORITY_INTERACTIVE","IPV6_PRIORITY_RESERVED1","IPV6_PRIORITY_RESERVED2","IPV6_PRIORITY_UNATTENDED","IPV6_PRIORITY_UNCHARACTERIZED","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVERR_RFC4884","IPV6_RECVFRAGSIZE","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVORIGDSTADDR","IPV6_RECVPATHMTU","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_ROUTER_ALERT_ISOLATE","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_SRCRT_STRICT","IPV6_SRCRT_TYPE_0","IPV6_SRCRT_TYPE_2","IPV6_SRCRT_TYPE_3","IPV6_SRCRT_TYPE_4","IPV6_TCLASS","IPV6_TLV_CALIPSO","IPV6_TLV_HAO","IPV6_TLV_IOAM","IPV6_TLV_JUMBO","IPV6_TLV_PAD1","IPV6_TLV_PADN","IPV6_TLV_ROUTERALERT","IPV6_TRANSPARENT","IPV6_UNICAST_HOPS","IPV6_UNICAST_IF","IPV6_V6ONLY","IPV6_XFRM_POLICY","IPVERSION","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BIND_ADDRESS_NO_PORT","IP_BLOCK_SOURCE","IP_CHECKSUM","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_FREEBIND","IP_HDRINCL","IP_IPSEC_POLICY","IP_LOCAL_PORT_RANGE","IP_MINTTL","IP_MSFILTER","IP_MTU","IP_MTU_DISCOVER","IP_MULTICAST_ALL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_NODEFRAG","IP_OPTIONS","IP_ORIGDSTADDR","IP_PASSSEC","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVERR_RFC4884","IP_RECVFRAGSIZE","IP_RECVOPTS","IP_RECVORIGDSTADDR","IP_RECVRETOPTS","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_ROUTER_ALERT","IP_TOS","IP_TRANSPARENT","IP_TTL","IP_UNBLOCK_SOURCE","IP_UNICAST_IF","IP_XFRM_POLICY","LMI_ANSI","LMI_CCITT","LMI_CISCO","LMI_DEFAULT","LMI_NONE","MAXTTL","MAX_IPOPTLEN","MCAST_BLOCK_SOURCE","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","MCAST_UNBLOCK_SOURCE","MSG_CMSG_CLOEXEC","MSG_CONFIRM","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_FIN","MSG_MORE","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_PROBE","MSG_RST","MSG_SYN","MSG_TRUNC","MSG_WAITALL","NFPROTO_ARP","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_BRIDGE","NFPROTO_DECNET","NFPROTO_DECNET","NFPROTO_INET","NFPROTO_INET","NFPROTO_IPV4","NFPROTO_IPV4","NFPROTO_IPV6","NFPROTO_IPV6","NFPROTO_NETDEV","NFPROTO_NETDEV","NFPROTO_NUMPROTO","NFPROTO_NUMPROTO","NFPROTO_UNSPEC","NFPROTO_UNSPEC","NF_ACCEPT","NF_DROP","NF_INET_FORWARD","NF_INET_INGRESS","NF_INET_LOCAL_IN","NF_INET_LOCAL_OUT","NF_INET_NUMHOOKS","NF_INET_POST_ROUTING","NF_INET_PRE_ROUTING","NF_IP6_FORWARD","NF_IP6_LOCAL_IN","NF_IP6_LOCAL_OUT","NF_IP6_NUMHOOKS","NF_IP6_POST_ROUTING","NF_IP6_PRE_ROUTING","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_FILTER","NF_IP6_PRI_FIRST","NF_IP6_PRI_LAST","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_RAW","NF_IP6_PRI_RAW_BEFORE_DEFRAG","NF_IP6_PRI_SECURITY","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_SELINUX_LAST","NF_IP_FORWARD","NF_IP_LOCAL_IN","NF_IP_LOCAL_OUT","NF_IP_NUMHOOKS","NF_IP_POST_ROUTING","NF_IP_PRE_ROUTING","NF_IP_PRI_CONNTRACK","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_FILTER","NF_IP_PRI_FIRST","NF_IP_PRI_LAST","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_NAT_SRC","NF_IP_PRI_RAW","NF_IP_PRI_RAW_BEFORE_DEFRAG","NF_IP_PRI_SECURITY","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_SELINUX_LAST","NF_MAX_VERDICT","NF_NETDEV_EGRESS","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NF_QUEUE","NF_REPEAT","NF_STOLEN","NF_STOP","NF_VERDICT_BITS","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_MASK","NF_VERDICT_QBITS","NF_VERDICT_QMASK","PARITY_CRC16_PR0","PARITY_CRC16_PR0_CCITT","PARITY_CRC16_PR1","PARITY_CRC16_PR1_CCITT","PARITY_CRC32_PR0_CCITT","PARITY_CRC32_PR1_CCITT","PARITY_DEFAULT","PARITY_NONE","SCM_CREDENTIALS","SCM_RIGHTS","SCM_SECURITY","SCM_TIMESTAMP","SCM_TIMESTAMPING","SCM_TIMESTAMPING_OPT_STATS","SCM_TIMESTAMPING_PKTINFO","SCM_TIMESTAMPNS","SCM_TXTIME","SCM_WIFI_STATUS","SHUT_RD","SHUT_RDWR","SHUT_WR","SIOCGSTAMPNS_OLD","SIOCGSTAMP_OLD","SOCK_BUF_LOCK_MASK","SOCK_DGRAM","SOCK_RAW","SOCK_RCVBUF_LOCK","SOCK_RDM","SOCK_SEQPACKET","SOCK_SNDBUF_LOCK","SOCK_STREAM","SOCK_TXREHASH_DEFAULT","SOCK_TXREHASH_DISABLED","SOCK_TXREHASH_ENABLED","SOL_AAL","SOL_ALG","SOL_ATALK","SOL_ATM","SOL_AX25","SOL_BLUETOOTH","SOL_CAIF","SOL_DCCP","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IPX","SOL_IRDA","SOL_IUCV","SOL_KCM","SOL_LLC","SOL_MCTP","SOL_MPTCP","SOL_NETBEUI","SOL_NETLINK","SOL_NETROM","SOL_NFC","SOL_PACKET","SOL_PNPIPE","SOL_PPPOL2TP","SOL_RAW","SOL_RDS","SOL_ROSE","SOL_RXRPC","SOL_SCTP","SOL_SMC","SOL_SOCKET","SOL_TCP","SOL_TIPC","SOL_TLS","SOL_UDP","SOL_UDPLITE","SOL_X25","SOL_XDP","SO_ACCEPTCONN","SO_ATTACH_BPF","SO_ATTACH_FILTER","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_BINDTODEVICE","SO_BINDTOIFINDEX","SO_BPF_EXTENSIONS","SO_BROADCAST","SO_BSDCOMPAT","SO_BUF_LOCK","SO_BUSY_POLL","SO_BUSY_POLL_BUDGET","SO_CNX_ADVICE","SO_COOKIE","SO_DEBUG","SO_DETACH_BPF","SO_DETACH_FILTER","SO_DETACH_REUSEPORT_BPF","SO_DOMAIN","SO_DONTROUTE","SO_ERROR","SO_GET_FILTER","SO_INCOMING_CPU","SO_INCOMING_NAPI_ID","SO_KEEPALIVE","SO_LINGER","SO_LOCK_FILTER","SO_MARK","SO_MAX_PACING_RATE","SO_MEMINFO","SO_NETNS_COOKIE","SO_NOFCS","SO_NO_CHECK","SO_OOBINLINE","SO_ORIGINAL_DST","SO_PASSCRED","SO_PASSSEC","SO_PEEK_OFF","SO_PEERCRED","SO_PEERGROUPS","SO_PEERNAME","SO_PEERSEC","SO_PREFER_BUSY_POLL","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVMARK","SO_RCVTIMEO","SO_RCVTIMEO_NEW","SO_RCVTIMEO_OLD","SO_RESERVE_MEM","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SELECT_ERR_QUEUE","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_SNDTIMEO_NEW","SO_SNDTIMEO_OLD","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPING_NEW","SO_TIMESTAMPING_OLD","SO_TIMESTAMPNS","SO_TIMESTAMPNS_NEW","SO_TIMESTAMPNS_OLD","SO_TIMESTAMP_NEW","SO_TIMESTAMP_OLD","SO_TXREHASH","SO_TXTIME","SO_TYPE","SO_WIFI_STATUS","SO_ZEROCOPY","SS_CONNECTED","SS_CONNECTING","SS_DISCONNECTING","SS_FREE","SS_UNCONNECTED","SYS_ACCEPT","SYS_ACCEPT4","SYS_BIND","SYS_CONNECT","SYS_GETPEERNAME","SYS_GETSOCKNAME","SYS_GETSOCKOPT","SYS_LISTEN","SYS_RECV","SYS_RECVFROM","SYS_RECVMMSG","SYS_RECVMSG","SYS_SEND","SYS_SENDMMSG","SYS_SENDMSG","SYS_SENDTO","SYS_SETSOCKOPT","SYS_SHUTDOWN","SYS_SOCKET","SYS_SOCKETPAIR","TCPI_OPT_ECN","TCPI_OPT_ECN_SEEN","TCPI_OPT_SACK","TCPI_OPT_SYN_DATA","TCPI_OPT_TIMESTAMPS","TCPI_OPT_WSCALE","TCP_CA_CWR","TCP_CA_Disorder","TCP_CA_Loss","TCP_CA_Open","TCP_CA_Recovery","TCP_CC_INFO","TCP_CM_INQ","TCP_CONGESTION","TCP_CORK","TCP_DATA_OFFSET","TCP_DATA_OFFSET","TCP_DEFER_ACCEPT","TCP_FASTOPEN","TCP_FASTOPEN_CONNECT","TCP_FASTOPEN_KEY","TCP_FASTOPEN_NO_COOKIE","TCP_FLAG_ACK","TCP_FLAG_ACK","TCP_FLAG_CWR","TCP_FLAG_CWR","TCP_FLAG_ECE","TCP_FLAG_ECE","TCP_FLAG_FIN","TCP_FLAG_FIN","TCP_FLAG_PSH","TCP_FLAG_PSH","TCP_FLAG_RST","TCP_FLAG_RST","TCP_FLAG_SYN","TCP_FLAG_SYN","TCP_FLAG_URG","TCP_FLAG_URG","TCP_INFO","TCP_INQ","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MD5SIG","TCP_MD5SIG_EXT","TCP_MD5SIG_FLAG_IFINDEX","TCP_MD5SIG_FLAG_PREFIX","TCP_MD5SIG_MAXKEYLEN","TCP_MSS_DEFAULT","TCP_MSS_DESIRED","TCP_NLA_BUSY","TCP_NLA_BUSY","TCP_NLA_BYTES_NOTSENT","TCP_NLA_BYTES_NOTSENT","TCP_NLA_BYTES_RETRANS","TCP_NLA_BYTES_RETRANS","TCP_NLA_BYTES_SENT","TCP_NLA_BYTES_SENT","TCP_NLA_CA_STATE","TCP_NLA_CA_STATE","TCP_NLA_DATA_SEGS_OUT","TCP_NLA_DATA_SEGS_OUT","TCP_NLA_DELIVERED","TCP_NLA_DELIVERED","TCP_NLA_DELIVERED_CE","TCP_NLA_DELIVERED_CE","TCP_NLA_DELIVERY_RATE","TCP_NLA_DELIVERY_RATE","TCP_NLA_DELIVERY_RATE_APP_LMT","TCP_NLA_DELIVERY_RATE_APP_LMT","TCP_NLA_DSACK_DUPS","TCP_NLA_DSACK_DUPS","TCP_NLA_EDT","TCP_NLA_EDT","TCP_NLA_MIN_RTT","TCP_NLA_MIN_RTT","TCP_NLA_PACING_RATE","TCP_NLA_PACING_RATE","TCP_NLA_PAD","TCP_NLA_PAD","TCP_NLA_RECUR_RETRANS","TCP_NLA_RECUR_RETRANS","TCP_NLA_REHASH","TCP_NLA_REHASH","TCP_NLA_REORDERING","TCP_NLA_REORDERING","TCP_NLA_REORD_SEEN","TCP_NLA_REORD_SEEN","TCP_NLA_RWND_LIMITED","TCP_NLA_RWND_LIMITED","TCP_NLA_SNDBUF_LIMITED","TCP_NLA_SNDBUF_LIMITED","TCP_NLA_SNDQ_SIZE","TCP_NLA_SNDQ_SIZE","TCP_NLA_SND_CWND","TCP_NLA_SND_CWND","TCP_NLA_SND_SSTHRESH","TCP_NLA_SND_SSTHRESH","TCP_NLA_SRTT","TCP_NLA_SRTT","TCP_NLA_TIMEOUT_REHASH","TCP_NLA_TIMEOUT_REHASH","TCP_NLA_TOTAL_RETRANS","TCP_NLA_TOTAL_RETRANS","TCP_NLA_TTL","TCP_NLA_TTL","TCP_NODELAY","TCP_NOTSENT_LOWAT","TCP_NO_QUEUE","TCP_NO_QUEUE","TCP_QUEUES_NR","TCP_QUEUES_NR","TCP_QUEUE_SEQ","TCP_QUICKACK","TCP_RECEIVE_ZEROCOPY_FLAG_TLB_CLEAN_HINT","TCP_RECV_QUEUE","TCP_RECV_QUEUE","TCP_REPAIR","TCP_REPAIR_OFF","TCP_REPAIR_OFF_NO_WP","TCP_REPAIR_ON","TCP_REPAIR_OPTIONS","TCP_REPAIR_QUEUE","TCP_REPAIR_WINDOW","TCP_RESERVED_BITS","TCP_RESERVED_BITS","TCP_SAVED_SYN","TCP_SAVE_SYN","TCP_SEND_QUEUE","TCP_SEND_QUEUE","TCP_SYNCNT","TCP_THIN_DUPACK","TCP_THIN_LINEAR_TIMEOUTS","TCP_TIMESTAMP","TCP_TX_DELAY","TCP_ULP","TCP_USER_TIMEOUT","TCP_WINDOW_CLAMP","TCP_ZEROCOPY_RECEIVE","TFO_COOKIE_UNAVAILABLE","TFO_DATA_NOT_ACKED","TFO_STATUS_UNSPEC","TFO_SYN_RETRANSMITTED","UNIX_PATH_MAX","XT_CONTINUE","XT_ERROR_TARGET","XT_EXTENSION_MAXNAMELEN","XT_FUNCTION_MAXNAMELEN","XT_INV_PROTO","XT_RETURN","XT_STANDARD_TARGET","XT_TABLE_MAXNAMELEN","XT_TCP_INV_DSTPT","XT_TCP_INV_FLAGS","XT_TCP_INV_MASK","XT_TCP_INV_OPTION","XT_TCP_INV_SRCPT","XT_UDP_INV_DSTPT","XT_UDP_INV_MASK","XT_UDP_INV_SRCPT","_K_SS_MAXSIZE","__BindgenBitfieldUnit","__BindgenUnionField","__IPV4_DEVCONF_MAX","__IPV4_DEVCONF_MAX","__IncompleteArrayField","__LITTLE_ENDIAN","__SOCK_SIZE__","__SO_ACCEPTCON","__align","__be16","__be32","__be64","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_2","__data","__empty_imsf_slist_flex","__flr_pad","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_time_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sa_family_t","__kernel_size_t","__kernel_sockaddr_storage","__kernel_sockaddr_storage__bindgen_ty_1","__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time64_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__pad","__poll_t","__s16","__s32","__s64","__s8","__storage","__sum16","__u16","__u32","__u64","__u8","__wsum","_address","_address","_address","_bindgen_ty_1","_bindgen_ty_2","_bindgen_ty_3","_bindgen_ty_4","_bindgen_ty_5","_bindgen_ty_6","_bindgen_ty_7","_bindgen_ty_8","_bindgen_ty_9","_bitfield_1","_bitfield_1","_bitfield_1","_bitfield_1","_bitfield_align_1","_bitfield_align_1","_bitfield_align_1","_bitfield_align_1","_xt_align","ack","ack_seq","addr","addr","addr","address","addrs","addrs","all","as_mut","as_mut_ptr","as_mut_slice","as_ptr","as_ref","as_slice","auth_data","base_addr","bcnt","bindgen_union_field","bindgen_union_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","cisco","cisco_proto","clock_rate","clock_rate","clock_type","clock_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmsg_len","cmsg_level","cmsg_type","cmsghdr","code","comefrom","copybuf_address","copybuf_len","counters","counters","counters","cpi","cwr","daddr","daddr","daddr","daddr","data","data","dce","dce","default","default","default","dest","dlci","dlci","dma","dmsk","doff","dpts","dpts","dst","ece","elems","enc_data","encoding","entries","entry","entry","entrytable","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","err","errorname","fin","flags","flags","flags","flg_cmp","flg_mask","flow_lbl","flr_action","flr_dst","flr_expires","flr_flags","flr_label","flr_linger","flr_share","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fr","fr_proto","fr_proto_pvc","fr_proto_pvc_info","fr_pvc","fr_pvc_info","frag_off","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_bit","gf_fmode","gf_fmode_aux","gf_group","gf_group_aux","gf_interface","gf_interface_aux","gf_numsrc","gf_numsrc_aux","gf_slist","gf_slist_flex","gid","gr_group","gr_interface","group_filter","group_filter__bindgen_ty_1","group_filter__bindgen_ty_1__bindgen_ty_1","group_filter__bindgen_ty_1__bindgen_ty_2","group_req","group_source_req","gsr_group","gsr_interface","gsr_source","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hdr","hdrlen","hdrlen","hdrlen","hdrlen","hook_entry","hook_entry","hop_limit","id","if_settings","if_settings__bindgen_ty_1","ifc_ifcu","ifc_len","ifconf","ifconf__bindgen_ty_1","ifcu_buf","ifcu_req","ifmap","ifr6_addr","ifr6_ifindex","ifr6_prefixlen","ifr_ifrn","ifr_ifru","ifreq","ifreq__bindgen_ty_1","ifreq__bindgen_ty_2","ifrn_name","ifru_addr","ifru_broadaddr","ifru_data","ifru_dstaddr","ifru_flags","ifru_hwaddr","ifru_ivalue","ifru_map","ifru_mtu","ifru_netmask","ifru_newname","ifru_settings","ifru_slave","ifs_ifsu","ihl","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","imsf_fmode","imsf_interface","imsf_multiaddr","imsf_numsrc","imsf_slist","imsf_slist_flex","in6","in6_addr","in6_addr__bindgen_ty_1","in6_flowlabel_req","in6_ifreq","in6_pktinfo","in6_u","in_","in_addr","in_pktinfo","iniface","iniface_mask","inq","interval","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invflags","invflags","invflags","invflags","iovec","ip","ip6","ip6_mtuinfo","ip6m_addr","ip6m_mtu","ip6t_entry","ip6t_error","ip6t_get_entries","ip6t_getinfo","ip6t_icmp","ip6t_ip6","ip6t_replace","ip6t_standard","ip_auth_hdr","ip_beet_phdr","ip_comp_hdr","ip_esp_hdr","ip_mreq","ip_mreq_source","ip_mreqn","ip_msfilter","ip_msfilter__bindgen_ty_1","ip_msfilter__bindgen_ty_1__bindgen_ty_1","ip_msfilter__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","iphdr","iphdr__bindgen_ty_1","iphdr__bindgen_ty_1__bindgen_ty_1","iphdr__bindgen_ty_1__bindgen_ty_2","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6","ipv6_destopt_hao","ipv6_mreq","ipv6_opt_hdr","ipv6_rt_hdr","ipv6hdr","ipv6hdr__bindgen_ty_1","ipv6hdr__bindgen_ty_1__bindgen_ty_1","ipv6hdr__bindgen_ty_1__bindgen_ty_2","ipv6mr_ifindex","ipv6mr_multiaddr","irq","kernel","kernel","l_linger","l_onoff","length","length","linger","lmi","loopback","loopback","master","match_","match_size","match_size","match_size","max_window","mem_end","mem_start","mmsghdr","modulo","msg_control","msg_control","msg_controllen","msg_controllen","msg_flags","msg_flags","msg_hdr","msg_iov","msg_iovlen","msg_len","msg_name","msg_namelen","msghdr","n2","n391","n392","n393","name","name","name","name","name","name","name","net_device_flags","new","new","new","new_bitfield_1","new_bitfield_1","new_bitfield_1","new_bitfield_1","next_offset","nexthdr","nexthdr","nexthdr","nexthdr","nexthdr","nexthdr","nf_dev_hooks","nf_inet_addr","nf_inet_hooks","nf_ip6_hook_priorities","nf_ip_hook_priorities","nfcache","num_counters","num_counters","num_entries","num_entries","opt_code","opt_val","option","outiface","outiface_mask","padlen","parity","partial_cmp","payload_len","pcnt","pid","port","priority","proto","protocol","psh","raw_hdlc","raw_hdlc_proto","rcv_wnd","rcv_wup","recv_skip_hint","res1","reserved","reserved","reserved","reserved","reserved","revision","revision","revision","rst","rt0_hdr","rt2_hdr","rt_hdr","rt_hdr","s_addr","saddr","saddr","saddr","saddr","segments_left","seq","seq_no","seq_no","set","set_ack","set_bit","set_cwr","set_doff","set_ece","set_fin","set_ihl","set_priority","set_psh","set_res1","set_rst","set_syn","set_tcpi_delivery_rate_app_limited","set_tcpi_fastopen_client_fail","set_tcpi_rcv_wscale","set_tcpi_snd_wscale","set_urg","set_version","set_version","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","size","size","size","size","slot_map","smsk","snd_wl1","snd_wnd","sockaddr","sockaddr_in","sockaddr_in6","sockaddr_un","socket_state","socklen_t","source","spi","spi","spts","spts","src","ss_family","sun_family","sun_path","syn","sync","sync_serial_settings","t1","t2","t391","t392","target","target","target","target","target","target_offset","target_size","target_size","target_size","tcp_ca_state","tcp_diag_md5sig","tcp_fastopen_client_fail","tcp_info","tcp_md5sig","tcp_repair_opt","tcp_repair_window","tcp_word_hdr","tcp_zerocopy_receive","tcphdr","tcpi_advmss","tcpi_ato","tcpi_backoff","tcpi_busy_time","tcpi_bytes_acked","tcpi_bytes_received","tcpi_bytes_retrans","tcpi_bytes_sent","tcpi_ca_state","tcpi_data_segs_in","tcpi_data_segs_out","tcpi_delivered","tcpi_delivered_ce","tcpi_delivery_rate","tcpi_delivery_rate_app_limited","tcpi_dsack_dups","tcpi_fackets","tcpi_fastopen_client_fail","tcpi_last_ack_recv","tcpi_last_ack_sent","tcpi_last_data_recv","tcpi_last_data_sent","tcpi_lost","tcpi_max_pacing_rate","tcpi_min_rtt","tcpi_notsent_bytes","tcpi_options","tcpi_pacing_rate","tcpi_pmtu","tcpi_probes","tcpi_rcv_mss","tcpi_rcv_ooopack","tcpi_rcv_rtt","tcpi_rcv_space","tcpi_rcv_ssthresh","tcpi_rcv_wnd","tcpi_rcv_wscale","tcpi_rehash","tcpi_reord_seen","tcpi_reordering","tcpi_retrans","tcpi_retransmits","tcpi_rto","tcpi_rtt","tcpi_rttvar","tcpi_rwnd_limited","tcpi_sacked","tcpi_segs_in","tcpi_segs_out","tcpi_snd_cwnd","tcpi_snd_mss","tcpi_snd_ssthresh","tcpi_snd_wnd","tcpi_snd_wscale","tcpi_sndbuf_limited","tcpi_state","tcpi_total_retrans","tcpi_unacked","tcpm_addr","tcpm_addr","tcpm_family","tcpm_flags","tcpm_ifindex","tcpm_key","tcpm_key","tcpm_keylen","tcpm_keylen","tcpm_prefixlen","tcpm_prefixlen","te1","te1_settings","timeout","tos","tos","tot_len","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u16_","u32_","u64_","u6_addr16","u6_addr32","u6_addr8","u8_","ucred","uid","underflow","underflow","urg","urg_ptr","user","user","valid_hooks","valid_hooks","verdict","version","version","window","window","words","x25","x25_hdlc_proto","xt_counters","xt_counters_info","xt_entry_match","xt_entry_match__bindgen_ty_1","xt_entry_match__bindgen_ty_1__bindgen_ty_1","xt_entry_match__bindgen_ty_1__bindgen_ty_2","xt_entry_target","xt_entry_target__bindgen_ty_1","xt_entry_target__bindgen_ty_1__bindgen_ty_1","xt_entry_target__bindgen_ty_1__bindgen_ty_2","xt_error_target","xt_get_revision","xt_match","xt_standard_target","xt_target","xt_tcp","xt_udp","BRIDGE_MODE_HAIRPIN","BRIDGE_MODE_HAIRPIN","BRIDGE_MODE_UNSPEC","BRIDGE_MODE_UNSPEC","FDB_NOTIFY_BIT","FDB_NOTIFY_BIT","FDB_NOTIFY_INACTIVE_BIT","FDB_NOTIFY_INACTIVE_BIT","GENEVE_DF_INHERIT","GENEVE_DF_MAX","GENEVE_DF_SET","GENEVE_DF_UNSET","GTP_ROLE_GGSN","GTP_ROLE_SGSN","HSR_PROTOCOL_HSR","HSR_PROTOCOL_HSR","HSR_PROTOCOL_MAX","HSR_PROTOCOL_MAX","HSR_PROTOCOL_PRP","HSR_PROTOCOL_PRP","IFAPROT_KERNEL_LL","IFAPROT_KERNEL_LO","IFAPROT_KERNEL_RA","IFAPROT_UNSPEC","IFA_ADDRESS","IFA_ADDRESS","IFA_ANYCAST","IFA_ANYCAST","IFA_BROADCAST","IFA_BROADCAST","IFA_CACHEINFO","IFA_CACHEINFO","IFA_FLAGS","IFA_FLAGS","IFA_F_DADFAILED","IFA_F_DEPRECATED","IFA_F_HOMEADDRESS","IFA_F_MANAGETEMPADDR","IFA_F_MCAUTOJOIN","IFA_F_NODAD","IFA_F_NOPREFIXROUTE","IFA_F_OPTIMISTIC","IFA_F_PERMANENT","IFA_F_SECONDARY","IFA_F_STABLE_PRIVACY","IFA_F_TEMPORARY","IFA_F_TENTATIVE","IFA_LABEL","IFA_LABEL","IFA_LOCAL","IFA_LOCAL","IFA_MULTICAST","IFA_MULTICAST","IFA_PROTO","IFA_PROTO","IFA_RT_PRIORITY","IFA_RT_PRIORITY","IFA_TARGET_NETNSID","IFA_TARGET_NETNSID","IFA_UNSPEC","IFA_UNSPEC","IFLA_ADDRESS","IFLA_ADDRESS","IFLA_AF_SPEC","IFLA_AF_SPEC","IFLA_ALLMULTI","IFLA_ALLMULTI","IFLA_ALT_IFNAME","IFLA_ALT_IFNAME","IFLA_BAREUDP_ETHERTYPE","IFLA_BAREUDP_ETHERTYPE","IFLA_BAREUDP_MULTIPROTO_MODE","IFLA_BAREUDP_MULTIPROTO_MODE","IFLA_BAREUDP_PORT","IFLA_BAREUDP_PORT","IFLA_BAREUDP_SRCPORT_MIN","IFLA_BAREUDP_SRCPORT_MIN","IFLA_BAREUDP_UNSPEC","IFLA_BAREUDP_UNSPEC","IFLA_BOND_ACTIVE_SLAVE","IFLA_BOND_ACTIVE_SLAVE","IFLA_BOND_AD_ACTOR_SYSTEM","IFLA_BOND_AD_ACTOR_SYSTEM","IFLA_BOND_AD_ACTOR_SYS_PRIO","IFLA_BOND_AD_ACTOR_SYS_PRIO","IFLA_BOND_AD_INFO","IFLA_BOND_AD_INFO","IFLA_BOND_AD_INFO_ACTOR_KEY","IFLA_BOND_AD_INFO_ACTOR_KEY","IFLA_BOND_AD_INFO_AGGREGATOR","IFLA_BOND_AD_INFO_AGGREGATOR","IFLA_BOND_AD_INFO_NUM_PORTS","IFLA_BOND_AD_INFO_NUM_PORTS","IFLA_BOND_AD_INFO_PARTNER_KEY","IFLA_BOND_AD_INFO_PARTNER_KEY","IFLA_BOND_AD_INFO_PARTNER_MAC","IFLA_BOND_AD_INFO_PARTNER_MAC","IFLA_BOND_AD_INFO_UNSPEC","IFLA_BOND_AD_INFO_UNSPEC","IFLA_BOND_AD_LACP_ACTIVE","IFLA_BOND_AD_LACP_ACTIVE","IFLA_BOND_AD_LACP_RATE","IFLA_BOND_AD_LACP_RATE","IFLA_BOND_AD_SELECT","IFLA_BOND_AD_SELECT","IFLA_BOND_AD_USER_PORT_KEY","IFLA_BOND_AD_USER_PORT_KEY","IFLA_BOND_ALL_SLAVES_ACTIVE","IFLA_BOND_ALL_SLAVES_ACTIVE","IFLA_BOND_ARP_ALL_TARGETS","IFLA_BOND_ARP_ALL_TARGETS","IFLA_BOND_ARP_INTERVAL","IFLA_BOND_ARP_INTERVAL","IFLA_BOND_ARP_IP_TARGET","IFLA_BOND_ARP_IP_TARGET","IFLA_BOND_ARP_VALIDATE","IFLA_BOND_ARP_VALIDATE","IFLA_BOND_DOWNDELAY","IFLA_BOND_DOWNDELAY","IFLA_BOND_FAIL_OVER_MAC","IFLA_BOND_FAIL_OVER_MAC","IFLA_BOND_LP_INTERVAL","IFLA_BOND_LP_INTERVAL","IFLA_BOND_MIIMON","IFLA_BOND_MIIMON","IFLA_BOND_MIN_LINKS","IFLA_BOND_MIN_LINKS","IFLA_BOND_MISSED_MAX","IFLA_BOND_MISSED_MAX","IFLA_BOND_MODE","IFLA_BOND_MODE","IFLA_BOND_NS_IP6_TARGET","IFLA_BOND_NS_IP6_TARGET","IFLA_BOND_NUM_PEER_NOTIF","IFLA_BOND_NUM_PEER_NOTIF","IFLA_BOND_PACKETS_PER_SLAVE","IFLA_BOND_PACKETS_PER_SLAVE","IFLA_BOND_PEER_NOTIF_DELAY","IFLA_BOND_PEER_NOTIF_DELAY","IFLA_BOND_PRIMARY","IFLA_BOND_PRIMARY","IFLA_BOND_PRIMARY_RESELECT","IFLA_BOND_PRIMARY_RESELECT","IFLA_BOND_RESEND_IGMP","IFLA_BOND_RESEND_IGMP","IFLA_BOND_SLAVE_AD_ACTOR_OPER_PORT_STATE","IFLA_BOND_SLAVE_AD_ACTOR_OPER_PORT_STATE","IFLA_BOND_SLAVE_AD_AGGREGATOR_ID","IFLA_BOND_SLAVE_AD_AGGREGATOR_ID","IFLA_BOND_SLAVE_AD_PARTNER_OPER_PORT_STATE","IFLA_BOND_SLAVE_AD_PARTNER_OPER_PORT_STATE","IFLA_BOND_SLAVE_LINK_FAILURE_COUNT","IFLA_BOND_SLAVE_LINK_FAILURE_COUNT","IFLA_BOND_SLAVE_MII_STATUS","IFLA_BOND_SLAVE_MII_STATUS","IFLA_BOND_SLAVE_PERM_HWADDR","IFLA_BOND_SLAVE_PERM_HWADDR","IFLA_BOND_SLAVE_PRIO","IFLA_BOND_SLAVE_PRIO","IFLA_BOND_SLAVE_QUEUE_ID","IFLA_BOND_SLAVE_QUEUE_ID","IFLA_BOND_SLAVE_STATE","IFLA_BOND_SLAVE_STATE","IFLA_BOND_SLAVE_UNSPEC","IFLA_BOND_SLAVE_UNSPEC","IFLA_BOND_TLB_DYNAMIC_LB","IFLA_BOND_TLB_DYNAMIC_LB","IFLA_BOND_UNSPEC","IFLA_BOND_UNSPEC","IFLA_BOND_UPDELAY","IFLA_BOND_UPDELAY","IFLA_BOND_USE_CARRIER","IFLA_BOND_USE_CARRIER","IFLA_BOND_XMIT_HASH_POLICY","IFLA_BOND_XMIT_HASH_POLICY","IFLA_BROADCAST","IFLA_BROADCAST","IFLA_BRPORT_BACKUP_PORT","IFLA_BRPORT_BACKUP_PORT","IFLA_BRPORT_BCAST_FLOOD","IFLA_BRPORT_BCAST_FLOOD","IFLA_BRPORT_BRIDGE_ID","IFLA_BRPORT_BRIDGE_ID","IFLA_BRPORT_CONFIG_PENDING","IFLA_BRPORT_CONFIG_PENDING","IFLA_BRPORT_COST","IFLA_BRPORT_COST","IFLA_BRPORT_DESIGNATED_COST","IFLA_BRPORT_DESIGNATED_COST","IFLA_BRPORT_DESIGNATED_PORT","IFLA_BRPORT_DESIGNATED_PORT","IFLA_BRPORT_FAST_LEAVE","IFLA_BRPORT_FAST_LEAVE","IFLA_BRPORT_FLUSH","IFLA_BRPORT_FLUSH","IFLA_BRPORT_FORWARD_DELAY_TIMER","IFLA_BRPORT_FORWARD_DELAY_TIMER","IFLA_BRPORT_GROUP_FWD_MASK","IFLA_BRPORT_GROUP_FWD_MASK","IFLA_BRPORT_GUARD","IFLA_BRPORT_GUARD","IFLA_BRPORT_HOLD_TIMER","IFLA_BRPORT_HOLD_TIMER","IFLA_BRPORT_ID","IFLA_BRPORT_ID","IFLA_BRPORT_ISOLATED","IFLA_BRPORT_ISOLATED","IFLA_BRPORT_LEARNING","IFLA_BRPORT_LEARNING","IFLA_BRPORT_LEARNING_SYNC","IFLA_BRPORT_LEARNING_SYNC","IFLA_BRPORT_LOCKED","IFLA_BRPORT_LOCKED","IFLA_BRPORT_MAB","IFLA_BRPORT_MAB","IFLA_BRPORT_MCAST_EHT_HOSTS_CNT","IFLA_BRPORT_MCAST_EHT_HOSTS_CNT","IFLA_BRPORT_MCAST_EHT_HOSTS_LIMIT","IFLA_BRPORT_MCAST_EHT_HOSTS_LIMIT","IFLA_BRPORT_MCAST_FLOOD","IFLA_BRPORT_MCAST_FLOOD","IFLA_BRPORT_MCAST_MAX_GROUPS","IFLA_BRPORT_MCAST_MAX_GROUPS","IFLA_BRPORT_MCAST_N_GROUPS","IFLA_BRPORT_MCAST_N_GROUPS","IFLA_BRPORT_MCAST_TO_UCAST","IFLA_BRPORT_MCAST_TO_UCAST","IFLA_BRPORT_MESSAGE_AGE_TIMER","IFLA_BRPORT_MESSAGE_AGE_TIMER","IFLA_BRPORT_MODE","IFLA_BRPORT_MODE","IFLA_BRPORT_MRP_IN_OPEN","IFLA_BRPORT_MRP_IN_OPEN","IFLA_BRPORT_MRP_RING_OPEN","IFLA_BRPORT_MRP_RING_OPEN","IFLA_BRPORT_MULTICAST_ROUTER","IFLA_BRPORT_MULTICAST_ROUTER","IFLA_BRPORT_NEIGH_SUPPRESS","IFLA_BRPORT_NEIGH_SUPPRESS","IFLA_BRPORT_NO","IFLA_BRPORT_NO","IFLA_BRPORT_PAD","IFLA_BRPORT_PAD","IFLA_BRPORT_PRIORITY","IFLA_BRPORT_PRIORITY","IFLA_BRPORT_PROTECT","IFLA_BRPORT_PROTECT","IFLA_BRPORT_PROXYARP","IFLA_BRPORT_PROXYARP","IFLA_BRPORT_PROXYARP_WIFI","IFLA_BRPORT_PROXYARP_WIFI","IFLA_BRPORT_ROOT_ID","IFLA_BRPORT_ROOT_ID","IFLA_BRPORT_STATE","IFLA_BRPORT_STATE","IFLA_BRPORT_TOPOLOGY_CHANGE_ACK","IFLA_BRPORT_TOPOLOGY_CHANGE_ACK","IFLA_BRPORT_UNICAST_FLOOD","IFLA_BRPORT_UNICAST_FLOOD","IFLA_BRPORT_UNSPEC","IFLA_BRPORT_UNSPEC","IFLA_BRPORT_VLAN_TUNNEL","IFLA_BRPORT_VLAN_TUNNEL","IFLA_BR_AGEING_TIME","IFLA_BR_AGEING_TIME","IFLA_BR_BRIDGE_ID","IFLA_BR_BRIDGE_ID","IFLA_BR_FDB_FLUSH","IFLA_BR_FDB_FLUSH","IFLA_BR_FORWARD_DELAY","IFLA_BR_FORWARD_DELAY","IFLA_BR_GC_TIMER","IFLA_BR_GC_TIMER","IFLA_BR_GROUP_ADDR","IFLA_BR_GROUP_ADDR","IFLA_BR_GROUP_FWD_MASK","IFLA_BR_GROUP_FWD_MASK","IFLA_BR_HELLO_TIME","IFLA_BR_HELLO_TIME","IFLA_BR_HELLO_TIMER","IFLA_BR_HELLO_TIMER","IFLA_BR_MAX_AGE","IFLA_BR_MAX_AGE","IFLA_BR_MCAST_HASH_ELASTICITY","IFLA_BR_MCAST_HASH_ELASTICITY","IFLA_BR_MCAST_HASH_MAX","IFLA_BR_MCAST_HASH_MAX","IFLA_BR_MCAST_IGMP_VERSION","IFLA_BR_MCAST_IGMP_VERSION","IFLA_BR_MCAST_LAST_MEMBER_CNT","IFLA_BR_MCAST_LAST_MEMBER_CNT","IFLA_BR_MCAST_LAST_MEMBER_INTVL","IFLA_BR_MCAST_LAST_MEMBER_INTVL","IFLA_BR_MCAST_MEMBERSHIP_INTVL","IFLA_BR_MCAST_MEMBERSHIP_INTVL","IFLA_BR_MCAST_MLD_VERSION","IFLA_BR_MCAST_MLD_VERSION","IFLA_BR_MCAST_QUERIER","IFLA_BR_MCAST_QUERIER","IFLA_BR_MCAST_QUERIER_INTVL","IFLA_BR_MCAST_QUERIER_INTVL","IFLA_BR_MCAST_QUERIER_STATE","IFLA_BR_MCAST_QUERIER_STATE","IFLA_BR_MCAST_QUERY_INTVL","IFLA_BR_MCAST_QUERY_INTVL","IFLA_BR_MCAST_QUERY_RESPONSE_INTVL","IFLA_BR_MCAST_QUERY_RESPONSE_INTVL","IFLA_BR_MCAST_QUERY_USE_IFADDR","IFLA_BR_MCAST_QUERY_USE_IFADDR","IFLA_BR_MCAST_ROUTER","IFLA_BR_MCAST_ROUTER","IFLA_BR_MCAST_SNOOPING","IFLA_BR_MCAST_SNOOPING","IFLA_BR_MCAST_STARTUP_QUERY_CNT","IFLA_BR_MCAST_STARTUP_QUERY_CNT","IFLA_BR_MCAST_STARTUP_QUERY_INTVL","IFLA_BR_MCAST_STARTUP_QUERY_INTVL","IFLA_BR_MCAST_STATS_ENABLED","IFLA_BR_MCAST_STATS_ENABLED","IFLA_BR_MULTI_BOOLOPT","IFLA_BR_MULTI_BOOLOPT","IFLA_BR_NF_CALL_ARPTABLES","IFLA_BR_NF_CALL_ARPTABLES","IFLA_BR_NF_CALL_IP6TABLES","IFLA_BR_NF_CALL_IP6TABLES","IFLA_BR_NF_CALL_IPTABLES","IFLA_BR_NF_CALL_IPTABLES","IFLA_BR_PAD","IFLA_BR_PAD","IFLA_BR_PRIORITY","IFLA_BR_PRIORITY","IFLA_BR_ROOT_ID","IFLA_BR_ROOT_ID","IFLA_BR_ROOT_PATH_COST","IFLA_BR_ROOT_PATH_COST","IFLA_BR_ROOT_PORT","IFLA_BR_ROOT_PORT","IFLA_BR_STP_STATE","IFLA_BR_STP_STATE","IFLA_BR_TCN_TIMER","IFLA_BR_TCN_TIMER","IFLA_BR_TOPOLOGY_CHANGE","IFLA_BR_TOPOLOGY_CHANGE","IFLA_BR_TOPOLOGY_CHANGE_DETECTED","IFLA_BR_TOPOLOGY_CHANGE_DETECTED","IFLA_BR_TOPOLOGY_CHANGE_TIMER","IFLA_BR_TOPOLOGY_CHANGE_TIMER","IFLA_BR_UNSPEC","IFLA_BR_UNSPEC","IFLA_BR_VLAN_DEFAULT_PVID","IFLA_BR_VLAN_DEFAULT_PVID","IFLA_BR_VLAN_FILTERING","IFLA_BR_VLAN_FILTERING","IFLA_BR_VLAN_PROTOCOL","IFLA_BR_VLAN_PROTOCOL","IFLA_BR_VLAN_STATS_ENABLED","IFLA_BR_VLAN_STATS_ENABLED","IFLA_BR_VLAN_STATS_PER_PORT","IFLA_BR_VLAN_STATS_PER_PORT","IFLA_CARRIER","IFLA_CARRIER","IFLA_CARRIER_CHANGES","IFLA_CARRIER_CHANGES","IFLA_CARRIER_DOWN_COUNT","IFLA_CARRIER_DOWN_COUNT","IFLA_CARRIER_UP_COUNT","IFLA_CARRIER_UP_COUNT","IFLA_COST","IFLA_COST","IFLA_DEVLINK_PORT","IFLA_DEVLINK_PORT","IFLA_DSA_MASTER","IFLA_DSA_MASTER","IFLA_DSA_UNSPEC","IFLA_DSA_UNSPEC","IFLA_EVENT","IFLA_EVENT","IFLA_EVENT_BONDING_FAILOVER","IFLA_EVENT_BONDING_FAILOVER","IFLA_EVENT_BONDING_OPTIONS","IFLA_EVENT_BONDING_OPTIONS","IFLA_EVENT_FEATURES","IFLA_EVENT_FEATURES","IFLA_EVENT_IGMP_RESEND","IFLA_EVENT_IGMP_RESEND","IFLA_EVENT_NONE","IFLA_EVENT_NONE","IFLA_EVENT_NOTIFY_PEERS","IFLA_EVENT_NOTIFY_PEERS","IFLA_EVENT_REBOOT","IFLA_EVENT_REBOOT","IFLA_EXT_MASK","IFLA_EXT_MASK","IFLA_GENEVE_COLLECT_METADATA","IFLA_GENEVE_COLLECT_METADATA","IFLA_GENEVE_DF","IFLA_GENEVE_DF","IFLA_GENEVE_ID","IFLA_GENEVE_ID","IFLA_GENEVE_INNER_PROTO_INHERIT","IFLA_GENEVE_INNER_PROTO_INHERIT","IFLA_GENEVE_LABEL","IFLA_GENEVE_LABEL","IFLA_GENEVE_PORT","IFLA_GENEVE_PORT","IFLA_GENEVE_REMOTE","IFLA_GENEVE_REMOTE","IFLA_GENEVE_REMOTE6","IFLA_GENEVE_REMOTE6","IFLA_GENEVE_TOS","IFLA_GENEVE_TOS","IFLA_GENEVE_TTL","IFLA_GENEVE_TTL","IFLA_GENEVE_TTL_INHERIT","IFLA_GENEVE_TTL_INHERIT","IFLA_GENEVE_UDP_CSUM","IFLA_GENEVE_UDP_CSUM","IFLA_GENEVE_UDP_ZERO_CSUM6_RX","IFLA_GENEVE_UDP_ZERO_CSUM6_RX","IFLA_GENEVE_UDP_ZERO_CSUM6_TX","IFLA_GENEVE_UDP_ZERO_CSUM6_TX","IFLA_GENEVE_UNSPEC","IFLA_GENEVE_UNSPEC","IFLA_GROUP","IFLA_GROUP","IFLA_GRO_IPV4_MAX_SIZE","IFLA_GRO_IPV4_MAX_SIZE","IFLA_GRO_MAX_SIZE","IFLA_GRO_MAX_SIZE","IFLA_GSO_IPV4_MAX_SIZE","IFLA_GSO_IPV4_MAX_SIZE","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_GSO_MAX_SIZE","IFLA_GTP_CREATE_SOCKETS","IFLA_GTP_CREATE_SOCKETS","IFLA_GTP_FD0","IFLA_GTP_FD0","IFLA_GTP_FD1","IFLA_GTP_FD1","IFLA_GTP_PDP_HASHSIZE","IFLA_GTP_PDP_HASHSIZE","IFLA_GTP_RESTART_COUNT","IFLA_GTP_RESTART_COUNT","IFLA_GTP_ROLE","IFLA_GTP_ROLE","IFLA_GTP_UNSPEC","IFLA_GTP_UNSPEC","IFLA_HSR_MULTICAST_SPEC","IFLA_HSR_MULTICAST_SPEC","IFLA_HSR_PROTOCOL","IFLA_HSR_PROTOCOL","IFLA_HSR_SEQ_NR","IFLA_HSR_SEQ_NR","IFLA_HSR_SLAVE1","IFLA_HSR_SLAVE1","IFLA_HSR_SLAVE2","IFLA_HSR_SLAVE2","IFLA_HSR_SUPERVISION_ADDR","IFLA_HSR_SUPERVISION_ADDR","IFLA_HSR_UNSPEC","IFLA_HSR_UNSPEC","IFLA_HSR_VERSION","IFLA_HSR_VERSION","IFLA_IFALIAS","IFLA_IFALIAS","IFLA_IFNAME","IFLA_IFNAME","IFLA_IF_NETNSID","IFLA_IF_NETNSID","IFLA_INET6_ADDR_GEN_MODE","IFLA_INET6_ADDR_GEN_MODE","IFLA_INET6_CACHEINFO","IFLA_INET6_CACHEINFO","IFLA_INET6_CONF","IFLA_INET6_CONF","IFLA_INET6_FLAGS","IFLA_INET6_FLAGS","IFLA_INET6_ICMP6STATS","IFLA_INET6_ICMP6STATS","IFLA_INET6_MCAST","IFLA_INET6_MCAST","IFLA_INET6_RA_MTU","IFLA_INET6_RA_MTU","IFLA_INET6_STATS","IFLA_INET6_STATS","IFLA_INET6_TOKEN","IFLA_INET6_TOKEN","IFLA_INET6_UNSPEC","IFLA_INET6_UNSPEC","IFLA_INET_CONF","IFLA_INET_CONF","IFLA_INET_UNSPEC","IFLA_INET_UNSPEC","IFLA_INFO_DATA","IFLA_INFO_DATA","IFLA_INFO_KIND","IFLA_INFO_KIND","IFLA_INFO_SLAVE_DATA","IFLA_INFO_SLAVE_DATA","IFLA_INFO_SLAVE_KIND","IFLA_INFO_SLAVE_KIND","IFLA_INFO_UNSPEC","IFLA_INFO_UNSPEC","IFLA_INFO_XSTATS","IFLA_INFO_XSTATS","IFLA_IPOIB_MODE","IFLA_IPOIB_MODE","IFLA_IPOIB_PKEY","IFLA_IPOIB_PKEY","IFLA_IPOIB_UMCAST","IFLA_IPOIB_UMCAST","IFLA_IPOIB_UNSPEC","IFLA_IPOIB_UNSPEC","IFLA_IPVLAN_FLAGS","IFLA_IPVLAN_FLAGS","IFLA_IPVLAN_MODE","IFLA_IPVLAN_MODE","IFLA_IPVLAN_UNSPEC","IFLA_IPVLAN_UNSPEC","IFLA_LINK","IFLA_LINK","IFLA_LINKINFO","IFLA_LINKINFO","IFLA_LINKMODE","IFLA_LINKMODE","IFLA_LINK_NETNSID","IFLA_LINK_NETNSID","IFLA_MACSEC_CIPHER_SUITE","IFLA_MACSEC_CIPHER_SUITE","IFLA_MACSEC_ENCODING_SA","IFLA_MACSEC_ENCODING_SA","IFLA_MACSEC_ENCRYPT","IFLA_MACSEC_ENCRYPT","IFLA_MACSEC_ES","IFLA_MACSEC_ES","IFLA_MACSEC_ICV_LEN","IFLA_MACSEC_ICV_LEN","IFLA_MACSEC_INC_SCI","IFLA_MACSEC_INC_SCI","IFLA_MACSEC_OFFLOAD","IFLA_MACSEC_OFFLOAD","IFLA_MACSEC_PAD","IFLA_MACSEC_PAD","IFLA_MACSEC_PORT","IFLA_MACSEC_PORT","IFLA_MACSEC_PROTECT","IFLA_MACSEC_PROTECT","IFLA_MACSEC_REPLAY_PROTECT","IFLA_MACSEC_REPLAY_PROTECT","IFLA_MACSEC_SCB","IFLA_MACSEC_SCB","IFLA_MACSEC_SCI","IFLA_MACSEC_SCI","IFLA_MACSEC_UNSPEC","IFLA_MACSEC_UNSPEC","IFLA_MACSEC_VALIDATION","IFLA_MACSEC_VALIDATION","IFLA_MACSEC_WINDOW","IFLA_MACSEC_WINDOW","IFLA_MACVLAN_BC_QUEUE_LEN","IFLA_MACVLAN_BC_QUEUE_LEN","IFLA_MACVLAN_BC_QUEUE_LEN_USED","IFLA_MACVLAN_BC_QUEUE_LEN_USED","IFLA_MACVLAN_FLAGS","IFLA_MACVLAN_FLAGS","IFLA_MACVLAN_MACADDR","IFLA_MACVLAN_MACADDR","IFLA_MACVLAN_MACADDR_COUNT","IFLA_MACVLAN_MACADDR_COUNT","IFLA_MACVLAN_MACADDR_DATA","IFLA_MACVLAN_MACADDR_DATA","IFLA_MACVLAN_MACADDR_MODE","IFLA_MACVLAN_MACADDR_MODE","IFLA_MACVLAN_MODE","IFLA_MACVLAN_MODE","IFLA_MACVLAN_UNSPEC","IFLA_MACVLAN_UNSPEC","IFLA_MAP","IFLA_MAP","IFLA_MASTER","IFLA_MASTER","IFLA_MAX_MTU","IFLA_MAX_MTU","IFLA_MCTP_NET","IFLA_MCTP_NET","IFLA_MCTP_UNSPEC","IFLA_MCTP_UNSPEC","IFLA_MIN_MTU","IFLA_MIN_MTU","IFLA_MTU","IFLA_MTU","IFLA_NET_NS_FD","IFLA_NET_NS_FD","IFLA_NET_NS_PID","IFLA_NET_NS_PID","IFLA_NEW_IFINDEX","IFLA_NEW_IFINDEX","IFLA_NEW_NETNSID","IFLA_NEW_NETNSID","IFLA_NUM_RX_QUEUES","IFLA_NUM_RX_QUEUES","IFLA_NUM_TX_QUEUES","IFLA_NUM_TX_QUEUES","IFLA_NUM_VF","IFLA_NUM_VF","IFLA_OFFLOAD_XSTATS_CPU_HIT","IFLA_OFFLOAD_XSTATS_CPU_HIT","IFLA_OFFLOAD_XSTATS_HW_S_INFO","IFLA_OFFLOAD_XSTATS_HW_S_INFO","IFLA_OFFLOAD_XSTATS_HW_S_INFO_REQUEST","IFLA_OFFLOAD_XSTATS_HW_S_INFO_REQUEST","IFLA_OFFLOAD_XSTATS_HW_S_INFO_UNSPEC","IFLA_OFFLOAD_XSTATS_HW_S_INFO_UNSPEC","IFLA_OFFLOAD_XSTATS_HW_S_INFO_USED","IFLA_OFFLOAD_XSTATS_HW_S_INFO_USED","IFLA_OFFLOAD_XSTATS_L3_STATS","IFLA_OFFLOAD_XSTATS_L3_STATS","IFLA_OFFLOAD_XSTATS_UNSPEC","IFLA_OFFLOAD_XSTATS_UNSPEC","IFLA_OPERSTATE","IFLA_OPERSTATE","IFLA_PAD","IFLA_PAD","IFLA_PARENT_DEV_BUS_NAME","IFLA_PARENT_DEV_BUS_NAME","IFLA_PARENT_DEV_NAME","IFLA_PARENT_DEV_NAME","IFLA_PERM_ADDRESS","IFLA_PERM_ADDRESS","IFLA_PHYS_PORT_ID","IFLA_PHYS_PORT_ID","IFLA_PHYS_PORT_NAME","IFLA_PHYS_PORT_NAME","IFLA_PHYS_SWITCH_ID","IFLA_PHYS_SWITCH_ID","IFLA_PORT_HOST_UUID","IFLA_PORT_HOST_UUID","IFLA_PORT_INSTANCE_UUID","IFLA_PORT_INSTANCE_UUID","IFLA_PORT_PROFILE","IFLA_PORT_PROFILE","IFLA_PORT_REQUEST","IFLA_PORT_REQUEST","IFLA_PORT_RESPONSE","IFLA_PORT_RESPONSE","IFLA_PORT_SELF","IFLA_PORT_SELF","IFLA_PORT_UNSPEC","IFLA_PORT_UNSPEC","IFLA_PORT_VF","IFLA_PORT_VF","IFLA_PORT_VSI_TYPE","IFLA_PORT_VSI_TYPE","IFLA_PPP_DEV_FD","IFLA_PPP_DEV_FD","IFLA_PPP_UNSPEC","IFLA_PPP_UNSPEC","IFLA_PRIORITY","IFLA_PRIORITY","IFLA_PROMISCUITY","IFLA_PROMISCUITY","IFLA_PROP_LIST","IFLA_PROP_LIST","IFLA_PROTINFO","IFLA_PROTINFO","IFLA_PROTO_DOWN","IFLA_PROTO_DOWN","IFLA_PROTO_DOWN_REASON","IFLA_PROTO_DOWN_REASON","IFLA_PROTO_DOWN_REASON_MASK","IFLA_PROTO_DOWN_REASON_MASK","IFLA_PROTO_DOWN_REASON_MAX","IFLA_PROTO_DOWN_REASON_UNSPEC","IFLA_PROTO_DOWN_REASON_UNSPEC","IFLA_PROTO_DOWN_REASON_VALUE","IFLA_PROTO_DOWN_REASON_VALUE","IFLA_QDISC","IFLA_QDISC","IFLA_RMNET_FLAGS","IFLA_RMNET_FLAGS","IFLA_RMNET_MUX_ID","IFLA_RMNET_MUX_ID","IFLA_RMNET_UNSPEC","IFLA_RMNET_UNSPEC","IFLA_STATS","IFLA_STATS","IFLA_STATS64","IFLA_STATS64","IFLA_STATS_AF_SPEC","IFLA_STATS_AF_SPEC","IFLA_STATS_GETSET_UNSPEC","IFLA_STATS_GETSET_UNSPEC","IFLA_STATS_GET_FILTERS","IFLA_STATS_GET_FILTERS","IFLA_STATS_LINK_64","IFLA_STATS_LINK_64","IFLA_STATS_LINK_OFFLOAD_XSTATS","IFLA_STATS_LINK_OFFLOAD_XSTATS","IFLA_STATS_LINK_XSTATS","IFLA_STATS_LINK_XSTATS","IFLA_STATS_LINK_XSTATS_SLAVE","IFLA_STATS_LINK_XSTATS_SLAVE","IFLA_STATS_SET_OFFLOAD_XSTATS_L3_STATS","IFLA_STATS_SET_OFFLOAD_XSTATS_L3_STATS","IFLA_STATS_UNSPEC","IFLA_STATS_UNSPEC","IFLA_TARGET_NETNSID","IFLA_TSO_MAX_SEGS","IFLA_TSO_MAX_SEGS","IFLA_TSO_MAX_SIZE","IFLA_TSO_MAX_SIZE","IFLA_TUN_GROUP","IFLA_TUN_GROUP","IFLA_TUN_MULTI_QUEUE","IFLA_TUN_MULTI_QUEUE","IFLA_TUN_NUM_DISABLED_QUEUES","IFLA_TUN_NUM_DISABLED_QUEUES","IFLA_TUN_NUM_QUEUES","IFLA_TUN_NUM_QUEUES","IFLA_TUN_OWNER","IFLA_TUN_OWNER","IFLA_TUN_PERSIST","IFLA_TUN_PERSIST","IFLA_TUN_PI","IFLA_TUN_PI","IFLA_TUN_TYPE","IFLA_TUN_TYPE","IFLA_TUN_UNSPEC","IFLA_TUN_UNSPEC","IFLA_TUN_VNET_HDR","IFLA_TUN_VNET_HDR","IFLA_TXQLEN","IFLA_TXQLEN","IFLA_UNSPEC","IFLA_UNSPEC","IFLA_VFINFO_LIST","IFLA_VFINFO_LIST","IFLA_VF_BROADCAST","IFLA_VF_BROADCAST","IFLA_VF_IB_NODE_GUID","IFLA_VF_IB_NODE_GUID","IFLA_VF_IB_PORT_GUID","IFLA_VF_IB_PORT_GUID","IFLA_VF_INFO","IFLA_VF_INFO","IFLA_VF_INFO_UNSPEC","IFLA_VF_INFO_UNSPEC","IFLA_VF_LINK_STATE","IFLA_VF_LINK_STATE","IFLA_VF_LINK_STATE_AUTO","IFLA_VF_LINK_STATE_AUTO","IFLA_VF_LINK_STATE_DISABLE","IFLA_VF_LINK_STATE_DISABLE","IFLA_VF_LINK_STATE_ENABLE","IFLA_VF_LINK_STATE_ENABLE","IFLA_VF_MAC","IFLA_VF_MAC","IFLA_VF_PORT","IFLA_VF_PORT","IFLA_VF_PORTS","IFLA_VF_PORTS","IFLA_VF_PORT_UNSPEC","IFLA_VF_PORT_UNSPEC","IFLA_VF_RATE","IFLA_VF_RATE","IFLA_VF_RSS_QUERY_EN","IFLA_VF_RSS_QUERY_EN","IFLA_VF_SPOOFCHK","IFLA_VF_SPOOFCHK","IFLA_VF_STATS","IFLA_VF_STATS","IFLA_VF_STATS_BROADCAST","IFLA_VF_STATS_BROADCAST","IFLA_VF_STATS_MULTICAST","IFLA_VF_STATS_MULTICAST","IFLA_VF_STATS_PAD","IFLA_VF_STATS_PAD","IFLA_VF_STATS_RX_BYTES","IFLA_VF_STATS_RX_BYTES","IFLA_VF_STATS_RX_DROPPED","IFLA_VF_STATS_RX_DROPPED","IFLA_VF_STATS_RX_PACKETS","IFLA_VF_STATS_RX_PACKETS","IFLA_VF_STATS_TX_BYTES","IFLA_VF_STATS_TX_BYTES","IFLA_VF_STATS_TX_DROPPED","IFLA_VF_STATS_TX_DROPPED","IFLA_VF_STATS_TX_PACKETS","IFLA_VF_STATS_TX_PACKETS","IFLA_VF_TRUST","IFLA_VF_TRUST","IFLA_VF_TX_RATE","IFLA_VF_TX_RATE","IFLA_VF_UNSPEC","IFLA_VF_UNSPEC","IFLA_VF_VLAN","IFLA_VF_VLAN","IFLA_VF_VLAN_INFO","IFLA_VF_VLAN_INFO","IFLA_VF_VLAN_INFO_UNSPEC","IFLA_VF_VLAN_INFO_UNSPEC","IFLA_VF_VLAN_LIST","IFLA_VF_VLAN_LIST","IFLA_VLAN_EGRESS_QOS","IFLA_VLAN_EGRESS_QOS","IFLA_VLAN_FLAGS","IFLA_VLAN_FLAGS","IFLA_VLAN_ID","IFLA_VLAN_ID","IFLA_VLAN_INGRESS_QOS","IFLA_VLAN_INGRESS_QOS","IFLA_VLAN_PROTOCOL","IFLA_VLAN_PROTOCOL","IFLA_VLAN_QOS_MAPPING","IFLA_VLAN_QOS_MAPPING","IFLA_VLAN_QOS_UNSPEC","IFLA_VLAN_QOS_UNSPEC","IFLA_VLAN_UNSPEC","IFLA_VLAN_UNSPEC","IFLA_VRF_PORT_TABLE","IFLA_VRF_PORT_TABLE","IFLA_VRF_PORT_UNSPEC","IFLA_VRF_PORT_UNSPEC","IFLA_VRF_TABLE","IFLA_VRF_TABLE","IFLA_VRF_UNSPEC","IFLA_VRF_UNSPEC","IFLA_VXLAN_AGEING","IFLA_VXLAN_AGEING","IFLA_VXLAN_COLLECT_METADATA","IFLA_VXLAN_COLLECT_METADATA","IFLA_VXLAN_DF","IFLA_VXLAN_DF","IFLA_VXLAN_GBP","IFLA_VXLAN_GBP","IFLA_VXLAN_GPE","IFLA_VXLAN_GPE","IFLA_VXLAN_GROUP","IFLA_VXLAN_GROUP","IFLA_VXLAN_GROUP6","IFLA_VXLAN_GROUP6","IFLA_VXLAN_ID","IFLA_VXLAN_ID","IFLA_VXLAN_L2MISS","IFLA_VXLAN_L2MISS","IFLA_VXLAN_L3MISS","IFLA_VXLAN_L3MISS","IFLA_VXLAN_LABEL","IFLA_VXLAN_LABEL","IFLA_VXLAN_LEARNING","IFLA_VXLAN_LEARNING","IFLA_VXLAN_LIMIT","IFLA_VXLAN_LIMIT","IFLA_VXLAN_LINK","IFLA_VXLAN_LINK","IFLA_VXLAN_LOCAL","IFLA_VXLAN_LOCAL","IFLA_VXLAN_LOCAL6","IFLA_VXLAN_LOCAL6","IFLA_VXLAN_PORT","IFLA_VXLAN_PORT","IFLA_VXLAN_PORT_RANGE","IFLA_VXLAN_PORT_RANGE","IFLA_VXLAN_PROXY","IFLA_VXLAN_PROXY","IFLA_VXLAN_REMCSUM_NOPARTIAL","IFLA_VXLAN_REMCSUM_NOPARTIAL","IFLA_VXLAN_REMCSUM_RX","IFLA_VXLAN_REMCSUM_RX","IFLA_VXLAN_REMCSUM_TX","IFLA_VXLAN_REMCSUM_TX","IFLA_VXLAN_RSC","IFLA_VXLAN_RSC","IFLA_VXLAN_TOS","IFLA_VXLAN_TOS","IFLA_VXLAN_TTL","IFLA_VXLAN_TTL","IFLA_VXLAN_TTL_INHERIT","IFLA_VXLAN_TTL_INHERIT","IFLA_VXLAN_UDP_CSUM","IFLA_VXLAN_UDP_CSUM","IFLA_VXLAN_UDP_ZERO_CSUM6_RX","IFLA_VXLAN_UDP_ZERO_CSUM6_RX","IFLA_VXLAN_UDP_ZERO_CSUM6_TX","IFLA_VXLAN_UDP_ZERO_CSUM6_TX","IFLA_VXLAN_UNSPEC","IFLA_VXLAN_UNSPEC","IFLA_VXLAN_VNIFILTER","IFLA_VXLAN_VNIFILTER","IFLA_WEIGHT","IFLA_WEIGHT","IFLA_WIRELESS","IFLA_WIRELESS","IFLA_XDP","IFLA_XDP","IFLA_XDP_ATTACHED","IFLA_XDP_ATTACHED","IFLA_XDP_DRV_PROG_ID","IFLA_XDP_DRV_PROG_ID","IFLA_XDP_EXPECTED_FD","IFLA_XDP_EXPECTED_FD","IFLA_XDP_FD","IFLA_XDP_FD","IFLA_XDP_FLAGS","IFLA_XDP_FLAGS","IFLA_XDP_HW_PROG_ID","IFLA_XDP_HW_PROG_ID","IFLA_XDP_PROG_ID","IFLA_XDP_PROG_ID","IFLA_XDP_SKB_PROG_ID","IFLA_XDP_SKB_PROG_ID","IFLA_XDP_UNSPEC","IFLA_XDP_UNSPEC","IFLA_XFRM_COLLECT_METADATA","IFLA_XFRM_COLLECT_METADATA","IFLA_XFRM_IF_ID","IFLA_XFRM_IF_ID","IFLA_XFRM_LINK","IFLA_XFRM_LINK","IFLA_XFRM_UNSPEC","IFLA_XFRM_UNSPEC","IN6_ADDR_GEN_MODE_EUI64","IN6_ADDR_GEN_MODE_NONE","IN6_ADDR_GEN_MODE_RANDOM","IN6_ADDR_GEN_MODE_STABLE_PRIVACY","IPOIB_MODE_CONNECTED","IPOIB_MODE_CONNECTED","IPOIB_MODE_DATAGRAM","IPOIB_MODE_DATAGRAM","IPVLAN_F_PRIVATE","IPVLAN_F_VEPA","IPVLAN_MODE_L2","IPVLAN_MODE_L3","IPVLAN_MODE_L3S","IPVLAN_MODE_MAX","LINK_XSTATS_TYPE_BOND","LINK_XSTATS_TYPE_BOND","LINK_XSTATS_TYPE_BRIDGE","LINK_XSTATS_TYPE_BRIDGE","LINK_XSTATS_TYPE_UNSPEC","LINK_XSTATS_TYPE_UNSPEC","MACSEC_OFFLOAD_MAC","MACSEC_OFFLOAD_MAX","MACSEC_OFFLOAD_OFF","MACSEC_OFFLOAD_PHY","MACSEC_VALIDATE_CHECK","MACSEC_VALIDATE_DISABLED","MACSEC_VALIDATE_MAX","MACSEC_VALIDATE_STRICT","MACVLAN_FLAG_NODST","MACVLAN_FLAG_NOPROMISC","MACVLAN_MACADDR_ADD","MACVLAN_MACADDR_DEL","MACVLAN_MACADDR_FLUSH","MACVLAN_MACADDR_SET","MACVLAN_MODE_BRIDGE","MACVLAN_MODE_PASSTHRU","MACVLAN_MODE_PRIVATE","MACVLAN_MODE_SOURCE","MACVLAN_MODE_VEPA","MAX_LINKS","MAX_VLAN_LIST_LEN","NDA_CACHEINFO","NDA_CACHEINFO","NDA_DST","NDA_DST","NDA_FDB_EXT_ATTRS","NDA_FDB_EXT_ATTRS","NDA_FLAGS_EXT","NDA_FLAGS_EXT","NDA_IFINDEX","NDA_IFINDEX","NDA_LINK_NETNSID","NDA_LINK_NETNSID","NDA_LLADDR","NDA_LLADDR","NDA_MASTER","NDA_MASTER","NDA_NDM_FLAGS_MASK","NDA_NDM_FLAGS_MASK","NDA_NDM_STATE_MASK","NDA_NDM_STATE_MASK","NDA_NH_ID","NDA_NH_ID","NDA_PORT","NDA_PORT","NDA_PROBES","NDA_PROBES","NDA_PROTOCOL","NDA_PROTOCOL","NDA_SRC_VNI","NDA_SRC_VNI","NDA_UNSPEC","NDA_UNSPEC","NDA_VLAN","NDA_VLAN","NDA_VNI","NDA_VNI","NDTA_CONFIG","NDTA_CONFIG","NDTA_GC_INTERVAL","NDTA_GC_INTERVAL","NDTA_NAME","NDTA_NAME","NDTA_PAD","NDTA_PAD","NDTA_PARMS","NDTA_PARMS","NDTA_STATS","NDTA_STATS","NDTA_THRESH1","NDTA_THRESH1","NDTA_THRESH2","NDTA_THRESH2","NDTA_THRESH3","NDTA_THRESH3","NDTA_UNSPEC","NDTA_UNSPEC","NDTPA_ANYCAST_DELAY","NDTPA_ANYCAST_DELAY","NDTPA_APP_PROBES","NDTPA_APP_PROBES","NDTPA_BASE_REACHABLE_TIME","NDTPA_BASE_REACHABLE_TIME","NDTPA_DELAY_PROBE_TIME","NDTPA_DELAY_PROBE_TIME","NDTPA_GC_STALETIME","NDTPA_GC_STALETIME","NDTPA_IFINDEX","NDTPA_IFINDEX","NDTPA_INTERVAL_PROBE_TIME_MS","NDTPA_INTERVAL_PROBE_TIME_MS","NDTPA_LOCKTIME","NDTPA_LOCKTIME","NDTPA_MCAST_PROBES","NDTPA_MCAST_PROBES","NDTPA_MCAST_REPROBES","NDTPA_MCAST_REPROBES","NDTPA_PAD","NDTPA_PAD","NDTPA_PROXY_DELAY","NDTPA_PROXY_DELAY","NDTPA_PROXY_QLEN","NDTPA_PROXY_QLEN","NDTPA_QUEUE_LEN","NDTPA_QUEUE_LEN","NDTPA_QUEUE_LENBYTES","NDTPA_QUEUE_LENBYTES","NDTPA_REACHABLE_TIME","NDTPA_REACHABLE_TIME","NDTPA_REFCNT","NDTPA_REFCNT","NDTPA_RETRANS_TIME","NDTPA_RETRANS_TIME","NDTPA_UCAST_PROBES","NDTPA_UCAST_PROBES","NDTPA_UNSPEC","NDTPA_UNSPEC","NDUSEROPT_SRCADDR","NDUSEROPT_SRCADDR","NDUSEROPT_UNSPEC","NDUSEROPT_UNSPEC","NETLINK_ADD_MEMBERSHIP","NETLINK_AUDIT","NETLINK_BROADCAST_ERROR","NETLINK_CAP_ACK","NETLINK_CONNECTED","NETLINK_CONNECTED","NETLINK_CONNECTOR","NETLINK_CRYPTO","NETLINK_DNRTMSG","NETLINK_DROP_MEMBERSHIP","NETLINK_ECRYPTFS","NETLINK_EXT_ACK","NETLINK_FIB_LOOKUP","NETLINK_FIREWALL","NETLINK_GENERIC","NETLINK_GET_STRICT_CHK","NETLINK_INET_DIAG","NETLINK_IP6_FW","NETLINK_ISCSI","NETLINK_KOBJECT_UEVENT","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_NETFILTER","NETLINK_NFLOG","NETLINK_NO_ENOBUFS","NETLINK_PKTINFO","NETLINK_RDMA","NETLINK_ROUTE","NETLINK_RX_RING","NETLINK_SCSITRANSPORT","NETLINK_SELINUX","NETLINK_SMC","NETLINK_SOCK_DIAG","NETLINK_TX_RING","NETLINK_UNCONNECTED","NETLINK_UNCONNECTED","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_XFRM","NET_MAJOR","NFEA_ACTIVITY_NOTIFY","NFEA_ACTIVITY_NOTIFY","NFEA_DONT_REFRESH","NFEA_DONT_REFRESH","NFEA_UNSPEC","NFEA_UNSPEC","NLA_ALIGNTO","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","NLMSGERR_ATTR_COOKIE","NLMSGERR_ATTR_MAX","NLMSGERR_ATTR_MISS_NEST","NLMSGERR_ATTR_MISS_TYPE","NLMSGERR_ATTR_MSG","NLMSGERR_ATTR_OFFS","NLMSGERR_ATTR_POLICY","NLMSGERR_ATTR_UNUSED","NLMSG_ALIGNTO","NLMSG_DONE","NLMSG_ERROR","NLMSG_MIN_TYPE","NLMSG_NOOP","NLMSG_OVERRUN","NLM_F_ACK","NLM_F_ACK_TLVS","NLM_F_APPEND","NLM_F_ATOMIC","NLM_F_BULK","NLM_F_CAPPED","NLM_F_CREATE","NLM_F_DUMP","NLM_F_DUMP_FILTERED","NLM_F_DUMP_INTR","NLM_F_ECHO","NLM_F_EXCL","NLM_F_MATCH","NLM_F_MULTI","NLM_F_NONREC","NLM_F_REPLACE","NLM_F_REQUEST","NLM_F_ROOT","NL_ATTR_TYPE_BINARY","NL_ATTR_TYPE_BITFIELD32","NL_ATTR_TYPE_FLAG","NL_ATTR_TYPE_INVALID","NL_ATTR_TYPE_NESTED","NL_ATTR_TYPE_NESTED_ARRAY","NL_ATTR_TYPE_NUL_STRING","NL_ATTR_TYPE_S16","NL_ATTR_TYPE_S32","NL_ATTR_TYPE_S64","NL_ATTR_TYPE_S8","NL_ATTR_TYPE_STRING","NL_ATTR_TYPE_U16","NL_ATTR_TYPE_U32","NL_ATTR_TYPE_U64","NL_ATTR_TYPE_U8","NL_MMAP_MSG_ALIGNMENT","NL_MMAP_STATUS_COPY","NL_MMAP_STATUS_RESERVED","NL_MMAP_STATUS_SKIP","NL_MMAP_STATUS_UNUSED","NL_MMAP_STATUS_VALID","NL_POLICY_TYPE_ATTR_BITFIELD32_MASK","NL_POLICY_TYPE_ATTR_MASK","NL_POLICY_TYPE_ATTR_MAX","NL_POLICY_TYPE_ATTR_MAX_LENGTH","NL_POLICY_TYPE_ATTR_MAX_VALUE_S","NL_POLICY_TYPE_ATTR_MAX_VALUE_U","NL_POLICY_TYPE_ATTR_MIN_LENGTH","NL_POLICY_TYPE_ATTR_MIN_VALUE_S","NL_POLICY_TYPE_ATTR_MIN_VALUE_U","NL_POLICY_TYPE_ATTR_PAD","NL_POLICY_TYPE_ATTR_POLICY_IDX","NL_POLICY_TYPE_ATTR_POLICY_MAXTYPE","NL_POLICY_TYPE_ATTR_TYPE","NL_POLICY_TYPE_ATTR_UNSPEC","NTF_EXT_LEARNED","NTF_EXT_LOCKED","NTF_EXT_MANAGED","NTF_MASTER","NTF_OFFLOADED","NTF_PROXY","NTF_ROUTER","NTF_SELF","NTF_STICKY","NTF_USE","NUD_DELAY","NUD_FAILED","NUD_INCOMPLETE","NUD_NOARP","NUD_NONE","NUD_PERMANENT","NUD_PROBE","NUD_REACHABLE","NUD_STALE","PORT_PROFILE_MAX","PORT_PROFILE_RESPONSE_BADSTATE","PORT_PROFILE_RESPONSE_BADSTATE","PORT_PROFILE_RESPONSE_ERROR","PORT_PROFILE_RESPONSE_ERROR","PORT_PROFILE_RESPONSE_INPROGRESS","PORT_PROFILE_RESPONSE_INPROGRESS","PORT_PROFILE_RESPONSE_INSUFFICIENT_RESOURCES","PORT_PROFILE_RESPONSE_INSUFFICIENT_RESOURCES","PORT_PROFILE_RESPONSE_INVALID","PORT_PROFILE_RESPONSE_INVALID","PORT_PROFILE_RESPONSE_SUCCESS","PORT_PROFILE_RESPONSE_SUCCESS","PORT_REQUEST_ASSOCIATE","PORT_REQUEST_ASSOCIATE","PORT_REQUEST_DISASSOCIATE","PORT_REQUEST_DISASSOCIATE","PORT_REQUEST_PREASSOCIATE","PORT_REQUEST_PREASSOCIATE","PORT_REQUEST_PREASSOCIATE_RR","PORT_REQUEST_PREASSOCIATE_RR","PORT_SELF_VF","PORT_UUID_MAX","PORT_VDP_RESPONSE_INSUFFICIENT_RESOURCES","PORT_VDP_RESPONSE_INSUFFICIENT_RESOURCES","PORT_VDP_RESPONSE_INVALID_FORMAT","PORT_VDP_RESPONSE_INVALID_FORMAT","PORT_VDP_RESPONSE_OUT_OF_SYNC","PORT_VDP_RESPONSE_OUT_OF_SYNC","PORT_VDP_RESPONSE_SUCCESS","PORT_VDP_RESPONSE_SUCCESS","PORT_VDP_RESPONSE_UNUSED_VTID","PORT_VDP_RESPONSE_UNUSED_VTID","PORT_VDP_RESPONSE_VTID_VERSION_VIOALTION","PORT_VDP_RESPONSE_VTID_VERSION_VIOALTION","PORT_VDP_RESPONSE_VTID_VIOLATION","PORT_VDP_RESPONSE_VTID_VIOLATION","PREFIX_ADDRESS","PREFIX_ADDRESS","PREFIX_CACHEINFO","PREFIX_CACHEINFO","PREFIX_UNSPEC","PREFIX_UNSPEC","RMNET_FLAGS_EGRESS_MAP_CKSUMV4","RMNET_FLAGS_EGRESS_MAP_CKSUMV5","RMNET_FLAGS_INGRESS_DEAGGREGATION","RMNET_FLAGS_INGRESS_MAP_CKSUMV4","RMNET_FLAGS_INGRESS_MAP_CKSUMV5","RMNET_FLAGS_INGRESS_MAP_COMMANDS","RTAX_ADVMSS","RTAX_ADVMSS","RTAX_CC_ALGO","RTAX_CC_ALGO","RTAX_CWND","RTAX_CWND","RTAX_FASTOPEN_NO_COOKIE","RTAX_FASTOPEN_NO_COOKIE","RTAX_FEATURES","RTAX_FEATURES","RTAX_FEATURE_ALLFRAG","RTAX_FEATURE_ECN","RTAX_FEATURE_MASK","RTAX_FEATURE_SACK","RTAX_FEATURE_TIMESTAMP","RTAX_HOPLIMIT","RTAX_HOPLIMIT","RTAX_INITCWND","RTAX_INITCWND","RTAX_INITRWND","RTAX_INITRWND","RTAX_LOCK","RTAX_LOCK","RTAX_MTU","RTAX_MTU","RTAX_QUICKACK","RTAX_QUICKACK","RTAX_REORDERING","RTAX_REORDERING","RTAX_RTO_MIN","RTAX_RTO_MIN","RTAX_RTT","RTAX_RTT","RTAX_RTTVAR","RTAX_RTTVAR","RTAX_SSTHRESH","RTAX_SSTHRESH","RTAX_UNSPEC","RTAX_UNSPEC","RTAX_WINDOW","RTAX_WINDOW","RTA_ALIGNTO","RTA_CACHEINFO","RTA_DPORT","RTA_DST","RTA_ENCAP","RTA_ENCAP_TYPE","RTA_EXPIRES","RTA_FLOW","RTA_GATEWAY","RTA_IIF","RTA_IP_PROTO","RTA_MARK","RTA_METRICS","RTA_MFC_STATS","RTA_MP_ALGO","RTA_MULTIPATH","RTA_NEWDST","RTA_NH_ID","RTA_OIF","RTA_PAD","RTA_PREF","RTA_PREFSRC","RTA_PRIORITY","RTA_PROTOINFO","RTA_SESSION","RTA_SPORT","RTA_SRC","RTA_TABLE","RTA_TTL_PROPAGATE","RTA_UID","RTA_UNSPEC","RTA_VIA","RTEXT_FILTER_BRVLAN","RTEXT_FILTER_BRVLAN_COMPRESSED","RTEXT_FILTER_CFM_CONFIG","RTEXT_FILTER_CFM_STATUS","RTEXT_FILTER_MRP","RTEXT_FILTER_MST","RTEXT_FILTER_SKIP_STATS","RTEXT_FILTER_VF","RTMGRP_DECnet_IFADDR","RTMGRP_DECnet_ROUTE","RTMGRP_IPV4_IFADDR","RTMGRP_IPV4_MROUTE","RTMGRP_IPV4_ROUTE","RTMGRP_IPV4_RULE","RTMGRP_IPV6_IFADDR","RTMGRP_IPV6_IFINFO","RTMGRP_IPV6_MROUTE","RTMGRP_IPV6_PREFIX","RTMGRP_IPV6_ROUTE","RTMGRP_LINK","RTMGRP_NEIGH","RTMGRP_NOTIFY","RTMGRP_TC","RTM_BASE","RTM_BASE","RTM_DELACTION","RTM_DELACTION","RTM_DELADDR","RTM_DELADDR","RTM_DELADDRLABEL","RTM_DELADDRLABEL","RTM_DELCHAIN","RTM_DELCHAIN","RTM_DELLINK","RTM_DELLINK","RTM_DELLINKPROP","RTM_DELLINKPROP","RTM_DELMDB","RTM_DELMDB","RTM_DELNEIGH","RTM_DELNEIGH","RTM_DELNETCONF","RTM_DELNETCONF","RTM_DELNEXTHOP","RTM_DELNEXTHOP","RTM_DELNEXTHOPBUCKET","RTM_DELNEXTHOPBUCKET","RTM_DELNSID","RTM_DELNSID","RTM_DELQDISC","RTM_DELQDISC","RTM_DELROUTE","RTM_DELROUTE","RTM_DELRULE","RTM_DELRULE","RTM_DELTCLASS","RTM_DELTCLASS","RTM_DELTFILTER","RTM_DELTFILTER","RTM_DELTUNNEL","RTM_DELTUNNEL","RTM_DELVLAN","RTM_DELVLAN","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_FIB_MATCH","RTM_F_LOOKUP_TABLE","RTM_F_NOTIFY","RTM_F_OFFLOAD","RTM_F_OFFLOAD_FAILED","RTM_F_PREFIX","RTM_F_TRAP","RTM_GETACTION","RTM_GETACTION","RTM_GETADDR","RTM_GETADDR","RTM_GETADDRLABEL","RTM_GETADDRLABEL","RTM_GETANYCAST","RTM_GETANYCAST","RTM_GETCHAIN","RTM_GETCHAIN","RTM_GETDCB","RTM_GETDCB","RTM_GETLINK","RTM_GETLINK","RTM_GETLINKPROP","RTM_GETLINKPROP","RTM_GETMDB","RTM_GETMDB","RTM_GETMULTICAST","RTM_GETMULTICAST","RTM_GETNEIGH","RTM_GETNEIGH","RTM_GETNEIGHTBL","RTM_GETNEIGHTBL","RTM_GETNETCONF","RTM_GETNETCONF","RTM_GETNEXTHOP","RTM_GETNEXTHOP","RTM_GETNEXTHOPBUCKET","RTM_GETNEXTHOPBUCKET","RTM_GETNSID","RTM_GETNSID","RTM_GETQDISC","RTM_GETQDISC","RTM_GETROUTE","RTM_GETROUTE","RTM_GETRULE","RTM_GETRULE","RTM_GETSTATS","RTM_GETSTATS","RTM_GETTCLASS","RTM_GETTCLASS","RTM_GETTFILTER","RTM_GETTFILTER","RTM_GETTUNNEL","RTM_GETTUNNEL","RTM_GETVLAN","RTM_GETVLAN","RTM_NEWACTION","RTM_NEWACTION","RTM_NEWADDR","RTM_NEWADDR","RTM_NEWADDRLABEL","RTM_NEWADDRLABEL","RTM_NEWCACHEREPORT","RTM_NEWCACHEREPORT","RTM_NEWCHAIN","RTM_NEWCHAIN","RTM_NEWLINK","RTM_NEWLINKPROP","RTM_NEWLINKPROP","RTM_NEWMDB","RTM_NEWMDB","RTM_NEWNDUSEROPT","RTM_NEWNDUSEROPT","RTM_NEWNEIGH","RTM_NEWNEIGH","RTM_NEWNEIGHTBL","RTM_NEWNEIGHTBL","RTM_NEWNETCONF","RTM_NEWNETCONF","RTM_NEWNEXTHOP","RTM_NEWNEXTHOP","RTM_NEWNEXTHOPBUCKET","RTM_NEWNEXTHOPBUCKET","RTM_NEWNSID","RTM_NEWNSID","RTM_NEWPREFIX","RTM_NEWPREFIX","RTM_NEWQDISC","RTM_NEWQDISC","RTM_NEWROUTE","RTM_NEWROUTE","RTM_NEWRULE","RTM_NEWRULE","RTM_NEWSTATS","RTM_NEWSTATS","RTM_NEWTCLASS","RTM_NEWTCLASS","RTM_NEWTFILTER","RTM_NEWTFILTER","RTM_NEWTUNNEL","RTM_NEWTUNNEL","RTM_NEWVLAN","RTM_NEWVLAN","RTM_SETDCB","RTM_SETDCB","RTM_SETLINK","RTM_SETLINK","RTM_SETNEIGHTBL","RTM_SETNEIGHTBL","RTM_SETSTATS","RTM_SETSTATS","RTNETLINK_HAVE_PEERINFO","RTNH_ALIGNTO","RTNH_COMPARE_MASK","RTNH_F_DEAD","RTNH_F_LINKDOWN","RTNH_F_OFFLOAD","RTNH_F_ONLINK","RTNH_F_PERVASIVE","RTNH_F_TRAP","RTNH_F_UNRESOLVED","RTNLGRP_BRVLAN","RTNLGRP_DCB","RTNLGRP_DECnet_IFADDR","RTNLGRP_DECnet_ROUTE","RTNLGRP_DECnet_RULE","RTNLGRP_IPV4_IFADDR","RTNLGRP_IPV4_MROUTE","RTNLGRP_IPV4_MROUTE_R","RTNLGRP_IPV4_NETCONF","RTNLGRP_IPV4_ROUTE","RTNLGRP_IPV4_RULE","RTNLGRP_IPV6_IFADDR","RTNLGRP_IPV6_IFINFO","RTNLGRP_IPV6_MROUTE","RTNLGRP_IPV6_MROUTE_R","RTNLGRP_IPV6_NETCONF","RTNLGRP_IPV6_PREFIX","RTNLGRP_IPV6_ROUTE","RTNLGRP_IPV6_RULE","RTNLGRP_LINK","RTNLGRP_MCTP_IFADDR","RTNLGRP_MDB","RTNLGRP_MPLS_NETCONF","RTNLGRP_MPLS_ROUTE","RTNLGRP_ND_USEROPT","RTNLGRP_NEIGH","RTNLGRP_NEXTHOP","RTNLGRP_NONE","RTNLGRP_NOP2","RTNLGRP_NOP4","RTNLGRP_NOTIFY","RTNLGRP_NSID","RTNLGRP_PHONET_IFADDR","RTNLGRP_PHONET_ROUTE","RTNLGRP_STATS","RTNLGRP_TC","RTNLGRP_TUNNEL","RTNL_FAMILY_IP6MR","RTNL_FAMILY_IPMR","RTNL_FAMILY_MAX","RTN_ANYCAST","RTN_ANYCAST","RTN_BLACKHOLE","RTN_BLACKHOLE","RTN_BROADCAST","RTN_BROADCAST","RTN_LOCAL","RTN_LOCAL","RTN_MULTICAST","RTN_MULTICAST","RTN_NAT","RTN_NAT","RTN_PROHIBIT","RTN_PROHIBIT","RTN_THROW","RTN_THROW","RTN_UNICAST","RTN_UNICAST","RTN_UNREACHABLE","RTN_UNREACHABLE","RTN_UNSPEC","RTN_UNSPEC","RTN_XRESOLVE","RTN_XRESOLVE","RTPROT_BABEL","RTPROT_BGP","RTPROT_BIRD","RTPROT_BOOT","RTPROT_DHCP","RTPROT_DNROUTED","RTPROT_EIGRP","RTPROT_GATED","RTPROT_ISIS","RTPROT_KEEPALIVED","RTPROT_KERNEL","RTPROT_MROUTED","RTPROT_MRT","RTPROT_NTK","RTPROT_OPENR","RTPROT_OSPF","RTPROT_RA","RTPROT_REDIRECT","RTPROT_RIP","RTPROT_STATIC","RTPROT_UNSPEC","RTPROT_XORP","RTPROT_ZEBRA","RT_SCOPE_HOST","RT_SCOPE_LINK","RT_SCOPE_NOWHERE","RT_SCOPE_SITE","RT_SCOPE_UNIVERSE","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_LOCAL","RT_TABLE_MAIN","RT_TABLE_MAX","RT_TABLE_UNSPEC","SOCK_BUF_LOCK_MASK","SOCK_RCVBUF_LOCK","SOCK_SNDBUF_LOCK","SOCK_TXREHASH_DEFAULT","SOCK_TXREHASH_DISABLED","SOCK_TXREHASH_ENABLED","TCA_ACT_FLAG_LARGE_DUMP_ON","TCA_ACT_FLAG_TERSE_DUMP","TCA_CHAIN","TCA_CHAIN","TCA_DUMP_FLAGS","TCA_DUMP_FLAGS","TCA_DUMP_FLAGS_TERSE","TCA_DUMP_INVISIBLE","TCA_DUMP_INVISIBLE","TCA_EGRESS_BLOCK","TCA_EGRESS_BLOCK","TCA_EXT_WARN_MSG","TCA_EXT_WARN_MSG","TCA_FCNT","TCA_FCNT","TCA_FLAG_LARGE_DUMP_ON","TCA_HW_OFFLOAD","TCA_HW_OFFLOAD","TCA_INGRESS_BLOCK","TCA_INGRESS_BLOCK","TCA_KIND","TCA_KIND","TCA_OPTIONS","TCA_OPTIONS","TCA_PAD","TCA_PAD","TCA_RATE","TCA_RATE","TCA_ROOT_COUNT","TCA_ROOT_COUNT","TCA_ROOT_EXT_WARN_MSG","TCA_ROOT_EXT_WARN_MSG","TCA_ROOT_FLAGS","TCA_ROOT_FLAGS","TCA_ROOT_TAB","TCA_ROOT_TAB","TCA_ROOT_TIME_DELTA","TCA_ROOT_TIME_DELTA","TCA_ROOT_UNSPEC","TCA_ROOT_UNSPEC","TCA_STAB","TCA_STAB","TCA_STATS","TCA_STATS","TCA_STATS2","TCA_STATS2","TCA_UNSPEC","TCA_UNSPEC","TCA_XSTATS","TCA_XSTATS","TCM_IFINDEX_MAGIC_BLOCK","TUNNEL_MSG_FLAG_STATS","TUNNEL_MSG_VALID_USER_FLAGS","VNIFILTER_ENTRY_STATS_PAD","VNIFILTER_ENTRY_STATS_PAD","VNIFILTER_ENTRY_STATS_RX_BYTES","VNIFILTER_ENTRY_STATS_RX_BYTES","VNIFILTER_ENTRY_STATS_RX_DROPS","VNIFILTER_ENTRY_STATS_RX_DROPS","VNIFILTER_ENTRY_STATS_RX_ERRORS","VNIFILTER_ENTRY_STATS_RX_ERRORS","VNIFILTER_ENTRY_STATS_RX_PKTS","VNIFILTER_ENTRY_STATS_RX_PKTS","VNIFILTER_ENTRY_STATS_TX_BYTES","VNIFILTER_ENTRY_STATS_TX_BYTES","VNIFILTER_ENTRY_STATS_TX_DROPS","VNIFILTER_ENTRY_STATS_TX_DROPS","VNIFILTER_ENTRY_STATS_TX_ERRORS","VNIFILTER_ENTRY_STATS_TX_ERRORS","VNIFILTER_ENTRY_STATS_TX_PKTS","VNIFILTER_ENTRY_STATS_TX_PKTS","VNIFILTER_ENTRY_STATS_UNSPEC","VNIFILTER_ENTRY_STATS_UNSPEC","VXLAN_DF_INHERIT","VXLAN_DF_MAX","VXLAN_DF_SET","VXLAN_DF_UNSET","VXLAN_VNIFILTER_ENTRY","VXLAN_VNIFILTER_ENTRY","VXLAN_VNIFILTER_ENTRY_END","VXLAN_VNIFILTER_ENTRY_END","VXLAN_VNIFILTER_ENTRY_GROUP","VXLAN_VNIFILTER_ENTRY_GROUP","VXLAN_VNIFILTER_ENTRY_GROUP6","VXLAN_VNIFILTER_ENTRY_GROUP6","VXLAN_VNIFILTER_ENTRY_START","VXLAN_VNIFILTER_ENTRY_START","VXLAN_VNIFILTER_ENTRY_STATS","VXLAN_VNIFILTER_ENTRY_STATS","VXLAN_VNIFILTER_ENTRY_UNSPEC","VXLAN_VNIFILTER_ENTRY_UNSPEC","VXLAN_VNIFILTER_UNSPEC","VXLAN_VNIFILTER_UNSPEC","XDP_ATTACHED_DRV","XDP_ATTACHED_DRV","XDP_ATTACHED_HW","XDP_ATTACHED_HW","XDP_ATTACHED_MULTI","XDP_ATTACHED_MULTI","XDP_ATTACHED_NONE","XDP_ATTACHED_NONE","XDP_ATTACHED_SKB","XDP_ATTACHED_SKB","XDP_FLAGS_DRV_MODE","XDP_FLAGS_HW_MODE","XDP_FLAGS_MASK","XDP_FLAGS_MODES","XDP_FLAGS_REPLACE","XDP_FLAGS_SKB_MODE","XDP_FLAGS_UPDATE_IF_NOEXIST","_K_SS_MAXSIZE","__GENEVE_DF_END","__IFA_MAX","__IFA_MAX","__IFLA_BAREUDP_MAX","__IFLA_BAREUDP_MAX","__IFLA_BOND_AD_INFO_MAX","__IFLA_BOND_AD_INFO_MAX","__IFLA_BOND_MAX","__IFLA_BOND_MAX","__IFLA_BOND_SLAVE_MAX","__IFLA_BOND_SLAVE_MAX","__IFLA_BRPORT_MAX","__IFLA_BRPORT_MAX","__IFLA_BR_MAX","__IFLA_BR_MAX","__IFLA_DSA_MAX","__IFLA_DSA_MAX","__IFLA_GENEVE_MAX","__IFLA_GENEVE_MAX","__IFLA_GTP_MAX","__IFLA_GTP_MAX","__IFLA_HSR_MAX","__IFLA_HSR_MAX","__IFLA_INET6_MAX","__IFLA_INET6_MAX","__IFLA_INET_MAX","__IFLA_INET_MAX","__IFLA_INFO_MAX","__IFLA_INFO_MAX","__IFLA_IPOIB_MAX","__IFLA_IPOIB_MAX","__IFLA_IPVLAN_MAX","__IFLA_IPVLAN_MAX","__IFLA_MACSEC_MAX","__IFLA_MACSEC_MAX","__IFLA_MACVLAN_MAX","__IFLA_MACVLAN_MAX","__IFLA_MAX","__IFLA_MAX","__IFLA_MCTP_MAX","__IFLA_MCTP_MAX","__IFLA_OFFLOAD_XSTATS_HW_S_INFO_MAX","__IFLA_OFFLOAD_XSTATS_HW_S_INFO_MAX","__IFLA_OFFLOAD_XSTATS_MAX","__IFLA_OFFLOAD_XSTATS_MAX","__IFLA_PORT_MAX","__IFLA_PORT_MAX","__IFLA_PPP_MAX","__IFLA_PPP_MAX","__IFLA_PROTO_DOWN_REASON_CNT","__IFLA_PROTO_DOWN_REASON_CNT","__IFLA_RMNET_MAX","__IFLA_RMNET_MAX","__IFLA_STATS_GETSET_MAX","__IFLA_STATS_GETSET_MAX","__IFLA_STATS_MAX","__IFLA_STATS_MAX","__IFLA_TUN_MAX","__IFLA_TUN_MAX","__IFLA_VF_INFO_MAX","__IFLA_VF_INFO_MAX","__IFLA_VF_LINK_STATE_MAX","__IFLA_VF_LINK_STATE_MAX","__IFLA_VF_MAX","__IFLA_VF_MAX","__IFLA_VF_PORT_MAX","__IFLA_VF_PORT_MAX","__IFLA_VF_STATS_MAX","__IFLA_VF_STATS_MAX","__IFLA_VF_VLAN_INFO_MAX","__IFLA_VF_VLAN_INFO_MAX","__IFLA_VLAN_MAX","__IFLA_VLAN_MAX","__IFLA_VLAN_QOS_MAX","__IFLA_VLAN_QOS_MAX","__IFLA_VRF_MAX","__IFLA_VRF_MAX","__IFLA_VRF_PORT_MAX","__IFLA_VRF_PORT_MAX","__IFLA_VXLAN_MAX","__IFLA_VXLAN_MAX","__IFLA_XDP_MAX","__IFLA_XDP_MAX","__IFLA_XFRM_MAX","__IFLA_XFRM_MAX","__IncompleteArrayField","__LINK_XSTATS_TYPE_MAX","__LINK_XSTATS_TYPE_MAX","__MACSEC_OFFLOAD_END","__MACSEC_VALIDATE_END","__NDA_MAX","__NDA_MAX","__NDTA_MAX","__NDTA_MAX","__NDTPA_MAX","__NDTPA_MAX","__NDUSEROPT_MAX","__NDUSEROPT_MAX","__NFEA_MAX","__NFEA_MAX","__NLMSGERR_ATTR_MAX","__NL_POLICY_TYPE_ATTR_MAX","__PREFIX_MAX","__PREFIX_MAX","__RTAX_MAX","__RTAX_MAX","__RTA_MAX","__RTM_MAX","__RTM_MAX","__RTNLGRP_MAX","__RTN_MAX","__RTN_MAX","__TCA_MAX","__TCA_MAX","__TCA_ROOT_MAX","__TCA_ROOT_MAX","__VNIFILTER_ENTRY_STATS_MAX","__VNIFILTER_ENTRY_STATS_MAX","__VXLAN_DF_END","__VXLAN_VNIFILTER_ENTRY_MAX","__VXLAN_VNIFILTER_ENTRY_MAX","__VXLAN_VNIFILTER_MAX","__VXLAN_VNIFILTER_MAX","__align","__be16","__be32","__be64","__bindgen_anon_1","__bindgen_anon_1","__data","__ifi_pad","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_time_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_sa_family_t","__kernel_size_t","__kernel_sockaddr_storage","__kernel_sockaddr_storage__bindgen_ty_1","__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time64_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__poll_t","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__wsum","_bindgen_ty_1","_bindgen_ty_10","_bindgen_ty_11","_bindgen_ty_12","_bindgen_ty_13","_bindgen_ty_14","_bindgen_ty_15","_bindgen_ty_16","_bindgen_ty_17","_bindgen_ty_18","_bindgen_ty_19","_bindgen_ty_2","_bindgen_ty_20","_bindgen_ty_21","_bindgen_ty_22","_bindgen_ty_23","_bindgen_ty_24","_bindgen_ty_25","_bindgen_ty_26","_bindgen_ty_27","_bindgen_ty_28","_bindgen_ty_29","_bindgen_ty_3","_bindgen_ty_30","_bindgen_ty_31","_bindgen_ty_32","_bindgen_ty_33","_bindgen_ty_34","_bindgen_ty_35","_bindgen_ty_36","_bindgen_ty_37","_bindgen_ty_38","_bindgen_ty_39","_bindgen_ty_4","_bindgen_ty_40","_bindgen_ty_41","_bindgen_ty_42","_bindgen_ty_43","_bindgen_ty_44","_bindgen_ty_45","_bindgen_ty_46","_bindgen_ty_47","_bindgen_ty_48","_bindgen_ty_49","_bindgen_ty_5","_bindgen_ty_50","_bindgen_ty_51","_bindgen_ty_52","_bindgen_ty_53","_bindgen_ty_54","_bindgen_ty_55","_bindgen_ty_56","_bindgen_ty_57","_bindgen_ty_58","_bindgen_ty_59","_bindgen_ty_6","_bindgen_ty_60","_bindgen_ty_61","_bindgen_ty_62","_bindgen_ty_63","_bindgen_ty_64","_bindgen_ty_65","_bindgen_ty_66","_bindgen_ty_7","_bindgen_ty_8","_bindgen_ty_9","addr","as_mut_ptr","as_mut_slice","as_ptr","as_slice","base_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","code","collisions","collisions","cstamp","default","dma","dport","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","family","family","filter_mask","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","group","guid","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","high","icmpt","ident","if_stats_msg","ifa_cacheinfo","ifa_family","ifa_flags","ifa_index","ifa_prefered","ifa_prefixlen","ifa_scope","ifa_valid","ifaddrmsg","ifi_change","ifi_family","ifi_flags","ifi_index","ifi_type","ifindex","ifindex","ifinfomsg","ifla_bridge_id","ifla_cacheinfo","ifla_geneve_df","ifla_gtp_role","ifla_port_vsi","ifla_rmnet_flags","ifla_vf_broadcast","ifla_vf_guid","ifla_vf_link_state","ifla_vf_mac","ifla_vf_rate","ifla_vf_rss_query_en","ifla_vf_spoofchk","ifla_vf_trust","ifla_vf_tx_rate","ifla_vf_vlan","ifla_vf_vlan_info","ifla_vlan_flags","ifla_vlan_qos_mapping","ifla_vxlan_df","ifla_vxlan_port_range","in6_addr_gen_mode","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ipvlan_mode","irq","link_state","low","mac","macsec_offload","macsec_validation_type","macvlan_macaddr_mode","macvlan_mode","mask","mask","max_reasm_len","max_tx_rate","mem_end","mem_start","mfcs_bytes","mfcs_packets","mfcs_wrong_if","min_tx_rate","msg","multicast","multicast","multicast","nda_cacheinfo","ndm_confirmed","ndm_family","ndm_flags","ndm_ifindex","ndm_pad1","ndm_pad2","ndm_refcnt","ndm_state","ndm_type","ndm_updated","ndm_used","ndmsg","ndt_config","ndt_stats","ndtc_entries","ndtc_entry_size","ndtc_hash_chain_gc","ndtc_hash_mask","ndtc_hash_rnd","ndtc_key_len","ndtc_last_flush","ndtc_last_rand","ndtc_proxy_qlen","ndtm_family","ndtm_pad1","ndtm_pad2","ndtmsg","ndts_allocs","ndts_destroys","ndts_forced_gc_runs","ndts_hash_grows","ndts_hits","ndts_lookups","ndts_periodic_gc_runs","ndts_rcv_probes_mcast","ndts_rcv_probes_ucast","ndts_res_failed","ndts_table_fulls","nduseropt_family","nduseropt_icmp_code","nduseropt_icmp_type","nduseropt_ifindex","nduseropt_opts_len","nduseropt_pad1","nduseropt_pad2","nduseropt_pad3","nduseroptmsg","netlink_attribute_type","netlink_policy_type_attr","new","nl_family","nl_groups","nl_mmap_hdr","nl_mmap_req","nl_mmap_status","nl_pad","nl_pid","nl_pktinfo","nla_bitfield32","nla_len","nla_type","nlattr","nlmsg_flags","nlmsg_len","nlmsg_pid","nlmsg_seq","nlmsg_type","nlmsgerr","nlmsgerr_attrs","nlmsghdr","nm_block_nr","nm_block_size","nm_frame_nr","nm_frame_size","nm_gid","nm_group","nm_len","nm_pid","nm_status","nm_uid","pad","pad1","pad1","pad2","pad2","port","ports","preferred_time","prefix_cacheinfo","prefix_family","prefix_flags","prefix_ifindex","prefix_len","prefix_pad1","prefix_pad2","prefix_pad3","prefix_type","prefixmsg","prio","proto","qos","qos","rate","reachable_time","reserved2","retrans_time","rt_class_t","rt_scope_t","rta_cacheinfo","rta_clntref","rta_error","rta_expires","rta_id","rta_lastuse","rta_len","rta_mfc_stats","rta_session","rta_session__bindgen_ty_1","rta_session__bindgen_ty_1__bindgen_ty_1","rta_session__bindgen_ty_1__bindgen_ty_2","rta_ts","rta_tsage","rta_type","rta_used","rtattr","rtattr_type_t","rtgen_family","rtgenmsg","rtm_dst_len","rtm_family","rtm_flags","rtm_protocol","rtm_scope","rtm_src_len","rtm_table","rtm_tos","rtm_type","rtmsg","rtnetlink_groups","rtnexthop","rtnh_flags","rtnh_hops","rtnh_ifindex","rtnh_len","rtnl_hw_stats64","rtnl_link_ifmap","rtnl_link_stats","rtnl_link_stats64","rtvia","rtvia_addr","rtvia_family","rx_bytes","rx_bytes","rx_bytes","rx_compressed","rx_compressed","rx_crc_errors","rx_crc_errors","rx_dropped","rx_dropped","rx_dropped","rx_errors","rx_errors","rx_errors","rx_fifo_errors","rx_fifo_errors","rx_frame_errors","rx_frame_errors","rx_length_errors","rx_length_errors","rx_missed_errors","rx_missed_errors","rx_nohandler","rx_nohandler","rx_otherhost_dropped","rx_over_errors","rx_over_errors","rx_packets","rx_packets","rx_packets","selector","setting","setting","setting","sockaddr_nl","spi","sport","ss_family","tca__pad1","tca__pad2","tca_family","tcamsg","tcm__pad1","tcm__pad2","tcm_family","tcm_handle","tcm_ifindex","tcm_info","tcm_parent","tcmsg","to","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tstamp","tstamp","tunnel_msg","tx_aborted_errors","tx_aborted_errors","tx_bytes","tx_bytes","tx_bytes","tx_carrier_errors","tx_carrier_errors","tx_compressed","tx_compressed","tx_dropped","tx_dropped","tx_dropped","tx_errors","tx_errors","tx_errors","tx_fifo_errors","tx_fifo_errors","tx_heartbeat_errors","tx_heartbeat_errors","tx_packets","tx_packets","tx_packets","tx_window_errors","tx_window_errors","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","valid_time","value","vf","vf","vf","vf","vf","vf","vf","vf","vf","vf","vlan","vlan","vlan_proto","vsi_mgr_id","vsi_type_id","vsi_type_version","PR_CAPBSET_DROP","PR_CAPBSET_READ","PR_CAP_AMBIENT","PR_CAP_AMBIENT_CLEAR_ALL","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_RAISE","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_FP_EXC_ASYNC","PR_FP_EXC_DISABLED","PR_FP_EXC_DIV","PR_FP_EXC_INV","PR_FP_EXC_NONRECOV","PR_FP_EXC_OVF","PR_FP_EXC_PRECISE","PR_FP_EXC_RES","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_UND","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_GET_CHILD_SUBREAPER","PR_GET_DUMPABLE","PR_GET_ENDIAN","PR_GET_FPEMU","PR_GET_FPEXC","PR_GET_FP_MODE","PR_GET_IO_FLUSHER","PR_GET_KEEPCAPS","PR_GET_MDWE","PR_GET_NAME","PR_GET_NO_NEW_PRIVS","PR_GET_PDEATHSIG","PR_GET_SECCOMP","PR_GET_SECUREBITS","PR_GET_SPECULATION_CTRL","PR_GET_TAGGED_ADDR_CTRL","PR_GET_THP_DISABLE","PR_GET_TID_ADDRESS","PR_GET_TIMERSLACK","PR_GET_TIMING","PR_GET_TSC","PR_GET_UNALIGN","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_EARLY","PR_MCE_KILL_GET","PR_MCE_KILL_LATE","PR_MCE_KILL_SET","PR_MDWE_REFUSE_EXEC_GAIN","PR_MPX_DISABLE_MANAGEMENT","PR_MPX_ENABLE_MANAGEMENT","PR_MTE_TAG_MASK","PR_MTE_TAG_SHIFT","PR_MTE_TCF_ASYNC","PR_MTE_TCF_MASK","PR_MTE_TCF_NONE","PR_MTE_TCF_SHIFT","PR_MTE_TCF_SYNC","PR_PAC_APDAKEY","PR_PAC_APDBKEY","PR_PAC_APGAKEY","PR_PAC_APIAKEY","PR_PAC_APIBKEY","PR_PAC_GET_ENABLED_KEYS","PR_PAC_RESET_KEYS","PR_PAC_SET_ENABLED_KEYS","PR_SCHED_CORE","PR_SCHED_CORE_CREATE","PR_SCHED_CORE_GET","PR_SCHED_CORE_MAX","PR_SCHED_CORE_SCOPE_PROCESS_GROUP","PR_SCHED_CORE_SCOPE_THREAD","PR_SCHED_CORE_SCOPE_THREAD_GROUP","PR_SCHED_CORE_SHARE_FROM","PR_SCHED_CORE_SHARE_TO","PR_SET_CHILD_SUBREAPER","PR_SET_DUMPABLE","PR_SET_ENDIAN","PR_SET_FPEMU","PR_SET_FPEXC","PR_SET_FP_MODE","PR_SET_IO_FLUSHER","PR_SET_KEEPCAPS","PR_SET_MDWE","PR_SET_MM","PR_SET_MM_ARG_END","PR_SET_MM_ARG_START","PR_SET_MM_AUXV","PR_SET_MM_BRK","PR_SET_MM_END_CODE","PR_SET_MM_END_DATA","PR_SET_MM_ENV_END","PR_SET_MM_ENV_START","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_MM_START_BRK","PR_SET_MM_START_CODE","PR_SET_MM_START_DATA","PR_SET_MM_START_STACK","PR_SET_NAME","PR_SET_NO_NEW_PRIVS","PR_SET_PDEATHSIG","PR_SET_PTRACER","PR_SET_SECCOMP","PR_SET_SECUREBITS","PR_SET_SPECULATION_CTRL","PR_SET_SYSCALL_USER_DISPATCH","PR_SET_TAGGED_ADDR_CTRL","PR_SET_THP_DISABLE","PR_SET_TIMERSLACK","PR_SET_TIMING","PR_SET_TSC","PR_SET_UNALIGN","PR_SET_VMA","PR_SET_VMA_ANON_NAME","PR_SME_GET_VL","PR_SME_SET_VL","PR_SME_SET_VL_ONEXEC","PR_SME_VL_INHERIT","PR_SME_VL_LEN_MASK","PR_SPEC_DISABLE","PR_SPEC_DISABLE_NOEXEC","PR_SPEC_ENABLE","PR_SPEC_FORCE_DISABLE","PR_SPEC_INDIRECT_BRANCH","PR_SPEC_L1D_FLUSH","PR_SPEC_NOT_AFFECTED","PR_SPEC_PRCTL","PR_SPEC_STORE_BYPASS","PR_SVE_GET_VL","PR_SVE_SET_VL","PR_SVE_SET_VL_ONEXEC","PR_SVE_VL_INHERIT","PR_SVE_VL_LEN_MASK","PR_SYS_DISPATCH_OFF","PR_SYS_DISPATCH_ON","PR_TAGGED_ADDR_ENABLE","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","SYSCALL_DISPATCH_FILTER_ALLOW","SYSCALL_DISPATCH_FILTER_BLOCK","__be16","__be32","__be64","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_time_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_size_t","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time64_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__poll_t","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__wsum","arg_end","arg_start","auxv","auxv_size","borrow","borrow_mut","brk","clone","end_code","end_data","env_end","env_start","exe_fd","fmt","from","into","prctl_mm_map","start_brk","start_code","start_data","start_stack","try_from","try_into","type_id","FD_CLR","FD_ISSET","FD_SET","FD_ZERO","SIG_DFL","sig_ign","XDP_COPY","XDP_MMAP_OFFSETS","XDP_OPTIONS","XDP_OPTIONS_ZEROCOPY","XDP_PGOFF_RX_RING","XDP_PGOFF_TX_RING","XDP_PKT_CONTD","XDP_RING_NEED_WAKEUP","XDP_RX_RING","XDP_SHARED_UMEM","XDP_STATISTICS","XDP_TX_RING","XDP_UMEM_COMPLETION_RING","XDP_UMEM_FILL_RING","XDP_UMEM_PGOFF_COMPLETION_RING","XDP_UMEM_PGOFF_FILL_RING","XDP_UMEM_REG","XDP_UMEM_UNALIGNED_CHUNK_FLAG","XDP_USE_NEED_WAKEUP","XDP_USE_SG","XDP_ZEROCOPY","XSK_UNALIGNED_BUF_ADDR_MASK","XSK_UNALIGNED_BUF_OFFSET_SHIFT","__be16","__be32","__be64","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_time_t","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_size_t","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time64_t","__kernel_time_t","__kernel_timer_t","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__poll_t","__s16","__s32","__s64","__s8","__sum16","__u16","__u32","__u64","__u8","__wsum","addr","addr","addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","chunk_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","consumer","consumer","cr","cr","desc","desc","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fr","fr","from","from","from","from","from","from","from","from","from","from","from","headroom","headroom","into","into","into","into","into","into","into","into","into","into","into","len","len","len","options","producer","producer","rx","rx","rx_dropped","rx_dropped","rx_fill_ring_empty_descs","rx_invalid_descs","rx_invalid_descs","rx_ring_full","sockaddr_xdp","sxdp_family","sxdp_flags","sxdp_ifindex","sxdp_queue_id","sxdp_shared_umem_fd","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","tx","tx_invalid_descs","tx_invalid_descs","tx_ring_empty_descs","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","xdp_desc","xdp_mmap_offsets","xdp_mmap_offsets_v1","xdp_options","xdp_ring_offset","xdp_ring_offset_v1","xdp_statistics","xdp_statistics_v1","xdp_umem_reg","xdp_umem_reg_v1"],"q":[[0,"linux_raw_sys"],[13,"linux_raw_sys::cmsg_macros"],[19,"linux_raw_sys::ctypes"],[41,"linux_raw_sys::elf"],[228,"linux_raw_sys::errno"],[361,"linux_raw_sys::general"],[3735,"linux_raw_sys::if_ether"],[3906,"linux_raw_sys::ioctl"],[5510,"linux_raw_sys::net"],[8327,"linux_raw_sys::netlink"],[12082,"linux_raw_sys::prctl"],[12307,"linux_raw_sys::select_macros"],[12311,"linux_raw_sys::signal_macros"],[12313,"linux_raw_sys::xdp"],[12536,"core::fmt"],[12537,"core::fmt"],[12538,"core::any"],[12539,"core::clone"],[12540,"core::cmp"],[12541,"core::cmp"],[12542,"core::cmp"],[12543,"core::convert"],[12544,"core::hash"],[12545,"core::cmp"]],"d":["","","The ELF ABI. 🧝","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Equivalent to C’s <code>void</code> type when used as a pointer.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeo value.","No value.","No value.","No value.","No valueome value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Rust doesn’t currently permit us to use <code>transmute</code> to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,412,14,14,413,414,415,416,412,15,17,12,13,14,413,414,415,416,412,15,17,12,13,14,12,13,14,13,12,12,13,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,414,415,416,412,15,17,12,13,14,413,414,415,416,412,15,17,12,13,14,414,414,414,414,414,414,414,414,15,15,17,15,17,415,415,415,415,415,415,413,414,415,416,412,15,17,12,13,14,413,414,415,416,412,15,17,12,13,14,15,17,413,414,415,416,412,15,17,12,13,14,416,416,416,416,416,416,416,412,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,115,115,115,115,115,115,115,115,115,115,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,400,417,418,419,420,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,400,417,418,419,420,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,421,75,81,122,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,106,0,422,38,40,133,41,42,50,85,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,86,0,0,0,0,0,106,0,0,0,75,121,121,121,80,84,79,111,111,80,78,76,77,79,78,84,120,76,72,123,121,71,73,74,77,120,122,82,120,123,423,83,120,120,120,72,73,74,74,72,80,72,123,120,121,78,71,73,74,76,74,94,99,93,18,18,18,18,43,43,111,422,21,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,133,41,42,43,44,45,46,134,47,48,49,50,51,52,135,53,136,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,137,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,422,21,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,133,41,42,43,44,45,46,134,47,48,49,50,51,52,135,53,136,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,137,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,136,136,46,87,88,89,91,87,88,89,91,87,88,89,91,88,89,87,88,89,91,87,88,89,91,87,88,89,91,88,89,0,0,0,68,68,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,0,21,0,111,36,38,135,102,137,137,137,137,137,27,29,35,21,18,118,134,46,44,46,102,48,26,97,136,111,0,21,54,114,115,116,93,35,53,68,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,108,109,110,0,108,109,110,108,109,110,53,23,94,99,0,0,0,36,38,0,34,36,38,50,68,94,0,0,21,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,133,43,44,45,46,134,47,48,49,50,51,52,135,53,136,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,76,77,78,79,80,84,85,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,137,106,107,108,109,110,111,112,113,114,115,116,124,422,21,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,133,41,42,43,44,45,46,134,47,48,49,50,51,52,135,53,136,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,137,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,96,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,0,52,0,21,21,21,114,115,116,118,134,26,28,30,0,0,422,21,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,133,41,42,43,44,45,46,134,47,48,49,50,51,52,135,53,136,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,137,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,99,101,92,92,0,55,58,62,63,55,58,62,63,0,0,0,0,422,422,41,42,0,32,33,32,33,32,33,32,33,32,33,45,135,96,100,102,111,111,0,52,52,111,27,29,105,135,36,38,47,0,0,45,34,37,101,102,103,104,105,0,135,21,18,111,51,47,47,48,48,0,124,68,21,26,28,30,25,31,68,39,39,0,43,125,0,101,103,104,105,422,37,133,422,111,124,41,124,46,124,134,93,98,134,93,98,93,98,34,53,66,67,66,67,0,0,0,0,29,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,69,113,69,113,69,113,69,113,111,111,21,21,111,111,111,111,111,111,68,68,111,82,82,82,112,0,0,423,83,423,83,423,83,0,0,0,0,0,0,0,0,0,0,0,424,119,424,119,37,0,102,44,44,134,44,134,425,70,425,70,425,70,106,107,106,106,106,106,107,106,106,107,106,107,106,107,106,107,106,107,106,106,107,106,107,106,107,106,107,68,68,0,45,97,100,0,0,0,42,46,42,0,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,0,0,0,0,0,68,96,422,21,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,133,41,42,43,44,45,46,134,47,48,49,50,51,52,135,53,136,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,137,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,422,21,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,133,41,42,43,44,45,46,134,47,48,49,50,51,52,135,53,136,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,137,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,54,57,60,85,54,56,57,59,60,61,85,56,59,61,31,40,133,422,21,18,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,133,41,42,43,44,45,46,134,47,48,49,50,51,52,135,53,136,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,137,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,64,64,40,50,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,42,0,43,117,117,24,50,25,36,38,117,0,0,0,0,135,0,90,90,90,90,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,146,146,146,0,146,146,146,146,146,146,146,146,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,223,0,0,0,0,0,0,0,0,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,0,0,0,0,0,0,0,0,0,0,0,232,0,232,0,232,0,231,0,231,0,231,0,231,0,231,0,231,0,231,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,221,0,221,0,221,0,221,0,0,221,0,221,0,221,0,221,0,0,221,0,0,221,0,0,221,0,221,0,221,0,221,0,221,0,221,0,221,0,0,221,0,221,0,221,0,0,221,0,221,0,221,0,0,221,0,221,0,221,0,221,0,221,0,221,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,235,0,235,0,235,0,235,0,235,0,235,0,235,0,235,0,235,0,0,0,233,233,233,233,233,233,233,0,0,0,0,0,0,236,236,236,236,236,236,236,236,236,236,236,236,236,236,0,0,0,0,0,0,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,0,234,234,234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,224,224,224,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,228,228,228,228,228,0,0,0,0,225,0,0,0,0,0,0,225,0,225,0,225,0,225,0,225,0,225,0,225,0,225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,229,0,0,0,226,0,226,0,0,0,0,226,0,0,0,0,0,0,0,0,225,0,0,0,226,0,0,0,0,0,0,0,0,0,0,227,227,227,227,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,0,0,0,0,0,238,0,0,0,426,427,428,429,152,164,180,238,239,241,429,153,250,172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,163,0,0,0,0,0,190,0,0,0,0,0,0,218,219,220,0,0,0,0,0,0,0,0,0,164,180,147,185,164,180,147,185,0,147,147,430,178,179,188,239,241,247,149,150,150,150,149,150,251,199,209,427,429,149,426,427,428,429,431,430,432,433,434,435,436,437,438,439,440,151,150,152,153,154,155,156,157,250,158,159,160,161,162,163,164,165,166,251,252,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,147,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,253,210,211,212,213,214,215,4,2,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,149,426,427,428,429,431,430,432,433,434,435,436,437,438,439,440,151,150,152,153,154,155,156,157,250,158,159,160,161,162,163,164,165,166,251,252,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,147,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,253,210,211,212,213,214,215,4,2,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,164,147,243,0,191,192,191,192,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,147,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,4,2,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,151,2,2,2,0,213,436,188,188,436,439,253,167,147,165,166,181,182,432,433,194,198,149,151,150,147,195,196,199,212,147,210,211,212,147,436,252,193,439,437,438,440,149,151,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,188,435,147,167,188,212,210,210,180,172,172,172,172,172,172,172,149,151,150,153,154,155,156,157,250,158,162,163,165,166,251,252,167,168,176,177,147,183,184,185,187,188,189,191,192,193,194,195,196,197,198,199,203,204,205,206,207,208,209,253,210,211,213,214,215,4,2,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,243,0,0,0,243,243,164,149,426,427,428,429,431,430,432,433,434,435,436,437,438,439,440,151,150,152,153,154,155,156,157,250,158,159,160,161,162,163,164,165,166,251,252,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,147,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,253,210,211,212,213,214,215,4,2,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,151,151,431,161,431,161,431,161,431,161,161,431,216,159,159,0,0,0,0,0,0,160,160,160,149,151,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,242,251,168,176,177,439,214,180,164,0,0,202,202,0,0,246,246,0,175,175,175,201,201,0,0,0,244,245,245,245,245,245,245,245,245,245,245,245,245,245,200,164,156,156,155,157,155,156,157,157,426,426,426,426,427,250,247,0,0,0,0,0,169,247,0,0,212,212,188,197,149,426,427,428,429,431,430,432,433,434,435,436,437,438,439,440,151,150,152,153,154,155,156,157,250,158,159,160,161,162,163,164,165,166,251,252,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,147,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,253,210,211,212,213,214,215,4,2,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,210,211,212,213,0,247,247,0,174,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,173,173,162,162,162,436,0,0,0,0,0,0,0,0,171,171,199,248,249,215,215,179,188,0,194,191,192,196,204,203,204,248,184,199,199,0,198,188,4,188,4,188,4,217,4,4,217,4,4,0,198,194,194,194,439,440,203,205,207,253,214,0,149,151,150,164,180,147,185,436,251,167,168,176,177,180,0,0,0,0,0,436,439,253,439,214,183,183,210,212,212,168,193,151,180,209,216,199,180,212,164,147,243,0,184,184,188,147,430,251,168,178,188,203,205,207,147,0,0,430,178,154,165,166,181,182,176,147,251,252,151,147,151,147,147,147,147,164,180,147,147,147,147,185,185,185,185,147,164,180,170,170,170,170,170,163,163,163,439,440,200,214,192,212,184,184,0,0,0,0,0,0,147,251,252,210,211,212,153,189,189,147,243,0,198,198,194,194,434,435,437,438,206,436,205,206,249,0,0,0,0,0,0,0,0,0,0,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,186,187,187,186,186,186,187,186,187,186,187,243,0,197,164,212,164,149,426,427,428,429,431,430,432,433,434,435,436,437,438,439,440,151,150,152,153,154,155,156,157,250,158,159,160,161,162,163,164,165,166,251,252,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,147,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,253,210,211,212,213,214,215,4,2,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,149,426,427,428,429,431,430,432,433,434,435,436,437,438,439,440,151,150,152,153,154,155,156,157,250,158,159,160,161,162,163,164,165,166,251,252,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,147,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,253,210,211,212,213,214,215,4,2,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,164,176,179,200,213,149,426,427,428,429,431,430,432,433,434,435,436,437,438,439,440,151,150,152,153,154,155,156,157,250,158,159,160,161,162,163,164,165,166,251,252,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,147,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,253,210,211,212,213,214,215,4,2,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,432,433,208,208,208,240,240,240,208,0,216,439,214,147,147,248,249,439,214,434,164,180,147,198,242,243,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,323,0,323,0,382,0,382,0,345,345,345,345,348,348,364,0,364,0,364,0,0,0,0,0,378,0,378,0,378,0,378,0,378,0,0,0,0,0,0,0,0,0,0,0,0,0,0,378,0,378,0,378,0,378,0,378,0,378,0,378,0,317,0,317,0,317,0,317,0,346,0,346,0,346,0,346,0,346,0,350,0,350,0,350,0,350,0,351,0,351,0,351,0,351,0,351,0,351,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,350,0,352,0,352,0,352,0,352,0,352,0,352,0,352,0,352,0,352,0,352,0,350,0,350,0,350,0,350,0,350,0,317,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,324,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,322,0,317,0,317,0,317,0,317,0,317,0,317,0,377,0,377,0,317,0,373,0,373,0,373,0,373,0,373,0,373,0,373,0,317,0,344,0,344,0,344,0,344,0,344,0,344,0,344,0,344,0,344,0,344,0,344,0,344,0,344,0,344,0,344,0,317,0,317,0,317,0,317,0,317,0,317,0,349,0,349,0,349,0,349,0,349,0,349,0,349,0,365,0,365,0,365,0,365,0,365,0,365,0,365,0,365,0,317,0,317,0,317,0,320,0,320,0,320,0,320,0,320,0,320,0,320,0,320,0,320,0,320,0,319,0,319,0,325,0,325,0,325,0,325,0,325,0,325,0,362,0,362,0,362,0,362,0,337,0,337,0,337,0,317,0,317,0,317,0,317,0,333,0,333,0,333,0,333,0,333,0,333,0,333,0,333,0,333,0,333,0,333,0,333,0,333,0,333,0,333,0,333,0,328,0,328,0,328,0,328,0,328,0,328,0,328,0,328,0,328,0,317,0,317,0,317,0,376,0,376,0,317,0,317,0,317,0,317,0,317,0,317,0,317,0,317,0,317,0,369,0,369,0,370,0,370,0,370,0,369,0,369,0,317,0,317,0,317,0,317,0,317,0,317,0,317,0,317,0,359,0,359,0,359,0,359,0,359,0,317,0,359,0,359,0,359,0,347,0,347,0,317,0,317,0,317,0,317,0,317,0,317,0,318,0,0,318,0,318,0,317,0,375,0,375,0,375,0,317,0,317,0,366,0,367,0,367,0,366,0,366,0,366,0,366,0,367,0,366,0,0,317,0,317,0,374,0,374,0,374,0,374,0,374,0,374,0,374,0,374,0,374,0,374,0,317,0,317,0,317,0,354,0,354,0,354,0,353,0,353,0,354,0,356,0,356,0,356,0,354,0,358,0,317,0,358,0,354,0,354,0,354,0,354,0,357,0,357,0,357,0,357,0,357,0,357,0,357,0,357,0,357,0,354,0,354,0,354,0,354,0,355,0,355,0,354,0,326,0,326,0,326,0,326,0,326,0,327,0,327,0,326,0,332,0,332,0,331,0,331,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,342,0,317,0,317,0,317,0,372,0,372,0,372,0,372,0,372,0,372,0,372,0,372,0,372,0,334,0,334,0,334,0,334,0,321,321,321,321,363,0,363,0,0,0,338,338,338,338,368,0,368,0,368,0,336,336,336,336,335,335,335,335,0,0,330,330,330,330,329,329,329,329,329,0,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,379,0,381,0,381,0,381,0,381,0,381,0,381,0,381,0,381,0,381,0,381,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,380,0,392,0,392,0,0,0,0,0,314,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,314,0,0,0,0,0,383,0,383,0,383,0,0,0,0,0,312,312,312,312,312,312,312,312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,0,313,313,313,313,313,316,316,316,316,316,316,316,316,316,316,316,316,316,316,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,361,0,361,0,361,0,361,0,361,0,361,0,360,0,360,0,360,0,360,0,0,0,361,0,361,0,361,0,361,0,361,0,361,0,361,0,390,0,390,0,390,0,0,0,0,0,0,0,389,0,389,0,389,0,389,0,389,0,0,0,0,0,0,389,0,389,0,389,0,389,0,389,0,389,0,389,0,389,0,389,0,389,0,389,0,389,0,389,0,0,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,0,0,0,0,0,0,0,0,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,384,0,0,0,0,0,0,0,0,0,0,0,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,0,0,0,385,0,385,0,385,0,385,0,385,0,385,0,385,0,385,0,385,0,385,0,385,0,385,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,386,386,386,386,386,387,387,387,387,387,387,0,0,0,0,0,0,0,0,391,0,391,0,0,391,0,391,0,391,0,391,0,0,391,0,391,0,391,0,391,0,391,0,391,0,394,0,394,0,394,0,394,0,394,0,394,0,391,0,391,0,391,0,391,0,391,0,0,0,0,339,0,339,0,339,0,339,0,339,0,339,0,339,0,339,0,339,0,339,0,343,343,343,343,341,0,340,0,340,0,340,0,340,0,340,0,340,0,341,0,371,0,371,0,371,0,371,0,371,0,0,0,0,0,0,0,0,0,345,378,0,346,0,351,0,350,0,352,0,324,0,322,0,377,0,344,0,349,0,365,0,320,0,319,0,325,0,362,0,337,0,333,0,328,0,317,0,376,0,370,0,369,0,359,0,347,0,318,0,375,0,367,0,366,0,374,0,353,0,356,0,354,0,358,0,357,0,355,0,326,0,327,0,331,0,332,0,342,0,372,0,334,0,0,368,0,336,335,379,0,381,0,380,0,392,0,383,0,312,316,390,0,389,0,388,384,0,393,385,0,391,0,394,0,339,0,343,340,0,341,0,395,0,0,0,256,395,257,306,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,270,255,255,255,255,269,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,397,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,397,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,277,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,303,266,267,291,255,269,302,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,260,274,288,288,272,274,289,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,397,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,397,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,273,261,283,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,275,396,303,0,0,290,290,290,291,290,290,291,0,306,306,306,306,306,274,288,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,397,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,0,269,284,275,276,0,0,0,0,272,289,271,281,269,269,304,304,304,281,260,266,267,268,0,293,292,292,292,292,292,293,292,292,293,293,0,0,0,296,296,296,296,296,296,296,296,296,295,295,295,0,294,294,294,294,294,294,294,294,294,294,294,310,310,310,310,310,310,310,310,0,0,0,255,258,258,0,0,0,258,258,0,0,264,264,0,259,259,259,259,259,0,0,0,262,262,262,262,263,263,263,263,263,263,287,288,301,288,301,269,396,308,0,307,307,307,307,307,307,307,307,0,270,301,278,279,280,271,274,271,0,0,0,300,300,300,300,300,297,0,0,0,0,0,300,300,297,300,0,0,305,0,298,298,298,298,298,298,298,298,298,0,0,0,299,299,299,299,0,0,0,0,0,397,397,266,267,268,266,267,266,267,266,267,268,266,267,268,266,267,266,267,266,267,266,267,266,267,267,266,267,266,267,268,265,282,285,286,0,396,302,257,311,311,311,0,309,309,309,309,309,309,309,0,273,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,397,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,397,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,271,291,0,266,267,266,267,268,266,267,266,267,266,267,268,266,267,268,266,267,266,267,266,267,268,266,267,303,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,397,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,301,308,265,276,278,279,280,281,282,283,284,285,286,278,279,279,287,287,287,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,0,398,398,398,398,398,398,398,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,404,407,410,401,402,403,404,405,406,407,408,409,410,411,401,402,403,404,405,406,407,408,409,410,411,404,410,401,402,403,404,405,406,407,408,409,410,411,402,408,403,409,402,408,402,404,406,401,402,403,404,405,406,407,408,409,410,411,403,409,401,402,403,404,405,406,407,408,409,410,411,404,410,401,402,403,404,405,406,407,408,409,410,411,404,407,410,407,402,408,403,409,405,411,405,405,411,405,0,401,401,401,401,401,401,402,403,404,405,406,407,408,409,410,411,401,402,403,404,405,406,407,408,409,410,411,403,409,405,411,405,401,402,403,404,405,406,407,408,409,410,411,0,0,0,0,0,0,0,0,0,0],"f":"`````````````{bb}{df}{hd}2{{hd}d}3{ce{}{}}0``````````````{{jl}{{Ab{nA`}}}}{cc{}}2{c{{Ab{e}}}{}{}}0{cAd{}}`````````````````````````{AfAf}00```````````````````````````````````````55555555555555555555{AhAh}{AjAj}{AlAl}``````````````````66666666668888888888```````````````````55555555555555555555{AnB`}{BbB`}6666666666`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{Bd{c}}}{}{}}{{{Bd{c}}Bf}{{Bh{c}}}{}}10```<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<````````````````````````````````````{{{Bj{c}}}{{Bj{c}}}Bl}{BnBn}{C`C`}{CbCb}{CdCd}{CfCf}{ChCh}{CjCj}{ClCl}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}{DhDh}{DjDj}{DlDl}{DnDn}{E`E`}{EbEb}{EdEd}{EfEf}{EhEh}{EjEj}{ElEl}{EnEn}{F`F`}{FbFb}{FdFd}{FfFf}{FhFh}{FjFj}{FlFl}{FnFn}{G`G`}{GbGb}{GdGd}{GfGf}{GhGh}{GjGj}{GlGl}{GnGn}{H`H`}{HbHb}{HdHd}{HfHf}{HhHh}{HjHj}{HlHl}{HnHn}{I`I`}{IbIb}{IdId}{IfIf}{IhIh}{IjIj}{IlIl}{InIn}{J`J`}{JbJb}{JdJd}{JfJf}{JhJh}{JjJj}{JlJl}{JnJn}{K`K`}{KbKb}{KdKd}{KfKf}{KhKh}{KjKj}{KlKl}{KnKn}{L`L`}{LbLb}{LdLd}{LfLf}{LhLh}{LjLj}{LlLl}{LnLn}{M`M`}{MbMb}{MdMd}{MfMf}{MhMh}{MjMj}{MlMl}{MnMn}{N`N`}{NbNb}{NdNd}{NfNf}{NhNh}{NjNj}{NlNl}{NnNn}{O`O`}{ObOb}{OdOd}{OfOf}{OhOh}{OjOj}`{{{Bj{c}}{Bj{c}}}OlOn}`{Mnb}````````````{{}{{Bj{c}}}A`}{{}{{Bd{c}}}A`}````````````{{{Bj{c}}{Bj{c}}}AbAd}{{FlFl}Ab}{{NdNd}Ab}{{NfNf}Ab}{{NhNh}Ab}```````````````````````````````````````````````````````````{{{Bj{c}}l}AfAh}{{{Bd{c}}l}Af{}}{{Bnl}Af}{{C`l}Af}{{Cbl}Af}{{Cdl}Af}{{Cfl}Af}{{Chl}Af}{{Cjl}Af}{{Cll}Af}{{Cnl}Af}{{D`l}Af}{{Dbl}Af}{{Ddl}Af}{{Dfl}Af}{{Dhl}Af}{{Djl}Af}{{Dll}Af}{{Ajl}Af}{{Efl}Af}{{Ehl}Af}{{Ejl}Af}{{Ell}Af}{{All}Af}{{Enl}Af}{{F`l}Af}{{Fbl}Af}{{Fdl}Af}{{Ffl}Af}{{Fhl}Af}{{Anl}Af}{{Fjl}Af}{{AA`l}Af}{{Fll}Af}{{Fnl}Af}{{G`l}Af}{{Gbl}Af}{{Gdl}Af}{{Gfl}Af}{{Ghl}Af}{{Gjl}Af}{{Gll}Af}{{Gnl}Af}{{H`l}Af}{{Hbl}Af}{{Hdl}Af}{{Hfl}Af}{{Hhl}Af}{{Hjl}Af}{{Hll}Af}{{Hnl}Af}{{Idl}Af}{{Ihl}Af}{{Ijl}Af}{{Ill}Af}{{Inl}Af}{{J`l}Af}{{Jhl}Af}{{Jjl}Af}{{Jll}Af}{{Jnl}Af}{{K`l}Af}{{Kbl}Af}{{Kdl}Af}{{Kfl}Af}{{Khl}Af}{{Knl}Af}{{L`l}Af}{{Lbl}Af}{{Ldl}Af}{{Lfl}Af}{{Lhl}Af}{{Ljl}Af}{{Lll}Af}{{Lnl}Af}{{M`l}Af}{{Mbl}Af}{{AAbl}Af}{{Mdl}Af}{{Mfl}Af}{{Mhl}Af}{{Mjl}Af}{{Mll}Af}{{Mnl}Af}{{N`l}Af}{{Nbl}Af}{{Ndl}Af}{{Nfl}Af}{{Nhl}Af}`{cc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000```````````````````````{{{Bj{c}}BfAf}AAd{{AAf{{Bh{Af}}}}{AAh{{Bh{Af}}}}}}{{{Bj{c}}Bf}Ab{{AAf{{Bh{Af}}}}{AAh{{Bh{Af}}}}}}{{{Bj{c}}e}nAAjAAl}{{Ndc}nAAl}{{Nfc}nAAl}{{Nhc}nAAl}```````{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000``````````````````````````````````````{Mnb}```0```````````````````{c{{Bj{c}}}{}}{{}{{Bd{c}}}{}}{{bbbbbbb}{{Bj{{AAn{Af}}}}}}````````{{{Bj{c}}{Bj{c}}}{{AB`{Ol}}}ABb}````````````````````4`````````````````````````````````````````````````44{{{Bj{c}}BfAfAAd}n{{AAf{{Bh{Af}}}}{AAh{{Bh{Af}}}}}}{{{Bj{c}}BfAb}n{{AAf{{Bh{Af}}}}{AAh{{Bh{Af}}}}}}{{Mnb}n}00000``0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````{c{{Ab{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`````````````````{cAd{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````````````````````9````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````::{ABdABd}`{{ABdl}Af}{cc{}}```=443```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{ABfABh}````````{{{ABj{c}}}c{}}{{{ABl{c}}}{}{}}{{{ABl{c}}Bf}{{Bh{c}}}{}}120`````{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````````{{{ABj{c}}}{{ABj{c}}}{}}{{{ABn{c}}}{{ABn{c}}}Bl}{AC`AC`}{ACbACb}{ACdACd}{ACfACf}{AChACh}{ACjACj}{AClACl}{ACnACn}{AD`AD`}{ADbADb}{ADdADd}{ADfADf}{ADhADh}{ADjADj}{ADlADl}{ADnADn}{AE`AE`}{AEbAEb}{AEdAEd}{AEfAEf}{AEhAEh}{AEjAEj}{AElAEl}{AEnAEn}{AF`AF`}{AFbAFb}{AFdAFd}{AFfAFf}{AFhAFh}{AFjAFj}{AFlAFl}{ABfABf}{AFnAFn}{AG`AG`}{AGbAGb}{AGdAGd}{AGfAGf}{AGhAGh}{AGjAGj}{AGlAGl}{AGnAGn}{AH`AH`}{AHbAHb}{AHdAHd}{AHfAHf}{AHhAHh}{AHjAHj}{AHlAHl}{AHnAHn}{AI`AI`}{AIbAIb}{AIdAId}{AIfAIf}{AIhAIh}{AIjAIj}{AIlAIl}{AInAIn}{AJ`AJ`}{AJbAJb}{AJdAJd}{AJfAJf}{AJhAJh}{AJjAJj}{AJlAJl}{AJnAJn}{hh}{dd}{AK`AK`}{AKbAKb}{AKdAKd}{AKfAKf}{AKhAKh}{AKjAKj}{AKlAKl}{AKnAKn}{AL`AL`}{ALbALb}{ALdALd}{ALfALf}{ALhALh}{ALjALj}{ALlALl}{ALnALn}{AM`AM`}{AMbAMb}{AMdAMd}{AMfAMf}{AMhAMh}{AMjAMj}{AMlAMl}{AMnAMn}{AN`AN`}{ANbANb}{ANdANd}{ANfANf}{ANhANh}{ANjANj}{ANlANl}{ANnANn}{AO`AO`}{AObAOb}{{{ABn{c}}{ABn{c}}}OlOn}````````````{ABfABh}````````{{}{{ABj{c}}}{}}{{}{{ABn{c}}}A`}{{}{{ABl{c}}}A`}`````3```3```````{{{ABj{c}}{ABj{c}}}Ab{}}{{{ABn{c}}{ABn{c}}}AbAd}{{AKjAKj}Ab}{{AKlAKl}Ab}{{AKnAKn}Ab}{{AL`AL`}Ab}{{ALbALb}Ab}{{ALdALd}Ab}{{ALfALf}Ab}{{ALhALh}Ab}{{ALjALj}Ab}{{ALlALl}Ab}{{ALnALn}Ab}{{AM`AM`}Ab}{{AMbAMb}Ab}{{AMdAMd}Ab}{{AMfAMf}Ab}{{AMhAMh}Ab}{{AMjAMj}Ab}``{ABfABh}`````````````{{{ABj{c}}l}Af{}}{{{ABn{c}}l}AfAh}{{{ABl{c}}l}Af{}}{{ACbl}Af}{{ACdl}Af}{{ACfl}Af}{{AChl}Af}{{ACjl}Af}{{AOdl}Af}{{ACll}Af}{{ADdl}Af}{{ADfl}Af}{{ADjl}Af}{{ADll}Af}{{AOfl}Af}{{AOhl}Af}{{ADnl}Af}{{AE`l}Af}{{AF`l}Af}{{AFbl}Af}{{ABfl}Af}{{AFnl}Af}{{AG`l}Af}{{AGbl}Af}{{AGfl}Af}{{AGhl}Af}{{AGjl}Af}{{AGnl}Af}{{AH`l}Af}{{AHbl}Af}{{AHdl}Af}{{AHfl}Af}{{AHhl}Af}{{AHjl}Af}{{AHll}Af}{{AHnl}Af}{{AIfl}Af}{{AIhl}Af}{{AIjl}Af}{{AIll}Af}{{AInl}Af}{{AJ`l}Af}{{AJbl}Af}{{AOjl}Af}{{AJdl}Af}{{AJfl}Af}{{AJjl}Af}{{AJll}Af}{{AJnl}Af}{{hl}Af}{{dl}Af}{{AK`l}Af}{{AKbl}Af}{{AKdl}Af}{{AKfl}Af}{{AKhl}Af}{{AKjl}Af}{{AKll}Af}{{AKnl}Af}{{AL`l}Af}{{ALbl}Af}{{ALdl}Af}{{ALfl}Af}{{ALhl}Af}{{ALjl}Af}{{ALll}Af}{{ALnl}Af}{{AM`l}Af}{{AMbl}Af}{{AMdl}Af}{{AMfl}Af}{{AMhl}Af}{{AMjl}Af}```````{cc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{ABn{c}}BfAf}AAd{{AAf{{Bh{Af}}}}{AAh{{Bh{Af}}}}}}{{{ABn{c}}Bf}Ab{{AAf{{Bh{Af}}}}{AAh{{Bh{Af}}}}}}``````````````````````{{{ABj{c}}e}n{}AAl}{{{ABn{c}}e}nAAjAAl}{{AKjc}nAAl}{{AKlc}nAAl}{{AKnc}nAAl}{{AL`c}nAAl}{{ALbc}nAAl}{{ALdc}nAAl}{{ALfc}nAAl}{{ALhc}nAAl}{{ALjc}nAAl}{{ALlc}nAAl}{{ALnc}nAAl}{{AM`c}nAAl}{{AMbc}nAAl}{{AMdc}nAAl}{{AMfc}nAAl}{{AMhc}nAAl}{{AMjc}nAAl}`````````````````````````````````````````{ADhAOl}````````````````````````````{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000```````````````````````````````````````````````````````````````````````````````````````````````{{}{{ABj{c}}}{}}{c{{ABn{c}}}{}}{{}{{ABl{c}}}{}}{{AOlAOl}{{ABn{{AAn{Af}}}}}}0{{ABhABhABhABhABhABhABhABhABhABh}{{ABn{{AAn{Af}}}}}}{{AOlAOlAOlAOl}{{ABn{{AAn{Af}}}}}}````````````````````````{{{ABn{c}}{ABn{c}}}{{AB`{Ol}}}ABb}````{AFhAOl}``{ABfABh}`````0````````0`````````````{{{ABn{c}}BfAfAAd}n{{AAf{{Bh{Af}}}}{AAh{{Bh{Af}}}}}}{{ABfABh}n}{{{ABn{c}}BfAb}n{{AAf{{Bh{Af}}}}{AAh{{Bh{Af}}}}}}1111{{ADhAOl}n}{{AFhAOl}n}3333{{AGbAOl}n}000421```````````````````````````````6```````````````````````````````````````{AGbAOl}``0``````````````````0````````````````0`````````````````````{c{{Ab{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`````{cAd{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`````````````9``````{ADhAOl};````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{AOn{c}}}{}{}}{{{AOn{c}}Bf}{{Bh{c}}}{}}10`{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{BlBl}{BnBn}{BA`BA`}{BAbBAb}{BAdBAd}{BAfBAf}{BAhBAh}{BAjBAj}{BAlBAl}{BAnBAn}{BB`BB`}{BBbBBb}{BBdBBd}{BBfBBf}{BBhBBh}{BBjBBj}{BBlBBl}{BBnBBn}{BC`BC`}{BCbBCb}{BCdBCd}{BCfBCf}{BChBCh}{BCjBCj}{BClBCl}{BCnBCn}{BD`BD`}{BDbBDb}{BDdBDd}{BDfBDf}{BDhBDh}{BDjBDj}{BDlBDl}{BDnBDn}{BE`BE`}{BEbBEb}{BEdBEd}{BEfBEf}{BEhBEh}{BEjBEj}{BElBEl}{BEnBEn}{BF`BF`}{BFbBFb}{BFdBFd}{BFfBFf}{BFhBFh}{BFjBFj}{BFlBFl}{BFnBFn}{BG`BG`}{BGbBGb}{BGdBGd}{BGfBGf}{BGhBGh}{BGjBGj}{BGlBGl}{BGnBGn}{BH`BH`}{BHbBHb}{BHdBHd}{BHfBHf}{BHhBHh}{BHjBHj}{BHlBHl}{BHnBHn}{BI`BI`}{BIbBIb}{BIdBId}{BIfBIf}{BIhBIh}{BIjBIj}{BIlBIl}{BInBIn}{BJ`BJ`}{BJbBJb}{BJdBJd}{BJfBJf}{BJhBJh}{BJjBJj}{BJlBJl}{BJnBJn}{BK`BK`}{BKbBKb}{BKdBKd}{BKfBKf}{BKhBKh}{BKjBKj}{BKlBKl}{BKnBKn}{BL`BL`}{BLbBLb}{BLdBLd}{BLfBLf}{BLhBLh}{BLjBLj}{BLlBLl}{BLnBLn}{BM`BM`}{BMbBMb}{BMdBMd}{BMfBMf}{BMhBMh}{BMjBMj}{BMlBMl}{BMnBMn}{BN`BN`}{BNbBNb}{BNdBNd}{BNfBNf}{BNhBNh}{BNjBNj}{BNlBNl}{BNnBNn}{BO`BO`}{BObBOb}{BOdBOd}{BOfBOf}{BOhBOh}{BOjBOj}{BOlBOl}{BOnBOn}{C`C`}{CbCb}{CdCd}{CfCf}{ChCh}{CjCj}{ClCl}{CnCn}{CA`CA`}{CAbCAb}{CAdCAd}{CAfCAf}{CAhCAh}````{{}{{AOn{c}}}A`}``{{BG`BG`}Ab}{{BGbBGb}Ab}{{BGdBGd}Ab}{{BGfBGf}Ab}{{BGhBGh}Ab}{{BGjBGj}Ab}{{BGlBGl}Ab}{{BGnBGn}Ab}{{BH`BH`}Ab}{{BHbBHb}Ab}{{BHdBHd}Ab}{{BHfBHf}Ab}{{BHhBHh}Ab}{{BHjBHj}Ab}{{BHlBHl}Ab}{{BHnBHn}Ab}{{BI`BI`}Ab}{{BIbBIb}Ab}{{BIdBId}Ab}{{BIfBIf}Ab}{{BIhBIh}Ab}{{BIjBIj}Ab}{{BIlBIl}Ab}{{BInBIn}Ab}{{BJ`BJ`}Ab}{{BJbBJb}Ab}{{BJdBJd}Ab}{{BJfBJf}Ab}{{BJhBJh}Ab}{{BJjBJj}Ab}{{BJlBJl}Ab}{{BJnBJn}Ab}{{BK`BK`}Ab}{{BKbBKb}Ab}{{BKdBKd}Ab}{{BKfBKf}Ab}{{BKhBKh}Ab}{{BKjBKj}Ab}{{BKlBKl}Ab}{{BKnBKn}Ab}{{BL`BL`}Ab}{{BLbBLb}Ab}{{BLdBLd}Ab}{{BLfBLf}Ab}{{BLhBLh}Ab}{{BLjBLj}Ab}{{BLlBLl}Ab}{{BLnBLn}Ab}{{BM`BM`}Ab}{{BMbBMb}Ab}{{BMdBMd}Ab}{{BMfBMf}Ab}{{BMhBMh}Ab}{{BMjBMj}Ab}{{BMlBMl}Ab}{{BMnBMn}Ab}{{BN`BN`}Ab}{{BNbBNb}Ab}{{BNdBNd}Ab}{{BNfBNf}Ab}{{BNhBNh}Ab}{{BNjBNj}Ab}{{BNlBNl}Ab}{{BNnBNn}Ab}{{BO`BO`}Ab}{{BObBOb}Ab}{{BOdBOd}Ab}{{BOfBOf}Ab}{{BOhBOh}Ab}{{BOjBOj}Ab}{{BOlBOl}Ab}{{BOnBOn}Ab}{{C`C`}Ab}{{CbCb}Ab}{{CdCd}Ab}{{CfCf}Ab}{{ChCh}Ab}{{CjCj}Ab}{{ClCl}Ab}{{CnCn}Ab}{{CA`CA`}Ab}{{CAbCAb}Ab}{{CAdCAd}Ab}```````{{{AOn{c}}l}Af{}}{{Bbl}Af}{{Bdl}Af}{{Bfl}Af}{{Bhl}Af}{{Bjl}Af}{{Bll}Af}{{Bnl}Af}{{BA`l}Af}{{BAbl}Af}{{BAdl}Af}{{BAfl}Af}{{BAhl}Af}{{BAjl}Af}{{BAll}Af}{{BAnl}Af}{{BB`l}Af}{{BBbl}Af}{{BBdl}Af}{{BBfl}Af}{{BBhl}Af}{{BBjl}Af}{{BBll}Af}{{BBnl}Af}{{BC`l}Af}{{BCbl}Af}{{BCdl}Af}{{BCfl}Af}{{BChl}Af}{{BCjl}Af}{{BCll}Af}{{BCnl}Af}{{BD`l}Af}{{BDbl}Af}{{BDdl}Af}{{BDfl}Af}{{BDhl}Af}{{BDjl}Af}{{BDll}Af}{{BDnl}Af}{{BE`l}Af}{{BEbl}Af}{{BEdl}Af}{{BEfl}Af}{{CAjl}Af}{{BEhl}Af}{{BEll}Af}{{BEnl}Af}{{BF`l}Af}{{BFbl}Af}{{BFdl}Af}{{BFfl}Af}{{BFhl}Af}{{BFjl}Af}{{BFll}Af}{{BFnl}Af}{{BG`l}Af}{{BGbl}Af}{{BGdl}Af}{{BGfl}Af}{{BGhl}Af}{{BGjl}Af}{{BGll}Af}{{BGnl}Af}{{BH`l}Af}{{BHbl}Af}{{BHdl}Af}{{BHfl}Af}{{BHhl}Af}{{BHjl}Af}{{BHll}Af}{{BHnl}Af}{{BI`l}Af}{{BIbl}Af}{{BIdl}Af}{{BIfl}Af}{{BIhl}Af}{{BIjl}Af}{{BIll}Af}{{BInl}Af}{{BJ`l}Af}{{BJbl}Af}{{BJdl}Af}{{BJfl}Af}{{BJhl}Af}{{BJjl}Af}{{BJll}Af}{{BJnl}Af}{{BK`l}Af}{{BKbl}Af}{{BKdl}Af}{{BKfl}Af}{{BKhl}Af}{{BKjl}Af}{{BKll}Af}{{BKnl}Af}{{BL`l}Af}{{BLbl}Af}{{BLdl}Af}{{BLfl}Af}{{BLhl}Af}{{BLjl}Af}{{BLll}Af}{{BLnl}Af}{{BM`l}Af}{{BMbl}Af}{{BMdl}Af}{{BMfl}Af}{{BMhl}Af}{{BMjl}Af}{{BMll}Af}{{BMnl}Af}{{BN`l}Af}{{BNbl}Af}{{BNdl}Af}{{BNfl}Af}{{BNhl}Af}{{BNjl}Af}{{BNll}Af}{{BNnl}Af}{{BO`l}Af}{{BObl}Af}{{BOdl}Af}{{BOfl}Af}{{BOhl}Af}{{BOjl}Af}{{BOll}Af}{{BOnl}Af}{{C`l}Af}{{Cbl}Af}{{Cdl}Af}{{Cfl}Af}{{Chl}Af}{{Cjl}Af}{{Cll}Af}{{Cnl}Af}{{CA`l}Af}{{CAbl}Af}{{CAdl}Af}{cc{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000```{{BG`c}nAAl}{{BGbc}nAAl}{{BGdc}nAAl}{{BGfc}nAAl}{{BGhc}nAAl}{{BGjc}nAAl}{{BGlc}nAAl}{{BGnc}nAAl}{{BH`c}nAAl}{{BHbc}nAAl}{{BHdc}nAAl}{{BHfc}nAAl}{{BHhc}nAAl}{{BHjc}nAAl}{{BHlc}nAAl}{{BHnc}nAAl}{{BI`c}nAAl}{{BIbc}nAAl}{{BIdc}nAAl}{{BIfc}nAAl}{{BIhc}nAAl}{{BIjc}nAAl}{{BIlc}nAAl}{{BInc}nAAl}{{BJ`c}nAAl}{{BJbc}nAAl}{{BJdc}nAAl}{{BJfc}nAAl}{{BJhc}nAAl}{{BJjc}nAAl}{{BJlc}nAAl}{{BJnc}nAAl}{{BK`c}nAAl}{{BKbc}nAAl}{{BKdc}nAAl}{{BKfc}nAAl}{{BKhc}nAAl}{{BKjc}nAAl}{{BKlc}nAAl}{{BKnc}nAAl}{{BL`c}nAAl}{{BLbc}nAAl}{{BLdc}nAAl}{{BLfc}nAAl}{{BLhc}nAAl}{{BLjc}nAAl}{{BLlc}nAAl}{{BLnc}nAAl}{{BM`c}nAAl}{{BMbc}nAAl}{{BMdc}nAAl}{{BMfc}nAAl}{{BMhc}nAAl}{{BMjc}nAAl}{{BMlc}nAAl}{{BMnc}nAAl}{{BN`c}nAAl}{{BNbc}nAAl}{{BNdc}nAAl}{{BNfc}nAAl}{{BNhc}nAAl}{{BNjc}nAAl}{{BNlc}nAAl}{{BNnc}nAAl}{{BO`c}nAAl}{{BObc}nAAl}{{BOdc}nAAl}{{BOfc}nAAl}{{BOhc}nAAl}{{BOjc}nAAl}{{BOlc}nAAl}{{BOnc}nAAl}{{C`c}nAAl}{{Cbc}nAAl}{{Cdc}nAAl}{{Cfc}nAAl}{{Chc}nAAl}{{Cjc}nAAl}{{Clc}nAAl}{{Cnc}nAAl}{{CA`c}nAAl}{{CAbc}nAAl}{{CAdc}nAAl}```````````````````````````````````````````{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`````````````````````````````````````````````````````````````````````````{{}{{AOn{c}}}{}}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{c{{Ab{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````````````````````````````{cAd{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````33`{CAlCAl}`````{{CAll}Af}{cc{}}6`````443{{CAnBn}n}{{CAnBn}Ab}1{Bnn}`{{}CB`}``````````````````````````````````````````````````````````````````````````::::::::::::::::::::::``{CBbCBb}{CBdCBd}{CBfCBf}{CBhCBh}{CBjCBj}{CBlCBl}{CBnCBn}{CC`CC`}{CCbCCb}{CCdCCd}{CCfCCf}`````````{{CBbl}Af}{{CBdl}Af}{{CBfl}Af}{{CBhl}Af}{{CBjl}Af}{{CBll}Af}{{CBnl}Af}{{CC`l}Af}{{CCbl}Af}{{CCdl}Af}{{CCfl}Af}``{cc{}}0000000000``{ce{}{}}0000000000````````````````````{c{{Ab{e}}}{}{}}000000000000000000000`````{cAd{}}0000000000``````````","c":[],"p":[[8,"c_uint",19],[5,"cmsghdr",5510],[8,"c_uchar",19],[5,"msghdr",5510],[6,"c_void",19],[5,"Formatter",12536],[1,"unit"],[5,"Error",12536],[6,"Result",12537],[5,"TypeId",12538],[1,"u8"],[5,"Elf_Dyn",41],[20,"Elf_Dyn_Union",41],[5,"Elf_auxv_t",41],[5,"Elf_Rela",41],[1,"u32"],[5,"Elf_Rel",41],[5,"__IncompleteArrayField",361],[1,"usize"],[1,"slice"],[5,"__BindgenBitfieldUnit",361],[10,"Clone",12539],[5,"__kernel_fd_set",361],[5,"__kernel_fsid_t",361],[5,"__user_cap_header_struct",361],[5,"__user_cap_data_struct",361],[5,"vfs_cap_data",361],[5,"vfs_cap_data__bindgen_ty_1",361],[5,"vfs_ns_cap_data",361],[5,"vfs_ns_cap_data__bindgen_ty_1",361],[5,"f_owner_ex",361],[5,"flock",361],[5,"flock64",361],[5,"open_how",361],[5,"epoll_event",361],[5,"fscrypt_policy_v1",361],[5,"fscrypt_key",361],[5,"fscrypt_policy_v2",361],[5,"fscrypt_get_policy_ex_arg",361],[5,"fscrypt_key_specifier",361],[5,"fscrypt_remove_key_arg",361],[5,"fscrypt_get_key_status_arg",361],[5,"mount_attr",361],[5,"file_clone_range",361],[5,"fstrim_range",361],[5,"file_dedupe_range_info",361],[5,"files_stat_struct",361],[5,"inodes_stat_t",361],[5,"fsxattr",361],[5,"futex_waitv",361],[5,"robust_list",361],[5,"robust_list_head",361],[5,"pollfd",361],[5,"__kernel_timespec",361],[5,"__kernel_itimerspec",361],[5,"__kernel_old_timeval",361],[5,"__kernel_old_timespec",361],[5,"__kernel_old_itimerval",361],[5,"__kernel_sock_timeval",361],[5,"timespec",361],[5,"timeval",361],[5,"itimerspec",361],[5,"itimerval",361],[5,"timezone",361],[5,"rusage",361],[5,"rlimit",361],[5,"rlimit64",361],[5,"clone_args",361],[5,"sigaction",361],[5,"sigaltstack",361],[5,"__sifields__bindgen_ty_1",361],[5,"__sifields__bindgen_ty_2",361],[5,"__sifields__bindgen_ty_3",361],[5,"__sifields__bindgen_ty_4",361],[5,"__sifields__bindgen_ty_5",361],[5,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1",361],[5,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2",361],[5,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3",361],[5,"__sifields__bindgen_ty_6",361],[5,"__sifields__bindgen_ty_7",361],[5,"siginfo",361],[5,"siginfo__bindgen_ty_1__bindgen_ty_1",361],[5,"sigevent",361],[5,"sigevent__bindgen_ty_1__bindgen_ty_1",361],[5,"statx_timestamp",361],[5,"statx",361],[5,"termios",361],[5,"termios2",361],[5,"ktermios",361],[5,"winsize",361],[5,"termio",361],[5,"iovec",361],[5,"uffd_msg",361],[5,"uffd_msg__bindgen_ty_1__bindgen_ty_1",361],[5,"uffd_msg__bindgen_ty_1__bindgen_ty_2",361],[5,"uffd_msg__bindgen_ty_1__bindgen_ty_3",361],[5,"uffd_msg__bindgen_ty_1__bindgen_ty_4",361],[5,"uffd_msg__bindgen_ty_1__bindgen_ty_5",361],[5,"uffdio_api",361],[5,"uffdio_range",361],[5,"uffdio_register",361],[5,"uffdio_copy",361],[5,"uffdio_zeropage",361],[5,"uffdio_writeprotect",361],[5,"uffdio_continue",361],[5,"stat",361],[5,"__old_kernel_stat",361],[5,"statfs",361],[5,"statfs64",361],[5,"compat_statfs64",361],[5,"user_desc",361],[5,"kernel_sigset_t",361],[5,"kernel_sigaction",361],[6,"fsconfig_command",361],[6,"membarrier_cmd",361],[6,"membarrier_cmd_flag",361],[20,"fscrypt_get_policy_ex_arg__bindgen_ty_1",361],[20,"fscrypt_key_specifier__bindgen_ty_1",361],[20,"sigval",361],[20,"__sifields",361],[20,"__sifields__bindgen_ty_5__bindgen_ty_1",361],[20,"siginfo__bindgen_ty_1",361],[20,"sigevent__bindgen_ty_1",361],[20,"uffd_msg__bindgen_ty_1",361],[20,"uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1",361],[6,"Ordering",12540],[10,"Ord",12540],[10,"Default",12541],[1,"bool"],[10,"PartialEq",12540],[8,"Result",12536],[10,"Debug",12536],[5,"fscrypt_provisioning_key_payload",361],[5,"file_dedupe_range",361],[5,"inotify_event",361],[5,"rand_pool_info",361],[5,"linux_dirent64",361],[1,"u64"],[10,"AsRef",12542],[10,"AsMut",12542],[10,"Hash",12543],[10,"Hasher",12543],[1,"array"],[6,"Option",12544],[10,"PartialOrd",12540],[5,"ethhdr",3735],[5,"tcphdr",5510],[8,"__u16",5510],[5,"__BindgenUnionField",5510],[5,"__IncompleteArrayField",5510],[5,"__BindgenBitfieldUnit",5510],[5,"__kernel_sockaddr_storage",5510],[5,"__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1",5510],[5,"in_addr",5510],[5,"ip_mreq",5510],[5,"ip_mreqn",5510],[5,"ip_mreq_source",5510],[5,"ip_msfilter__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1",5510],[5,"group_req",5510],[5,"group_source_req",5510],[5,"group_filter__bindgen_ty_1__bindgen_ty_1",5510],[5,"in_pktinfo",5510],[5,"sockaddr_in",5510],[5,"iphdr",5510],[5,"iphdr__bindgen_ty_1__bindgen_ty_1",5510],[5,"iphdr__bindgen_ty_1__bindgen_ty_2",5510],[5,"ip_comp_hdr",5510],[5,"ip_beet_phdr",5510],[5,"in6_addr",5510],[5,"sockaddr_in6",5510],[5,"ipv6_mreq",5510],[5,"in6_flowlabel_req",5510],[5,"in6_pktinfo",5510],[5,"ip6_mtuinfo",5510],[5,"in6_ifreq",5510],[5,"ipv6_rt_hdr",5510],[5,"ipv6_opt_hdr",5510],[5,"rt2_hdr",5510],[5,"ipv6_destopt_hao",5510],[5,"ipv6hdr",5510],[5,"ipv6hdr__bindgen_ty_1__bindgen_ty_1",5510],[5,"ipv6hdr__bindgen_ty_1__bindgen_ty_2",5510],[5,"tcp_repair_opt",5510],[5,"tcp_repair_window",5510],[5,"tcp_info",5510],[5,"tcp_md5sig",5510],[5,"tcp_diag_md5sig",5510],[5,"tcp_zerocopy_receive",5510],[5,"sockaddr_un",5510],[5,"sockaddr",5510],[5,"sync_serial_settings",5510],[5,"te1_settings",5510],[5,"raw_hdlc_proto",5510],[5,"fr_proto",5510],[5,"fr_proto_pvc",5510],[5,"fr_proto_pvc_info",5510],[5,"cisco_proto",5510],[5,"x25_hdlc_proto",5510],[5,"ifmap",5510],[5,"if_settings",5510],[5,"ifreq",5510],[5,"ifconf",5510],[5,"xt_entry_match__bindgen_ty_1__bindgen_ty_1",5510],[5,"xt_entry_match__bindgen_ty_1__bindgen_ty_2",5510],[5,"xt_entry_target__bindgen_ty_1__bindgen_ty_1",5510],[5,"xt_entry_target__bindgen_ty_1__bindgen_ty_2",5510],[5,"xt_get_revision",5510],[5,"_xt_align",5510],[5,"xt_counters",5510],[5,"xt_tcp",5510],[5,"xt_udp",5510],[5,"ip6t_ip6",5510],[5,"ip6t_icmp",5510],[5,"ip6t_getinfo",5510],[5,"linger",5510],[5,"ucred",5510],[5,"mmsghdr",5510],[5,"xt_match",5510],[5,"xt_target",5510],[5,"iovec",5510],[6,"_bindgen_ty_1",5510],[6,"_bindgen_ty_2",5510],[6,"_bindgen_ty_3",5510],[6,"socket_state",5510],[6,"_bindgen_ty_4",5510],[6,"_bindgen_ty_5",5510],[6,"tcp_fastopen_client_fail",5510],[6,"tcp_ca_state",5510],[6,"_bindgen_ty_6",5510],[6,"net_device_flags",5510],[6,"_bindgen_ty_7",5510],[6,"_bindgen_ty_8",5510],[6,"nf_inet_hooks",5510],[6,"nf_dev_hooks",5510],[6,"_bindgen_ty_9",5510],[6,"nf_ip6_hook_priorities",5510],[6,"nf_ip_hook_priorities",5510],[20,"__kernel_sockaddr_storage__bindgen_ty_1",5510],[20,"iphdr__bindgen_ty_1",5510],[20,"in6_addr__bindgen_ty_1",5510],[20,"ipv6hdr__bindgen_ty_1",5510],[20,"tcp_word_hdr",5510],[20,"if_settings__bindgen_ty_1",5510],[20,"ifreq__bindgen_ty_1",5510],[20,"ifreq__bindgen_ty_2",5510],[20,"ifconf__bindgen_ty_1",5510],[20,"nf_inet_addr",5510],[20,"xt_entry_match__bindgen_ty_1",5510],[20,"xt_entry_target__bindgen_ty_1",5510],[5,"ip_msfilter__bindgen_ty_1__bindgen_ty_1",5510],[5,"ip_auth_hdr",5510],[5,"ip_esp_hdr",5510],[5,"xt_counters_info",5510],[8,"__u8",5510],[5,"__IncompleteArrayField",8327],[5,"__kernel_sockaddr_storage",8327],[5,"__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1",8327],[5,"sockaddr_nl",8327],[5,"nlmsghdr",8327],[5,"nlmsgerr",8327],[5,"nl_pktinfo",8327],[5,"nl_mmap_req",8327],[5,"nl_mmap_hdr",8327],[5,"nlattr",8327],[5,"nla_bitfield32",8327],[5,"rtnl_link_stats",8327],[5,"rtnl_link_stats64",8327],[5,"rtnl_hw_stats64",8327],[5,"rtnl_link_ifmap",8327],[5,"ifla_bridge_id",8327],[5,"ifla_cacheinfo",8327],[5,"ifla_vlan_flags",8327],[5,"ifla_vlan_qos_mapping",8327],[5,"tunnel_msg",8327],[5,"ifla_vxlan_port_range",8327],[5,"ifla_vf_mac",8327],[5,"ifla_vf_broadcast",8327],[5,"ifla_vf_vlan",8327],[5,"ifla_vf_vlan_info",8327],[5,"ifla_vf_tx_rate",8327],[5,"ifla_vf_rate",8327],[5,"ifla_vf_spoofchk",8327],[5,"ifla_vf_guid",8327],[5,"ifla_vf_link_state",8327],[5,"ifla_vf_rss_query_en",8327],[5,"ifla_vf_trust",8327],[5,"ifla_port_vsi",8327],[5,"if_stats_msg",8327],[5,"ifla_rmnet_flags",8327],[5,"ifaddrmsg",8327],[5,"ifa_cacheinfo",8327],[5,"ndmsg",8327],[5,"nda_cacheinfo",8327],[5,"ndt_stats",8327],[5,"ndtmsg",8327],[5,"ndt_config",8327],[5,"rtattr",8327],[5,"rtmsg",8327],[5,"rtnexthop",8327],[5,"rta_cacheinfo",8327],[5,"rta_session",8327],[5,"rta_session__bindgen_ty_1__bindgen_ty_1",8327],[5,"rta_session__bindgen_ty_1__bindgen_ty_2",8327],[5,"rta_mfc_stats",8327],[5,"rtgenmsg",8327],[5,"ifinfomsg",8327],[5,"prefixmsg",8327],[5,"prefix_cacheinfo",8327],[5,"tcmsg",8327],[5,"nduseroptmsg",8327],[5,"tcamsg",8327],[6,"nlmsgerr_attrs",8327],[6,"nl_mmap_status",8327],[6,"_bindgen_ty_1",8327],[6,"netlink_attribute_type",8327],[6,"netlink_policy_type_attr",8327],[6,"_bindgen_ty_2",8327],[6,"_bindgen_ty_3",8327],[6,"_bindgen_ty_4",8327],[6,"_bindgen_ty_5",8327],[6,"in6_addr_gen_mode",8327],[6,"_bindgen_ty_6",8327],[6,"_bindgen_ty_7",8327],[6,"_bindgen_ty_8",8327],[6,"_bindgen_ty_9",8327],[6,"_bindgen_ty_10",8327],[6,"_bindgen_ty_11",8327],[6,"_bindgen_ty_12",8327],[6,"macvlan_mode",8327],[6,"macvlan_macaddr_mode",8327],[6,"_bindgen_ty_13",8327],[6,"_bindgen_ty_14",8327],[6,"_bindgen_ty_15",8327],[6,"_bindgen_ty_16",8327],[6,"macsec_validation_type",8327],[6,"macsec_offload",8327],[6,"_bindgen_ty_17",8327],[6,"ipvlan_mode",8327],[6,"_bindgen_ty_18",8327],[6,"_bindgen_ty_19",8327],[6,"_bindgen_ty_20",8327],[6,"_bindgen_ty_21",8327],[6,"ifla_vxlan_df",8327],[6,"_bindgen_ty_22",8327],[6,"ifla_geneve_df",8327],[6,"_bindgen_ty_23",8327],[6,"_bindgen_ty_24",8327],[6,"ifla_gtp_role",8327],[6,"_bindgen_ty_25",8327],[6,"_bindgen_ty_26",8327],[6,"_bindgen_ty_27",8327],[6,"_bindgen_ty_28",8327],[6,"_bindgen_ty_29",8327],[6,"_bindgen_ty_30",8327],[6,"_bindgen_ty_31",8327],[6,"_bindgen_ty_32",8327],[6,"_bindgen_ty_33",8327],[6,"_bindgen_ty_34",8327],[6,"_bindgen_ty_35",8327],[6,"_bindgen_ty_36",8327],[6,"_bindgen_ty_37",8327],[6,"_bindgen_ty_38",8327],[6,"_bindgen_ty_39",8327],[6,"_bindgen_ty_40",8327],[6,"_bindgen_ty_41",8327],[6,"_bindgen_ty_42",8327],[6,"_bindgen_ty_43",8327],[6,"_bindgen_ty_44",8327],[6,"_bindgen_ty_45",8327],[6,"_bindgen_ty_46",8327],[6,"_bindgen_ty_47",8327],[6,"_bindgen_ty_48",8327],[6,"_bindgen_ty_49",8327],[6,"_bindgen_ty_50",8327],[6,"_bindgen_ty_51",8327],[6,"_bindgen_ty_52",8327],[6,"_bindgen_ty_53",8327],[6,"_bindgen_ty_54",8327],[6,"_bindgen_ty_55",8327],[6,"_bindgen_ty_56",8327],[6,"_bindgen_ty_57",8327],[6,"_bindgen_ty_58",8327],[6,"_bindgen_ty_59",8327],[6,"_bindgen_ty_60",8327],[6,"_bindgen_ty_61",8327],[6,"rt_scope_t",8327],[6,"rt_class_t",8327],[6,"rtattr_type_t",8327],[6,"_bindgen_ty_62",8327],[6,"_bindgen_ty_63",8327],[6,"_bindgen_ty_64",8327],[6,"_bindgen_ty_65",8327],[6,"rtnetlink_groups",8327],[6,"_bindgen_ty_66",8327],[20,"__kernel_sockaddr_storage__bindgen_ty_1",8327],[20,"rta_session__bindgen_ty_1",8327],[5,"rtvia",8327],[5,"prctl_mm_map",12082],[8,"c_int",19],[8,"__kernel_sighandler_t",361],[5,"sockaddr_xdp",12313],[5,"xdp_ring_offset",12313],[5,"xdp_mmap_offsets",12313],[5,"xdp_umem_reg",12313],[5,"xdp_statistics",12313],[5,"xdp_options",12313],[5,"xdp_desc",12313],[5,"xdp_ring_offset_v1",12313],[5,"xdp_mmap_offsets_v1",12313],[5,"xdp_umem_reg_v1",12313],[5,"xdp_statistics_v1",12313],[5,"Elf_Verdaux",41],[5,"Elf_Ehdr",41],[5,"Elf_Phdr",41],[5,"Elf_Sym",41],[5,"Elf_Verdef",41],[8,"__signalfn_t",361],[8,"__sighandler_t",361],[8,"__restorefn_t",361],[8,"__sigrestore_t",361],[8,"siginfo_t",361],[5,"fscrypt_add_key_arg",361],[8,"sigevent_t",361],[8,"sigval_t",361],[8,"stack_t",361],[5,"ip_msfilter",5510],[5,"ip_msfilter__bindgen_ty_1",5510],[5,"group_filter",5510],[5,"group_filter__bindgen_ty_1",5510],[5,"rt0_hdr",5510],[5,"group_filter__bindgen_ty_1__bindgen_ty_2",5510],[5,"xt_entry_match",5510],[5,"xt_entry_target",5510],[5,"xt_standard_target",5510],[5,"xt_error_target",5510],[5,"ip6t_entry",5510],[5,"ip6t_standard",5510],[5,"ip6t_error",5510],[5,"ip6t_replace",5510],[5,"ip6t_get_entries",5510]],"b":[]}],\
["log",{"doc":"A lightweight logging facade.","t":"PPPPPPGGKFFPFFFSFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNMNNNNNNNQNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNMQQHNNHNNNNNNNNNNNNNNHHHHNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNQ","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"],[170,"core::fmt"],[171,"core::cmp"],[172,"core::option"],[173,"core::fmt"],[174,"core::hash"],[175,"core::iter::traits::iterator"],[176,"core::any"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The source file containing the message, if it is a <code>&#39;static</code> …","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,10,4,4,6,6,8,7,12,0,1,3,1,3,10,4,4,6,6,1,3,8,7,17,17,12,12,4,6,1,3,8,7,17,12,4,6,4,6,8,7,0,4,6,1,3,8,7,17,12,4,6,1,3,8,7,1,3,10,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,0],"f":"`````````````````````{bd}{{fd}f}{hj}{lj}{ce{}{}}000000000000000{fb}{nA`}{{}f}{{}n}{hh}{ll}{bb}{A`A`}{{hh}Ab}{{ll}Ab}{{A`A`}Ab}{{nn}Ab}`98{{AdA`}Af}{{hl}Af}{{hh}Af}{{ll}Af}{{lh}Af}{{A`A`}Af}{{nn}Af}{{AhAh}Af}`{b{{Aj{j}}}}{{f{Aj{j}}}f}10{AdAl}{{hAn}B`}0{{lAn}B`}0{{bAn}B`}{{fAn}B`}{{A`An}B`}{{nAn}B`}{{BbAn}B`}0{{AhAn}B`}0{cc{}}0000000{j{{Bd{hc}}}{}}{j{{Bd{lc}}}{}}{{hc}AlBf}{{lc}AlBf}{{A`c}AlBf}{{nc}AlBf}`{ce{}{}}0000000{{}{{`{{Bj{}{{Bh{h}}}}}}}}{{}{{`{{Bj{}{{Bh{l}}}}}}}}{bh}{{fh}f}{A`h}{{nh}n}{b{{Aj{Bl}}}}{{f{Aj{Bl}}}f}{{Adb}Al}``{{}Ad}{{}h}{{}l}0{bA`}{{fA`}f}{b{{Aj{j}}}}{{f{Aj{j}}}f}10{{}f}{{}n}{{hl}{{Aj{Ab}}}}{{hh}{{Aj{Ab}}}}{{ll}{{Aj{Ab}}}}{{lh}{{Aj{Ab}}}}{{A`A`}{{Aj{Ab}}}}{{nn}{{Aj{Ab}}}}{Ad{{Bd{AlBb}}}}0{lAl}0{bj}{{fj}f}{A`j}{{nj}n}{l{{Aj{h}}}}{hl}`{c{{Bd{e}}}{}{}}000000000000000{cBn{}}0000000`","c":[],"p":[[5,"Record",0],[5,"Arguments",170],[5,"RecordBuilder",0],[6,"Level",0],[1,"str"],[6,"LevelFilter",0],[5,"MetadataBuilder",0],[5,"Metadata",0],[6,"Ordering",171],[10,"Log",0],[1,"bool"],[5,"ParseLevelError",0],[6,"Option",172],[1,"unit"],[5,"Formatter",170],[8,"Result",170],[5,"SetLoggerError",0],[6,"Result",173],[10,"Hasher",174],[17,"Item"],[10,"Iterator",175],[1,"u32"],[5,"TypeId",176]],"b":[[57,"impl-PartialEq%3CLevelFilter%3E-for-Level"],[58,"impl-PartialEq-for-Level"],[59,"impl-PartialEq-for-LevelFilter"],[60,"impl-PartialEq%3CLevel%3E-for-LevelFilter"],[70,"impl-Debug-for-Level"],[71,"impl-Display-for-Level"],[72,"impl-Display-for-LevelFilter"],[73,"impl-Debug-for-LevelFilter"],[78,"impl-Display-for-SetLoggerError"],[79,"impl-Debug-for-SetLoggerError"],[80,"impl-Debug-for-ParseLevelError"],[81,"impl-Display-for-ParseLevelError"],[128,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[129,"impl-PartialOrd-for-Level"],[130,"impl-PartialOrd-for-LevelFilter"],[131,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"]]}],\
["memchr",{"doc":"This library provides heavily optimized routines for …","t":"FFFCNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHCHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNCCHHHHCCCCCFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKFNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNCCFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNPFFFFFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Memchr","Memchr2","Memchr3","arch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","into_iter","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memmem","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","new","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","all","x86_64","is_equal","is_equal_raw","is_prefix","is_suffix","memchr","packedpair","rabinkarp","shiftor","twoway","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","iter","iter","iter","new","new","new","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","HeuristicFrequencyRank","Pair","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find_prefilter","fmt","fmt","from","from","index1","index2","into","into","new","new","pair","rank","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_indices","with_pair","with_ranker","Finder","FinderRev","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find","find_raw","fmt","fmt","from","from","into","into","new","new","rfind","rfind_raw","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Finder","borrow","borrow_mut","find","fmt","from","into","new","try_from","try_into","type_id","Finder","FinderRev","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find","fmt","fmt","from","from","into","into","new","new","rfind","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","avx2","sse2","memchr","packedpair","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_available","is_available","is_available","iter","iter","iter","new","new","new","new_unchecked","new_unchecked","new_unchecked","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","borrow","borrow_mut","clone","clone_into","find","find_prefilter","fmt","from","into","is_available","min_haystack_len","new","pair","to_owned","try_from","try_into","type_id","with_pair","memchr","packedpair","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_available","is_available","is_available","iter","iter","iter","new","new","new","new_unchecked","new_unchecked","new_unchecked","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","borrow","borrow_mut","clone","clone_into","find","find_prefilter","fmt","from","into","is_available","min_haystack_len","new","pair","to_owned","try_from","try_into","type_id","with_pair","Auto","FindIter","FindRevIter","Finder","FinderBuilder","FinderRev","None","Prefilter","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_forward","build_forward_with_ranker","build_reverse","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","find","find","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_owned","into_owned","into_owned","into_owned","needle","needle","new","new","new","next","next","prefilter","rfind","rfind","rfind_iter","rfind_iter","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"memchr"],[66,"memchr::arch"],[68,"memchr::arch::all"],[77,"memchr::arch::all::memchr"],[182,"memchr::arch::all::packedpair"],[217,"memchr::arch::all::rabinkarp"],[247,"memchr::arch::all::shiftor"],[258,"memchr::arch::all::twoway"],[286,"memchr::arch::x86_64"],[288,"memchr::arch::x86_64::avx2"],[290,"memchr::arch::x86_64::avx2::memchr"],[401,"memchr::arch::x86_64::avx2::packedpair"],[420,"memchr::arch::x86_64::sse2"],[422,"memchr::arch::x86_64::sse2::memchr"],[533,"memchr::arch::x86_64::sse2::packedpair"],[552,"memchr::memmem"],[656,"core::fmt"],[657,"core::fmt"],[658,"core::iter::adapters::rev"],[659,"core::result"],[660,"core::any"],[661,"core::marker"],[662,"core::convert"]],"d":["An iterator over all occurrences of a single byte in a …","An iterator over all occurrences of two possible bytes in …","An iterator over all occurrences of three possible bytes …","A module with low-level architecture dependent routines.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Search for the first occurrence of a byte in a slice.","Search for the first occurrence of two possible bytes in a …","Returns an iterator over all occurrences of the needles in …","Search for the first occurrence of three possible bytes in …","Returns an iterator over all occurrences of the needles in …","Returns an iterator over all occurrences of the needle in …","This module provides forward and reverse substring search …","Search for the last occurrence of a byte in a slice.","Search for the last occurrence of two possible bytes in a …","Returns an iterator over all occurrences of the needles in …","Search for the last occurrence of three possible bytes in …","Returns an iterator over all occurrences of the needles in …","Returns an iterator over all occurrences of the needle in …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","","","","","","","","","","","","","","","","","","","","","","Contains architecture independent routines.","Vector algorithms for the <code>x86_64</code> target.","Compare corresponding bytes in <code>x</code> and <code>y</code> for equality.","Compare <code>n</code> bytes at the given pointers for equality.","Returns true if and only if <code>needle</code> is a prefix of <code>haystack</code>.","Returns true if and only if <code>needle</code> is a suffix of <code>haystack</code>.","Provides architecture independent implementations of <code>memchr</code>…","Provides an architecture independent implementation of the …","An implementation of the Rabin-Karp substring search …","An implementation of the Shift-Or substring search …","An implementation of the Two-Way substring search algorithm…","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Counts all occurrences of this byte in the given haystack …","Return the first occurrence of the needle in the given …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of one of the …","Returns an iterator over all occurrences of one of the …","Create a new searcher that finds occurrences of the byte …","Create a new searcher that finds occurrences of the two …","Create a new searcher that finds occurrences of the three …","","","","","","","Return the last occurrence of the needle in the given …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","An architecture independent “packed pair” finder.","This trait allows the user to customize the heuristic used …","A pair of byte offsets into a needle to use as a predicate.","","","","","","","","","Run this finder on the given haystack as a prefilter.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the first offset of the pair.","Returns the second offset of the pair.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new prefilter that reports possible locations …","Create a new pair of offsets from the given needle.","Returns the pair of offsets (into the needle) used to …","Return the heuristic frequency rank of the given byte. A …","","","","","","","","","Create a new pair using the offsets given for the needle …","Create a new prefilter using the pair given.","Create a new pair of offsets from the given needle and …","A forward substring searcher using the Rabin-Karp …","A reverse substring searcher using the Rabin-Karp …","","","","","","","","","Return the first occurrence of the <code>needle</code> in the <code>haystack</code> …","Like <code>find</code>, but accepts and returns raw pointers.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new Rabin-Karp forward searcher for the given …","Create a new Rabin-Karp reverse searcher for the given …","Return the last occurrence of the <code>needle</code> in the <code>haystack</code> …","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","A forward substring searcher using the Shift-Or algorithm.","","","Return the first occurrence of the needle given to …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new Shift-Or forward searcher for the given <code>needle</code>…","","","","A forward substring searcher that uses the Two-Way …","A reverse substring searcher that uses the Two-Way …","","","","","","","","","Returns the first occurrence of <code>needle</code> in the given …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a searcher that finds occurrences of the given …","Create a searcher that finds occurrences of the given …","Returns the last occurrence of <code>needle</code> in the given <code>haystack</code>…","","","","","","","","","Algorithms for the <code>x86_64</code> target using 256-bit vectors via …","Algorithms for the <code>x86_64</code> target using 128-bit vectors via …","This module defines 256-bit vector implementations of …","A 256-bit vector implementation of the “packed pair” …","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Counts all occurrences of this byte in the given haystack …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new finder specific to AVX2 vectors and routines …","Create a new finder specific to AVX2 vectors and routines …","Create a new finder specific to AVX2 vectors and routines …","","","","","","","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A “packed pair” finder that uses 256-bit vector …","","","","","Execute a search using AVX2 vectors and routines.","Run this finder on the given haystack as a prefilter.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true when this implementation is available in the …","Returns the minimum haystack length that this <code>Finder</code> can …","Create a new pair searcher. The searcher returned can …","Returns the pair of offsets (into the needle) used to …","","","","","Create a new “packed pair” finder using the pair of …","This module defines 128-bit vector implementations of …","A 128-bit vector implementation of the “packed pair” …","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Counts all occurrences of this byte in the given haystack …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new finder specific to SSE2 vectors and routines …","Create a new finder specific to SSE2 vectors and routines …","Create a new finder specific to SSE2 vectors and routines …","","","","","","","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A “packed pair” finder that uses 128-bit vector …","","","","","Execute a search using SSE2 vectors and routines.","Run this finder on the given haystack as a prefilter.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true when this implementation is available in the …","Returns the minimum haystack length that this <code>Finder</code> can …","Create a new pair searcher. The searcher returned can …","Returns the pair of offsets (into the needle) used to …","","","","","Create a new “packed pair” finder using the pair of …","Automatically detect whether a heuristic prefilter should …","An iterator over non-overlapping substring matches.","An iterator over non-overlapping substring matches in …","A single substring searcher fixed to a particular needle.","A builder for constructing non-default forward or reverse …","A single substring reverse searcher fixed to a particular …","Never used a prefilter in substring search.","Prefilter controls whether heuristics are used to …","Convert this finder into its borrowed variant.","Convert this finder into its borrowed variant.","","","","","","","","","","","","","Build a forward finder using the given needle from the …","Build a forward finder using the given needle and a custom …","Build a reverse finder using the given needle from the …","","","","","","","","","","","","","","","Returns the index of the first occurrence of the given …","Returns the index of the first occurrence of this needle …","Returns an iterator over all non-overlapping occurrences …","Returns an iterator over all occurrences of a substring in …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this iterator into its owned variant, such that it …","Convert this iterator into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Returns the needle that this finder searches for.","Returns the needle that this finder searches for.","Create a new finder for the given needle.","Create a new reverse finder for the given needle.","Create a new finder builder with default settings.","","","Configure the prefilter setting for the finder.","Returns the index of the last occurrence of the given …","Returns the index of the last occurrence of this needle in …","Returns a reverse iterator over all non-overlapping …","Returns a reverse iterator over all occurrences of a …","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,16,16,18,20,16,18,20,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,17,19,21,16,18,20,16,18,20,17,19,21,17,19,21,16,18,20,16,18,20,17,19,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,16,17,18,19,20,21,0,0,0,22,23,22,23,22,23,22,23,22,22,23,22,23,23,23,22,23,22,23,22,24,22,23,22,23,22,23,22,23,23,22,23,0,0,25,26,25,26,25,26,25,26,25,25,25,26,25,26,25,26,25,26,26,26,25,26,25,26,25,26,25,26,0,27,27,27,27,27,27,27,27,27,27,0,0,28,29,28,29,28,29,28,29,28,28,29,28,29,28,29,28,29,29,28,29,28,29,28,29,28,29,0,0,0,0,0,0,0,0,0,0,30,31,32,33,34,35,30,31,32,33,34,35,30,31,32,33,34,35,30,31,32,33,34,35,30,31,30,30,32,34,30,32,34,30,31,32,33,34,35,30,31,32,33,34,35,30,31,32,33,34,35,31,33,35,30,32,34,30,32,34,30,32,34,30,32,34,31,33,35,31,33,35,30,32,34,30,32,34,31,33,35,30,31,32,33,34,35,30,31,32,33,34,35,30,31,32,33,34,35,30,31,32,33,34,35,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,0,0,0,0,0,0,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,37,38,37,37,39,41,37,39,41,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,38,40,42,37,39,41,37,39,41,37,39,41,37,39,41,38,40,42,38,40,42,37,39,41,37,39,41,38,40,42,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,49,0,0,0,0,0,49,0,44,45,49,50,51,44,45,46,49,50,51,44,45,46,46,46,46,49,50,51,44,45,46,49,50,51,44,45,46,49,46,0,44,0,44,49,50,51,44,45,46,49,50,51,44,45,46,49,50,51,44,45,46,50,51,50,51,44,45,44,45,44,45,46,50,51,46,0,45,0,45,50,49,50,51,44,45,46,49,50,51,44,45,46,49,50,51,44,45,46,49,50,51,44,45,46],"f":"````{ce{}{}}00000{bb}{dd}{ff}{{ce}h{}{}}00{bj}{{bl}n}{{dl}n}{{fl}n}{cc{}}00999999{{A`{Ab{A`}}}{{Ad{j}}}}{{A`A`{Ab{A`}}}{{Ad{j}}}}{{A`A`{Ab{A`}}}d}{{A`A`A`{Ab{A`}}}{{Ad{j}}}}{{A`A`A`{Ab{A`}}}f}{{A`{Ab{A`}}}b}`54{{A`A`{Ab{A`}}}{{Af{d}}}}3{{A`A`A`{Ab{A`}}}{{Af{f}}}}{{A`{Ab{A`}}}{{Af{b}}}}364{b{{Ad{j}}}}{d{{Ad{j}}}}{f{{Ad{j}}}}210{b{{Ah{j{Ad{j}}}}}}{d{{Ah{j{Ad{j}}}}}}{f{{Ah{j{Ad{j}}}}}}{ce{}{}}00{c{{Aj{e}}}{}{}}00000{cAl{}}00``{{{Ab{A`}}{Ab{A`}}}An}{{A`A`j}An}11```````````444444444444{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{{ce}h{}{}}00000{{B`{Ab{A`}}}j}{Bbj}{{B`A`A`}j}{{B`{Ab{A`}}}{{Ad{j}}}}{{Bd{Ab{A`}}}{{Ad{j}}}}{{Bh{Ab{A`}}}{{Ad{j}}}}{{B`A`A`}{{Ad{A`}}}}{{BdA`A`}{{Ad{A`}}}}{{BhA`A`}{{Ad{A`}}}}{{B`l}n}{{Bbl}n}{{Bdl}n}{{Bfl}n}{{Bhl}n}{{Bjl}n}{cc{}}00000{ce{}{}}00000000{{B`{Ab{A`}}}Bb}{{Bd{Ab{A`}}}Bf}{{Bh{Ab{A`}}}Bj}{A`B`}{{A`A`}Bd}{{A`A`A`}Bh}{Bb{{Ad{j}}}}{Bf{{Ad{j}}}}{Bj{{Ad{j}}}}210{{B`{Ab{A`}}}{{Ad{j}}}}{{Bd{Ab{A`}}}{{Ad{j}}}}{{Bh{Ab{A`}}}{{Ad{j}}}}{{B`A`A`}{{Ad{A`}}}}{{BdA`A`}{{Ad{A`}}}}{{BhA`A`}{{Ad{A`}}}}{Bb{{Ah{j{Ad{j}}}}}}{Bf{{Ah{j{Ad{j}}}}}}{Bj{{Ah{j{Ad{j}}}}}}{ce{}{}}00000{c{{Aj{e}}}{}{}}00000000000{cAl{}}00000```2222{BlBl}{BnBn}{{ce}h{}{}}0{{Bl{Ab{A`}}}{{Ad{j}}}}{{Bll}n}{{Bnl}n}{cc{}}0{BnA`}0::{{{Ab{A`}}}{{Ad{Bl}}}}{{{Ab{A`}}}{{Ad{Bn}}}}{BlBn}{{C`A`}A`}>>====<<{{{Ab{A`}}A`A`}{{Ad{Bn}}}}{{{Ab{A`}}Bn}{{Ad{Bl}}}}{{{Ab{A`}}c}{{Ad{Bn}}}C`}``{ce{}{}}000{CbCb}{CdCd}??{{Cb{Ab{A`}}{Ab{A`}}}{{Ad{j}}}}{{CbA`A`A`A`}{{Ad{A`}}}}{{Cbl}n}{{Cdl}n}??66{{{Ab{A`}}}Cb}{{{Ab{A`}}}Cd}{{Cd{Ab{A`}}{Ab{A`}}}{{Ad{j}}}}{{CdA`A`A`A`}{{Ad{A`}}}}::{c{{Aj{e}}}{}{}}000{cAl{}}0`<<{{Cf{Ab{A`}}}{{Ad{j}}}}{{Cfl}n}{cc{}}?{{{Ab{A`}}}{{Ad{Cf}}}}554``{ce{}{}}000{ChCh}{CjCj}{{ce}h{}{}}0{{Ch{Ab{A`}}{Ab{A`}}}{{Ad{j}}}}{{Chl}n}{{Cjl}n}8866{{{Ab{A`}}}Ch}{{{Ab{A`}}}Cj}{{Cj{Ab{A`}}{Ab{A`}}}{{Ad{j}}}}99????>>``````````999999999999{ClCl}{CnCn}{D`D`}{DbDb}{DdDd}{DfDf}<<<<<<{{Cl{Ab{A`}}}j}{Cnj}{{ClA`A`}j}{{Cl{Ab{A`}}}{{Ad{j}}}}{{D`{Ab{A`}}}{{Ad{j}}}}{{Dd{Ab{A`}}}{{Ad{j}}}}{{ClA`A`}{{Ad{A`}}}}{{D`A`A`}{{Ad{A`}}}}{{DdA`A`}{{Ad{A`}}}}{{Cll}n}{{Cnl}n}{{D`l}n}{{Dbl}n}{{Ddl}n}{{Dfl}n}{cc{}}00000{ce{}{}}00000000{{}An}00{{Cl{Ab{A`}}}Cn}{{D`{Ab{A`}}}Db}{{Dd{Ab{A`}}}Df}{A`{{Ad{Cl}}}}{{A`A`}{{Ad{D`}}}}{{A`A`A`}{{Ad{Dd}}}}{A`Cl}{{A`A`}D`}{{A`A`A`}Dd}{Cn{{Ad{j}}}}{Db{{Ad{j}}}}{Df{{Ad{j}}}}210{{Cl{Ab{A`}}}{{Ad{j}}}}{{D`{Ab{A`}}}{{Ad{j}}}}{{Dd{Ab{A`}}}{{Ad{j}}}}{{ClA`A`}{{Ad{A`}}}}{{D`A`A`}{{Ad{A`}}}}{{DdA`A`}{{Ad{A`}}}}{Cn{{Ah{j{Ad{j}}}}}}{Db{{Ah{j{Ad{j}}}}}}{Df{{Ah{j{Ad{j}}}}}}{ce{}{}}00000{c{{Aj{e}}}{}{}}00000000000{cAl{}}00000`22{DhDh}{{ce}h{}{}}{{Dh{Ab{A`}}{Ab{A`}}}{{Ad{j}}}}{{Dh{Ab{A`}}}{{Ad{j}}}}{{Dhl}n}{cc{}}8{{}An}{Dhj}{{{Ab{A`}}}{{Ad{Dh}}}}{DhBn}<;;:{{{Ab{A`}}Bn}{{Ad{Dh}}}}````````============{DjDj}{DlDl}{DnDn}{E`E`}{EbEb}{EdEd}??????{{Dj{Ab{A`}}}j}{Dlj}{{DjA`A`}j}{{Dj{Ab{A`}}}{{Ad{j}}}}{{Dn{Ab{A`}}}{{Ad{j}}}}{{Eb{Ab{A`}}}{{Ad{j}}}}{{DjA`A`}{{Ad{A`}}}}{{DnA`A`}{{Ad{A`}}}}{{EbA`A`}{{Ad{A`}}}}{{Djl}n}{{Dll}n}{{Dnl}n}{{E`l}n}{{Ebl}n}{{Edl}n}{cc{}}00000{ce{}{}}00000000{{}An}00{{Dj{Ab{A`}}}Dl}{{Dn{Ab{A`}}}E`}{{Eb{Ab{A`}}}Ed}{A`{{Ad{Dj}}}}{{A`A`}{{Ad{Dn}}}}{{A`A`A`}{{Ad{Eb}}}}{A`Dj}{{A`A`}Dn}{{A`A`A`}Eb}{Dl{{Ad{j}}}}{E`{{Ad{j}}}}{Ed{{Ad{j}}}}210{{Dj{Ab{A`}}}{{Ad{j}}}}{{Dn{Ab{A`}}}{{Ad{j}}}}{{Eb{Ab{A`}}}{{Ad{j}}}}{{DjA`A`}{{Ad{A`}}}}{{DnA`A`}{{Ad{A`}}}}{{EbA`A`}{{Ad{A`}}}}{Dl{{Ah{j{Ad{j}}}}}}{E`{{Ah{j{Ad{j}}}}}}{Ed{{Ah{j{Ad{j}}}}}}{ce{}{}}00000{c{{Aj{e}}}{}{}}00000000000{cAl{}}00000`22{EfEf}{{ce}h{}{}}{{Ef{Ab{A`}}{Ab{A`}}}{{Ad{j}}}}{{Ef{Ab{A`}}}{{Ad{j}}}}{{Efl}n}{cc{}}8{{}An}{Efj}{{{Ab{A`}}}{{Ad{Ef}}}}{EfBn}<;;:{{{Ab{A`}}Bn}{{Ad{Ef}}}}````````{EhEh}{EjEj}????????????{{Elc}Eh{En{F`{{Ab{A`}}}}}}{{Elce}EhC`{En{F`{{Ab{A`}}}}}}{{Elc}Ej{En{F`{{Ab{A`}}}}}}{FbFb}{FdFd}{FfFf}76{ElEl}{{ce}h{}{}}00000{{}Fb}{{}El}{{{Ab{A`}}{Ab{A`}}}{{Ad{j}}}}{{Eh{Ab{A`}}}{{Ad{j}}}}{{{Ab{A`}}c}Fd{En{F`{{Ab{A`}}}}}}{{Eh{Ab{A`}}}Fd}{{Fbl}n}{{Fdl}n}{{Ffl}n}{{Ehl}n}{{Ejl}n}{{Ell}n}{cc{}}00000{ce{}{}}0000000{FdFd}{FfFf}{EhEh}{EjEj}{Eh{{Ab{A`}}}}{Ej{{Ab{A`}}}}{cEh{En{F`{{Ab{A`}}}}}}{cEj{En{F`{{Ab{A`}}}}}}{{}El}{Fd{{Ad{j}}}}{Ff{{Ad{j}}}}{{ElFb}El}{{{Ab{A`}}{Ab{A`}}}{{Ad{j}}}}{{Ejc}{{Ad{j}}}{{F`{{Ab{A`}}}}}}{{{Ab{A`}}c}Ff{En{F`{{Ab{A`}}}}}}{{Ej{Ab{A`}}}Ff}{Fd{{Ah{j{Ad{j}}}}}}{ce{}{}}00000{c{{Aj{e}}}{}{}}00000000000{cAl{}}00000","c":[],"p":[[5,"Memchr",0],[5,"Memchr2",0],[5,"Memchr3",0],[1,"unit"],[1,"usize"],[5,"Formatter",656],[8,"Result",656],[1,"u8"],[1,"slice"],[6,"Option",657],[5,"Rev",658],[1,"tuple"],[6,"Result",659],[5,"TypeId",660],[1,"bool"],[5,"One",77],[5,"OneIter",77],[5,"Two",77],[5,"TwoIter",77],[5,"Three",77],[5,"ThreeIter",77],[5,"Finder",182],[5,"Pair",182],[10,"HeuristicFrequencyRank",182],[5,"Finder",217],[5,"FinderRev",217],[5,"Finder",247],[5,"Finder",258],[5,"FinderRev",258],[5,"One",290],[5,"OneIter",290],[5,"Two",290],[5,"TwoIter",290],[5,"Three",290],[5,"ThreeIter",290],[5,"Finder",401],[5,"One",422],[5,"OneIter",422],[5,"Two",422],[5,"TwoIter",422],[5,"Three",422],[5,"ThreeIter",422],[5,"Finder",533],[5,"Finder",552],[5,"FinderRev",552],[5,"FinderBuilder",552],[10,"Sized",661],[10,"AsRef",662],[6,"Prefilter",552],[5,"FindIter",552],[5,"FindRevIter",552]],"b":[]}],\
["proc_macro2",{"doc":"github crates-io docs-rs","t":"PPPGFPFPPFFPPPFPGFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNFENNNNNNNNNNNNNN","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_character","byte_string","c_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[230,"proc_macro2::extra"],[245,"proc_macro2::token_stream"],[261,"core::ffi::c_str"],[262,"core::cmp"],[263,"core::marker"],[264,"core::convert"],[265,"core::iter::traits::collect"],[266,"core::fmt"],[267,"core::fmt"],[268,"proc_macro"],[269,"core::hash"],[270,"core::option"],[271,"alloc::string"],[272,"core::ops::range"],[273,"core::any"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>∅ ... ∅</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte character literal.","Byte string literal.","C string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[12,11,11,0,0,9,0,9,12,0,0,9,11,11,0,9,0,0,0,0,1,25,8,7,9,10,11,1,12,13,4,25,8,7,9,10,11,1,12,13,4,4,4,4,7,4,8,7,9,10,11,1,12,13,4,8,7,9,10,11,1,12,13,4,13,8,10,10,11,12,13,13,8,8,0,4,4,4,4,25,25,8,8,7,9,9,10,10,11,1,1,12,13,13,4,4,25,8,8,8,7,7,9,9,9,9,9,10,11,1,12,13,4,8,8,8,4,13,4,4,4,4,4,4,4,4,4,4,25,8,7,9,10,11,1,12,13,4,8,8,4,4,7,7,7,8,10,1,13,13,13,7,9,10,1,13,4,7,1,25,9,10,1,13,4,10,10,10,4,4,8,7,9,10,11,1,12,13,4,25,8,9,10,1,13,4,0,25,8,7,9,10,11,1,12,13,4,25,8,7,9,10,11,1,12,13,4,25,8,7,9,10,11,1,12,13,4,4,4,4,4,4,4,4,4,4,4,7,4,4,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37],"f":"````````````````````{bd}{ce{}{}}0000000000000000000{fh}{{{j{f}}}h}{lh}{{}n}{dh}{A`A`}{nn}{AbAb}{AdAd}{AfAf}{bb}{AhAh}{AjAj}{hh}{{ce}Al{}{}}00000000{{AjAj}An}{{}A`}{AdB`}{AdAf}{{AfAf}Bb}{{AhAh}Bb}{{AjAj}Bb}{{Ajc}Bb{Bd{Bh{Bf}}}}{{A`c}Al{{Bl{}{{Bj{A`}}}}}}{{A`c}Al{{Bl{}{{Bj{Ab}}}}}}`{Bnh}0{C`h}0{{CbCd}Cf}0{{A`Cd}Cf}0{{nCd}Cf}{{AbCd}Cf}0{{AdCd}Cf}0{{AfCd}Cf}{{bCd}Cf}0{{AhCd}Cf}{{AjCd}Cf}0{{hCd}Cf}0{cc{}}{ChA`}{AbA`}2{Cjn}3{hAb}{AjAb}5{bAb}{AdAb}777777{cA`{{Bl{}{{Bj{Ab}}}}}}{cA`{{Bl{}{{Bj{A`}}}}}}{Bf{{Cl{A`Cb}}}}{Bf{{Cl{hCb}}}}{{Ajc}AlCn}{D`h}0{Dbh}0{Ddh}0{Dfh}0{Dhh}0{ce{}{}}000000000{A`Dj}{A`Bb}{Dlh}0{{nn}{{Dn{n}}}}{{nn}n}{{}n}{{}A`}{{AfA`}Ad}{{dAh}b}{{Bfn}Aj}0{{AjAj}{{Dn{An}}}}6{{Abn}Al}{{Adn}Al}{{bn}Al}{{Ajn}Al}{{hn}Al}{n{{Dn{E`}}}}{bAh}{Cbn}{Abn}{Adn}{bn}{Ajn}{hn}33{AdA`}{Bfh}{{hc}{{Dn{n}}}{{Ed{Eb}}}}{ce{}{}}00000000{cE`{}}000000`{c{{Cl{e}}}{}{}}0000000000000000000{cEf{}}000000000{Ehh}0{Ejh}0{Elh}0{Enh}0{fh}0{nCj}{Ebh}0`::{B`B`}{{ce}Al{}{}}{B`n}{{B`Cd}Cf}{cc{}}?22?==<``??{DjDj}4{{DjCd}Cf}2{ce{}{}}0{Dj{{Dn{Ab}}}}{Dj{{F`{Eb{Dn{Eb}}}}}}2{c{{Cl{e}}}{}{}}0{cEf{}}","c":[],"p":[[5,"Punct",0],[1,"char"],[1,"u8"],[5,"Literal",0],[1,"slice"],[5,"CStr",261],[5,"Span",0],[5,"TokenStream",0],[6,"TokenTree",0],[5,"Group",0],[6,"Delimiter",0],[6,"Spacing",0],[5,"Ident",0],[1,"unit"],[6,"Ordering",262],[5,"DelimSpan",230],[1,"bool"],[10,"Sized",263],[1,"str"],[10,"AsRef",264],[17,"Item"],[10,"IntoIterator",265],[1,"f32"],[1,"f64"],[5,"LexError",0],[5,"Formatter",266],[8,"Result",266],[5,"TokenStream",267],[5,"Span",267],[6,"Result",268],[10,"Hasher",269],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[5,"IntoIter",245],[1,"isize"],[6,"Option",270],[5,"String",271],[1,"usize"],[10,"RangeBounds",272],[5,"TypeId",273],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"],[1,"tuple"]],"b":[[70,"impl-PartialEq-for-Ident"],[71,"impl-PartialEq%3CT%3E-for-Ident"],[72,"impl-Extend%3CTokenStream%3E-for-TokenStream"],[73,"impl-Extend%3CTokenTree%3E-for-TokenStream"],[79,"impl-Debug-for-LexError"],[80,"impl-Display-for-LexError"],[81,"impl-Display-for-TokenStream"],[82,"impl-Debug-for-TokenStream"],[84,"impl-Debug-for-TokenTree"],[85,"impl-Display-for-TokenTree"],[86,"impl-Display-for-Group"],[87,"impl-Debug-for-Group"],[89,"impl-Display-for-Punct"],[90,"impl-Debug-for-Punct"],[92,"impl-Debug-for-Ident"],[93,"impl-Display-for-Ident"],[94,"impl-Debug-for-Literal"],[95,"impl-Display-for-Literal"],[97,"impl-From%3CTokenStream%3E-for-TokenStream"],[98,"impl-From%3CTokenTree%3E-for-TokenStream"],[102,"impl-From%3CLiteral%3E-for-TokenTree"],[103,"impl-From%3CIdent%3E-for-TokenTree"],[105,"impl-From%3CPunct%3E-for-TokenTree"],[106,"impl-From%3CGroup%3E-for-TokenTree"],[113,"impl-FromIterator%3CTokenTree%3E-for-TokenStream"],[114,"impl-FromIterator%3CTokenStream%3E-for-TokenStream"]]}],\
["quick_xml",{"doc":"High performance XML reader/writer.","t":"EEPPPGPPPPPEPEIPPPPPEPNNNNCCCNNNNNNNNNCCNNNNNNCOOOOFNNNNNNNNNNNNNPGPPPPPPPNNNNHNNNNHNNNNNHHFFFFFPPPPPPPGPPPNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGGFFPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONPPFPFFGFGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFINNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Decoder","ElementWriter","EmptyDocType","EndEventMismatch","Err","Error","EscapeError","InvalidAttr","InvalidPrefixBind","Io","NonDecodable","NsReader","Ok","Reader","Result","TextNotFound","UnexpectedBang","UnexpectedEof","UnexpectedToken","UnknownPrefix","Writer","XmlDeclWithoutVersion","borrow","borrow_mut","clone","clone_into","encoding","escape","events","fmt","fmt","from","from","from","from","from","from","into","name","reader","source","to_owned","to_string","try_from","try_into","type_id","writer","expected","found","namespace","prefix","Decoder","borrow","borrow_mut","clone","clone_into","decode","eq","fmt","from","into","to_owned","try_from","try_into","type_id","EntityWithNull","EscapeError","InvalidCodepoint","InvalidDecimal","InvalidHexadecimal","TooLongDecimal","TooLongHexadecimal","UnrecognizedSymbol","UnterminatedEntity","borrow","borrow_mut","clone","clone_into","escape","fmt","fmt","from","into","partial_escape","to_owned","to_string","try_from","try_into","type_id","unescape","unescape_with","BytesCData","BytesDecl","BytesEnd","BytesStart","BytesText","CData","Comment","Decl","DocType","Empty","End","Eof","Event","PI","Start","Text","as_ref","attributes","attributes","attributes_raw","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_attributes","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","encoding","eq","eq","eq","eq","eq","eq","escape","extend_attributes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_content","from_escaped","from_start","html_attributes","inplace_trim_end","inplace_trim_start","into","into","into","into","into","into","into_inner","into_inner","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","local_name","local_name","name","name","new","new","new","new","new","partial_escape","push_attribute","set_name","standalone","to_end","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_get_attribute","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unescape","unescape_with","version","with_attributes","Attr","AttrError","Attribute","Attributes","DoubleQ","Duplicated","Empty","ExpectedEq","ExpectedQuote","ExpectedValue","SingleQ","Unquoted","UnquotedValue","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","decode_and_unescape_value","decode_and_unescape_value_with","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","html","into","into","into","into","into_iter","key","key","map","new","next","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unescape_value","unescape_value_with","value","value","with_checks","Bound","Default","LocalName","Named","Namespace","Prefix","PrefixDeclaration","QName","ResolveResult","Unbound","Unknown","as_namespace_binding","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","decompose","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","local_name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","prefix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","NsReader","Reader","Span","borrow","borrow","borrow_mut","borrow_mut","buffer_position","check_comments","check_comments","check_end_names","check_end_names","clone","clone_into","decoder","deref","end","expand_empty_elements","expand_empty_elements","from","from","from_file","from_file","from_reader","from_reader","from_str","from_str","get_mut","get_mut","get_ref","into","into","into_inner","into_inner","read_event","read_event","read_event_into","read_event_into","read_resolved_event","read_resolved_event_into","read_text","read_text","read_to_end","read_to_end","read_to_end_into","read_to_end_into","resolve","resolve_attribute","resolve_element","start","to_owned","trim_markup_names_in_closing_tags","trim_markup_names_in_closing_tags","trim_text","trim_text","trim_text_end","trim_text_end","try_from","try_from","try_into","try_into","type_id","type_id","ElementWriter","Writer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_element","from","from","get_mut","get_ref","into","into","into_inner","new","new_with_indent","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_attribute","with_attributes","write_bom","write_cdata_content","write_empty","write_event","write_indent","write_inner_content","write_pi_content","write_text_content"],"q":[[0,"quick_xml"],[47,"quick_xml::Error"],[51,"quick_xml::encoding"],[65,"quick_xml::escape"],[91,"quick_xml::events"],[233,"quick_xml::events::attributes"],[315,"quick_xml::name"],[427,"quick_xml::reader"],[490,"quick_xml::writer"],[525,"core::fmt"],[526,"core::fmt"],[527,"std::io::error"],[528,"core::str::error"],[529,"core::error"],[530,"core::option"],[531,"alloc::string"],[532,"core::any"],[533,"alloc::borrow"],[534,"core::ops::function"],[535,"core::iter::traits::collect"],[536,"core::convert"],[537,"core::convert"],[538,"core::clone"],[539,"core::cmp"],[540,"core::cmp"],[541,"core::hash"],[542,"std::io::buffered::bufreader"],[543,"std::path"],[544,"alloc::vec"],[545,"std::io"],[546,"std::io"]],"d":["","","Empty <code>Event::DocType</code>. <code>&lt;!doctype foo&gt;</code> is correct but `&lt;…","End event mismatch","Contains the error value","The error type used by this crate.","Escape error","Attribute parsing error","Error for when a reserved namespace is set incorrectly.","XML document cannot be read from or written to underlying …","Input decoding error. If <code>encoding</code> feature is disabled, …","","Contains the success value","","A specialized <code>Result</code> type where the error is hard-wired to …","Text not found, expected <code>Event::Text</code>","Unexpected &lt;!&gt;","Unexpected End of File","Unexpected token","Specified namespace prefix is unknown, cannot resolve …","","<code>Event::BytesDecl</code> must start with <em>version</em> attribute. …","","","","","A module for wrappers that encode / decode data.","Manage xml character escapes","Defines zero-copy XML events used throughout this library.","","","Creates a new <code>Error::Utf8</code> from the given error","Creates a new <code>Error::EscapeError</code> from the given error","Creates a new <code>Error::Io</code> from the given error","Creates a new <code>Error::NonDecodable</code> from the given error","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Module for handling names according to the W3C Namespaces …","Contains high-level interface for a pull-based XML parser.","","","","","","","Contains high-level interface for an events-based XML …","Expected end event","Found end event","Namespace to which prefix tried to be bound","The prefix that is tried to be bound","Decoder of byte slices into strings.","","","","","Without <code>encoding</code> feature","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Entity with Null character","Error for XML escape / unescape.","Not a valid unicode codepoint","Character is not a valid decimal value","Character is not a valid hexadecimal value","Cannot convert decimal to hexa","Cannot convert Hexa to utf8","Unrecognized escape symbol","Cannot find <code>;</code> after <code>&amp;</code>","","","","","Escapes an <code>&amp;str</code> and replaces all xml special characters (<code>&lt;</code>…","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Escapes an <code>&amp;str</code> and replaces xml special characters (<code>&lt;</code>, <code>&gt;</code>, …","","","","","","Unescape an <code>&amp;str</code> and replaces all xml escaped characters (…","Unescape an <code>&amp;str</code> and replaces all xml escaped characters (…","CDATA content contains unescaped data from the reader. If …","An XML declaration (<code>Event::Decl</code>).","A struct to manage <code>Event::End</code> events","Opening tag data (<code>Event::Start</code>), with optional attributes.","Data from various events (most notably, <code>Event::Text</code>) that …","Unescaped character data stored in <code>&lt;![CDATA[...]]&gt;</code>.","Comment <code>&lt;!-- ... --&gt;</code>.","XML declaration <code>&lt;?xml ...?&gt;</code>.","Document type definition data (DTD) stored in …","Empty element tag (with attributes) <code>&lt;tag attr=&quot;value&quot; /&gt;</code>.","End tag <code>&lt;/tag&gt;</code>.","End of XML document.","Event emitted by <code>Reader::read_event_into</code>.","Processing instruction <code>&lt;?...?&gt;</code>.","Start tag (with attributes) <code>&lt;tag attr=&quot;value&quot;&gt;</code>.","Escaped character data between tags.","","Xml Attributes module","Returns an iterator over the attributes of this tag.","Gets the undecoded raw string with the attributes of this …","Converts the event into a borrowed event. Most useful when …","","Converts the event into a borrowed event.","","Converts the event into a borrowed event.","","Converts the event into a borrowed event.","","Converts the event into a borrowed event.","","","Converts the event into a borrowed event.","","","","","","","Remove all attributes from the ByteStart","","","","","","","","","","","","","","","","","","","Gets xml encoding, excluding quotes (<code>&#39;</code> or <code>&quot;</code>).","","","","","","","Converts this CDATA content to an escaped version, that …","Add additional attributes to this tag using an iterator.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>BytesStart</code> from the given content (name + …","Creates a new <code>BytesText</code> from an escaped string.","Creates a <code>BytesDecl</code> from a <code>BytesStart</code>","Returns an iterator over the HTML-like attributes of this …","Removes trailing XML whitespace bytes from text content.","Removes leading XML whitespace bytes from text content.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extracts the inner <code>Cow</code> from the <code>BytesText</code> event container.","Extracts the inner <code>Cow</code> from the <code>BytesCData</code> event container.","Converts the event into an owned event.","Converts the event into an owned event.","Converts the event into an owned event.","Ensures that all data is owned to extend the object’s …","Ensures that all data is owned to extend the object’s …","Converts the event to an owned version, untied to the …","Gets the undecoded raw local tag name (excluding …","Gets the undecoded raw local tag name (excluding …","Gets the undecoded raw tag name, as present in the input …","Gets the undecoded raw tag name, as present in the input …","Creates a new <code>BytesStart</code> from the given name.","Constructs a new <code>XmlDecl</code> from the (mandatory) <em>version</em> …","Creates a new <code>BytesEnd</code> borrowing a slice.","Creates a new <code>BytesText</code> from a string. The string is …","Creates a new <code>BytesCData</code> from a string.","Converts this CDATA content to an escaped version, that …","Adds an attribute to this element.","Edit the name of the BytesStart in-place","Gets xml standalone, excluding quotes (<code>&#39;</code> or <code>&quot;</code>).","Creates new paired close tag","","Converts the event into an owned event without taking …","","","","","","","","","","","","Try to get an attribute","","","","","","","","","","","","","Decodes then unescapes the content of the event.","Decodes then unescapes the content of the event with …","Gets xml version, excluding quotes (<code>&#39;</code> or <code>&quot;</code>).","Consumes <code>self</code> and yield a new <code>BytesStart</code> with additional …","A struct representing a key/value XML or HTML attribute.","Errors that can be raised during parsing attributes.","A struct representing a key/value XML attribute.","Iterator over XML attributes.","Attribute with value enclosed in double quotes (<code>&quot;</code>). …","An attribute with the same name was already encountered. …","Attribute without value. Attribute key provided. This is …","Attribute key was not followed by <code>=</code>, position relative to …","Attribute value was not finished with a matching quote, …","Attribute value was not found after <code>=</code>, position relative …","Attribute with value enclosed in single quotes (<code>&#39;</code>). …","Attribute with value not enclosed in quotes. Attribute key …","Attribute value is not quoted, position relative to the …","","","","","","","","","","","","","","","","","","Decodes then unescapes the value.","Decodes then unescapes the value with custom entities.","","","","","","","","","Returns the argument unchanged.","Creates new attribute from text representation. Key is …","","Creates new attribute from raw bytes. Does not apply any …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new attribute iterator from a buffer, allowing …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the key value","The key to uniquely define the attribute.","Maps an <code>Attr&lt;T&gt;</code> to <code>Attr&lt;U&gt;</code> by applying a function to a …","Creates a new attribute iterator from a buffer.","","","","","","","","","","","","","","","","","","","","Decodes using UTF-8 then unescapes the value.","Decodes using UTF-8 then unescapes the value, using custom …","Returns the attribute value. For <code>Self::Empty</code> variant an …","The raw value of the attribute.","Changes whether attributes should be checked for …","<code>Prefix</code> resolved to the specified namespace","XML attribute binds a default namespace. Corresponds to …","A local (unqualified) name of an element or an attribute, …","XML attribute binds a specified prefix to a namespace. …","A namespace name that is declared in a …","A namespace prefix part of the qualified name of an …","A namespace prefix declaration, <code>xmlns</code> or <code>xmlns:&lt;name&gt;</code>, as …","A qualified name of an element or an attribute, including …","Result of prefix resolution which creates by …","Qualified name does not contain prefix, and resolver does …","Specified prefix was not found in scope","If that <code>QName</code> represents <code>&quot;xmlns&quot;</code> series of names, returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The same as <code>(qname.local_name(), qname.prefix())</code>, but does …","","","","","","","","","","","","","Returns the argument unchanged.","Creates <code>LocalName</code> from a <code>QName</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this name to an internal slice representation.","Converts this name to an internal slice representation.","Extracts internal slice","Converts this namespace to an internal slice …","Returns local part of this qualified name.","","","","","","Returns namespace part of this qualified name or <code>None</code> if …","","","","","","","","","","","","","","","","","","","","","","","","","A low level encoding-agnostic XML event reader that …","A low level encoding-agnostic XML event reader.","Range of input in bytes, that corresponds to some piece of …","","","","","Gets the current byte position in the input data.","Changes whether comments should be validated.","Changes whether comments should be validated.","Changes whether mismatched closing tag names should be …","Changes whether mismatched closing tag names should be …","","","Get the decoder, used to decode bytes, read by this …","","The upper bound of the range (exclusive).","Changes whether empty elements should be split into an <code>Open</code>…","Changes whether empty elements should be split into an <code>Open</code>…","Returns the argument unchanged.","Returns the argument unchanged.","Creates an XML reader from a file path.","Creates an XML reader from a file path.","Creates a <code>NsReader</code> that reads from a reader.","Creates a <code>Reader</code> that reads from a given reader.","Creates an XML reader from a string slice.","Creates an XML reader from a string slice.","Gets a mutable reference to the underlying reader.","Gets a mutable reference to the underlying reader.","Gets a reference to the underlying reader.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes <code>NsReader</code> returning the underlying reader","Consumes <code>Reader</code> returning the underlying reader","Reads the next event, borrow its content from the input …","Read an event that borrows from the input rather than a …","Reads the next event into given buffer.","Reads the next <code>Event</code>.","Reads the next event, borrow its content from the input …","Reads the next event into given buffer and resolves its …","Reads content between start and end tags, including any …","Reads content between start and end tags, including any …","Reads until end element is found. This function is …","Reads until end element is found. This function is …","Reads until end element is found using provided buffer as …","Reads until end element is found using provided buffer as …","Resolves a potentially qualified <strong>element name</strong> or <strong>attribute </strong>…","Resolves a potentially qualified <strong>attribute name</strong> into …","Resolves a potentially qualified <strong>element name</strong> into …","The lower bound of the range (inclusive).","","Changes whether trailing whitespaces after the markup name …","Changes whether trailing whitespaces after the markup name …","Changes whether whitespace before and after character data …","Changes whether whitespace before and after character data …","Changes whether whitespace after character data should be …","Changes whether whitespace after character data should be …","","","","","","","A struct to write an element. Contains methods to add …","XML writer. Writes XML <code>Event</code>s to a <code>std::io::Write</code> …","","","","","","","Provides a simple, high-level API for writing XML elements.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the underlying writer.","Get a reference to the underlying writer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Writer</code>, returning the underlying writer.","Creates a <code>Writer</code> from a generic writer.","Creates a <code>Writer</code> with configured indents from a generic …","","","","","","","","Adds an attribute to this element.","Add additional attributes to this element using an …","Write a Byte-Order-Mark character to the document.","Write a CData event <code>&lt;![CDATA[...]]&gt;</code> inside the current …","Write an empty (self-closing) tag.","Writes the given event to the underlying writer.","Manually write a newline and indentation at the proper …","Create a new scope for writing XML inside the current …","Write a processing instruction <code>&lt;?...?&gt;</code> inside the current …","Write some text inside the current element."],"i":[0,0,1,1,20,0,1,1,1,1,1,0,20,0,0,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,65,65,66,66,0,15,15,15,15,15,15,15,15,15,15,15,15,15,6,0,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,0,6,6,6,6,6,0,0,0,0,0,0,0,24,24,24,24,24,24,24,0,24,24,24,24,0,25,25,25,25,27,27,28,28,29,29,30,30,24,24,25,27,28,29,30,24,25,25,27,28,29,30,24,25,27,28,29,30,24,25,27,28,29,30,24,27,25,27,28,29,30,24,30,25,25,27,28,29,30,24,25,27,28,29,30,24,25,29,27,25,29,29,25,27,28,29,30,24,29,30,25,27,28,29,30,24,25,28,25,28,25,27,28,29,30,30,25,25,27,25,25,25,27,28,29,30,24,25,27,28,29,30,24,25,25,27,28,29,30,24,25,27,28,29,30,24,29,29,27,25,0,0,0,0,39,9,39,9,9,9,39,39,9,36,26,9,39,36,26,9,39,36,26,9,39,36,26,9,39,39,36,36,36,9,39,36,26,9,9,39,36,36,36,36,26,9,39,39,26,36,26,9,39,26,39,36,39,26,26,39,36,26,9,39,9,36,26,9,39,36,26,9,39,36,26,9,39,36,36,39,36,26,52,49,0,49,0,0,0,0,0,52,52,35,35,34,50,51,35,34,50,49,51,52,35,34,50,49,51,52,35,34,50,49,51,52,35,34,50,49,51,52,35,34,50,49,51,35,35,34,50,49,51,52,35,34,50,49,51,52,35,34,34,50,49,51,52,35,34,50,49,51,52,35,34,50,49,51,52,35,34,50,51,35,35,34,50,49,51,35,35,34,50,49,51,52,35,34,50,49,51,52,35,34,50,49,51,52,35,34,50,49,51,52,0,0,0,53,43,53,43,43,53,43,53,43,43,43,43,53,59,53,43,53,43,53,43,53,43,53,43,53,43,43,53,43,53,43,53,43,53,43,53,53,53,43,53,43,53,43,53,53,53,59,43,53,43,53,43,53,43,53,43,53,43,53,43,0,0,61,60,61,60,60,60,60,61,60,60,60,61,60,60,60,60,60,61,60,61,60,61,60,61,61,60,61,61,60,60,61,61,61],"f":"``````````````````````{ce{}{}}0{bb}{{ce}d{}{}}```{{bf}h}0{jb}{lb}{nb}{A`b}{Abb}{cc{}}9``{b{{Af{Ad}}}}:{cAh{}}{c{{Aj{e}}}{}{}}0{cAl{}}``````=={AnAn}<{{An{Bb{B`}}}{{Bh{{Bf{Bd}}}}}}{{AnAn}Bj}{{Anf}h}8{ce{}{}}0665`````````00{ll}{{ce}d{}{}}{Bd{{Bf{Bd}}}}{{lf}h}0=414;::9{Bd{{Aj{{Bf{Bd}}l}}}}{{Bdc}{{Aj{{Bf{Bd}}l}}}{{Bn{Bd}{{Bl{{Af{Bd}}}}}}}}````````````````{C`C`}`{CbCd}{Cb{{Bb{B`}}}}{CbCb}:{CfCf};{ChCh}<{CjCj}={ClCl}>>7>>>>>>4432107<<<<<<5{Cf{{Bb{B`}}}}{Ch{{Bb{B`}}}}{Cj{{Bb{B`}}}}{Cl{{Bb{B`}}}}{C`{{Bb{B`}}}}{Cf{{Af{{Bh{{Bf{{Bb{B`}}}}}}}}}}{{CbCb}Bj}{{CfCf}Bj}{{ChCh}Bj}{{CjCj}Bj}{{ClCl}Bj}{{C`C`}Bj}{Cl{{Bh{Cj}}}}{{Cbc}CbCn}{{Cbf}h}{{Cff}h}{{Chf}h}{{Cjf}h}{{Clf}h}{{C`f}h}{cc{}}00000{{cD`}Cb{{Db{{Bf{Bd}}}}}}{cCj{{Db{{Bf{Bd}}}}}}{CbCf}{CbCd}{CjBj}0{ce{}{}}00000{Cj{{Bf{{Bb{B`}}}}}}{Cl{{Bf{{Bb{B`}}}}}}{CbCb}{CfCf}{ChCh}{CjCj}{ClCl}{C`C`}{CbDd}{ChDd}{CbDf}{ChDf}{cCb{{Db{{Bf{Bd}}}}}}{{Bd{Af{Bd}}{Af{Bd}}}Cf}{cCh{{Db{{Bf{Bd}}}}}}{BdCj}{cCl{{Db{{Bf{Bd}}}}}}{Cl{{Bh{Cj}}}}{{Cbc}d{{Db{Dh}}}}{{Cb{Bb{B`}}}Cb}{Cf{{Af{{Bh{{Bf{{Bb{B`}}}}}}}}}}{CbCh}{ce{}{}}{CbCb}11111{c{{Aj{e}}}{}{}}00000{{Cbc}{{Bh{{Af{Dh}}}}}{{Dj{{Bb{B`}}}}Dl}}111111{cAl{}}00000{Cj{{Bh{{Bf{Bd}}}}}}{{Cjc}{{Bh{{Bf{Bd}}}}}{{Bn{Bd}{{Bl{{Af{Bd}}}}}}}}{Cf{{Bh{{Bf{{Bb{B`}}}}}}}}{{Cbc}CbCn}`````````````88888888{DhDh}{CdCd}{AbAb}{{{Dn{c}}}{{Dn{c}}}E`}{{ce}d{}{}}000{{{Dn{c}}{Dn{c}}}EbEd}{{Dh{Ef{c}}}{{Bh{{Bf{Bd}}}}}{}}{{Dh{Ef{c}}e}{{Bh{{Bf{Bd}}}}}{}{{Bn{Bd}{{Bl{{Af{Bd}}}}}}}}{{DhDh}Bj}{{AbAb}Bj}{{{Dn{c}}{Dn{c}}}BjEh}{{Dhf}h}{{Cdf}h}{{Abf}h}0{{{Dn{c}}f}h{{Dj{{Bb{B`}}}}}}{cc{}}{{{Ej{BdBd}}}Dh}{{{Dn{{Bb{B`}}}}}Dh}{{{Ej{{Bb{B`}}{Bb{B`}}}}}Dh}333{{{Dn{c}}e}dElEn}{{BdD`}Cd}{ce{}{}}0000{{{Dn{{Bb{B`}}}}}Df}`{{{Dn{c}}g}{{Dn{e}}}{}{}{{Bn{c}{{Bl{e}}}}}}3{Cd{{Af{c}}}{}}{{{Dn{c}}{Dn{c}}}{{Af{Eb}}}F`}4444{cAh{}}{c{{Aj{e}}}{}{}}0000000{cAl{}}000{Dh{{Bh{{Bf{Bd}}}}}}{{Dhc}{{Bh{{Bf{Bd}}}}}{{Bn{Bd}{{Bl{{Af{Bd}}}}}}}}{{{Dn{{Bb{B`}}}}}{{Bb{B`}}}}`{{CdBj}Cd}```````````{Df{{Af{Fb}}}}{Df{{Bb{B`}}}}{Dd{{Bb{B`}}}}{Fd{{Bb{B`}}}}{Ff{{Bb{B`}}}}{ce{}{}}00000000000{DfDf}{DdDd}{FdFd}{FbFb}{FfFf}{FhFh}{{ce}d{}{}}00000{{DfDf}Eb}{{DdDd}Eb}{{FdFd}Eb}{{FbFb}Eb}{{FfFf}Eb}{Df{{Ej{Dd{Af{Fd}}}}}}{{DfDf}Bj}{{DdDd}Bj}{{FdFd}Bj}{{FbFb}Bj}{{FfFf}Bj}{{FhFh}Bj}{{Dff}h}{{Ddf}h}{{Fdf}h}{{Fbf}h}{{Fff}h}{{Fhf}h}{cc{}}{DfDd}11111{{Dfc}dEn}{{Ddc}dEn}{{Fdc}dEn}{{Fbc}dEn}{{Ffc}dEn}{{Fhc}dEn}{ce{}{}}00000{Df{{Bb{B`}}}}{Dd{{Bb{B`}}}}{Fd{{Bb{B`}}}}{Ff{{Bb{B`}}}};{{DfDf}{{Af{Eb}}}}{{DdDd}{{Af{Eb}}}}{{FdFd}{{Af{Eb}}}}{{FbFb}{{Af{Eb}}}}{{FfFf}{{Af{Eb}}}}{Df{{Af{Fd}}}}::::::{c{{Aj{e}}}{}{}}00000000000{cAl{}}00000```<<<<{{{Ef{c}}}D`{}}{{{Fj{c}}Bj}{{Fj{c}}}{}}{{{Ef{c}}Bj}{{Ef{c}}}{}}10{{{Ef{c}}}{{Ef{c}}}E`}{{ce}d{}{}}{{{Ef{c}}}An{}}{{{Fj{c}}}e{}{}}`54{cc{}}0{c{{Bh{{Fj{{Fn{Fl}}}}}}}{{Dj{G`}}}}{c{{Bh{{Ef{{Fn{Fl}}}}}}}{{Dj{G`}}}}{c{{Fj{c}}}{}}{c{{Ef{c}}}{}}{Bd{{Fj{{Bb{B`}}}}}}{Bd{{Ef{{Bb{B`}}}}}}{{{Fj{c}}}c{}}{{{Ef{c}}}c{}}0{ce{}{}}021{{{Fj{{Bb{B`}}}}}{{Bh{C`}}}}{{{Ef{{Bb{B`}}}}}{{Bh{C`}}}}{{{Fj{c}}{Gb{B`}}}{{Bh{C`}}}Gd}{{{Ef{c}}{Gb{B`}}}{{Bh{C`}}}Gd}{{{Fj{{Bb{B`}}}}}{{Bh{{Ej{FhC`}}}}}}{{{Fj{c}}{Gb{B`}}}{{Bh{{Ej{FhC`}}}}}Gd}{{{Fj{{Bb{B`}}}}Df}{{Bh{{Bf{Bd}}}}}}{{{Ef{{Bb{B`}}}}Df}{{Bh{{Bf{Bd}}}}}}{{{Fj{{Bb{B`}}}}Df}{{Bh{Gf}}}}{{{Ef{{Bb{B`}}}}Df}{{Bh{Gf}}}}{{{Fj{c}}Df{Gb{B`}}}{{Bh{Gf}}}Gd}{{{Ef{c}}Df{Gb{B`}}}{{Bh{Gf}}}Gd}{{{Fj{c}}DfBj}{{Ej{FhDd}}}{}}{{{Fj{c}}Df}{{Ej{FhDd}}}{}}0`>{{{Fj{c}}Bj}{{Fj{c}}}{}}{{{Ef{c}}Bj}{{Ef{c}}}{}}1010{c{{Aj{e}}}{}{}}000{cAl{}}0``{ce{}{}}000{{{Gh{c}}}{{Gh{c}}}E`}{{ce}d{}{}}{{{Gh{c}}e}{{Gj{c}}}{}{{Dj{Bd}}Dl}}{cc{}}0{{{Gh{c}}}c{}}0550{c{{Gh{c}}}{}}{{cB`D`}{{Gh{c}}}{}}7999988{{{Gj{c}}e}{{Gj{c}}}{}{{Db{Dh}}}}{{{Gj{c}}e}{{Gj{c}}}{}Cn}{{{Gh{c}}}{{Bh{d}}}Gl}{{{Gj{c}}Cl}{{Bh{{Gh{c}}}}}Gl}{{{Gj{c}}}{{Bh{{Gh{c}}}}}Gl}{{{Gh{c}}e}{{Bh{d}}}Gl{{Dj{C`}}}}3{{{Gj{c}}g}{{Aj{{Gh{c}}e}}}Gl{{Gn{b}}}{{H`{{Gh{c}}}{{Bl{{Aj{de}}}}}}}}{{{Gj{c}}Cj}{{Bh{{Gh{c}}}}}Gl}0","c":[],"p":[[6,"Error",0],[1,"unit"],[5,"Formatter",525],[8,"Result",525],[5,"FromUtf8Error",526],[6,"EscapeError",65],[5,"Error",527],[5,"Utf8Error",528],[6,"AttrError",233],[10,"Error",529],[6,"Option",530],[5,"String",526],[6,"Result",531],[5,"TypeId",532],[5,"Decoder",51],[1,"u8"],[1,"slice"],[1,"str"],[6,"Cow",533],[8,"Result",0],[1,"bool"],[17,"Output"],[10,"FnMut",534],[6,"Event",91],[5,"BytesStart",91],[5,"Attributes",233],[5,"BytesDecl",91],[5,"BytesEnd",91],[5,"BytesText",91],[5,"BytesCData",91],[10,"IntoIterator",535],[1,"usize"],[10,"Into",536],[5,"LocalName",315],[5,"QName",315],[5,"Attribute",233],[10,"AsRef",536],[10,"Sized",537],[6,"Attr",233],[10,"Clone",538],[6,"Ordering",539],[10,"Ord",539],[5,"Reader",427],[10,"PartialEq",539],[1,"tuple"],[10,"Hash",540],[10,"Hasher",540],[10,"PartialOrd",539],[6,"PrefixDeclaration",315],[5,"Prefix",315],[5,"Namespace",315],[6,"ResolveResult",315],[5,"NsReader",427],[5,"File",541],[5,"BufReader",542],[5,"Path",543],[5,"Vec",544],[10,"BufRead",545],[8,"Span",427],[5,"Writer",490],[5,"ElementWriter",490],[10,"Write",545],[10,"From",536],[10,"FnOnce",534],[15,"EndEventMismatch",47],[15,"InvalidPrefixBind",47]],"b":[[29,"impl-Display-for-Error"],[30,"impl-Debug-for-Error"],[31,"impl-From%3CFromUtf8Error%3E-for-Error"],[32,"impl-From%3CEscapeError%3E-for-Error"],[33,"impl-From%3CError%3E-for-Error"],[34,"impl-From%3CUtf8Error%3E-for-Error"],[35,"impl-From%3CAttrError%3E-for-Error"],[79,"impl-Debug-for-EscapeError"],[80,"impl-Display-for-EscapeError"],[270,"impl-Debug-for-AttrError"],[271,"impl-Display-for-AttrError"],[274,"impl-From%3C(%26str,+%26str)%3E-for-Attribute%3C\'a%3E"],[275,"impl-From%3CAttr%3C%26%5Bu8%5D%3E%3E-for-Attribute%3C\'a%3E"],[276,"impl-From%3C(%26%5Bu8%5D,+%26%5Bu8%5D)%3E-for-Attribute%3C\'a%3E"]]}],\
["quote",{"doc":"github crates-io docs-rs","t":"KKKMMMMMQNNQQNNNNM","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"],[18,"proc_macro2"],[19,"core::convert"],[20,"core::iter::traits::collect"],[21,"core::fmt"],[22,"core::fmt"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,1,1,1,1,7,0,6,6,0,0,7,7,6,6,6],"f":"```{{bc}d{{h{f}}}}{{bc}dj}{{bce}djl}0{{nA`}Ab}`{lAd}0``{n{{Ah{Af}}}}011{{lAd}d}","c":[],"p":[[10,"TokenStreamExt",0],[1,"unit"],[6,"TokenTree",18],[10,"Into",19],[10,"IntoIterator",20],[10,"ToTokens",0],[10,"IdentFragment",0],[5,"Formatter",21],[8,"Result",21],[5,"TokenStream",18],[5,"Span",18],[6,"Option",22]],"b":[]}],\
["rustix",{"doc":"<code>rustix</code> provides efficient memory-safe and I/O-safe …","t":"QQCCCCCCCCCTTFTTTTTTFFTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNTFTTTFUFFTTFTTTTTTTTTTHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONHNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNKKFKKFIMNNMNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTFGFTTTTPTTTTTTTTSPPTTTTTPIFFKPPTTTTTTTPTTFEPKGKGITTFTTTTTTTTTTTTTPFTTTTTTTPPTTTTFKFSTTTTTTTTTTTTTTTTTTTTTPPPPPIFKTSTTTTTTTTTTTTTTTTTTTPFFIPFFTTTTTTTTTTTTTTTFIGPPPIKIFFIFIPTTTTIFTTTSSFPPTTTTTTTPTTTFTOOOOOHHNNNNNNNNNNNNNNNNNMMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMMNMMHNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOHHHHHEHEHHEHHHNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHMNNNNNNNNNNNNNNMMNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHNNNNNNNNNNNNNMNMNNNNNNNNNNNNNMHNNMNNNNNNNNNNNNNNNNNNNNNNNNNNOOHHHHHHHHHHHHHHHMMMMNMNNNNNMNNNNNNNNNNNNNHHHMNMNNNHHHNNNNNNNNNNNNNHHHHNHHHNNNNNNNNNNNNNHMOOOOOOOOOOOOOOOOHNHHNHNHOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHHHNMNTTTTTTTTFTTTTTTTTTTTTTTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTFTPFTTFTTTTTTTTTTTTTFFTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTPTTTTTTTTTTTTTFITTTTTTTTTTTTTTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNHHHNNNNNNNNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNHNNNNNNNNNNNNHHHHHHHNHHHNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHFKGFTKIFPFTTFRIPFPFFFPFMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTTTTEFFFTTTTTTTTTTTTTTTTTTTTTTTTGFFTTTTTTTTTTTTTTTTEFTTTTTIIIPPFGFFTTTTPPPPFGFEGGGIFFFEFEFTTFTTTTPPPPPPPTTPTTPONHHHHONNNNNNNNNNNHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNHHHHHNNNNNHHHHHHHHHHHHHNNNNNNNNNNNHNNNHHHCNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNCSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHHSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPPGNNNNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNNNNFFTTSSTTTSSTTTTSSFFFFFFFFFFOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNONNONNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNKMMMMHMTPPPPPPPPPPPTTPPPPPPFFTTTTTPPPPPGPTTTSSSPGPPTTPFFGPPIPPTTFPPPTTPPPPPPPPTGGFPPTTTTTTTPPPPPTTTTTTGPFPPFFPPPFPPPPPPTTTTTPIIIPPPPPGFPPPTTTTPGPGFFPPPPPPPPPGGPPPPTTFFPPPGPGFFFFPPPNNNNNNNNNNOONNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHNNNNNNNNNNNNNHNONNNNNNNNNNNHNNNNNNNNNNNHOOHOONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNHHHNHOHHHNHNNNNNNNNNNHHHHHNNNNNNNNNNHHHHNNNNNNNNNNNHHHHHHHHHHHHHHHHHHHHHHNHOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHHHHH","n":["cmsg_space","cstr","event","fd","ffi","fs","io","ioctl","net","path","process","CLOEXEC","ERR","EventfdFlags","HUP","IN","NONBLOCK","NVAL","OUT","PRI","PollFd","PollFlags","RDBAND","RDHUP","RDNORM","SEMAPHORE","WRBAND","WRNORM","all","all","as_fd","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_revents","clone","clone","clone","clone_into","clone_into","clone_into","complement","complement","contains","contains","difference","difference","empty","empty","epoll","eq","eq","eventfd","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_borrowed_fd","from_iter","from_iter","from_name","from_name","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","new","not","not","pause","poll","remove","remove","revents","set","set","set_fd","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","CLOEXEC","CreateFlags","ERR","ET","EXCLUSIVE","Event","EventData","EventFlags","EventVec","HUP","IN","Iter","MSG","ONESHOT","OUT","PRI","RDBAND","RDHUP","RDNORM","WAKEUP","WRBAND","WRNORM","add","all","all","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","contains","contains","contains","contains","create","data","default","delete","difference","difference","difference","difference","empty","empty","empty","empty","eq","eq","eq","eq","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","from_name","from_name","from_raw_parts","hash","hash","hash","hash","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","len","modify","new_ptr","new_u64","next","not","not","ptr","remove","remove","remove","remove","reserve","reserve_exact","set","set","set","set","shrink_to_fit","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","u64","union","union","union","union","wait","with_capacity","AsFd","AsRawFd","BorrowedFd","FromRawFd","IntoRawFd","OwnedFd","RawFd","as_fd","as_fd","as_fd","as_raw_fd","as_raw_fd","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","borrow_raw","clone","clone_into","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_fd","from_raw_fd","into","into","into_raw_fd","into_raw_fd","is_terminal","is_terminal","to_owned","try_clone","try_clone_to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CStr","CString","FromBytesWithNulError","NulError","as_bytes","as_bytes_with_nul","as_c_str","as_cow_c_str","as_cow_c_str","as_cow_c_str","as_ptr","as_ref","as_ref","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","c_char","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","count_bytes","default","default","deref","description","description","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes_until_nul","from_bytes_with_nul","from_bytes_with_nul_unchecked","from_ptr","from_raw","from_vec_unchecked","from_vec_with_nul","from_vec_with_nul_unchecked","hash","hash","index","index","into","into","into","into_boxed_c_str","into_bytes","into_bytes_with_nul","into_c_str","into_c_str","into_c_str","into_c_string","into_raw","into_string","into_vec","into_with_c_str","into_with_c_str","into_with_c_str","is_empty","new","nul_position","partial_cmp","partial_cmp","to_bytes","to_bytes_with_nul","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_string","to_string_lossy","to_string_lossy","to_string_lossy","to_string_lossy","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ACCMODE","ALL","ALLOW_SEALING","APPEND","APPEND","ATIME","Access","Advice","AtFlags","BASIC_STATS","BENEATH","BLOCKS","BTIME","BlockDevice","CACHED","CLOEXEC","CLOEXEC","COLLAPSE_RANGE","COMPRESSED","CREATE","CREATE","CTIME","CWD","CharacterDevice","Current","DIOALIGN","DIRECT","DIRECTORY","DIRSYNC","DSYNC","Data","Dev","Dir","DirEntry","DirEntryExt","Directory","DontNeed","EACCESS","EMPTY_PATH","EXCHANGE","EXCL","EXEC","EXEC_OK","EXISTS","End","FSYNC","FUTURE_WRITE","FallocateFlags","FdFlags","Fifo","FileExt","FileType","FileTypeExt","FlockOperation","FsWord","GID","GROW","Gid","HUGETLB","HUGE_16GB","HUGE_16MB","HUGE_1GB","HUGE_1MB","HUGE_256MB","HUGE_2GB","HUGE_2MB","HUGE_32MB","HUGE_512KB","HUGE_512MB","HUGE_64KB","HUGE_8MB","Hole","IFlags","IMMUTABLE","INO","INSERT_RANGE","IN_ROOT","JOURNALING","KEEP_SIZE","LARGEFILE","LockExclusive","LockShared","MANDLOCK","MNT_ID","MODE","MTIME","MemfdFlags","MetadataExt","Mode","NFS_SUPER_MAGIC","NLINK","NOATIME","NOATIME","NOATIME","NOCOW","NOCTTY","NODEV","NODIRATIME","NODUMP","NOEXEC","NOEXEC_SEAL","NOFOLLOW","NONBLOCK","NOREPLACE","NOSUID","NOTAIL","NO_AUTOMOUNT","NO_HIDE_STALE","NO_MAGICLINKS","NO_SYMLINKS","NO_XDEV","NoReuse","NonBlockingLockExclusive","NonBlockingLockShared","NonBlockingUnlock","Normal","Nsecs","OFlags","OpenOptionsExt","PATH","PROC_SUPER_MAGIC","PROJECT_INHERIT","PUNCH_HOLE","RDONLY","RDONLY","RDWR","READ_OK","RELATIME","REMOVEDIR","REPLACE","RGRP","ROOT","ROOT","ROTH","RSYNC","RUSR","RWMODE","RWXG","RWXO","RWXU","Random","RawDir","RawDirEntry","RawMode","RegularFile","RenameFlags","ResolveFlags","SEAL","SECURE_REMOVAL","SGID","SHRINK","SIZE","STATX_DONT_SYNC","STATX_FORCE_SYNC","STATX_SYNC_AS_STAT","SUID","SVTX","SYMLINK_FOLLOW","SYMLINK_NOFOLLOW","SYNC","SYNC","SYNCHRONOUS","SealFlags","Secs","SeekFrom","Sequential","Socket","Start","Stat","StatExt","StatFs","StatVfs","StatVfsMountFlags","Statx","StatxFlags","StatxTimestamp","Symlink","TMPFILE","TOPDIR","TRUNC","TYPE","Timespec","Timestamps","UID","UNRM","UNSHARE_RANGE","UTIME_NOW","UTIME_OMIT","Uid","Unknown","Unlock","WGRP","WHITEOUT","WOTH","WRITE","WRITE_OK","WRONLY","WUSR","WillNeed","XGRP","XOTH","XUSR","XattrFlags","ZERO_RANGE","__pad0","__reserved","__spare0","__spare3","__unused","access","accessat","all","all","all","all","all","all","all","all","all","all","all","all","all","as_raw","as_raw","as_raw_mode","as_raw_mode","atime","atime","atime","atime_nsec","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blksize","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chdir","chmod","chmodat","chown","chownat","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","copy_file_range","ctime","ctime","ctime","ctime_nsec","custom_flags","cwd","default","dev","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ext4_ioc_resize_fs","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","f_bavail","f_bavail","f_bfree","f_bfree","f_blocks","f_blocks","f_bsize","f_bsize","f_favail","f_ffree","f_ffree","f_files","f_files","f_flag","f_flags","f_frsize","f_frsize","f_fsid","f_fsid","f_namelen","f_namemax","f_spare","f_type","fadvise","fallocate","fchmod","fchown","fcntl_add_seals","fcntl_dupfd_cloexec","fcntl_get_seals","fcntl_getfd","fcntl_getfl","fcntl_lock","fcntl_setfd","fcntl_setfl","fdatasync","fgetxattr","file_name","file_name","file_type","file_type","flistxattr","flock","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fremovexattr","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_raw","from_raw","from_raw_mode","from_raw_mode","fsetxattr","fstat","fstatfs","fstatvfs","fsync","ftruncate","futimens","getxattr","gid","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","ino","ino","ino","ino","inotify","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","ioctl_blkpbszget","ioctl_blksszget","ioctl_ficlone","ioctl_getflags","ioctl_setflags","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_block_device","is_buffer_empty","is_char_device","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_fifo","is_file_read_write","is_root","is_root","is_socket","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","last_access","last_modification","lgetxattr","link","linkat","listxattr","llistxattr","lremovexattr","lsetxattr","lstat","major","makedev","memfd_create","minor","mkdir","mkdirat","mknodat","mode","mode","mtime","mtime","mtime","mtime_nsec","new","new","next","next","next_entry_cookie","nlink","not","not","not","not","not","not","not","not","not","not","not","not","not","open","openat","openat2","rdev","read","read_at","read_exact_at","read_from","read_vectored_at","readlink","readlinkat","readlinkat_raw","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","removexattr","rename","renameat","renameat_with","rewind","rmdir","seek","sendfile","set","set","set","set","set","set","set","set","set","set","set","set","set","setxattr","size","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_gid","st_ino","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_rdev","st_size","st_uid","stat","stat","statat","statfs","statfs","statvfs","statvfs","statx","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symlink","symlinkat","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","sync","syncfs","tell","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_nsec","tv_sec","tv_sec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","union","union","union","union","union","union","union","union","union","union","union","union","union","unlink","unlinkat","utimensat","write_all_at","write_at","write_vectored_at","ACCESS","ALL_EVENTS","ATTRIB","CLOEXEC","CLOSE","CLOSE_NOWRITE","CLOSE_WRITE","CREATE","CreateFlags","DELETE","DELETE_SELF","DONT_FOLLOW","EXCL_UNLINK","MASK_ADD","MASK_CREATE","MODIFY","MOVE","MOVED_FROM","MOVED_TO","MOVE_SELF","NONBLOCK","ONESHOT","ONLYDIR","OPEN","WatchFlags","all","all","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","complement","complement","complement","contains","contains","contains","contains","default","difference","difference","difference","difference","empty","empty","empty","empty","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","from_name","from_name","hash","hash","inotify_add_watch","inotify_init","inotify_remove_watch","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into_iter","into_iter","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","not","not","remove","remove","remove","remove","set","set","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","union","union","union","ACCESS","ADDRINUSE","ADDRNOTAVAIL","ADV","AFNOSUPPORT","AGAIN","ALREADY","APPEND","BADE","BADF","BADFD","BADMSG","BADR","BADRQC","BADSLT","BFONT","BUSY","CANCELED","CHILD","CHRNG","CLOEXEC","CLOEXEC","COMM","CONNABORTED","CONNREFUSED","CONNRESET","DEADLK","DEADLOCK","DESTADDRREQ","DOM","DOTDOT","DQUOT","DSYNC","DupFlags","EXIST","Err","Errno","FAULT","FBIG","FdFlags","HIPRI","HOSTDOWN","HOSTUNREACH","HWPOISON","IDRM","ILSEQ","INPROGRESS","INTR","INVAL","IO","ISCONN","ISDIR","ISNAM","IoSlice","IoSliceMut","KEYEXPIRED","KEYREJECTED","KEYREVOKED","L2HLT","L2NSYNC","L3HLT","L3RST","LIBACC","LIBBAD","LIBEXEC","LIBMAX","LIBSCN","LNRNG","LOOP","MEDIUMTYPE","MFILE","MLINK","MSGSIZE","MULTIHOP","NAMETOOLONG","NAVAIL","NETDOWN","NETRESET","NETUNREACH","NFILE","NOANO","NOBUFS","NOCSI","NODATA","NODEV","NOENT","NOEXEC","NOKEY","NOLCK","NOLINK","NOMEDIUM","NOMEM","NOMSG","NONET","NOPKG","NOPROTOOPT","NOSPC","NOSR","NOSTR","NOSYS","NOTBLK","NOTCONN","NOTDIR","NOTEMPTY","NOTNAM","NOTRECOVERABLE","NOTSOCK","NOTSUP","NOTTY","NOTUNIQ","NOWAIT","NXIO","OPNOTSUPP","OVERFLOW","OWNERDEAD","Ok","PERM","PFNOSUPPORT","PIPE","PROTO","PROTONOSUPPORT","PROTOTYPE","RANGE","REMCHG","REMOTE","REMOTEIO","RESTART","RFKILL","ROFS","ReadWriteFlags","Result","SHUTDOWN","SOCKTNOSUPPORT","SPIPE","SRCH","SRMNT","STALE","STRPIPE","SYNC","TIME","TIMEDOUT","TOOBIG","TOOMANYREFS","TXTBSY","UCLEAN","UNATCH","USERS","WOULDBLOCK","XDEV","XFULL","advance","advance","advance_slices","advance_slices","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","complement","complement","complement","contains","contains","contains","deref","deref","deref_mut","difference","difference","difference","dup","dup2","dup3","empty","empty","empty","eq","eq","eq","eq","extend","extend","extend","fcntl_dupfd_cloexec","fcntl_getfd","fcntl_setfd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_io_error","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_raw_os_error","hash","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into_iter","into_iter","into_iter","ioctl_fionbio","ioctl_fionread","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_read_write","iter","iter","iter","iter_names","iter_names","iter_names","kind","new","new","not","not","not","pread","pread_uninit","preadv","preadv2","pwrite","pwritev","pwritev2","raw_os_error","read","read_uninit","readv","remove","remove","remove","retry_on_intr","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","write","writev","BadOpcode","CompileTimeOpcode","Direction","Getter","IS_MUTATING","Ioctl","IoctlOutput","NoArg","None","NoneOpcode","OPCODE","OPCODE","Opcode","Output","RawOpcode","Read","ReadOpcode","ReadWrite","ReadWriteOpcode","Setter","Updater","Write","WriteOpcode","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_components","hash","hash","into","into","into","into","into","into","into","into","into","into","into","ioctl","new","new","new","new","none","old","output_from_ptr","output_from_ptr","output_from_ptr","output_from_ptr","output_from_ptr","partial_cmp","partial_cmp","raw","read","read_write","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","APPLETALK","ASH","ATMPVC","ATMSVC","AX25","AddressFamily","AddressFamily","AncillaryDrain","AncillaryIter","BITS","BITS","BLUETOOTH","BRIDGE","BROADCAST","CAN","CLOEXEC","CMSG_CLOEXEC","CONFIRM","DECnet","DGRAM","DONTROUTE","DONTWAIT","DONTWAIT","ECONET","EOT","ERRQUEUE","IEEE802154","INET","INET6","IPX","IRDA","ISDN","IUCV","IpAddr","Ipv4Addr","Ipv6Addr","KEY","LLC","LOCALHOST","LOCALHOST","MORE","NETBEUI","NETLINK","NETROM","NONBLOCK","NOSIGNAL","OOB","OOB","PACKET","PEEK","PHONET","PPPOX","Protocol","Protocol","RAW","RDM","RDS","ROSE","RXRPC","RawAddressFamily","RawProtocol","RawSocketType","Read","ReadWrite","RecvAncillaryBuffer","RecvAncillaryMessage","RecvFlags","RecvMsgReturn","SECURITY","SEQPACKET","SNA","STREAM","ScmCredentials","ScmCredentials","ScmRights","ScmRights","SendAncillaryBuffer","SendAncillaryMessage","SendFlags","Shutdown","Shutdown","SocketAddr","SocketAddrAny","SocketAddrStorage","SocketAddrUnix","SocketAddrV4","SocketAddrV6","SocketFlags","SocketFlags","SocketType","SocketType","TIPC","TRUNC","UCred","UNIX","UNSPEC","UNSPECIFIED","UNSPECIFIED","Unix","V4","V4","V4","V6","V6","V6","WAITALL","WANPIPE","Write","X25","XDP","Xdp","__storage","abstract_name","accept","accept_with","acceptfrom","acceptfrom_with","address","address_family","all","all","all","as_raw","as_raw","as_raw","backward_checked","backward_checked","backward_unchecked","backward_unchecked","bind","bind_any","bind_unix","bind_v4","bind_v6","bind_xdp","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmsg_space","collect","complement","complement","complement","connect","connect_any","connect_unix","connect_unspec","connect_v4","connect_v6","contains","contains","contains","count","count","default","default","difference","difference","difference","drain","drop","drop","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eth","extend","extend","extend","extend","flags","flowinfo","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","forward_checked","forward_checked","forward_unchecked","forward_unchecked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_raw","from_raw","from_raw","from_str","from_str","from_str","from_str","from_str","from_str","getpeername","getsockname","gid","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","ip","ip","ip","ipproto","is_all","is_all","is_all","is_benchmarking","is_benchmarking","is_benchmarking","is_broadcast","is_documentation","is_documentation","is_documentation","is_empty","is_empty","is_empty","is_global","is_global","is_global","is_ipv4","is_ipv4","is_ipv4_mapped","is_ipv6","is_ipv6","is_link_local","is_loopback","is_loopback","is_loopback","is_multicast","is_multicast","is_multicast","is_private","is_reserved","is_shared","is_unicast","is_unicast_global","is_unicast_link_local","is_unique_local","is_unspecified","is_unspecified","is_unspecified","iter","iter","iter","iter_names","iter_names","iter_names","last","last","len","listen","multicast_scope","netdevice","netlink","new","new","new","new","new","new","new","new","new_abstract_name","next","next","next_back","not","not","not","not","not","not","not","octets","octets","parse","parse_ascii","parse_ascii","parse_ascii","parse_ascii","parse_ascii","parse_ascii","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","pid","port","port","port","push","read","recv","recv_uninit","recvfrom","recvfrom_uninit","recvmsg","remove","remove","remove","scope_id","segments","send","sendmsg","sendmsg_any","sendmsg_unix","sendmsg_v4","sendmsg_v6","sendmsg_xdp","sendto","sendto_any","sendto_unix","sendto_v4","sendto_v6","sendto_xdp","set","set","set","set_flowinfo","set_ip","set_ip","set_ip","set_port","set_port","set_port","set_scope_id","shutdown","size","size_hint","size_hint","socket","socket_with","socketpair","sockopt","steps_between","steps_between","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","sysproto","to_bits","to_bits","to_canonical","to_canonical","to_ipv4","to_ipv4_mapped","to_ipv6_compatible","to_ipv6_mapped","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","union","union","union","write","xdp","AARP","AF_IUCV","ALL","AOE","ARCNET","ARP","ATALK","ATMFATE","ATMMPOA","AX25","BATMAN","BPQ","CAIF","CAN","CANFD","CANXL","CFM","CONTROL","CUST","DDCMP","DEC","DIAG","DNA_DL","DNA_RC","DNA_RT","DSA","DSA_8021Q","DSA_A5PSW","ECONET","EDSA","ERSPAN","ERSPAN2","ETHERCAT","FCOE","FIP","HDLC","HSR","IBOE","IEEE802154","IEEEPUP","IEEEPUPAT","IFE","IP","IPV6","IPX","IRDA","LAT","LINK_CTL","LLDP","LOCALTALK","LOOP","LOOPBACK","MACSEC","MAP","MCTP","MOBITEX","MPLS_MC","MPLS_UC","MRP","MVRP","NCSI","NSH","PAE","PAUSE","PHONET","PPPTALK","PPP_DISC","PPP_MP","PPP_SES","PREAUTH","PROFINET","PRP","PUP","PUPAT","P_1588","P_8021AD","P_8021AH","P_8021Q","P_80221","P_802_2","P_802_3","P_802_3_MIN","P_802_EX1","QINQ1","QINQ2","QINQ3","RARP","REALTEK","SCA","SLOW","SNAP","TDLS","TEB","TIPC","TRAILER","TR_802_2","TSN","WAN_PPP","WCCP","X25","XDSA","AH","BEETPH","COMP","DCCP","EGP","ENCAP","ESP","ETHERNET","FRAGMENT","GRE","ICMP","ICMPV6","IDP","IGMP","IPIP","IPV6","MH","MPLS","MPTCP","MTP","PIM","PUP","RAW","ROUTING","RSVP","SCTP","TCP","TP","UDP","UDPLITE","index_to_name","name_to_index","ADD_MEMBERSHIP","AUDIT","BROADCAST_ERROR","CAP_ACK","CONNECTOR","CRYPTO","DNRTMSG","DROP_MEMBERSHIP","ECRYPTFS","EXT_ACK","FIB_LOOKUP","FIREWALL","GENERIC","GET_STRICT_CHK","INET_DIAG","IP6_FW","ISCSI","KOBJECT_UEVENT","LISTEN_ALL_NSID","LIST_MEMBERSHIPS","NETFILTER","NFLOG","NO_ENOBUFS","PKTINFO","RDMA","RX_RING","SCSITRANSPORT","SELINUX","SOCK_DIAG","TX_RING","UNUSED","USERSOCK","XFRM","Recv","Send","Timeout","borrow","borrow_mut","clone","clone_into","eq","fmt","from","get_ip_freebind","get_ip_multicast_loop","get_ip_multicast_ttl","get_ip_original_dst","get_ip_recvtos","get_ip_tos","get_ip_ttl","get_ipv6_freebind","get_ipv6_multicast_hops","get_ipv6_multicast_loop","get_ipv6_original_dst","get_ipv6_recvtclass","get_ipv6_tclass","get_ipv6_unicast_hops","get_ipv6_v6only","get_socket_acceptconn","get_socket_broadcast","get_socket_cookie","get_socket_domain","get_socket_error","get_socket_incoming_cpu","get_socket_keepalive","get_socket_linger","get_socket_oobinline","get_socket_passcred","get_socket_peercred","get_socket_protocol","get_socket_recv_buffer_size","get_socket_reuseaddr","get_socket_reuseport","get_socket_send_buffer_size","get_socket_timeout","get_socket_type","get_tcp_congestion","get_tcp_cork","get_tcp_keepcnt","get_tcp_keepidle","get_tcp_keepintvl","get_tcp_nodelay","get_tcp_quickack","get_tcp_thin_linear_timeouts","get_tcp_user_timeout","get_xdp_mmap_offsets","get_xdp_options","get_xdp_statistics","hash","into","set_ip_add_membership","set_ip_add_membership_with_ifindex","set_ip_add_source_membership","set_ip_drop_membership","set_ip_drop_membership_with_ifindex","set_ip_drop_source_membership","set_ip_freebind","set_ip_multicast_loop","set_ip_multicast_ttl","set_ip_recvtos","set_ip_tos","set_ip_ttl","set_ipv6_add_membership","set_ipv6_drop_membership","set_ipv6_freebind","set_ipv6_multicast_hops","set_ipv6_multicast_loop","set_ipv6_recvtclass","set_ipv6_tclass","set_ipv6_unicast_hops","set_ipv6_v6only","set_socket_broadcast","set_socket_incoming_cpu","set_socket_keepalive","set_socket_linger","set_socket_oobinline","set_socket_passcred","set_socket_recv_buffer_size","set_socket_reuseaddr","set_socket_reuseport","set_socket_send_buffer_size","set_socket_timeout","set_tcp_congestion","set_tcp_cork","set_tcp_keepcnt","set_tcp_keepidle","set_tcp_keepintvl","set_tcp_nodelay","set_tcp_quickack","set_tcp_thin_linear_timeouts","set_tcp_user_timeout","set_xdp_rx_ring_size","set_xdp_tx_ring_size","set_xdp_umem_completion_ring_size","set_xdp_umem_fill_ring_size","set_xdp_umem_reg","to_owned","try_from","try_into","type_id","SockaddrXdpFlags","SocketAddrXdp","XDP_COPY","XDP_OPTIONS_ZEROCOPY","XDP_PGOFF_RX_RING","XDP_PGOFF_TX_RING","XDP_PKT_CONTD","XDP_RING_NEED_WAKEUP","XDP_SHARED_UMEM","XDP_UMEM_PGOFF_COMPLETION_RING","XDP_UMEM_PGOFF_FILL_RING","XDP_UMEM_UNALIGNED_CHUNK_FLAG","XDP_USE_NEED_WAKEUP","XDP_USE_SG","XDP_ZEROCOPY","XSK_UNALIGNED_BUF_ADDR_MASK","XSK_UNALIGNED_BUF_OFFSET_SHIFT","XdpDesc","XdpDescOptions","XdpMmapOffsets","XdpOptions","XdpOptionsFlags","XdpRingFlags","XdpRingOffset","XdpStatistics","XdpUmemReg","XdpUmemRegFlags","addr","addr","all","all","all","all","all","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","consumer","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","cr","desc","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fr","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","headroom","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","interface_index","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","len","len","new","not","not","not","not","not","options","partial_cmp","partial_cmp","producer","queue_id","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","rx","rx_dropped","rx_fill_ring_empty_descs","rx_invalid_descs","rx_ring_full","set","set","set","set","set","set","set","set","set","set","set_flags","set_interface_index","set_queue_id","set_shared_umem_fd","shared_umem_fd","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","tx_invalid_descs","tx_ring_empty_descs","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","union","union","union","Arg","as_cow_c_str","as_str","into_c_str","into_with_c_str","option_into_with_c_str","to_string_lossy","ASYNC","Abort","Alarm","All","Any","ArgEnd","ArgStart","As","Big","BrkCurrent","BrkStart","Bus","CONTINUED","CONTINUED","Child","CodeEnd","CodeStart","Cont","Core","Cpu","CpuSet","Cpuid","DISABLE","DISABLE","DISABLE_NOEXEC","DISABLE_NOEXEC","DIV","Data","DataEnd","DataStart","Default","Dumpable","DumpableBehavior","DumpableReadableOnlyByRoot","ENABLE","ENABLE","EXITED","EXIT_FAILURE","EXIT_SIGNALED_SIGABRT","EXIT_SUCCESS","Early","EndianMode","EnvironmentEnd","EnvironmentStart","FORCE_DISABLE","FORCE_DISABLE","FloatingPointEmulation","FloatingPointEmulationControl","FloatingPointExceptionMode","FloatingPointMode","FloatingPointRegisters","FlushL1DCacheOnContextSwitchOutOfTask","ForeignRawFd","Fpe","Fsize","GLOBAL","GLOBAL_EXPEDITED","Gid","Global","GlobalExpedited","Hup","INIT","INV","Ill","IndirectBranchSpeculation","Int","Io","Kill","Late","Little","Locks","MAX_CPU","MachineCheckMemoryCorruptionKillPolicy","MembarrierCommand","MembarrierQuery","Memlock","Msgqueue","NOHANG","NOHANG","NONBLOCK","NONRECOV","NOWAIT","NO_PRINT","NO_PRINT","Nice","Nofile","None","NotDumpable","Nproc","OVF","PRCTL","PRECISE","PRIVATE_EXPEDITED","PRIVATE_EXPEDITED_RSEQ","PRIVATE_EXPEDITED_SYNC_CORE","PTracer","Pgid","Pid","Pid","PidFd","PidfdFlags","PidfdGetfdFlags","Pipe","Power","PowerPCLittle","PrctlMmMap","PrivateExpedited","PrivateExpeditedRseq","PrivateExpeditedSyncCore","ProcessID","Prof","Quit","REGISTER_GLOBAL_EXPEDITED","REGISTER_PRIVATE_EXPEDITED","REGISTER_PRIVATE_EXPEDITED_RSEQ","REGISTER_PRIVATE_EXPEDITED_SYNC_CORE","RES","RaiseSIGSEGV","RawGid","RawPid","RawUid","Readable","RegisterGlobalExpedited","RegisterPrivateExpedited","RegisterPrivateExpeditedRseq","RegisterPrivateExpeditedSyncCore","Resource","Rlimit","Rss","Rtprio","Rttime","SIGBUS","SIGFPE","STOPPED","SW_ENABLE","Segv","Signal","Sigpending","SpeculationFeature","SpeculationFeatureControl","SpeculationFeatureState","SpeculativeStoreBypass","Stack","StackStart","Statistical","Stkflt","Stop","Sys","Term","TimeStamp","TimeStampCounterReadability","TimingMethod","Trap","Tstp","Ttin","Ttou","UND","UNTRACED","Uid","UnalignedAccessControl","Urg","Usr1","Usr2","VirtualMemoryMapAddress","Vtalarm","WaitId","WaitOptions","WaitStatus","WaitidOptions","WaitidStatus","Winch","Xcpu","Xfsz","all","all","all","all","all","all","all","all","all","all","arg_end","arg_start","as_raw","as_raw","as_raw","as_raw","as_raw_nonzero","auxv","auxv_size","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","chdir","child_subreaper","chroot","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","configure_io_flusher_behavior","configure_performance_counters","configure_pointer_authentication_keys","configure_virtual_memory_map","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_command","continued","continued","control_speculative_feature","count","current","default","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","dumpable_behavior","dumped","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","enabled_pointer_authentication_keys","end_code","end_data","endian_mode","env_end","env_start","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exe_fd","exit_status","exit_status","exited","exited","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","fchdir","floating_point_emulation_control","floating_point_exception_mode","floating_point_mode","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_child","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_raw","from_raw","from_raw","from_raw_unchecked","getcwd","getegid","geteuid","getgid","getgroups","getpgid","getpgrp","getpid","getppid","getpriority_pgrp","getpriority_process","getpriority_user","getrlimit","getsid","getuid","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","ioctl_tiocsctty","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_init","is_io_flusher","is_set","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","kill_current_process_group","kill_process","kill_process_group","killed","machine_check_memory_corruption_kill_policy","maximum","membarrier","membarrier_cpu","membarrier_query","new","nice","not","not","not","not","not","not","not","not","not","not","parent_process_death_signal","pidfd_getfd","pidfd_open","pidfd_send_signal","prlimit","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","sched_getaffinity","sched_getcpu","sched_setaffinity","sched_yield","set","set","set","set","set","set","set","set","set","set","set","set_auxiliary_vector","set_child_subreaper","set_dumpable_behavior","set_endian_mode","set_executable_file","set_floating_point_emulation_control","set_floating_point_exception_mode","set_floating_point_mode","set_machine_check_memory_corruption_kill_policy","set_parent_process_death_signal","set_ptracer","set_time_stamp_counter_readability","set_timing_method","set_unaligned_access_control","set_virtual_memory_map_address","set_virtual_memory_region_name","setpgid","setpriority_pgrp","setpriority_process","setpriority_user","setrlimit","setsid","signaled","speculative_feature_state","start_brk","start_code","start_data","start_stack","stopped","stopped","stopping_signal","stopping_signal","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","terminating_signal","terminating_signal","test_kill_current_process_group","test_kill_process","test_kill_process_group","time_stamp_counter_readability","timing_method","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","trapped","trapping_signal","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","umask","unaligned_access_control","union","union","union","union","union","union","union","union","union","union","unset","virtual_memory_map_config_struct_size","wait","waitid","waitpgid","waitpid"],"q":[[0,"rustix"],[11,"rustix::event"],[155,"rustix::event::epoll"],[390,"rustix::fd"],[443,"rustix::ffi"],[559,"rustix::fs"],[1792,"rustix::fs::inotify"],[1971,"rustix::io"],[2350,"rustix::ioctl"],[2491,"rustix::net"],[3249,"rustix::net::eth"],[3350,"rustix::net::ipproto"],[3380,"rustix::net::netdevice"],[3382,"rustix::net::netlink"],[3415,"rustix::net::sockopt"],[3522,"rustix::net::xdp"],[4051,"rustix::path"],[4058,"rustix::process"],[5142,"linux_raw_sys::ctypes"],[5143,"core::iter::traits::collect"],[5144,"core::fmt"],[5145,"core::fmt"],[5146,"core::hash"],[5147,"bitflags::iter"],[5148,"bitflags::iter"],[5149,"core::any"],[5150,"core::ffi"],[5151,"linux_raw_sys::ctypes"],[5152,"std::os::linux::process"],[5153,"std::process"],[5154,"std::os::unix::net::listener"],[5155,"std::process"],[5156,"std::net::udp"],[5157,"std::process"],[5158,"std::fs"],[5159,"std::net::tcp"],[5160,"alloc::borrow"],[5161,"core::ffi::c_str"],[5162,"core::cmp"],[5163,"core::num::nonzero"],[5164,"alloc::vec"],[5165,"alloc::boxed"],[5166,"core::ffi::c_str"],[5167,"core::ops::range"],[5168,"core::ops::range"],[5169,"alloc::ffi::c_str"],[5170,"core::convert"],[5171,"core::str::error"],[5172,"linux_raw_sys::ctypes"],[5173,"std::io::error"],[5174,"core::net::ip_addr"],[5175,"core::option"],[5176,"core::marker"],[5177,"linux_raw_sys::general"],[5178,"core::num::nonzero"],[5179,"std::process"]],"d":["Macro for defining the amount of space to allocate in a …","A macro for <code>CStr</code> literals.","Event operations.","Export the <code>*Fd</code> types and traits that are used in rustix’…","Utilities related to FFI bindings.","Filesystem operations.","I/O operations.","Unsafe <code>ioctl</code> API.","Network-related operations.","Filesystem path operations.","Process-associated operations.","<code>EFD_CLOEXEC</code>","<code>POLLERR</code>","<code>EFD_*</code> flags for use with <code>eventfd</code>.","<code>POLLHUP</code>","<code>POLLIN</code>","<code>EFD_NONBLOCK</code>","<code>POLLNVAL</code>","<code>POLLOUT</code>","<code>POLLPRI</code>","<code>struct pollfd</code>—File descriptor and flags for use with <code>poll</code>…","<code>POLL*</code> flags for use with <code>poll</code>.","<code>POLLRDBAND</code>","<code>POLLRDHUP</code>","<code>POLLRDNORM</code>","<code>EFD_SEMAPHORE</code>","<code>POLLWRBAND</code>","<code>POLLWRNORM</code>","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","Clears the ready events.","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Linux <code>epoll</code> support.","","","<code>eventfd(initval, flags)</code>—Creates a file descriptor for …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Constructs a new <code>PollFd</code> holding <code>fd</code> and <code>events</code>.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Constructs a new <code>PollFd</code> holding <code>fd</code> and <code>events</code>.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","<code>pause()</code>","<code>poll(self.fds, timeout)</code>","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Returns the ready events.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the contained file descriptor to <code>fd</code>.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>EPOLL_CLOEXEC</code>","<code>EPOLL_*</code> for use with [<code>new</code>].","<code>EPOLLERR</code>","<code>EPOLLET</code>","<code>EPOLLEXCLUSIVE</code>","A record of an event that occurred.","Data associated with an <code>Event</code>. This can either be a 64-bit …","<code>EPOLL*</code> for use with <code>add</code>.","A vector of <code>Event</code>s, plus context for interpreting them.","<code>EPOLLHUP</code>","<code>EPOLLIN</code>","An iterator over the <code>Event</code>s in an <code>EventVec</code>.","<code>EPOLLMSG</code>","<code>EPOLLONESHOT</code>","<code>EPOLLOUT</code>","<code>EPOLLPRI</code>","<code>EPOLLRDBAND</code>","<code>EPOLLRDHUP</code>","<code>EPOLLRDNORM</code>","<code>EPOLLWAKEUP</code>","<code>EPOLLWRBAND</code>","<code>EPOLLWRNORM</code>","<code>epoll_ctl(self, EPOLL_CTL_ADD, data, event)</code>—Adds an …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","Returns the current <code>Event</code> capacity of this <code>EventVec</code>.","Clears all the <code>Events</code> out of this <code>EventVec</code>.","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","<code>epoll_create1(flags)</code>—Creates a new epoll object.","User data.","","<code>epoll_ctl(self, EPOLL_CTL_DEL, target, NULL)</code>—Removes an …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Which specific event(s) occurred.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Constructs an <code>EventVec</code> from raw pointer, length, and …","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Tests whether this <code>EventVec</code> is logically empty.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns an iterator over the <code>Event</code>s in this <code>EventVec</code>.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Returns the number of <code>Event</code>s logically contained in this …","<code>epoll_ctl(self, EPOLL_CTL_MOD, target, event)</code>—Modifies …","Construct a new value containing a <code>*mut c_void</code>.","Construct a new value containing a <code>u64</code>.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Return the value as a <code>*mut c_void</code>.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Reserves enough memory for at least <code>additional</code> more <code>Event</code>s.","Reserves enough memory for exactly <code>additional</code> more <code>Event</code>s.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Shrinks the capacity of this <code>EventVec</code> as much as possible.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","Return the value as a <code>u64</code>.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>epoll_wait(self, events, timeout)</code>—Waits for registered …","Constructs an <code>EventVec</code> with memory for <code>capacity</code> <code>Event</code>s.","A trait to borrow the file descriptor from an underlying …","A trait to extract the raw file descriptor from an …","A borrowed file descriptor.","A trait to express the ability to construct an object from …","A trait to express the ability to consume an object and …","An owned file descriptor.","Raw file descriptors.","Borrows the file descriptor.","","","Extracts the raw file descriptor.","","","","","","","Return a <code>BorrowedFd</code> holding the given raw file descriptor.","","","","","","Returns the argument unchanged.","Takes ownership of a <code>UnixStream</code>’s socket file descriptor.","","Takes ownership of a <code>ChildStderr</code>’s file descriptor.","Takes ownership of a <code>UnixListener</code>’s socket file …","Takes ownership of a <code>ChildStdin</code>’s file descriptor.","Takes ownership of a <code>UnixDatagram</code>’s socket file …","Takes ownership of a <code>UdpSocket</code>’s file descriptor.","Takes ownership of a <code>ChildStdout</code>’s file descriptor.","Takes ownership of a <code>TcpStream</code>’s socket file descriptor.","Takes ownership of a <code>File</code>’s underlying file descriptor.","Takes ownership of a <code>TcpListener</code>’s socket file …","Returns the argument unchanged.","Constructs a new instance of <code>Self</code> from the given raw file …","Constructs a new instance of <code>Self</code> from the given raw file …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this object, returning the raw underlying file …","","","","","Creates a new <code>OwnedFd</code> instance that shares the same …","Creates a new <code>OwnedFd</code> instance that shares the same …","","","","","","","Representation of a borrowed C string.","A type representing an owned, C-compatible, nul-terminated …","An error indicating that a nul byte was not in the …","An error indicating that an interior nul byte was found.","Returns the contents of this <code>CString</code> as a slice of bytes.","Equivalent to <code>CString::as_bytes()</code> except that the returned …","Extracts a <code>CStr</code> slice containing the entire string.","","","","Returns the inner pointer to this C string.","","","","","","","","","","","","","","","Iterates over the bytes in this C string.","Equivalent to C’s <code>char</code> type.","","","","","","","","","","Returns the length of <code>self</code>. Like C’s <code>strlen</code>, this does …","Creates an empty <code>CString</code>.","","","","","","","","","","","","","","","","Converts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …","Returns the argument unchanged.","Converts a &amp;CStr into a <code>CString</code> by copying the contents …","Converts a Vec&lt;NonZero&lt;u8&gt;&gt; into a <code>CString</code> without copying …","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","Returns the argument unchanged.","Returns the argument unchanged.","Creates a C string wrapper from a byte slice with any …","Creates a C string wrapper from a byte slice with exactly …","Unsafely creates a C string wrapper from a byte slice.","Wraps a raw C string with a safe C string wrapper.","Retakes ownership of a <code>CString</code> that was transferred to C …","Creates a C-compatible string by consuming a byte vector, …","Attempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.","Converts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>CString</code> into a boxed <code>CStr</code>.","Consumes the <code>CString</code> and returns the underlying byte …","Equivalent to <code>CString::into_bytes()</code> except that the …","","","","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","Consumes the <code>CString</code> and transfers ownership of the string …","Converts the <code>CString</code> into a <code>String</code> if it contains valid …","Consumes this error, returning the underlying vector of …","","","","Returns <code>true</code> if <code>self.to_bytes()</code> has a length of 0.","Creates a new C-compatible string from a container of …","Returns the position of the nul byte in the slice that …","","","Converts this C string to a byte slice.","Converts this C string to a byte slice containing the …","","","","","Yields a &amp;str slice if the <code>CStr</code> contains valid UTF-8.","","","","","","Converts a <code>CStr</code> into a Cow&lt;str&gt;.","","","","","","","","","","","<code>O_ACCMODE</code>","<code>STATX_ALL</code>","<code>MFD_ALLOW_SEALING</code>","<code>O_APPEND</code>","<code>FS_APPEND_FL</code>","<code>STATX_ATIME</code>","<code>*_OK</code> constants for use with <code>accessat</code>.","<code>POSIX_FADV_*</code> constants for use with <code>fadvise</code>.","<code>AT_*</code> constants for use with <code>openat</code>, <code>statat</code>, and other <code>*at</code> …","<code>STATX_BASIC_STATS</code>","<code>RESOLVE_BENEATH</code>","<code>STATX_BLOCKS</code>","<code>STATX_BTIME</code>","<code>S_IFBLK</code>","<code>RESOLVE_CACHED</code> (since Linux 5.12)","<code>O_CLOEXEC</code>","<code>MFD_CLOEXEC</code>","<code>FALLOC_FL_COLLAPSE_RANGE</code>","<code>FS_COMPR_FL</code>","<code>O_CREAT</code>","<code>XATTR_CREATE</code>","<code>STATX_CTIME</code>","<code>AT_FDCWD</code>—A handle representing the current working …","<code>S_IFCHR</code>","Sets the offset to the current position plus the specified …","<code>STATX_DIOALIGN</code> (since Linux 6.1)","<code>O_DIRECT</code>","<code>O_DIRECTORY</code>","<code>FS_DIRSYNC_FL</code>","<code>O_DSYNC</code>.","Sets the offset to the current position plus the specified …","<code>dev_t</code>","<code>DIR*</code>","<code>struct dirent</code>","Re-export types common to POSIX-ish platforms. …","<code>S_IFDIR</code>","<code>POSIX_FADV_DONTNEED</code>","<code>AT_EACCESS</code>","<code>AT_EMPTY_PATH</code>","<code>RENAME_EXCHANGE</code>","<code>O_EXCL</code>","<code>MFD_EXEC</code> (since Linux 6.3)","<code>X_OK</code>","<code>F_OK</code>","Sets the offset to the size of this object plus the …","<code>O_FSYNC</code>.","<code>F_SEAL_FUTURE_WRITE</code> (since Linux 5.1)","<code>FALLOC_FL_*</code> constants for use with <code>fallocate</code>.","","<code>S_IFIFO</code>","Re-export types common to POSIX-ish platforms. …","<code>S_IF*</code> constants for use with <code>mknodat</code> and <code>Stat</code>’s <code>st_mode</code> …","Re-export types common to POSIX-ish platforms. …","<code>LOCK_*</code> constants for use with <code>flock</code> and <code>fcntl_lock</code>.","<code>__fsword_t</code>","<code>STATX_GID</code>","<code>F_SEAL_GROW</code>.","<code>gid_t</code>—A Unix group ID.","<code>MFD_HUGETLB</code> (since Linux 4.14)","<code>MFD_HUGE_16GB</code>","<code>MFD_HUGE_16MB</code>","<code>MFD_HUGE_1GB</code>","<code>MFD_HUGE_1MB</code>","<code>MFD_HUGE_256MB</code>","<code>MFD_HUGE_2GB</code>","<code>MFD_HUGE_2MB</code>","<code>MFD_HUGE_32MB</code>","<code>MFD_HUGE_512KB</code>","<code>MFD_HUGE_512MB</code>","<code>MFD_HUGE_64KB</code>","<code>MFD_HUGE_8MB</code>","Sets the offset to the current position plus the specified …","<code>FS_*</code> constants for use with [<code>ioctl_getflags</code>][…","<code>FS_IMMUTABLE_FL</code>","<code>STATX_INO</code>","<code>FALLOC_FL_INSERT_RANGE</code>","<code>RESOLVE_IN_ROOT</code>","<code>FS_JOURNAL_DATA_FL</code>","<code>FALLOC_FL_KEEP_SIZE</code>","<code>O_LARGEFILE</code>","<code>LOCK_EX</code>","<code>LOCK_SH</code>","<code>ST_MANDLOCK</code>","<code>STATX_MNT_ID</code> (since Linux 5.8)","<code>STATX_MODE</code>","<code>STATX_MTIME</code>","<code>MFD_*</code> constants for use with <code>memfd_create</code>.","Re-export types common to POSIX-ish platforms. …","<code>S_I*</code> constants for use with <code>openat</code>, <code>chmodat</code>, and <code>fchmod</code>.","The filesystem magic number for NFS.","<code>STATX_NLINK</code>","<code>O_NOATIME</code>","<code>ST_NOATIME</code>","<code>FS_NOATIME_FL</code>","<code>FS_NOCOW_FL</code>","<code>O_NOCTTY</code>","<code>ST_NODEV</code>","<code>ST_NODIRATIME</code>","<code>FS_NODUMP_FL</code>","<code>ST_NOEXEC</code>","<code>MFD_NOEXEC_SEAL</code> (since Linux 6.3)","<code>O_NOFOLLOW</code>","<code>O_NONBLOCK</code>","<code>RENAME_NOREPLACE</code>","<code>ST_NOSUID</code>","<code>FS_NOTAIL_FL</code>","<code>AT_NO_AUTOMOUNT</code>","<code>FALLOC_FL_NO_HIDE_STALE</code>","<code>RESOLVE_NO_MAGICLINKS</code>","<code>RESOLVE_NO_SYMLINKS</code>","<code>RESOLVE_NO_XDEV</code>","<code>POSIX_FADV_NOREUSE</code>","<code>LOCK_EX | LOCK_NB</code>","<code>LOCK_SH | LOCK_NB</code>","<code>LOCK_UN | LOCK_NB</code>","<code>POSIX_FADV_NORMAL</code>","A type for the <code>tv_sec</code> field of <code>Timespec</code>.","<code>O_*</code> constants for use with <code>openat</code>.","Re-export types common to POSIX-ish platforms. …","<code>O_PATH</code>","The filesystem magic number for procfs.","<code>FS_PROJINHERIT_FL</code>","<code>FALLOC_FL_PUNCH_HOLE</code>","<code>O_RDONLY</code>","<code>ST_RDONLY</code>","<code>O_RDWR</code>","<code>R_OK</code>","<code>ST_RELATIME</code>","<code>AT_REMOVEDIR</code>","<code>XATTR_REPLACE</code>","<code>S_IRGRP</code>","A <code>Uid</code> corresponding to the root user (uid 0).","A <code>Gid</code> corresponding to the root group (gid 0).","<code>S_IROTH</code>","<code>O_RSYNC</code>.","<code>S_IRUSR</code>","Similar to <code>ACCMODE</code>, but just includes the read/write …","<code>S_IRWXG</code>","<code>S_IRWXO</code>","<code>S_IRWXU</code>","<code>POSIX_FADV_RANDOM</code>","A directory iterator implemented with getdents.","A raw directory entry, similar to <code>std::fs::DirEntry</code>.","<code>mode_t</code>","<code>S_IFREG</code>","<code>RENAME_*</code> constants for use with <code>renameat_with</code>.","<code>RESOLVE_*</code> constants for use with <code>openat2</code>.","<code>F_SEAL_SEAL</code>.","<code>FS_SECRM_FL</code>","<code>S_ISGID</code>","<code>F_SEAL_SHRINK</code>.","<code>STATX_SIZE</code>","<code>AT_STATX_DONT_SYNC</code>","<code>AT_STATX_FORCE_SYNC</code>","<code>AT_STATX_SYNC_AS_STAT</code>","<code>S_ISUID</code>","<code>S_ISVTX</code>","<code>AT_SYMLINK_FOLLOW</code>","<code>AT_SYMLINK_NOFOLLOW</code>","<code>O_SYNC</code>","<code>FS_SYNC_FL</code>","<code>ST_SYNCHRONOUS</code>","<code>F_SEAL_*</code> constants for use with <code>fcntl_add_seals</code> and …","A type for the <code>tv_sec</code> field of <code>Timespec</code>.","Enumeration of possible methods to seek within an I/O …","<code>POSIX_FADV_SEQUENTIAL</code>","<code>S_IFSOCK</code>","Sets the offset to the provided number of bytes.","<code>struct stat</code> for use with <code>statat</code> and <code>fstat</code>.","Extension trait for accessing timestamp fields of <code>Stat</code>.","<code>struct statfs</code> for use with <code>statfs</code> and <code>fstatfs</code>.","<code>struct statvfs</code> for use with <code>statvfs</code> and <code>fstatvfs</code>.","<code>ST_*</code> constants for use with <code>StatVfs</code>.","<code>struct statx</code> for use with <code>statx</code>.","<code>STATX_*</code> constants for use with <code>statx</code>.","<code>struct statx_timestamp</code> for use with <code>Statx</code>.","<code>S_IFLNK</code>","<code>O_TMPFILE</code>","<code>FS_TOPDIR_FL</code>","<code>O_TRUNC</code>","<code>STATX_TYPE</code>","<code>struct timespec</code>","Timestamps used by <code>utimensat</code> and <code>futimens</code>.","<code>STATX_UID</code>","<code>FS_UNRM_FL</code>","<code>FALLOC_FL_UNSHARE_RANGE</code>","<code>UTIME_NOW</code> for use with <code>utimensat</code>.","<code>UTIME_OMIT</code> for use with <code>utimensat</code>.","<code>uid_t</code>—A Unix user ID.","An unknown filesystem object.","<code>LOCK_UN</code>","<code>S_IWGRP</code>","<code>RENAME_WHITEOUT</code>","<code>S_IWOTH</code>","<code>F_SEAL_WRITE</code>.","<code>W_OK</code>","<code>O_WRONLY</code>","<code>S_IWUSR</code>","<code>POSIX_FADV_WILLNEED</code>","<code>S_IXGRP</code>","<code>S_IXOTH</code>","<code>S_IXUSR</code>","<code>XATTR_*</code> constants for use with <code>setxattr</code>, and other …","<code>FALLOC_FL_ZERO_RANGE</code>","","","","","","<code>access(path, access)</code>—Tests permissions for a file or …","<code>faccessat(dirfd, path, access, flags)</code>—Tests permissions …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Converts a <code>Uid</code> into a <code>RawUid</code>.","Converts a <code>Gid</code> into a <code>RawGid</code>.","Construct an <code>st_mode</code> value from a <code>Mode</code>.","Construct an <code>st_mode</code> value from a <code>FileType</code>.","Return the value of the <code>st_atime</code> field, casted to the …","Returns the last access time of the file, in seconds since …","","Returns the last access time of the file, in nanoseconds …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the block size for filesystem I/O.","Returns the number of blocks allocated to the file, in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>fchdir(self)</code>","<code>chmod(path, mode)</code>—Sets file or directory permissions.","<code>fchmodat(dirfd, path, mode, flags)</code>—Sets file or …","<code>chown(path, owner, group)</code>—Sets open file or directory …","<code>fchownat(dirfd, path, owner, group, flags)</code>—Sets file or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","<code>copy_file_range(fd_in, off_in, fd_out, off_out, len, 0)</code>…","Return the value of the <code>st_ctime</code> field, casted to the …","Returns the last status change time of the file, in …","","Returns the last status change time of the file, in …","Pass custom flags to the <code>flags</code> argument of <code>open</code>.","Return the value of <code>CWD</code>.","","Returns the ID of the device containing the file.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","<code>ioctl(fd, EXT4_IOC_RESIZE_FS, blocks)</code>—Resize ext4 …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","<code>posix_fadvise(fd, offset, len, advice)</code>—Declares an …","<code>fallocate(fd, mode, offset, len)</code>—Adjusts file allocation.","<code>fchmod(fd, mode)</code>—Sets open file or directory permissions.","<code>fchown(fd, owner, group)</code>—Sets open file or directory …","<code>fcntl(fd, F_ADD_SEALS)</code>","","<code>fcntl(fd, F_GET_SEALS)</code>","","<code>fcntl(fd, F_GETFL)</code>—Returns a file descriptor’s access …","<code>fcntl(fd, F_SETLK)</code>—Acquire or release an <code>fcntl</code>-style …","","<code>fcntl(fd, F_SETFL, flags)</code>—Sets a file descriptor’s …","<code>fdatasync(fd)</code>—Ensures that file data is written to the …","<code>fgetxattr(fd, name, value.as_ptr(), value.len())</code>—Get …","Returns the file name of this directory entry.","Returns the file name of this directory entry.","Returns the type of this directory entry.","Returns the type of this directory entry.","<code>flistxattr(fd, list.as_ptr(), list.len())</code>—List extended …","<code>flock(fd, operation)</code>—Acquire or release an advisory lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>fremovexattr(fd, name)</code>—Remove an extended filesystem …","Returns the argument unchanged.","Returns the argument unchanged.","Support conversions from <code>Mode</code> to raw mode values.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Support conversions from raw mode values to <code>Mode</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Converts a <code>RawUid</code> into a <code>Uid</code>.","Converts a <code>RawGid</code> into a <code>Gid</code>.","Construct a <code>Mode</code> from the mode bits of the <code>st_mode</code> field …","Construct a <code>FileType</code> from the <code>S_IFMT</code> bits of the <code>st_mode</code> …","<code>fsetxattr(fd, name, value.as_ptr(), value.len(), flags)</code>…","<code>fstat(fd)</code>—Queries metadata for an open file or directory.","<code>fstatfs(fd)</code>—Queries filesystem statistics for an open …","<code>fstatvfs(fd)</code>—Queries filesystem statistics for an open …","<code>fsync(fd)</code>—Ensures that file data and metadata is written …","<code>ftruncate(fd, length)</code>—Sets the length of a file.","<code>futimens(fd, times)</code>—Sets timestamps for an open file or …","<code>getxattr(path, name, value.as_ptr(), value.len())</code>—Get …","Returns the group ID of the owner of this file.","","","","","","","","","","","","","","","Returns the inode number.","Returns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …","Returns the inode number of this directory entry.","Return the inode number of this directory entry.","inotify support for working with inotifies","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","<code>ioctl(fd, BLKPBSZGET)</code>—Returns the physical block size of …","<code>ioctl(fd, BLKSSZGET)</code>—Returns the logical block size of a …","<code>ioctl(fd, FICLONE, src_fd)</code>—Share data between open files.","<code>ioctl(fd, FS_IOC_GETFLAGS)</code>—Returns the inode flags …","<code>ioctl(fd, FS_IOC_SETFLAGS)</code>—Modify the inode flags …","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if this file type is a block device.","Returns true if the internal buffer is empty and will be …","Returns <code>true</code> if this file type is a char device.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns <code>true</code> if this file type is a fifo.","<code>fcntl(fd, F_GETFL) &amp; O_ACCMODE</code>","Test whether this uid represents the root user (uid 0).","Test whether this gid represents the root group (gid 0).","Returns <code>true</code> if this file type is a socket.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The timestamp of the last access to a filesystem object.","The timestamp of the last modification of a filesystem …","<code>lgetxattr(path, name, value.as_ptr(), value.len())</code>—Get …","<code>link(old_path, new_path)</code>—Creates a hard link.","<code>linkat(old_dirfd, old_path, new_dirfd, new_path, flags)</code>…","<code>listxattr(path, list.as_ptr(), list.len())</code>—List extended …","<code>llistxattr(path, list.as_ptr(), list.len())</code>—List …","<code>lremovexattr(path, name)</code>—Remove an extended filesystem …","<code>setxattr(path, name, value.as_ptr(), value.len(), flags)</code>…","<code>lstat(path)</code>—Queries metadata for a file or directory, …","<code>major(dev)</code>","<code>makedev(maj, min)</code>","<code>memfd_create(name, flags)</code>","<code>minor(dev)</code>","<code>mkdir(path, mode)</code>—Creates a directory.","<code>mkdirat(fd, path, mode)</code>—Creates a directory.","<code>mknodat(dirfd, path, mode, dev)</code>—Creates special or …","Sets the mode bits that a new file will be created with.","Returns the rights applied to this file.","Return the value of the <code>st_mtime</code> field, casted to the …","Returns the last modification time of the file, in seconds …","","Returns the last modification time of the file, in …","Take ownership of <code>fd</code> and construct a <code>Dir</code> that reads …","Create a new iterator from the given file descriptor and …","","Identical to <code>Iterator::next</code> except that <code>Iterator::Item</code> …","Returns the seek cookie to the next directory entry.","Returns the number of hard links pointing to this file.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","<code>open(path, oflags, mode)</code>—Opens a file.","<code>openat(dirfd, path, oflags, mode)</code>—Opens a file.","…","Returns the device ID of this file (if it is a special …","<code>readdir(self)</code>, where <code>None</code> means the end of the directory.","Reads a number of bytes starting from a given offset.","Reads the exact number of bytes required to fill <code>buf</code> from …","Borrow <code>fd</code> and construct a <code>Dir</code> that reads entries from the …","Like <code>read_at</code>, except that it reads into a slice of buffers.","<code>readlink(path)</code>—Reads the contents of a symlink.","<code>readlinkat(fd, path)</code>—Reads the contents of a symlink.","<code>readlinkat(fd, path)</code>—Reads the contents of a symlink, …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>removexattr(path, name)</code>—Remove an extended filesystem …","<code>rename(old_path, new_path)</code>—Renames a file or directory.","<code>renameat(old_dirfd, old_path, new_dirfd, new_path)</code>…","<code>renameat2(old_dirfd, old_path, new_dirfd, new_path, flags)</code>…","<code>rewinddir(self)</code>","<code>rmdir(path)</code>—Removes a directory.","<code>lseek(fd, offset, whence)</code>—Repositions a file descriptor …","<code>sendfile(out_fd, in_fd, offset, count)</code>","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","<code>setxattr(path, name, value.as_ptr(), value.len(), flags)</code>…","Returns the total size of this file in bytes.","","","","","","","","","","","","","","","","","<code>stat(path)</code>—Queries metadata for a file or directory.","<code>fstat(self)</code>","<code>fstatat(dirfd, path, flags)</code>—Queries metadata for a file …","<code>statfs</code>—Queries filesystem metadata.","<code>fstatfs(self)</code>","<code>statvfs</code>—Queries filesystem metadata, POSIX version.","<code>fstatvfs(self)</code>","<code>statx(dirfd, path, flags, mask, statxbuf)</code>","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>symlink(old_path, new_path)</code>—Creates a symlink.","<code>symlinkat(old_path, new_dirfd, new_path)</code>—Creates a …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","<code>sync</code>—Flush cached filesystem data for all filesystems.","<code>syncfs(fd)</code>—Flush cached filesystem data.","<code>lseek(fd, 0, SEEK_CUR)</code>—Returns the current position …","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user ID of the owner of this file.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>unlink(path)</code>—Unlinks a file.","<code>unlinkat(fd, path, flags)</code>—Unlinks a file or remove a …","<code>utimensat(dirfd, path, times, flags)</code>—Sets file or …","Attempts to write an entire buffer starting from a given …","Writes a number of bytes starting from a given offset.","Like <code>write_at</code>, except that it writes from a slice of …","<code>IN_ACCESS</code>","<code>IN_ALL_EVENTS</code>","<code>IN_ATTRIB</code>","<code>IN_CLOEXEC</code>","<code>IN_CLOSE</code>","<code>IN_CLOSE_NOWRITE</code>","<code>IN_CLOSE_WRITE</code>","<code>IN_CREATE</code>","<code>IN_*</code> for use with <code>inotify_init</code>.","<code>IN_DELETE</code>","<code>IN_DELETE_SELF</code>","<code>IN_DONT_FOLLOW</code>","<code>IN_EXCL_UNLINK</code>","<code>IN_MASK_ADD</code>","<code>IN_MASK_CREATE</code>","<code>IN_MODIFY</code>","<code>IN_MOVE</code>","<code>IN_MOVED_FROM</code>","<code>IN_MOVED_TO</code>","<code>IN_MOVE_SELF</code>","<code>IN_NONBLOCK</code>","<code>IN_ONESHOT</code>","<code>IN_ONLYDIR</code>","<code>IN_OPEN</code>","<code>IN*</code> for use with <code>inotify_add_watch</code>.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","<code>inotify_add_watch(self, path, flags)</code>—Adds a watch to …","<code>inotify_init1(flags)</code>—Creates a new inotify object.","<code>inotify_rm_watch(self, wd)</code>—Removes a watch from this …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>EACCES</code>","<code>EADDRINUSE</code>","<code>EADDRNOTAVAIL</code>","<code>EADV</code>","<code>EAFNOSUPPORT</code>","<code>EAGAIN</code>","<code>EALREADY</code>","<code>RWF_APPEND</code> (since Linux 4.16)","<code>EBADE</code>","<code>EBADF</code>","<code>EBADFD</code>","<code>EBADMSG</code>","<code>EBADR</code>","<code>EBADRQC</code>","<code>EBADSLT</code>","<code>EBFONT</code>","<code>EBUSY</code>","<code>ECANCELED</code>","<code>ECHILD</code>","<code>ECHRNG</code>","<code>FD_CLOEXEC</code>","<code>O_CLOEXEC</code>","<code>ECOMM</code>","<code>ECONNABORTED</code>","<code>ECONNREFUSED</code>","<code>ECONNRESET</code>","<code>EDEADLK</code>","<code>EDEADLOCK</code>","<code>EDESTADDRREQ</code>","<code>EDOM</code>","<code>EDOTDOT</code>","<code>EDQUOT</code>","<code>RWF_DSYNC</code> (since Linux 4.7)","<code>O_*</code> constants for use with <code>dup2</code>.","<code>EEXIST</code>","Contains the error value","<code>errno</code>—An error code.","<code>EFAULT</code>","<code>EFBIG</code>","<code>FD_*</code> constants for use with <code>fcntl_getfd</code> and <code>fcntl_setfd</code>.","<code>RWF_HIPRI</code> (since Linux 4.6)","<code>EHOSTDOWN</code>","<code>EHOSTUNREACH</code>","<code>EHWPOISON</code>","<code>EIDRM</code>","<code>EILSEQ</code>","<code>EINPROGRESS</code>","<code>EINTR</code>.","<code>EINVAL</code>","<code>EIO</code>","<code>EISCONN</code>","<code>EISDIR</code>","<code>EISNAM</code>","A buffer type used with <code>Write::write_vectored</code>.","A buffer type used with <code>Read::read_vectored</code>.","<code>EKEYEXPIRED</code>","<code>EKEYREJECTED</code>","<code>EKEYREVOKED</code>","<code>EL2HLT</code>","<code>EL2NSYNC</code>","<code>EL3HLT</code>","<code>EL3RST</code>","<code>ELIBACC</code>","<code>ELIBBAD</code>","<code>ELIBEXEC</code>","<code>ELIBMAX</code>","<code>ELIBSCN</code>","<code>ELNRNG</code>","<code>ELOOP</code>","<code>EMEDIUMTYPE</code>","<code>EMFILE</code>","<code>EMLINK</code>","<code>EMSGSIZE</code>","<code>EMULTIHOP</code>","<code>ENAMETOOLONG</code>","<code>ENAVAIL</code>","<code>ENETDOWN</code>","<code>ENETRESET</code>","<code>ENETUNREACH</code>","<code>ENFILE</code>","<code>ENOANO</code>","<code>ENOBUFS</code>","<code>ENOCSI</code>","<code>ENODATA</code>","<code>ENODEV</code>","<code>ENOENT</code>","<code>ENOEXEC</code>","<code>ENOKEY</code>","<code>ENOLCK</code>","<code>ENOLINK</code>","<code>ENOMEDIUM</code>","<code>ENOMEM</code>","<code>ENOMSG</code>","<code>ENONET</code>","<code>ENOPKG</code>","<code>ENOPROTOOPT</code>","<code>ENOSPC</code>","<code>ENOSR</code>","<code>ENOSTR</code>","<code>ENOSYS</code>","<code>ENOTBLK</code>","<code>ENOTCONN</code>","<code>ENOTDIR</code>","<code>ENOTEMPTY</code>","<code>ENOTNAM</code>","<code>ENOTRECOVERABLE</code>","<code>ENOTSOCK</code>","<code>ENOTSUP</code>","<code>ENOTTY</code>","<code>ENOTUNIQ</code>","<code>RWF_NOWAIT</code> (since Linux 4.14)","<code>ENXIO</code>","<code>EOPNOTSUPP</code>","<code>EOVERFLOW</code>","<code>EOWNERDEAD</code>","Contains the success value","<code>EPERM</code>","<code>EPFNOSUPPORT</code>","<code>EPIPE</code>","<code>EPROTO</code>","<code>EPROTONOSUPPORT</code>","<code>EPROTOTYPE</code>","<code>ERANGE</code>","<code>EREMCHG</code>","<code>EREMOTE</code>","<code>EREMOTEIO</code>","<code>ERESTART</code>","<code>ERFKILL</code>","<code>EROFS</code>","<code>RWF_*</code> constants for use with <code>preadv2</code> and <code>pwritev2</code>.","A specialized <code>Result</code> type for <code>rustix</code> APIs.","<code>ESHUTDOWN</code>","<code>ESOCKTNOSUPPORT</code>","<code>ESPIPE</code>","<code>ESRCH</code>","<code>ESRMNT</code>","<code>ESTALE</code>","<code>ESTRPIPE</code>","<code>RWF_SYNC</code> (since Linux 4.7)","<code>ETIME</code>","<code>ETIMEDOUT</code>","<code>E2BIG</code>","<code>ETOOMANYREFS</code>","<code>ETXTBSY</code>","<code>EUCLEAN</code>","<code>EUNATCH</code>","<code>EUSERS</code>","<code>EWOULDBLOCK</code>","<code>EXDEV</code>","<code>EXFULL</code>","Advance the internal cursor of the slice.","Advance the internal cursor of the slice.","Advance a slice of slices.","Advance a slice of slices.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","<code>close(raw_fd)</code>—Closes a <code>RawFd</code> directly.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>dup(fd)</code>—Creates a new <code>OwnedFd</code> instance that shares the …","<code>dup2(fd, new)</code>—Changes the file description of a file …","<code>dup3(fd, new, flags)</code>—Changes the file description of a …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","<code>fcntl(fd, F_DUPFD_CLOEXEC)</code>—Creates a new <code>OwnedFd</code> …","<code>fcntl(fd, F_GETFD)</code>—Returns a file descriptor’s flags.","<code>fcntl(fd, F_SETFD, flags)</code>—Sets a file descriptor’s …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Extract an <code>Errno</code> value from a <code>std::io::Error</code>.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Construct an <code>Errno</code> from a raw OS error number.","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","<code>ioctl(fd, FIONBIO, &amp;value)</code>—Enables or disables …","<code>ioctl(fd, FIONREAD)</code>—Returns the number of bytes ready to …","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns a pair of booleans indicating whether the file …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Shorthand for <code>std::io::Error::from(self).kind()</code>.","Creates a new <code>IoSliceMut</code> wrapping a byte slice.","Creates a new <code>IoSlice</code> wrapping a byte slice.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","<code>pread(fd, buf, offset)</code>—Reads from a file at a given …","<code>pread(fd, buf, offset)</code>—Reads from a file at a given …","<code>preadv(fd, bufs, offset)</code>—Reads from a file at a given …","<code>preadv2(fd, bufs, offset, flags)</code>—Reads data, with …","<code>pwrite(fd, bufs)</code>—Writes to a file at a given position.","<code>pwritev(fd, bufs, offset)</code>—Writes to a file at a given …","<code>pwritev2(fd, bufs, offset, flags)</code>—Writes data, with …","Extract the raw OS error number from this error.","<code>read(fd, buf)</code>—Reads from a stream.","<code>read(fd, buf)</code>—Reads from a stream.","<code>readv(fd, bufs)</code>—Reads from a stream into multiple …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>f</code> until it either succeeds or fails other than …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>write(fd, buf)</code>—Writes to a stream.","<code>writev(fd, bufs)</code>—Writes to a stream from multiple …","Provides a bad opcode at compile time.","Trait for something that provides an <code>ioctl</code> opcode at …","The direction that an <code>ioctl</code> is going.","Implements the traditional “getter” pattern for <code>ioctl</code>s.","Does the <code>ioctl</code> mutate any data in the userspace?","A trait defining the properties of an <code>ioctl</code> command.","The type used by the <code>ioctl</code> to signify the output.","Implements an <code>ioctl</code> with no real arguments.","None of the above.","Provides a <code>None</code> code at compile time.","The opcode.","The opcode used by this <code>ioctl</code> command.","The opcode used by an <code>Ioctl</code>.","The type of the output data.","The type used by the <code>ioctl</code> to signify the command.","Read data from the kernel.","Provides a read code at compile time.","Read and write data to the kernel.","Provides a read/write code at compile time.","Implements the pattern for <code>ioctl</code>s where a pointer argument …","Implements an “updater” pattern for <code>ioctl</code>s.","Write data to the kernel.","Provides a write code at compile time.","Get a pointer to the data to be passed to the <code>ioctl</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new opcode from a direction, group, number, and …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform an <code>ioctl</code> call.","Create a new no-argument <code>ioctl</code> object.","Create a new getter-style <code>ioctl</code> object.","Create a new pointer setter-style <code>ioctl</code> object.","Create a new pointer updater-style <code>ioctl</code> object.","Create a new non-mutating opcode from a group, a number, …","Create a new old <code>Opcode</code> from a raw opcode.","Cast the output data to the correct type.","","","","","","","Get the raw opcode.","Create a new reading opcode from a group, a number and the …","Create a new reading and writing opcode from a group, a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new writing opcode from a group, a number and the …","<code>AF_APPLETALK</code>","<code>AF_ASH</code>","<code>AF_ATMPVC</code>","<code>AF_ATMSVC</code>","<code>AF_AX25</code>","","<code>AF_*</code> constants for use with <code>socket</code>, <code>socket_with</code>, and …","An iterator that drains messages from a <code>RecvAncillaryBuffer</code>…","An iterator over data in an ancillary buffer.","The size of an IPv4 address in bits.","The size of an IPv6 address in bits.","<code>AF_BLUETOOTH</code>","<code>AF_BRIDGE</code>","An IPv4 address representing the broadcast address: …","<code>AF_CAN</code>","<code>SOCK_CLOEXEC</code>","<code>MSG_CMSG_CLOEXEC</code>","<code>MSG_CONFIRM</code>","<code>AF_DECnet</code>","<code>SOCK_DGRAM</code>","<code>MSG_DONTROUTE</code>","<code>MSG_DONTWAIT</code>","<code>MSG_DONTWAIT</code>","<code>AF_ECONET</code>","<code>MSG_EOT</code>","<code>MSG_ERRQUEUE</code>","<code>AF_IEEE802154</code>","<code>AF_INET</code>","<code>AF_INET6</code>","<code>AF_IPX</code>","<code>AF_IRDA</code>","<code>AF_ISDN</code>","<code>AF_IUCV</code>","An IP address, either IPv4 or IPv6.","An IPv4 address.","An IPv6 address.","<code>AF_KEY</code>","<code>AF_LLC</code>","An IPv4 address with the address pointing to localhost: …","An IPv6 address representing localhost: <code>::1</code>.","<code>MSG_MORE</code>","<code>AF_NETBEUI</code>","<code>AF_NETLINK</code>","<code>AF_NETROM</code>","<code>SOCK_NONBLOCK</code>","<code>MSG_NOSIGNAL</code>","<code>MSG_OOB</code>","<code>MSG_OOB</code>","<code>AF_PACKET</code>","<code>MSG_PEEK</code>","<code>AF_PHONET</code>","<code>AF_PPPOX</code>","","<code>IPPROTO_*</code> and other constants for use with <code>socket</code>, …","<code>SOCK_RAW</code>","<code>SOCK_RDM</code>","<code>AF_RDS</code>","<code>AF_ROSE</code>","<code>AF_RXRPC</code>","A type for holding raw integer address families.","A type for holding raw integer protocols.","A type for holding raw integer socket types.","<code>SHUT_RD</code>—Disable further read operations.","<code>SHUT_RDWR</code>—Disable further read and write operations.","Buffer for receiving ancillary messages with <code>recvmsg</code>.","Ancillary message for <code>recvmsg</code>.","<code>MSG_*</code> flags for use with <code>recv</code>, <code>recvfrom</code>, and related …","The result of a successful <code>recvmsg</code> call.","<code>AF_SECURITY</code>","<code>SOCK_SEQPACKET</code>","<code>AF_SNA</code>","<code>SOCK_STREAM</code>","Send process credentials.","Received process credentials.","Send file descriptors.","Received file descriptors.","Buffer for sending ancillary messages with <code>sendmsg</code>, …","Ancillary message for <code>sendmsg</code>, <code>sendmsg_v4</code>, <code>sendmsg_v6</code>, …","<code>MSG_*</code> flags for use with <code>send</code>, [<code>send_to</code>], and related …","","<code>SHUT_*</code> constants for use with <code>shutdown</code>.","An internet socket address, either IPv4 or IPv6.","<code>struct sockaddr_storage</code> as a Rust enum.","<code>struct sockaddr_storage</code> as a raw struct.","<code>struct sockaddr_un</code>","An IPv4 socket address.","An IPv6 socket address.","","<code>SOCK_*</code> constants for use with <code>socket_with</code>, <code>accept_with</code> and …","","<code>SOCK_*</code> constants for use with <code>socket</code>.","<code>AF_TIPC</code>","<code>MSG_TRUNC</code>","UNIX credentials of socket peer, for use with …","<code>AF_UNIX</code>, aka <code>AF_LOCAL</code>","<code>AF_UNSPEC</code>","An IPv4 address representing an unspecified address: …","An IPv6 address representing the unspecified address: <code>::</code>","<code>struct sockaddr_un</code>","<code>struct sockaddr_in</code>","An IPv4 address.","An IPv4 socket address.","<code>struct sockaddr_in6</code>","An IPv6 address.","An IPv6 socket address.","<code>MSG_WAITALL</code>","<code>AF_WANPIPE</code>","<code>SHUT_WR</code>—Disable further write operations.","<code>AF_X25</code>","<code>AF_XDP</code>","<code>struct sockaddr_xdp</code>","","For an abstract address, return the identifier.","<code>accept(fd, NULL, NULL)</code>—Accepts an incoming connection.","<code>accept4(fd, NULL, NULL, flags)</code>—Accepts an incoming …","<code>accept(fd, &amp;addr, &amp;len)</code>—Accepts an incoming connection …","<code>accept4(fd, &amp;addr, &amp;len, flags)</code>—Accepts an incoming …","The address of the socket we received from, if any.","Return the address family of this socket address.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Returns the raw integer for this <code>SocketType</code>.","Returns the raw integer for this <code>AddressFamily</code>.","Returns the raw integer for this <code>Protocol</code>.","","","","","<code>bind(sockfd, addr)</code>—Binds a socket to an IP address.","<code>bind(sockfd, addr)</code>—Binds a socket to an address.","<code>bind(sockfd, addr, sizeof(struct sockaddr_un))</code>—Binds a …","<code>bind(sockfd, addr, sizeof(struct sockaddr_in))</code>—Binds a …","<code>bind(sockfd, addr, sizeof(struct sockaddr_in6))</code>—Binds a …","<code>bind(sockfd, addr, sizeof(struct sockaddr_un))</code>—Binds a …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of bytes received.","Delete all messages from the buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Macro for defining the amount of space to allocate in a …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","<code>connect(sockfd, addr)</code>—Initiates a connection to an IP …","<code>connect(sockfd, addr)</code>—Initiates a connection.","<code>connect(sockfd, addr, sizeof(struct sockaddr_un))</code>…","…","<code>connect(sockfd, addr, sizeof(struct sockaddr_in))</code>…","<code>connect(sockfd, addr, sizeof(struct sockaddr_in6))</code>…","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Drain all messages from the buffer.","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","<code>ETH_P_*</code> constants.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The flags received.","Returns the flow information associated with this address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Copies this address to a new <code>IpAddr::V4</code>.","Creates an <code>IpAddr::V6</code> from an eight element 16-bit array.","Creates an <code>IpAddr::V6</code> from a sixteen element byte array.","Copies this address to a new <code>IpAddr::V6</code>.","Returns the argument unchanged.","Creates an <code>IpAddr::V4</code> from a four element byte array.","Uses <code>Ipv4Addr::from_bits</code> to convert a host byte order <code>u32</code> …","Returns the argument unchanged.","Creates an <code>Ipv4Addr</code> from a four element byte array.","Returns the argument unchanged.","Uses <code>Ipv6Addr::from_bits</code> to convert a host byte order <code>u128</code> …","Creates an <code>Ipv6Addr</code> from an eight element 16-bit array.","Creates an <code>Ipv6Addr</code> from a sixteen element byte array.","Returns the argument unchanged.","Converts a tuple struct (Into&lt;<code>IpAddr</code>&gt;, <code>u16</code>) into a …","Converts a <code>SocketAddrV4</code> into a <code>SocketAddr::V4</code>.","Converts a <code>SocketAddrV6</code> into a <code>SocketAddr::V6</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Converts a native byte order <code>u32</code> into an IPv4 address.","Converts a native byte order <code>u128</code> into an IPv6 address.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Constructs a <code>SocketType</code> from a raw integer.","Constructs a <code>AddressFamily</code> from a raw integer.","Constructs a <code>Protocol</code> from a raw integer.","","","","","","","<code>getpeername(fd, addr, len)</code>—Returns the address a socket …","<code>getsockname(fd, addr, len)</code>—Returns the address a socket …","Group ID of peer","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns the IP address associated with this socket address.","Returns the IP address associated with this socket address.","Returns the IP address associated with this socket address.","<code>IPPROTO_*</code> constants.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if this address is in a range designated for …","Returns <code>true</code> if this address part of the <code>198.18.0.0/15</code> …","Returns <code>true</code> if this is an address reserved for …","Returns <code>true</code> if this is a broadcast address (…","Returns <code>true</code> if this address is in a range designated for …","Returns <code>true</code> if this address is in a range designated for …","Returns <code>true</code> if this is an address reserved for …","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns <code>true</code> if the address appears to be globally …","Returns <code>true</code> if the address appears to be globally …","Returns <code>true</code> if the address appears to be globally …","Returns <code>true</code> if this address is an <code>IPv4</code> address, and <code>false</code> …","Returns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …","Returns <code>true</code> if the address is an IPv4-mapped address (…","Returns <code>true</code> if this address is an <code>IPv6</code> address, and <code>false</code> …","Returns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …","Returns <code>true</code> if the address is link-local (<code>169.254.0.0/16</code>).","Returns <code>true</code> if this is a loopback address.","Returns <code>true</code> if this is a loopback address (<code>127.0.0.0/8</code>).","Returns <code>true</code> if this is the loopback address (<code>::1</code>), as …","Returns <code>true</code> if this is a multicast address.","Returns <code>true</code> if this is a multicast address (<code>224.0.0.0/4</code>).","Returns <code>true</code> if this is a multicast address (<code>ff00::/8</code>).","Returns <code>true</code> if this is a private address.","Returns <code>true</code> if this address is reserved by IANA for …","Returns <code>true</code> if this address is part of the Shared Address …","Returns <code>true</code> if this is a unicast address, as defined by …","Returns <code>true</code> if the address is a globally routable unicast …","Returns <code>true</code> if the address is a unicast address with …","Returns <code>true</code> if this is a unique local address (<code>fc00::/7</code>).","Returns <code>true</code> for the special ‘unspecified’ address.","Returns <code>true</code> for the special ‘unspecified’ address (…","Returns <code>true</code> for the special ‘unspecified’ address (<code>::</code>…","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","<code>listen(fd, backlog)</code>—Enables listening for incoming …","Returns the address’s multicast scope if the address is …","Low-level Linux network device access","<code>NETLINK_*</code> constants.","Create a new, empty <code>SendAncillaryBuffer</code> from a raw byte …","Construct a new Unix-domain address from a filesystem path.","Create a new, empty <code>RecvAncillaryBuffer</code> from a raw byte …","Creates a new IPv4 address from four eight-bit octets.","Creates a new IPv6 address from eight 16-bit segments.","Creates a new socket address from an IP address and a port …","Creates a new socket address from an <code>IPv4</code> address and a …","Creates a new socket address from an <code>IPv6</code> address, a …","Construct a new abstract Unix-domain address from a byte …","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","Returns the four eight-bit integers that make up this …","Returns the sixteen eight-bit integers the IPv6 address …","Create an iterator for control messages that were received …","Parse an IP address from a slice of bytes.","Parse an IPv4 address from a slice of bytes.","Parse an IPv6 address from a slice of bytes.","Parse a socket address from a slice of bytes.","Parse an IPv4 socket address from a slice of bytes.","Parse an IPv6 socket address from a slice of bytes.","","","","","","","","","","","","","For a filesystem path address, return the path.","Process ID of peer","Returns the port number associated with this socket …","Returns the port number associated with this socket …","Returns the port number associated with this socket …","Add an ancillary message to the buffer.","Reads a platform-specific encoding of a socket address from","<code>recv(fd, buf, flags)</code>—Reads data from a socket.","<code>recv(fd, buf, flags)</code>—Reads data from a socket.","<code>recvfrom(fd, buf, flags, addr, len)</code>—Reads data from a …","<code>recvfrom(fd, buf, flags, addr, len)</code>—Reads data from a …","<code>recvmsg(msghdr)</code>—Receives a message from a socket.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Returns the scope ID associated with this address.","Returns the eight 16-bit segments that make up this …","<code>send(fd, buf, flags)</code>—Writes data to a socket.","<code>sendmsg(msghdr)</code>—Sends a message on a socket.","<code>sendmsg(msghdr)</code>—Sends a message on a socket to a …","<code>sendmsg(msghdr)</code>—Sends a message on a socket to a …","<code>sendmsg(msghdr)</code>—Sends a message on a socket to a …","<code>sendmsg(msghdr)</code>—Sends a message on a socket to a …","<code>sendmsg(msghdr)</code>—Sends a message on a socket to a …","<code>sendto(fd, buf, flags, addr)</code>—Writes data to a socket to …","<code>sendto(fd, buf, flags, addr)</code>—Writes data to a socket to …","<code>sendto(fd, buf, flags, addr, sizeof(struct sockaddr_un))</code>…","<code>sendto(fd, buf, flags, addr, sizeof(struct sockaddr_in))</code>…","<code>sendto(fd, buf, flags, addr, sizeof(struct sockaddr_in6))</code>…","<code>sendto(fd, buf, flags, addr, sizeof(struct sockaddr_xdp))</code>…","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Changes the flow information associated with this socket …","Changes the IP address associated with this socket address.","Changes the IP address associated with this socket address.","Changes the IP address associated with this socket address.","Changes the port number associated with this socket …","Changes the port number associated with this socket …","Changes the port number associated with this socket …","Changes the scope ID associated with this socket address.","<code>shutdown(fd, how)</code>—Closes the read and/or write sides of …","Get the maximum size of an ancillary message.","","","<code>socket(domain, type_, protocol)</code>—Creates a socket.","<code>socket_with(domain, type_ | flags, protocol)</code>—Creates a …","<code>socketpair(domain, type_ | accept_flags, protocol)</code>…","<code>getsockopt</code> and <code>setsockopt</code> functions.","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","<code>SYSPROTO_*</code> constants.","Converts an IPv4 address into a <code>u32</code> representation using …","Converts an IPv6 address into a <code>u128</code> representation using …","Converts this address to an <code>IpAddr::V4</code> if it is an …","Converts this address to an <code>IpAddr::V4</code> if it is an …","Converts this address to an <code>IPv4</code> address if it is either …","Converts this address to an <code>IPv4</code> address if it’s an …","Converts this address to an IPv4-compatible <code>IPv6</code> address.","Converts this address to an IPv4-mapped <code>IPv6</code> address.","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","User ID of peer","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Writes a platform-specific encoding of this socket address …","<code>AF_XDP</code> related types and constants.","<code>ETH_P_AARP</code>","<code>ETH_P_AF_IUCV</code>","<code>ETH_P_ALL</code>","<code>ETH_P_AOE</code>","<code>ETH_P_ARCNET</code>","<code>ETH_P_ARP</code>","<code>ETH_P_ATALK</code>","<code>ETH_P_ATMFATE</code>","<code>ETH_P_ATMMPOA</code>","<code>ETH_P_AX25</code>","<code>ETH_P_BATMAN</code>","<code>ETH_P_BPQ</code>","<code>ETH_P_CAIF</code>","<code>ETH_P_CAN</code>","<code>ETH_P_CANFD</code>","<code>ETH_P_CANXL</code>","<code>ETH_P_CFM</code>","<code>ETH_P_CONTROL</code>","<code>ETH_P_CUST</code>","<code>ETH_P_DDCMP</code>","<code>ETH_P_DEC</code>","<code>ETH_P_DIAG</code>","<code>ETH_P_DNA_DL</code>","<code>ETH_P_DNA_RC</code>","<code>ETH_P_DNA_RT</code>","<code>ETH_P_DSA</code>","<code>ETH_P_DSA_8021Q</code>","<code>ETH_P_DSA_A5PSW</code>","<code>ETH_P_ECONET</code>","<code>ETH_P_EDSA</code>","<code>ETH_P_ERSPAN</code>","<code>ETH_P_ERSPAN2</code>","<code>ETH_P_ETHERCAT</code>","<code>ETH_P_FCOE</code>","<code>ETH_P_FIP</code>","<code>ETH_P_HDLC</code>","<code>ETH_P_HSR</code>","<code>ETH_P_IBOE</code>","<code>ETH_P_IEEE802154</code>","<code>ETH_P_IEEEPUP</code>","<code>ETH_P_IEEEPUPAT</code>","<code>ETH_P_IFE</code>","<code>ETH_P_IP</code>","<code>ETH_P_IPV6</code>","<code>ETH_P_IPX</code>","<code>ETH_P_IRDA</code>","<code>ETH_P_LAT</code>","<code>ETH_P_LINK_CTL</code>","<code>ETH_P_LLDP</code>","<code>ETH_P_LOCALTALK</code>","<code>ETH_P_LOOP</code>","<code>ETH_P_LOOPBACK</code>","<code>ETH_P_MACSEC</code>","<code>ETH_P_MAP</code>","<code>ETH_P_MCTP</code>","<code>ETH_P_MOBITEX</code>","<code>ETH_P_MPLS_MC</code>","<code>ETH_P_MPLS_UC</code>","<code>ETH_P_MRP</code>","<code>ETH_P_MVRP</code>","<code>ETH_P_NCSI</code>","<code>ETH_P_NSH</code>","<code>ETH_P_PAE</code>","<code>ETH_P_PAUSE</code>","<code>ETH_P_PHONET</code>","<code>ETH_P_PPPTALK</code>","<code>ETH_P_PPP_DISC</code>","<code>ETH_P_PPP_MP</code>","<code>ETH_P_PPP_SES</code>","<code>ETH_P_PREAUTH</code>","<code>ETH_P_PROFINET</code>","<code>ETH_P_PRP</code>","<code>ETH_P_PUP</code>","<code>ETH_P_PUPAT</code>","<code>ETH_P_1588</code>","<code>ETH_P_8021AD</code>","<code>ETH_P_8021AH</code>","<code>ETH_P_8021Q</code>","<code>ETH_P_80221</code>","<code>ETH_P_802_2</code>","<code>ETH_P_802_3</code>","<code>ETH_P_802_3_MIN</code>","<code>ETH_P_802_EX1</code>","<code>ETH_P_QINQ1</code>","<code>ETH_P_QINQ2</code>","<code>ETH_P_QINQ3</code>","<code>ETH_P_RARP</code>","<code>ETH_P_REALTEK</code>","<code>ETH_P_SCA</code>","<code>ETH_P_SLOW</code>","<code>ETH_P_SNAP</code>","<code>ETH_P_TDLS</code>","<code>ETH_P_TEB</code>","<code>ETH_P_TIPC</code>","<code>ETH_P_TRAILER</code>","<code>ETH_P_TR_802_2</code>","<code>ETH_P_TSN</code>","<code>ETH_P_WAN_PPP</code>","<code>ETH_P_WCCP</code>","<code>ETH_P_X25</code>","<code>ETH_P_XDSA</code>","<code>IPPROTO_AH</code>","<code>IPPROTO_BEETPH</code>","<code>IPPROTO_COMP</code>","<code>IPPROTO_DCCP</code>","<code>IPPROTO_EGP</code>","<code>IPPROTO_ENCAP</code>","<code>IPPROTO_ESP</code>","<code>IPPROTO_ETHERNET</code>","<code>IPPROTO_FRAGMENT</code>","<code>IPPROTO_GRE</code>","<code>IPPROTO_ICMP</code>","<code>IPPROTO_ICMPV6</code>","<code>IPPROTO_IDP</code>","<code>IPPROTO_IGMP</code>","<code>IPPROTO_IPIP</code>","<code>IPPROTO_IPV6</code>","<code>IPPROTO_MH</code>","<code>IPPROTO_MPLS</code>","<code>IPPROTO_MPTCP</code>","<code>IPPROTO_MTP</code>","<code>IPPROTO_PIM</code>","<code>IPPROTO_PUP</code>","<code>IPPROTO_RAW</code>","<code>IPPROTO_ROUTING</code>","<code>IPPROTO_RSVP</code>","<code>IPPROTO_SCTP</code>","<code>IPPROTO_TCP</code>","<code>IPPROTO_TP</code>","<code>IPPROTO_UDP</code>","<code>IPPROTO_UDPLITE</code>","<code>ioctl(fd, SIOCGIFNAME, ifreq)</code>—Returns the interface name …","<code>ioctl(fd, SIOCGIFINDEX, ifreq)</code>—Returns the interface …","<code>NETLINK_ADD_MEMBERSHIP</code>","<code>NETLINK_AUDIT</code>","<code>NETLINK_BROADCAST_ERROR</code>","<code>NETLINK_CAP_ACK</code>","<code>NETLINK_CONNECTOR</code>","<code>NETLINK_CRYPTO</code>","<code>NETLINK_DNRTMSG</code>","<code>NETLINK_DROP_MEMBERSHIP</code>","<code>NETLINK_ECRYPTFS</code>","<code>NETLINK_EXT_ACK</code>","<code>NETLINK_FIB_LOOKUP</code>","<code>NETLINK_FIREWALL</code>","<code>NETLINK_GENERIC</code>","<code>NETLINK_GET_STRICT_CHK</code>","<code>NETLINK_INET_DIAG</code>","<code>NETLINK_IP6_FW</code>","<code>NETLINK_ISCSI</code>","<code>NETLINK_KOBJECT_UEVENT</code>","<code>NETLINK_LISTEN_ALL_NSID</code>","<code>NETLINK_LIST_MEMBERSHIPS</code>","<code>NETLINK_NETFILTER</code>","<code>NETLINK_NFLOG</code>","<code>NETLINK_NO_ENOBUFS</code>","<code>NETLINK_PKTINFO</code>","<code>NETLINK_RDMA</code>","<code>NETLINK_RX_RING</code>","<code>NETLINK_SCSITRANSPORT</code>","<code>NETLINK_SELINUX</code>","<code>NETLINK_SOCK_DIAG</code>","<code>NETLINK_TX_RING</code>","<code>NETLINK_UNUSED</code>","<code>NETLINK_USERSOCK</code>","<code>NETLINK_XFRM</code>","<code>SO_RCVTIMEO</code>—Timeout for receiving.","<code>SO_SNDTIMEO</code>—Timeout for sending.","Timeout identifier for use with <code>set_socket_timeout</code> and …","","","","","","","Returns the argument unchanged.","<code>getsockopt(fd, IPPROTO_IP, IP_FREEBIND)</code>","<code>getsockopt(fd, IPPROTO_IP, IP_MULTICAST_LOOP)</code>","<code>getsockopt(fd, IPPROTO_IP, IP_MULTICAST_TTL)</code>","<code>getsockopt(fd, IPPROTO_IP, SO_ORIGINAL_DST)</code>","<code>getsockopt(fd, IPPROTO_IP, IP_RECVTOS)</code>","<code>getsockopt(fd, IPPROTO_IP, IP_TOS)</code>","<code>getsockopt(fd, IPPROTO_IP, IP_TTL)</code>","<code>getsockopt(fd, IPPROTO_IPV6, IPV6_FREEBIND)</code>","<code>getsockopt(fd, IPPROTO_IPV6, IPV6_MULTICAST_HOPS)</code>","<code>getsockopt(fd, IPPROTO_IPV6, IPV6_MULTICAST_LOOP)</code>","<code>getsockopt(fd, IPPROTO_IPV6, IP6T_SO_ORIGINAL_DST)</code>","<code>getsockopt(fd, IPPROTO_IPV6, IPV6_RECVTCLASS)</code>","<code>getsockopt(fd, IPPROTO_IPV6, IPV6_TCLASS)</code>","<code>getsockopt(fd, IPPROTO_IPV6, IPV6_UNICAST_HOPS)</code>","<code>getsockopt(fd, IPPROTO_IPV6, IPV6_V6ONLY)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_ACCEPTCONN)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_BROADCAST)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_COOKIE)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_DOMAIN)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_ERROR)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_INCOMING_CPU)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_KEEPALIVE)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_LINGER)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_OOBINLINE)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_PASSCRED)</code>","Get credentials of Unix domain socket peer process","<code>getsockopt(fd, SOL_SOCKET, SO_PROTOCOL)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_RCVBUF)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_REUSEADDR)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_REUSEPORT)</code>","<code>getsockopt(fd, SOL_SOCKET, SO_SNDBUF)</code>","<code>getsockopt(fd, SOL_SOCKET, id)</code>—Get the sending or …","<code>getsockopt(fd, SOL_SOCKET, SO_TYPE)</code>—Returns the type of …","<code>getsockopt(fd, IPPROTO_TCP, TCP_CONGESTION)</code>","<code>getsockopt(fd, IPPROTO_TCP, TCP_CORK)</code>","<code>getsockopt(fd, IPPROTO_TCP, TCP_KEEPCNT)</code>","<code>getsockopt(fd, IPPROTO_TCP, TCP_KEEPIDLE)</code>","<code>getsockopt(fd, IPPROTO_TCP, TCP_KEEPINTVL)</code>","<code>getsockopt(fd, IPPROTO_TCP, TCP_NODELAY)</code>","<code>getsockopt(fd, IPPROTO_TCP, TCP_QUICKACK)</code>","<code>getsockopt(fd, IPPROTO_TCP, TCP_THIN_LINEAR_TIMEOUTS)</code>","<code>getsockopt(fd, IPPROTO_TCP, TCP_USER_TIMEOUT)</code>","<code>getsockopt(fd, SOL_XDP, XDP_MMAP_OFFSETS)</code>","<code>getsockopt(fd, SOL_XDP, XDP_OPTIONS)</code>","<code>getsockopt(fd, SOL_XDP, XDP_STATISTICS)</code>","","Calls <code>U::from(self)</code>.","…","…","<code>setsockopt(fd, IPPROTO_IP, IP_ADD_SOURCE_MEMBERSHIP, value)</code>","…","…","…","<code>setsockopt(fd, IPPROTO_IP, IP_FREEBIND, value)</code>","<code>setsockopt(fd, IPPROTO_IP, IP_MULTICAST_LOOP, value)</code>","<code>setsockopt(fd, IPPROTO_IP, IP_MULTICAST_TTL, value)</code>","<code>setsockopt(fd, IPPROTO_IP, IP_RECVTOS, value)</code>","<code>setsockopt(fd, IPPROTO_IP, IP_TOS, value)</code>","<code>setsockopt(fd, IPPROTO_IP, IP_TTL, value)</code>","…","…","<code>setsockopt(fd, IPPROTO_IPV6, IPV6_FREEBIND, value)</code>","<code>setsockopt(fd, IPPROTO_IPV6, IPV6_MULTICAST_HOPS, value)</code>","<code>setsockopt(fd, IPPROTO_IPV6, IPV6_MULTICAST_LOOP, value)</code>","<code>setsockopt(fd, IPPROTO_IPV6, IPV6_RECVTCLASS, value)</code>","<code>setsockopt(fd, IPPROTO_IPV6, IPV6_TCLASS, value)</code>","<code>setsockopt(fd, IPPROTO_IPV6, IPV6_UNICAST_HOPS, value)</code>","<code>setsockopt(fd, IPPROTO_IPV6, IPV6_V6ONLY, value)</code>","<code>setsockopt(fd, SOL_SOCKET, SO_BROADCAST, value)</code>","<code>setsockopt(fd, SOL_SOCKET, SO_INCOMING_CPU, value)</code>","<code>setsockopt(fd, SOL_SOCKET, SO_KEEPALIVE, value)</code>","<code>setsockopt(fd, SOL_SOCKET, SO_LINGER, value)</code>","<code>setsockopt(fd, SOL_SOCKET, SO_OOBINLINE, value)</code>","<code>setsockopt(fd, SOL_SOCKET, SO_PASSCRED, value)</code>","<code>setsockopt(fd, SOL_SOCKET, SO_RCVBUF, value)</code>","<code>setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, value)</code>—Set …","<code>setsockopt(fd, SOL_SOCKET, SO_REUSEPORT, value)</code>","<code>setsockopt(fd, SOL_SOCKET, SO_SNDBUF, value)</code>","<code>setsockopt(fd, SOL_SOCKET, id, value)</code>—Set the sending or …","<code>setsockopt(fd, IPPROTO_TCP, TCP_CONGESTION, value)</code>","<code>setsockopt(fd, IPPROTO_TCP, TCP_CORK, value)</code>","<code>setsockopt(fd, IPPROTO_TCP, TCP_KEEPCNT, value)</code>","<code>setsockopt(fd, IPPROTO_TCP, TCP_KEEPIDLE, value)</code>","<code>setsockopt(fd, IPPROTO_TCP, TCP_KEEPINTVL, value)</code>","<code>setsockopt(fd, IPPROTO_TCP, TCP_NODELAY, value)</code>","<code>setsockopt(fd, IPPROTO_TCP, TCP_QUICKACK, value)</code>","…","<code>setsockopt(fd, IPPROTO_TCP, TCP_USER_TIMEOUT, value)</code>","<code>setsockopt(fd, SOL_XDP, XDP_RX_RING, value)</code>","<code>setsockopt(fd, SOL_XDP, XDP_TX_RING, value)</code>","<code>setsockopt(fd, SOL_XDP, XDP_UMEM_COMPLETION_RING, value)</code>","<code>setsockopt(fd, SOL_XDP, XDP_UMEM_FILL_RING, value)</code>","<code>setsockopt(fd, SOL_XDP, XDP_UMEM_REG, value)</code>","","","","","<code>XDP_*</code> constants for use in [<code>SockaddrXdp</code>].","A XDP socket address.","<code>XDP_COPY</code>","<code>XDP_OPTIONS_ZEROCOPY</code>","Offset for mmapping rx ring.","Offset for mmapping tx ring.","<code>XDP_PKT_CONTD</code>","<code>XDP_RING_NEED_WAKEUP</code>","<code>XDP_SHARED_UMEM</code>","Offset for mmapping completion ring.","Offset for mmapping fill ring.","<code>XDP_UMEM_UNALIGNED_CHUNK_FLAG</code>","<code>XDP_USE_NEED_WAKEUP</code>","<code>XDP_USE_SG</code>","<code>XDP_COPY</code>","Mask used to binary <code>and</code> the <code>XdpDesc</code> addr to extract the …","Offset used to shift the <code>XdpDesc</code> addr to the right to …","XDP rx/tx frame descriptor.","<code>XDP_*</code> constants for use in <code>XdpDesc</code>.","XDP mmap offsets.","XDP options.","<code>XDP_OPTIONS_*</code> constants returned by <code>get_xdp_options</code>.","<code>XDP_RING_*</code> constants for use in fill and/or Tx ring.","XDP ring offset.","XDP statistics.","XDP umem registration.","<code>XDP_UMEM_*</code> constants for use in <code>XdpUmemReg</code>.","Start address of UMEM.","Offset from the start of the UMEM.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","Chunk size in bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Consumer offset.","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Completion ring offsets.","Descriptors offset.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Return flags.","Flags offset.","Flags.","Flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fill ring offsets.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","Headroom in bytes.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Return interface index.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Umem length in bytes.","Length of packet in bytes.","Construct a new XDP address.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Options.","","","Producer offset.","Return queue ID.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Rx ring offsets.","Rx dropped.","Rx fill ring empty descriptors.","Rx invalid descriptors.","Rx ring full.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Set flags.","Set interface index.","Set queue ID.","Set shared UMEM file descriptor.","Return shared UMEM file descriptor.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","Tx ring offsets.","Tx invalid descriptors.","Tx ring empty descriptors.","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","A trait for passing path arguments.","Returns a view of this string as a maybe-owned <code>CStr</code>.","Returns a view of this string as a string slice.","Consumes <code>self</code> and returns a view of this string as a …","Runs a closure with <code>self</code> passed in as a <code>&amp;CStr</code>.","Runs a closure on <code>arg</code> where <code>A</code> is mapped to a <code>&amp;CStr</code>","Returns a potentially-lossy rendering of this string as a …","Async recoverable exception mode.","<code>SIGABRT</code>, aka <code>SIGIOT</code>","<code>SIGALRM</code>","Wait on all processes.","Disable <code>ptrace</code> restrictions for the calling process.","Set the address below which the program command line is …","Set the address above which the program command line is …","<code>RLIMIT_AS</code>","Big endian mode.","Set the current <code>brk</code> value.","Set the address above which the program heap can be …","<code>SIGBUS</code>","Return if a stopped child has been resumed by delivery of […","Return if a stopped child has been resumed by delivery of […","<code>SIGCHLD</code>","Set the address below which the program text can run.","Set the address above which the program text can run.","<code>SIGCONT</code>","<code>RLIMIT_CORE</code>","<code>RLIMIT_CPU</code>","<code>CpuSet</code> represents a bit-mask of CPUs.","A Linux CPU ID.","The speculation feature is disabled, mitigation is enabled.","The speculation feature is disabled, mitigation is enabled.","The speculation feature is disabled, mitigation is …","The speculation feature is disabled, mitigation is …","Floating point divide by zero.","<code>RLIMIT_DATA</code>","Set the address below which initialized and uninitialized …","Set the address above which initialized and uninitialized …","System-wide default policy.","Dumpable.","<code>SUID_DUMP_*</code> values for use with <code>dumpable_behavior</code> and …","Dumpable but only readable by root.","The speculation feature is enabled, mitigation is disabled.","The speculation feature is enabled, mitigation is disabled.","Wait for processed that have exited.","<code>EXIT_FAILURE</code> for use with <code>exit</code>.","The exit status used by a process terminated with a …","<code>EXIT_SUCCESS</code> for use with <code>exit</code>.","Early kill policy.","<code>PR_ENDIAN_*</code> values for use with <code>endian_mode</code>.","Set the address below which the program environment is …","Set the address above which the program environment is …","The speculation feature is disabled, mitigation is …","The speculation feature is disabled, mitigation is …","Enable emulation of 32-bit floating-point mode.","<code>PR_FPEMU_*</code> flags for use with …","Zero means floating point exceptions are disabled.","<code>PR_FP_MODE_*</code> values for use with <code>floating_point_mode</code> and …","64-bit floating point registers.","Flush L1D Cache on context switch out of the task.","Raw file descriptor in another process.","<code>SIGFPE</code>","<code>RLIMIT_FSIZE</code>","<code>MEMBARRIER_CMD_GLOBAL</code> (also known as <code>MEMBARRIER_CMD_SHARED</code>)","<code>MEMBARRIER_CMD_GLOBAL_EXPEDITED</code>","<code>gid_t</code>—A Unix group ID.","<code>MEMBARRIER_CMD_GLOBAL</code>","<code>MEMBARRIER_CMD_GLOBAL_EXPEDITED</code>","<code>SIGHUP</code>","A <code>Pid</code> corresponding to the init process (pid 1).","Floating point invalid operation.","<code>SIGILL</code>","Set the state of the indirect branch speculation …","<code>SIGINT</code>","<code>SIGIO</code>, aka <code>SIGPOLL</code>","<code>SIGKILL</code>","Late kill policy.","True little endian mode.","<code>RLIMIT_LOCKS</code>","The maximum number of CPU in <code>CpuSet</code>.","<code>PR_MCE_KILL_*</code> values for use with …","A command for use with <code>membarrier</code> and <code>membarrier_cpu</code>.","A result from <code>membarrier_query</code>.","<code>RLIMIT_MEMLOCK</code>","<code>RLIMIT_MSGQUEUE</code>","Return immediately if no child has exited.","Return immediately if no child has exited.","<code>PIDFD_NONBLOCK</code>.","Async non-recoverable exception mode.","Keep processed in a waitable state.","Silently fix up unaligned user accesses.","Silently emulate floating point operations accesses.","<code>RLIMIT_NICE</code>","<code>RLIMIT_NOFILE</code>","None.","Not dumpable.","<code>RLIMIT_NPROC</code>","Floating point overflow.","Mitigation can be controlled per thread by …","Precise exception mode.","<code>MEMBARRIER_CMD_PRIVATE_EXPEDITED</code>","<code>MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ</code> (since Linux 5.10)","<code>MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE</code>","Process ptracer.","Wait for a specific process group ID, or the calling …","<code>pid_t</code>—A non-zero Unix process ID.","Wait for a specific process ID.","Wait for a specific process file descriptor.","<code>PIDFD_*</code> flags for use with <code>pidfd_open</code>.","All flags are reserved for future use.","<code>SIGPIPE</code>","<code>SIGPWR</code>","<code>PowerPC</code> pseudo little endian.","This structure provides new memory descriptor map which …","<code>MEMBARRIER_CMD_PRIVATE_EXPEDITED</code>","<code>MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ</code> (since Linux 5.10)","<code>MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE</code>","Specific process.","<code>SIGPROF</code>","<code>SIGQUIT</code>","<code>MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED</code>","<code>MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED</code>","<code>MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ</code> (since …","<code>MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE</code>","Floating point inexact result.","Throw a <code>Signal::Segv</code> signal instead of reading the TSC.","The raw integer value of a Unix group ID. A group …","The raw integer value of a Unix process ID. A process …","The raw integer value of a Unix user ID. A user identifier …","Allow the use of the timestamp counter.","<code>MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED</code>","<code>MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED</code>","<code>MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ</code> (since …","<code>MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE</code>","A resource value for use with <code>getrlimit</code>, <code>setrlimit</code>, and …","<code>struct rlimit</code>—Current and maximum values used in …","<code>RLIMIT_RSS</code>","<code>RLIMIT_RTPRIO</code>","<code>RLIMIT_RTTIME</code>","Generate a <code>Signal::Bus</code> signal on unaligned user access.","Don’t emulate floating point operations, send a …","Wait for processes that have been stopped.","Use FPEXC for floating point exception enables.","<code>SIGSEGV</code>","A signal number for use with <code>kill_process</code>, …","<code>RLIMIT_SIGPENDING</code>","<code>PR_SPEC_*</code> values for use with <code>speculative_feature_state</code> and","<code>PR_SPEC_*</code> flags for use with <code>control_speculative_feature</code>.","Zero means the processors are not vulnerable.","Set the state of the speculative store bypass misfeature.","<code>RLIMIT_STACK</code>","Set the start address of the stack.","Normal, traditional, statistical process timing.","<code>SIGSTKFLT</code>","<code>SIGSTOP</code>","<code>SIGSYS</code>, aka <code>SIGUNUSED</code>","<code>SIGTERM</code>","Accurate timestamp based process timing.","<code>PR_TSC_*</code> values for use with <code>time_stamp_counter_readability</code>…","<code>PR_TIMING_*</code> values for use with <code>timing_method</code> and …","<code>SIGTRAP</code>","<code>SIGTSTP</code>","<code>SIGTTIN</code>","<code>SIGTTOU</code>","Floating point underflow.","Return if a child has stopped (but not traced via <code>ptrace</code>)","<code>uid_t</code>—A Unix user ID.","<code>PR_UNALIGN_*</code> flags for use with <code>unaligned_access_control</code> …","<code>SIGURG</code>","<code>SIGUSR1</code>","<code>SIGUSR2</code>","<code>PR_SET_MM_*</code> values for use with …","<code>SIGVTALRM</code>","The identifier to wait on in a call to <code>waitid</code>.","Options for modifying the behavior of <code>wait</code>/<code>waitpid</code>.","The status of a child process after calling <code>wait</code>/<code>waitpid</code>.","Options for modifying the behavior of <code>waitid</code>.","The status of a process after calling <code>waitid</code>.","<code>SIGWINCH</code>","<code>SIGXCPU</code>","<code>SIGXFSZ</code>","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Program command line end address.","Program command line start address.","Converts a <code>Cpuid</code> into a <code>RawCpuid</code>.","Converts a <code>WaitStatus</code> into its raw representation as an …","Returns a reference to the raw platform-specific <code>siginfo_t</code> …","Converts an <code>Option&lt;Pid&gt;</code> into a <code>RawPid</code>.","Converts a <code>Pid</code> into a <code>NonZeroI32</code>.","Auxiliary vector start address.","Auxiliary vector size.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>brk</code> current address.","<code>chdir(path)</code>—Change the current working directory.","Get the <code>child subreaper</code> setting of the calling process.","<code>chroot(path)</code>—Change the process root directory.","Zeroes the <code>CpuSet</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Put the process in the <code>IO_FLUSHER</code> state, allowing it to …","Enable or disable all performance counters attached to the …","Set enabled pointer authentication keys.","Provides one-shot access to all the addresses by passing …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Test whether this query result contains the given command.","Returns whether the process has continued from a job …","Returns whether the process has continued from a job …","Sets the state of the speculation misfeature.","Count the number of CPUs set in the <code>CpuSet</code>.","Current effective, “soft”, limit.","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get the current state of the calling process’ <code>dumpable</code> …","Returns whether the process was terminated by a signal and …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get enabled pointer authentication keys.","Code section end address.","Data section end address.","Get the endianness of the calling process.","Program environment end address.","Program environment start address.","","","","","","","","","","","","","","","","","","","","","","","","","","","File descriptor of executable file that was used to create …","Returns the exit status number returned by the process, if …","Returns the exit status number returned by the process, if …","Returns whether the process has exited normally.","Returns whether the process has exited normally.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","<code>fchdir(fd)</code>—Change the current working directory.","Get floating point emulation control bits.","Get floating point exception mode.","Get the current floating point mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Creates a <code>Pid</code> holding the ID of the given child process.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Converts a <code>RawCpuid</code> into a <code>Cpuid</code>.","Converts a <code>RawPid</code> into a <code>Pid</code>.","Convert a raw signal number into a <code>Signal</code>, if possible.","Converts a known positive <code>RawPid</code> into a <code>Pid</code>.","<code>getCWD</code>—Return the current working directory.","<code>getegid()</code>—Returns the process’ effective group ID.","<code>geteuid()</code>—Returns the process’ effective user ID.","<code>getgid()</code>—Returns the process’ real group ID.","<code>getgroups()</code>—Return a list of the current user’s groups.","<code>getpgid(pid)</code>—Returns the process group ID of the given …","<code>getpgrp()</code>—Returns the process’ group ID.","<code>getpid()</code>—Returns the process’ ID.","<code>getppid()</code>—Returns the parent process’ ID.","<code>getpriority(PRIO_PGRP, gid)</code>—Get the scheduling priority …","<code>getpriority(PRIO_PROCESS, pid)</code>—Get the scheduling …","<code>getpriority(PRIO_USER, uid)</code>—Get the scheduling priority …","<code>getrlimit(resource)</code>—Get a process resource limit value.","<code>getsid(pid)</code>—Get the session ID of the given process.","<code>getuid()</code>—Returns the process’ real user ID.","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","<code>ioctl(fd, TIOCSCTTY, 0)</code>—Sets the controlling terminal …","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Test whether this pid represents the init process (pid 1).","Get the <code>IO_FLUSHER</code> state of the caller.","Test to see if a CPU is in the <code>CpuSet</code>.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","<code>kill(0, sig)</code>—Sends a signal to all processes in the …","<code>kill(pid, sig)</code>—Sends a signal to a process.","<code>kill(-pid, sig)</code>—Sends a signal to all processes in a …","Returns whether the process was terminated by a signal and …","Get the current per-process machine check kill policy.","Maximum, “hard”, value that <code>current</code> may be dynamically …","<code>membarrier(cmd, 0, 0)</code>—Perform a memory barrier.","<code>membarrier(cmd, MEMBARRIER_CMD_FLAG_CPU, cpu)</code>—Perform a …","<code>membarrier(MEMBARRIER_CMD_QUERY, 0, 0)</code>—Query the …","Create a new and empty <code>CpuSet</code>.","<code>nice(inc)</code>—Adjust the scheduling priority of the current …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Get the current value of the parent process death signal.","<code>syscall(SYS_pidfd_getfd, pidfd, flags)</code>—Obtain a …","<code>syscall(SYS_pidfd_open, pid, flags)</code>—Creates a file …","<code>syscall(SYS_pidfd_send_signal, pidfd, sig, NULL, 0)</code>—Send …","<code>prlimit(pid, resource, new)</code>—Get and set a process …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>sched_getaffinity(pid)</code>—Get a thread’s CPU affinity …","<code>sched_getcpu()</code>—Get the CPU that the current thread is …","<code>sched_setaffinity(pid, cpuset)</code>—Set a thread’s CPU …","<code>sched_yield()</code>—Hints to the OS that other processes …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Add a CPU to <code>CpuSet</code>.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Set a new auxiliary vector.","Set the <code>child subreaper</code> attribute of the calling process.","Set the state of the <code>dumpable</code> attribute, which determines …","Set the endianness of the calling process.","Supersede the <code>/proc/pid/exe</code> symbolic link with a new one …","Set floating point emulation control bits.","Set floating point exception mode.","Allow control of the floating point mode from user space.","Set the machine check memory corruption kill policy for …","Set the parent-death signal of the calling process.","Declare that the ptracer process can <code>ptrace</code> the calling …","Set the state of the flag determining if the timestamp …","Set whether to use (normal, traditional) statistical …","Set unaligned access control bits.","Modify certain kernel memory map descriptor addresses of …","Set the name for a virtual memory region.","<code>setpgid(pid, pgid)</code>—Sets the process group ID of the …","<code>setpriority(PRIO_PGRP, pgid)</code>—Get the scheduling priority …","<code>setpriority(PRIO_PROCESS, pid)</code>—Get the scheduling …","<code>setpriority(PRIO_USER, uid)</code>—Get the scheduling priority …","<code>setrlimit(resource, new)</code>—Set a process resource limit …","<code>setsid()</code>—Create a new session.","Returns whether the process was terminated by a signal.","Get the state of the speculation misfeature.","<code>brk</code> start address.","Code section start address.","Data section start address.","Stack start address.","Returns whether the process is currently stopped.","Returns whether the process is currently stopped.","Returns the number of the signal that stopped the process, …","Returns the number of the signal that stopped the process, …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the number of the signal that terminated the …","Returns the number of the signal that terminated the …","<code>kill(0, 0)</code>—Check validity of pid and permissions to send …","<code>kill(pid, 0)</code>—Check validity of pid and permissions to …","<code>kill(-pid, 0)</code>—Check validity of pid and permissions to …","Get the state of the flag determining if the timestamp …","Get which process timing method is currently in use.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns whether the process is currently trapped.","Returns the number of the signal that trapped the process, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>umask(mask)</code>—Set the process file creation mask.","Get unaligned access control bits.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Remove a CPU from <code>CpuSet</code>.","Get the size of the <code>PrctlMmMap</code> the kernel expects.","<code>wait(waitopts)</code>—Wait for any of the children of calling …","<code>waitid(_, _, _, opts)</code>—Wait for the specified child …","<code>waitpid(-pgid, waitopts)</code>—Wait for a process in a …","<code>waitpid(pid, waitopts)</code>—Wait for a specific process to …"],"i":[0,0,0,0,0,0,0,0,0,0,0,2,1,0,1,1,2,1,1,1,0,0,1,1,1,2,1,1,1,2,3,1,2,1,2,1,2,1,2,1,1,2,2,1,2,1,2,1,3,2,1,3,2,3,1,3,2,1,3,2,1,2,1,2,1,2,1,2,0,1,2,0,1,2,1,1,1,1,1,3,2,2,2,2,2,1,3,2,1,2,1,1,2,2,1,2,3,1,2,1,2,1,2,1,2,1,2,1,2,1,3,2,1,2,1,2,1,2,1,2,1,2,3,1,2,0,0,1,2,3,1,2,3,1,2,1,2,1,2,1,3,2,1,2,1,3,2,1,3,2,1,3,2,1,2,29,0,28,28,28,0,0,0,0,28,28,0,28,28,28,28,28,28,28,28,28,28,0,29,29,28,28,29,28,29,28,29,28,29,28,29,29,29,28,28,28,29,28,29,28,32,30,29,28,31,27,32,30,29,28,31,27,30,30,29,28,31,27,29,28,31,27,29,29,28,28,29,29,28,28,0,31,28,0,29,29,28,28,29,29,28,28,29,28,31,27,29,28,31,29,29,29,29,29,28,28,28,28,28,32,30,29,28,31,27,29,29,28,28,29,29,29,28,28,28,29,29,28,28,29,28,29,29,28,28,30,29,28,31,27,29,29,28,28,29,29,28,28,29,29,28,28,32,30,29,28,31,27,32,30,29,28,29,29,28,28,30,29,29,28,28,30,29,29,28,28,29,29,28,28,30,0,27,27,32,29,28,27,29,29,28,28,30,30,29,29,28,28,30,29,28,29,28,29,29,28,28,29,28,31,27,29,29,28,28,32,30,29,28,31,27,32,30,29,28,31,27,32,30,29,28,31,27,27,29,29,28,28,0,30,0,0,0,0,0,0,0,21,10,4,36,10,4,10,4,10,4,4,4,4,10,10,4,10,10,10,10,10,10,10,10,10,10,10,10,4,49,10,10,4,50,10,10,4,4,10,4,10,4,10,4,10,4,0,0,0,0,52,52,52,52,52,54,54,52,54,52,52,54,52,52,58,54,59,52,58,54,59,54,0,52,58,59,52,58,54,59,52,54,54,52,54,52,58,59,52,52,58,54,59,52,58,58,54,59,59,52,52,52,52,52,58,59,54,54,54,54,52,52,52,52,52,54,52,54,52,58,59,52,52,52,52,52,54,54,52,52,58,52,52,54,54,52,58,52,54,54,54,52,58,54,59,54,58,59,52,52,54,54,52,58,59,52,58,59,52,58,54,59,78,83,81,78,86,83,0,0,0,83,79,83,83,93,79,78,81,84,86,78,87,83,0,93,102,83,78,78,86,78,102,0,0,0,0,93,99,76,76,80,78,81,74,74,102,78,82,0,0,93,0,0,0,0,0,83,82,0,81,81,81,81,81,81,81,81,81,81,81,81,81,102,0,86,83,84,79,86,84,78,100,100,85,83,83,83,0,0,0,0,83,78,85,86,86,78,85,85,86,85,81,78,78,80,85,86,76,84,79,79,79,99,100,100,100,99,0,0,0,78,0,86,84,78,85,78,74,85,76,87,77,88,90,77,78,77,78,77,77,77,99,0,0,0,93,0,0,82,86,77,82,83,76,76,76,77,77,76,76,78,86,85,0,0,0,99,93,102,0,0,0,0,0,0,0,0,93,78,86,78,83,0,0,83,86,84,0,0,0,93,100,77,80,77,82,74,78,77,99,77,77,77,0,84,97,223,117,117,97,0,0,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,77,93,94,96,97,96,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,74,74,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,96,96,98,108,111,104,105,74,76,77,78,79,80,93,99,81,82,83,84,85,100,101,86,102,87,88,90,98,108,111,104,105,74,76,77,78,79,80,93,99,81,82,83,84,85,100,101,86,102,87,88,90,98,0,0,0,0,74,76,77,78,79,80,93,99,81,82,83,84,85,100,101,102,87,88,90,74,76,77,78,79,80,93,99,81,82,83,84,85,100,101,102,87,88,90,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,0,94,96,97,96,103,0,79,96,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,93,99,81,82,83,84,85,100,102,87,88,90,0,74,76,77,78,79,80,81,82,83,84,85,86,87,107,108,107,108,107,108,107,108,108,107,108,107,108,108,107,107,108,107,108,107,108,107,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,105,104,105,0,0,98,104,105,74,74,74,74,74,76,76,76,76,76,77,77,77,77,77,78,78,78,78,78,79,79,79,79,79,80,80,80,80,80,93,99,81,81,81,81,81,82,82,82,82,82,83,83,83,83,83,84,84,84,84,84,85,85,85,85,85,100,101,86,86,86,86,102,87,87,87,87,87,88,90,0,98,108,92,111,104,105,74,76,77,77,78,79,80,93,99,81,82,83,84,85,100,101,86,102,87,88,90,74,76,77,78,79,80,81,82,83,84,85,86,87,74,74,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,77,93,0,0,0,0,0,0,0,0,96,74,76,77,78,79,80,81,82,83,84,85,87,88,90,96,109,104,105,0,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,98,108,111,104,105,74,76,77,78,79,80,93,99,81,82,83,84,85,100,101,86,102,87,88,90,98,74,76,77,78,79,80,81,82,83,84,85,86,87,0,0,0,0,0,74,76,77,78,79,80,81,82,83,84,85,86,87,110,111,110,74,76,77,78,79,80,81,82,83,84,85,86,87,110,0,88,90,110,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,101,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,96,94,96,97,96,98,111,98,111,104,96,74,76,77,78,79,80,81,82,83,84,85,86,87,0,0,0,96,98,115,115,98,115,0,0,0,74,76,77,78,79,80,81,82,83,84,85,86,87,0,0,0,0,98,0,0,0,74,76,77,78,79,80,81,82,83,84,85,86,87,0,96,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,98,0,0,98,0,98,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,74,76,77,78,79,80,81,82,83,84,85,86,87,74,76,77,78,79,80,81,82,83,84,85,86,87,0,0,74,76,77,78,79,80,81,82,83,84,85,86,87,0,0,0,74,76,77,78,79,80,93,99,81,82,83,84,85,100,101,102,87,88,90,74,76,77,78,79,80,81,82,83,84,85,86,87,98,108,111,104,105,74,76,77,78,79,80,93,99,81,82,83,84,85,100,101,86,102,87,88,90,98,108,111,104,105,74,76,77,78,79,80,93,99,81,82,83,84,85,100,101,86,102,87,88,90,223,224,223,224,98,108,111,104,105,74,76,77,78,79,80,93,99,81,82,83,84,85,100,101,86,102,87,88,90,96,74,76,77,78,79,80,81,82,83,84,85,86,87,0,0,0,115,115,115,120,120,120,119,120,120,120,120,0,120,120,120,120,120,120,120,120,120,120,120,119,120,120,120,0,119,119,120,120,119,120,119,120,119,120,119,120,119,119,119,120,120,120,119,120,119,120,119,120,119,120,119,120,119,120,119,119,120,120,119,119,120,120,120,119,119,120,120,119,119,120,120,119,120,119,120,119,119,119,119,119,120,120,120,120,120,119,120,119,119,120,120,119,119,119,120,120,120,119,119,120,120,119,120,119,119,120,120,119,120,0,0,0,119,119,120,120,119,119,120,120,119,119,120,120,119,120,119,120,119,119,120,120,119,119,120,120,119,119,120,120,119,119,120,120,119,120,119,119,120,120,119,119,120,120,119,120,119,120,119,119,120,120,119,120,119,119,120,120,119,120,119,120,119,120,119,119,120,120,124,124,124,124,124,124,124,122,124,124,124,124,124,124,124,124,124,124,124,124,121,123,124,124,124,124,124,124,124,124,124,124,122,0,124,11,0,124,124,0,122,124,124,124,124,124,124,124,124,124,124,124,124,0,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,122,124,124,124,124,11,124,124,124,124,124,124,124,124,124,124,124,124,124,0,0,124,124,124,124,124,124,124,122,124,124,124,124,124,124,124,124,124,124,124,116,118,116,118,121,122,123,121,122,123,121,122,123,121,122,123,121,122,123,121,121,122,122,123,123,121,122,123,121,122,123,116,124,121,122,118,123,116,124,121,122,118,123,124,121,122,118,123,124,121,122,118,123,0,121,122,123,121,122,123,116,118,116,121,122,123,0,0,0,121,122,123,124,121,122,123,121,122,123,0,0,0,116,124,124,121,121,121,121,121,122,122,122,122,122,118,123,123,123,123,123,116,124,121,122,118,123,121,122,123,121,121,122,122,123,123,121,122,123,124,121,122,123,121,122,123,124,124,121,122,123,121,122,123,121,122,123,121,122,123,116,124,121,122,118,123,121,122,123,0,0,121,122,123,121,122,123,0,121,122,123,121,122,123,124,116,118,121,122,123,0,0,0,0,0,0,0,124,0,0,0,121,122,123,0,121,122,123,121,122,123,121,122,123,121,122,123,124,121,122,118,123,124,121,122,123,116,124,121,122,118,123,116,124,121,122,118,123,116,124,121,122,118,123,121,122,123,0,0,0,0,0,0,128,0,0,0,135,0,130,128,0,128,0,135,0,135,0,0,0,135,0,128,129,131,132,133,129,131,132,133,225,226,227,228,229,134,135,129,131,132,133,225,226,227,228,229,134,135,134,135,134,135,134,135,134,135,129,131,132,134,135,129,131,132,133,225,226,227,228,229,134,135,134,134,135,129,131,132,133,225,226,227,228,229,134,135,0,129,131,132,133,134,134,128,129,131,132,133,134,135,134,134,134,134,135,129,131,132,133,225,226,227,228,229,134,135,129,131,132,133,225,226,227,228,229,134,135,129,131,132,133,225,226,227,228,229,134,135,134,142,142,142,142,142,0,0,0,0,150,151,142,142,150,142,140,144,143,142,145,143,143,144,142,143,144,142,142,142,142,142,142,142,0,0,0,142,142,150,151,143,142,142,142,140,143,143,144,142,144,142,142,0,0,145,145,142,142,142,0,0,0,157,157,0,0,0,0,142,145,142,145,164,230,164,230,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,144,0,142,142,150,151,141,141,159,152,141,159,152,144,142,157,142,142,141,169,139,0,0,0,0,170,141,143,144,140,145,142,148,150,151,150,151,0,0,0,0,0,0,143,144,140,150,150,150,150,151,151,151,151,143,144,140,150,150,151,151,143,144,140,150,150,150,150,151,151,151,151,143,144,140,150,150,151,151,143,143,144,144,140,140,143,144,140,143,144,140,164,230,156,160,170,162,139,143,144,163,141,145,142,148,157,140,158,159,150,151,152,153,154,164,230,156,160,170,162,139,143,144,163,141,145,142,148,157,140,158,159,150,151,152,153,154,170,156,139,143,144,141,145,142,148,157,140,158,159,150,151,152,153,154,139,143,144,141,145,142,148,157,140,158,159,150,151,152,153,154,139,141,159,150,151,152,153,154,0,160,143,144,140,0,0,0,0,0,0,143,144,140,160,162,156,163,143,144,140,163,162,163,143,144,140,139,143,144,141,145,142,148,157,140,158,159,159,159,150,150,151,151,152,153,154,0,156,143,144,140,170,154,139,143,143,143,143,143,144,144,144,144,144,141,145,142,148,157,140,140,140,140,140,158,159,159,150,150,151,151,152,152,153,153,154,154,160,150,151,150,151,164,230,156,156,160,170,162,139,143,144,163,163,141,141,141,141,141,145,142,148,157,140,158,159,159,159,159,159,159,150,150,150,151,151,151,151,152,152,152,152,153,154,143,144,140,150,151,143,143,144,144,140,140,143,144,140,143,144,140,143,144,140,145,142,148,159,150,151,152,153,154,0,0,158,139,143,144,141,145,142,148,157,140,158,159,150,151,152,153,154,143,144,140,143,144,140,143,144,140,164,230,156,160,170,162,139,143,144,163,141,145,142,148,157,140,158,159,150,151,152,153,154,160,162,143,144,140,152,153,154,0,143,144,140,159,150,151,150,159,150,151,143,144,140,159,150,151,159,152,151,159,152,150,159,150,151,159,150,151,150,150,150,151,151,151,151,159,150,151,143,144,140,143,144,140,160,162,162,0,151,0,0,156,139,163,150,151,152,153,154,139,160,162,162,143,144,140,150,150,151,151,150,151,160,159,150,151,152,153,154,139,141,159,159,159,150,150,151,151,152,153,154,139,158,152,153,154,156,141,0,0,0,0,0,143,144,140,154,151,0,0,0,0,0,0,0,0,0,0,0,0,0,143,144,140,154,152,153,154,152,153,154,154,0,164,160,162,0,0,0,0,150,151,143,144,140,143,144,140,143,144,140,0,150,151,159,151,151,151,150,150,139,143,144,141,145,142,148,157,140,158,159,150,151,152,153,154,152,153,154,159,150,151,152,153,154,143,144,140,164,230,156,160,170,162,139,143,144,163,141,145,142,148,157,140,158,159,150,151,152,153,154,164,230,156,160,170,162,139,143,144,163,141,145,142,148,157,140,158,159,150,151,152,153,154,164,230,156,160,170,162,139,143,144,163,141,145,142,148,157,140,158,159,150,151,152,153,154,158,143,144,140,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,172,0,172,172,172,172,172,172,172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,172,172,172,0,0,178,175,0,0,181,179,178,0,0,180,178,178,178,0,0,0,0,0,0,0,0,0,0,0,0,177,184,175,175,178,178,179,179,180,180,181,181,175,178,179,180,181,175,178,179,180,181,175,178,179,180,181,175,178,179,180,181,175,175,175,178,178,178,179,179,179,180,180,180,181,181,181,175,178,179,180,181,175,178,179,180,181,175,178,179,180,155,182,174,177,176,183,184,181,175,178,179,180,155,182,174,177,176,183,184,181,177,175,178,179,180,155,182,174,177,176,183,184,181,175,178,179,180,155,182,174,177,176,183,184,181,178,155,175,175,178,178,179,179,180,180,181,181,182,175,175,178,178,179,179,180,180,181,181,174,182,175,175,178,178,179,179,180,180,181,181,175,175,178,178,179,179,180,180,181,181,175,178,179,180,155,182,174,177,176,183,184,181,175,178,179,180,181,155,182,177,183,175,175,175,175,175,178,178,178,178,178,179,179,179,179,179,180,180,180,180,180,155,182,174,177,176,183,184,181,181,181,181,181,174,175,178,179,180,155,182,174,177,176,183,184,181,175,175,178,178,179,179,180,180,181,181,175,175,175,178,178,178,179,179,179,180,180,180,181,181,181,175,175,178,178,179,179,180,180,181,181,175,178,179,180,181,175,175,178,178,179,179,180,180,181,181,175,178,179,180,155,182,174,177,176,183,184,181,177,175,175,178,178,179,179,180,180,181,181,155,175,175,178,178,179,179,180,180,181,181,175,175,178,178,179,179,180,180,181,181,175,178,179,180,155,182,174,177,176,183,184,181,175,178,179,180,181,175,175,178,178,179,179,180,180,181,181,175,175,178,178,179,179,180,180,181,181,175,175,178,178,179,179,180,180,181,181,175,175,178,178,179,179,180,180,181,181,177,184,155,175,178,179,180,181,184,178,155,182,155,175,175,178,178,179,179,180,180,181,181,174,176,176,176,176,175,175,178,178,179,179,180,180,181,181,155,155,155,155,155,175,178,179,180,181,175,178,179,180,181,175,175,178,178,179,179,180,180,181,181,175,178,179,180,155,182,174,177,176,183,184,181,175,175,178,178,179,179,180,180,181,181,175,178,179,180,155,182,174,177,176,183,184,181,175,178,179,180,155,182,174,177,176,183,184,181,174,176,176,175,178,179,180,155,182,174,177,176,183,184,181,175,175,178,178,179,179,180,180,181,181,0,75,75,75,75,0,75,191,218,218,217,213,211,211,205,208,211,211,218,194,195,218,211,211,218,205,205,0,0,192,193,192,193,191,205,211,211,210,206,0,206,192,193,195,0,0,0,210,0,211,211,192,193,214,0,0,0,214,215,0,218,205,186,186,0,204,204,218,200,191,218,215,218,218,218,210,208,205,203,0,0,0,205,205,194,195,187,191,195,189,190,205,205,213,206,205,191,193,191,186,186,186,0,217,0,217,217,0,0,218,218,208,0,204,204,204,213,218,218,186,186,186,186,191,209,0,0,0,209,204,204,204,204,0,0,205,205,205,189,190,195,191,218,0,205,0,0,0,215,205,211,207,218,218,218,218,207,0,0,218,218,218,218,191,194,0,0,218,218,218,0,218,0,0,0,0,0,218,218,218,186,187,188,189,190,191,192,193,194,195,212,212,196,197,198,200,200,212,212,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,204,205,196,186,187,188,206,189,190,191,207,208,209,210,211,212,213,214,215,192,193,216,203,194,195,197,198,217,200,218,204,205,196,186,187,188,206,189,190,191,207,208,209,210,211,212,213,214,215,192,193,216,203,194,195,197,198,217,200,218,212,0,0,0,203,204,205,196,186,187,188,206,189,190,191,207,208,209,210,211,212,213,214,215,192,193,216,203,194,195,197,198,217,200,218,204,205,196,186,187,188,206,189,190,191,207,208,209,210,211,212,213,214,215,192,193,216,203,194,195,197,198,217,200,218,186,187,188,189,190,191,192,193,194,195,0,0,0,0,186,187,188,189,190,191,192,193,194,195,186,197,198,0,203,216,203,186,187,188,189,190,191,192,193,194,195,0,198,186,187,188,189,190,191,192,193,194,195,0,212,212,0,212,212,204,205,196,186,187,188,206,189,190,191,207,208,209,210,211,213,214,215,192,193,216,203,194,195,200,218,212,197,198,197,198,186,187,188,189,190,191,192,193,194,195,0,0,0,0,204,205,196,186,186,186,186,186,187,187,187,187,187,188,188,188,188,188,206,189,189,189,189,189,190,190,190,190,190,191,191,191,191,191,207,208,209,210,211,212,213,214,215,192,192,192,192,192,193,193,193,193,193,216,203,194,194,194,194,194,195,195,195,195,195,197,217,200,218,204,205,196,186,187,188,206,189,190,191,207,208,209,210,211,212,213,214,215,192,193,216,203,194,195,197,198,217,200,218,186,187,188,189,190,191,192,193,194,195,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,186,187,188,189,190,191,192,193,194,195,200,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,196,200,218,200,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,186,187,188,189,190,191,192,193,203,194,195,200,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,204,205,196,186,187,188,206,189,190,191,207,208,209,210,211,212,213,214,215,192,193,216,203,194,195,197,198,217,200,218,186,187,188,189,190,191,192,193,194,195,0,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,200,0,203,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,0,0,0,198,0,216,0,0,0,203,0,186,187,188,189,190,191,192,193,194,195,0,0,0,0,0,186,187,188,189,190,191,192,193,194,195,0,0,0,0,186,187,188,189,190,191,192,193,203,194,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,197,0,212,212,212,212,197,198,197,198,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,186,187,188,189,190,191,192,193,194,195,197,198,0,0,0,0,0,204,205,196,186,187,188,206,189,190,191,207,208,209,210,211,212,213,214,215,192,193,216,203,194,195,197,198,217,200,218,186,187,188,189,190,191,192,193,194,195,198,198,204,205,196,186,187,188,206,206,189,190,191,207,207,208,208,209,209,210,210,211,212,213,214,214,215,215,192,193,216,203,194,195,197,198,217,200,218,204,205,196,186,187,188,206,189,190,191,207,208,209,210,211,212,213,214,215,192,193,216,203,194,195,197,198,217,200,218,204,205,196,186,187,188,206,189,190,191,207,208,209,210,211,212,213,214,215,192,193,216,203,194,195,197,198,217,200,218,0,0,186,187,188,189,190,191,192,193,194,195,203,0,0,0,0,0],"f":"````````````````````````````{{}b}{{}d}{fh}{{bb}b}{{dd}d}{{bb}j}{{dd}j}3210{bl}0{dn}05432{ce{}{}}00000{fj}{bb}{ff}{dd}{{ce}j{}{}}0031{{bb}A`}{{dd}A`}=<{{}b}{{}d}`32{{Abd}{{Af{Ad}}}}{{bc}j{{Aj{}{{Ah{b}}}}}}{{dc}j{{Aj{}{{Ah{d}}}}}}{{bAl}An}0000{{fAl}An}{{dAl}An}0000{cc{}}00{l{{B`{b}}}}{n{{B`{d}}}}{lb}0{nd}010{{hb}f}{cb{{Aj{}{{Ah{b}}}}}}{cd{{Aj{}{{Ah{d}}}}}}{Bb{{B`{b}}}}{Bb{{B`{d}}}}{{bc}jBd}{{dc}jBd}{{bb}j}{{dd}j}{{bb}b}{{dd}d}{{bb}A`}{{dd}A`}{ce{}{}}00{bc{}}{dc{}}{bA`}{dA`}10{b{{Bf{b}}}}{d{{Bf{d}}}}{b{{Bh{b}}}}{d{{Bh{d}}}}{{cb}fBj}{bb}{dd}{{}j}{{{Bl{f}}Bn}{{Af{C`}}}}{{bb}j}{{dd}j}{fb}{{bbA`}j}{{ddA`}j}{{fc}jBj}{{bb}b}{{dd}d}7610{ce{}{}}0087{c{{Cb{e}}}{}{}}00000{cCd{}}0043``````````````````````{{ceCfCh}{{Af{j}}}BjBj}{{}Cj}0{{}Ch}0{{CjCj}Cj}{{ChCh}Ch}{{CjCj}j}{{ChCh}j}3210{Cjn}00{ChAb}005432;;;;;;;;;;;;{ClC`}{Clj}{CjCj}{ChCh}{CnCn}{CfCf}{{ce}j{}{}}0004433{{CjCj}A`}0{{ChCh}A`}0{Cj{{Af{Ad}}}}`{{}Ch}{{ce}{{Af{j}}}BjBj}{{CjCj}Cj}0{{ChCh}Ch}0{{}Cj}04476{{CnCn}A`}{{CfCf}A`}{{Cjc}j{{Aj{}{{Ah{Cj}}}}}}{{Chc}j{{Aj{}{{Ah{Ch}}}}}}`{{CjAl}An}0000{{ChAl}An}0000{cc{}}00000{n{{B`{Cj}}}}0{Ab{{B`{Ch}}}}0{nCj}00{AbCh}001100{cCj{{Aj{}{{Ah{Cj}}}}}}{cCh{{Aj{}{{Ah{Ch}}}}}}{Bb{{B`{Cj}}}}0{Bb{{B`{Ch}}}}0{{CnC`C`}Cl}{{Cjc}jBd}{{Chc}jBd}{{Cnc}jBd}{{Cfc}jBd}{{CjCj}j}0{{ChCh}j}0{{CjCj}Cj}0{{ChCh}Ch}0{{CjCj}A`}0{{ChCh}A`}0{ce{}{}}000000{Clc{}}{Cjc{}}{Chc{}}{CjA`}0{ChA`}0{ClA`}2211{ClD`}{Cj{{Bf{Cj}}}}0{Ch{{Bf{Ch}}}}0{Cj{{Bh{Cj}}}}0{Ch{{Bh{Ch}}}}0{ClC`}{{ceCfCh}{{Af{j}}}BjBj}{DbCf}{DdCf}{D`{{B`{c}}}{}}{CjCj}{ChCh}{CfDb}{{CjCj}j}0{{ChCh}j}0{{ClC`}j}0{{CjCjA`}j}0{{ChChA`}j}0{Clj}{{CjCj}Cj}{{ChCh}Ch}761100{ce{}{}}0008877{c{{Cb{e}}}{}{}}00000000000{cCd{}}00000{CfDd}5544{{cClDf}{{Af{j}}}Bj}{C`Cl}```````{Bjh}{Adh}{hh}{DhBn}{AdBn}{hBn};;;;{Bnh}4{{ce}j{}{}}{Adj}{{AdAl}{{Cb{jDj}}}}{{hAl}{{Cb{jDj}}}}{cc{}}{DlAd}{DnAd}{E`Ad}{EbAd}{EdAd}{EfAd}{EhAd}{EjAd}{ElAd}{EnAd}{F`Ad};{BnFb}{BnAd}{ce{}{}}0{FdBn}{AdBn}{AdA`}{hA`}4{Ad{{Cb{AdFf}}}}{h{{Cb{AdFf}}}}{c{{Cb{e}}}{}{}}000{cCd{}}0````{Fh{{Bl{Fj}}}}0{FhFl}{Fh{{Af{{Fn{Fl}}}}}}0{Fl{{Af{{Fn{Fl}}}}}}{FlG`}3{FlFl}{Fh{{Af{Bb}}}}0{Fl{{Af{Bb}}}}{ce{}{}}70000000{FlGb}`{FhFh}{GdGd}{GfGf}{{ce}j{}{}}0{{FlFh}j}1{{FhFh}Gh}{{FlFl}Gh}{FlC`}{{}Fh}{{}Fl}{FhFl}{GdBb}{GfBb}{Fhj}{{FhFh}A`}{{GdGd}A`}{{FlFl}A`}{{GfGf}A`}{{FhAl}{{Cb{jDj}}}}{{GdAl}{{Cb{jDj}}}}0{{FlAl}{{Cb{jDj}}}}{{GfAl}{{Cb{jDj}}}}0{{{Fn{Fl}}}Fh}{cc{}}{FlFh}{{{Gl{{Gj{Fj}}}}}Fh}{{{Gn{Fl}}}Fh}33{{{Bl{Fj}}}{{Cb{FlH`}}}}{{{Bl{Fj}}}{{Cb{FlGf}}}}{{{Bl{Fj}}}Fl}{G`Fl}{G`Fh}{{{Gl{Fj}}}Fh}{{{Gl{Fj}}}{{Cb{FhHb}}}}1{{Fhc}jBd}{{Flc}jBd}{{FhHd}Fl}{{Fl{Hf{C`}}}Fl}{ce{}{}}00{Fh{{Gn{Fl}}}}{Fh{{Gl{Fj}}}}0{Fh{{Af{{Fn{Fl}}}}}}0{Fl{{Af{{Fn{Fl}}}}}}{{{Gn{Fl}}}Fh}{FhG`}{Fh{{Cb{HhHj}}}}{Gd{{Gl{Fj}}}}{{Fhe}{{Af{c}}}{}{{Hn{Fl}{{Hl{{Af{c}}}}}}}}0{{Fle}{{Af{c}}}{}{{Hn{Fl}{{Hl{{Af{c}}}}}}}}{FlA`}{c{{Cb{FhGd}}}{{I`{{Gl{Fj}}}}}}{GdC`}{{FhFh}{{B`{Gh}}}}{{FlFl}{{B`{Gh}}}}{Fl{{Bl{Fj}}}}0{ce{}{}}0{FlFh}1{Fl{{Cb{BbIb}}}}{cHh{}}0{Fh{{Fn{Bb}}}}0{Fl{{Fn{Bb}}}}0{c{{Cb{e}}}{}{}}00000{cCd{}}000`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cId}{{Af{j}}}If}{{ceIdIh}{{Af{j}}}BjIf}{{}Id}{{}Ih}{{}Ij}{{}Il}{{}In}{{}J`}{{}Jb}{{}Jd}{{}Jf}{{}Jh}{{}Jj}{{}Jl}{{}Jn}{K`Kb}{KdKf}{IjKh}{KjKh}{KlKn}{L`Kn}{LbKn}1{{IdId}Id}{{IhIh}Ih}{{IjIj}Ij}{{IlIl}Il}{{InIn}In}{{J`J`}J`}{{JbJb}Jb}{{JdJd}Jd}{{JfJf}Jf}{{JhJh}Jh}{{JjJj}Jj}{{JlJl}Jl}{{JnJn}Jn}{{IdId}j}{{IhIh}j}{{IjIj}j}{{IlIl}j}{{InIn}j}{{J`J`}j}{{JbJb}j}{{JdJd}j}{{JfJf}j}{{JhJh}j}{{JjJj}j}{{JlJl}j}{{JnJn}j}{{IdId}Id}{{IhIh}Ih}{{IjIj}Ij}{{IlIl}Il}{{InIn}In}{{J`J`}J`}{{JbJb}Jb}{{JdJd}Jd}{{JfJf}Jf}{{JhJh}Jh}{{JjJj}Jj}{{JlJl}Jl}{{JnJn}Jn}{{IdId}j}{{IhIh}j}{{IjIj}j}{{IlIl}j}{{InIn}j}{{J`J`}j}{{JbJb}j}{{JdJd}j}{{JfJf}j}{{JhJh}j}{{JjJj}j}{{JlJl}j}{{JnJn}j}{Idn}0{Ihn}0{IjKh}0{Iln}0{InDd}0{J`n}0{Jbn}0{JdAb}0{JfAb}0{JhAb}0{JjDd}0{Jln}0{Jnn}0{{IdId}Id}{{IhIh}Ih}{{IjIj}Ij}{{IlIl}Il}{{InIn}In}{{J`J`}J`}{{JbJb}Jb}{{JdJd}Jd}{{JfJf}Jf}{{JhJh}Jh}{{JjJj}Jj}{{JlJl}Jl}{{JnJn}Jn}{{IdId}j}{{IhIh}j}{{IjIj}j}{{IlIl}j}{{InIn}j}{{J`J`}j}{{JbJb}j}{{JdJd}j}{{JfJf}j}{{JhJh}j}{{JjJj}j}{{JlJl}j}{{JnJn}j}{L`Dd}0{ce{}{}}0000000000000000000000000000000000000000000000000{Ld{{Af{j}}}}{{cIj}{{Af{j}}}If}{{ceIjIh}{{Af{j}}}BjIf}{{c{B`{K`}}{B`{Kd}}}{{Af{j}}}If}{{ce{B`{K`}}{B`{Kd}}Ih}{{Af{j}}}BjIf}{IdId}{IhIh}{IjIj}{IlIl}{InIn}{J`J`}{KjKj}{LfLf}{JbJb}{JdJd}{JfJf}{JhJh}{JjJj}{LhLh}{LjLj}{LlLl}{JnJn}{K`K`}{KdKd}{{ce}j{}{}}000000000000000000{IdId}{IhIh}{IjIj}{IlIl}{InIn}{J`J`}{JbJb}{JdJd}{JfJf}{JhJh}{JjJj}{JlJl}?{{IdId}A`}{{IhIh}A`}{{IjIj}A`}{{IlIl}A`}{{InIn}A`}{{J`J`}A`}{{JbJb}A`}{{JdJd}A`}{{JfJf}A`}{{JhJh}A`}{{JjJj}A`}{{JlJl}A`}{{JnJn}A`}{{c{B`{Dd}}e{B`{Dd}}C`}{{Af{C`}}}BjBj}{KlKn}{L`Kn}{LbKn}1{{LnBn}Ln}{{}h}{{}In}{L`Dd}{{IdId}Id}{{IhIh}Ih}{{IjIj}Ij}{{IlIl}Il}{{InIn}In}{{J`J`}J`}{{JbJb}Jb}{{JdJd}Jd}{{JfJf}Jf}{{JhJh}Jh}{{JjJj}Jj}{{JlJl}Jl}{{JnJn}Jn}{{}Id}{{}Ih}{{}Ij}{{}Il}{{}In}{{}J`}{{}Jb}{{}Jd}{{}Jf}{{}Jh}{{}Jj}{{}Jl}{{}Jn}{{IdId}A`}{{IhIh}A`}{{IjIj}A`}{{IlIl}A`}{{InIn}A`}{{J`J`}A`}{{KjKj}A`}{{LfLf}A`}{{JbJb}A`}{{JdJd}A`}{{JfJf}A`}{{JhJh}A`}{{JjJj}A`}{{LhLh}A`}{{LlLl}A`}{{JnJn}A`}{{K`K`}A`}{{KdKd}A`}{{cDd}{{Af{j}}}Bj}{{Idc}j{{Aj{}{{Ah{Id}}}}}}{{Ihc}j{{Aj{}{{Ah{Ih}}}}}}{{Ijc}j{{Aj{}{{Ah{Ij}}}}}}{{Ilc}j{{Aj{}{{Ah{Il}}}}}}{{Inc}j{{Aj{}{{Ah{In}}}}}}{{J`c}j{{Aj{}{{Ah{J`}}}}}}{{Jbc}j{{Aj{}{{Ah{Jb}}}}}}{{Jdc}j{{Aj{}{{Ah{Jd}}}}}}{{Jfc}j{{Aj{}{{Ah{Jf}}}}}}{{Jhc}j{{Aj{}{{Ah{Jh}}}}}}{{Jjc}j{{Aj{}{{Ah{Jj}}}}}}{{Jlc}j{{Aj{}{{Ah{Jl}}}}}}{{Jnc}j{{Aj{}{{Ah{Jn}}}}}}```````````````````````{{cDdDdLf}{{Af{j}}}Bj}{{cJhDdDd}{{Af{j}}}Bj}{{cIj}{{Af{j}}}Bj}{{c{B`{K`}}{B`{Kd}}}{{Af{j}}}Bj}{{cJd}{{Af{j}}}Bj}`{c{{Af{Jd}}}Bj}`{c{{Af{Il}}}Bj}{{cLh}{{Af{j}}}Bj}`{{cIl}{{Af{j}}}Bj}{c{{Af{j}}}Bj}{{ce{Bl{Fj}}}{{Af{C`}}}BjIf}{M`Fl}{MbFl}{M`Kj}{MbKj}{{c{Bl{Md}}}{{Af{C`}}}Bj}8{{LdAl}An}{{M`Al}An}{{MbAl}An}{{IdAl}An}0000{{IhAl}An}0000{{IjAl}An}0000{{IlAl}An}0000{{InAl}An}0000{{J`Al}An}0000{{KjAl}An}{{LfAl}An}{{JbAl}An}0000{{JdAl}An}0000{{JfAl}An}0000{{JhAl}An}0000{{JjAl}An}0000{{LhAl}An}{{LjAl}An}{{JlAl}An}000{{LlAl}An}{{JnAl}An}0000{{K`Al}An}{{KdAl}An}{{ce}{{Af{j}}}BjIf}{cc{}}0{IjKh}11111{KhIj}222222222222222222{n{{B`{Id}}}}{n{{B`{Ih}}}}{Kh{{B`{Ij}}}}{n{{B`{Il}}}}{Dd{{B`{In}}}}{n{{B`{J`}}}}{n{{B`{Jb}}}}{Ab{{B`{Jd}}}}{Ab{{B`{Jf}}}}{Ab{{B`{Jh}}}}{Dd{{B`{Jj}}}}{n{{B`{Jl}}}}{n{{B`{Jn}}}}{nId}0{nIh}0??{nIl}0{DdIn}0{nJ`}0{nJb}0{AbJd}0{AbJf}0{AbJh}0{DdJj}0{nJl}0{nJn}0;:{KhIj}:987654321{cId{{Aj{}{{Ah{Id}}}}}}{cIh{{Aj{}{{Ah{Ih}}}}}}{cIj{{Aj{}{{Ah{Ij}}}}}}{cIl{{Aj{}{{Ah{Il}}}}}}{cIn{{Aj{}{{Ah{In}}}}}}{cJ`{{Aj{}{{Ah{J`}}}}}}{cJb{{Aj{}{{Ah{Jb}}}}}}{cJd{{Aj{}{{Ah{Jd}}}}}}{cJf{{Aj{}{{Ah{Jf}}}}}}{cJh{{Aj{}{{Ah{Jh}}}}}}{cJj{{Aj{}{{Ah{Jj}}}}}}{cJl{{Aj{}{{Ah{Jl}}}}}}{cJn{{Aj{}{{Ah{Jn}}}}}}{Bb{{B`{Id}}}}{Bb{{B`{Ih}}}}{Bb{{B`{Ij}}}}{Bb{{B`{Il}}}}{Bb{{B`{In}}}}{Bb{{B`{J`}}}}{Bb{{B`{Jb}}}}{Bb{{B`{Jd}}}}{Bb{{B`{Jf}}}}{Bb{{B`{Jh}}}}{Bb{{B`{Jj}}}}{Bb{{B`{Jl}}}}{Bb{{B`{Jn}}}}{KbK`}{KfKd}{KhIj}{KhKj}{{ce{Bl{Fj}}Jn}{{Af{j}}}BjIf}{c{{Af{Lb}}}Bj}{c{{Af{Mf}}}Bj}{c{{Af{Mh}}}Bj}{c{{Af{j}}}Bj}{{cDd}{{Af{j}}}Bj}{{cLj}{{Af{j}}}Bj}{{ce{Bl{Fj}}}{{Af{C`}}}IfIf}{L`Ab}{{Idc}jBd}{{Ihc}jBd}{{Ijc}jBd}{{Ilc}jBd}{{Inc}jBd}{{J`c}jBd}{{Jbc}jBd}{{Jdc}jBd}{{Jfc}jBd}{{Jhc}jBd}{{Jjc}jBd}{{Jnc}jBd}{{K`c}jBd}{{Kdc}jBd}{L`Dd}{MjDd}{M`Dd}{MbDd}`{{IdId}j}{{IhIh}j}{{IjIj}j}{{IlIl}j}{{InIn}j}{{J`J`}j}{{JbJb}j}{{JdJd}j}{{JfJf}j}{{JhJh}j}{{JjJj}j}{{JlJl}j}{{JnJn}j}{{IdId}Id}{{IhIh}Ih}{{IjIj}Ij}{{IlIl}Il}{{InIn}In}{{J`J`}J`}{{JbJb}Jb}{{JdJd}Jd}{{JfJf}Jf}{{JhJh}Jh}{{JjJj}Jj}{{JlJl}Jl}{{JnJn}Jn}{{IdId}A`}{{IhIh}A`}{{IjIj}A`}{{IlIl}A`}{{InIn}A`}{{J`J`}A`}{{JbJb}A`}{{JdJd}A`}{{JfJf}A`}{{JhJh}A`}{{JjJj}A`}{{JlJl}A`}{{JnJn}A`}{ce{}{}}0000000000000000000000000{Idc{}}{Ihc{}}{Ijc{}}{Ilc{}}{Inc{}}{J`c{}}{Jbc{}}{Jdc{}}{Jfc{}}{Jhc{}}{Jjc{}}{Jlc{}}{Jnc{}}{c{{Af{Ab}}}Bj}0{{ce}{{Af{j}}}BjBj}{c{{Af{Jl}}}Bj}{{cJl}{{Af{j}}}Bj}{IdA`}{IhA`}{IjA`}{IlA`}{InA`}{J`A`}{JbA`}{JdA`}{JfA`}{JhA`}{JjA`}{JlA`}{JnA`}{MlA`}{{{Mn{c}}}A`Bj}1>=<;:987654321{c{{Af{{N`{A`A`}}}}}Bj}{K`A`}{KdA`}4{Id{{Bf{Id}}}}{Ih{{Bf{Ih}}}}{Ij{{Bf{Ij}}}}{Il{{Bf{Il}}}}{In{{Bf{In}}}}{J`{{Bf{J`}}}}{Jb{{Bf{Jb}}}}{Jd{{Bf{Jd}}}}{Jf{{Bf{Jf}}}}{Jh{{Bf{Jh}}}}{Jj{{Bf{Jj}}}}{Jl{{Bf{Jl}}}}{Jn{{Bf{Jn}}}}{Id{{Bh{Id}}}}{Ih{{Bh{Ih}}}}{Ij{{Bh{Ij}}}}{Il{{Bh{Il}}}}{In{{Bh{In}}}}{J`{{Bh{J`}}}}{Jb{{Bh{Jb}}}}{Jd{{Bh{Jd}}}}{Jf{{Bh{Jf}}}}{Jh{{Bh{Jh}}}}{Jj{{Bh{Jj}}}}{Jl{{Bh{Jl}}}}{Jn{{Bh{Jn}}}}``{{ce{Bl{Fj}}}{{Af{C`}}}IfIf}{{ce}{{Af{j}}}IfIf}{{cegiIh}{{Af{j}}}BjIfBjIf}{{c{Bl{Md}}}{{Af{C`}}}If}02{{ce{Bl{Fj}}Jn}{{Af{j}}}IfIf}{c{{Af{Lb}}}If}{NbAb}{{AbAb}Nb}{{cJb}{{Af{Ad}}}If}2{{cIj}{{Af{j}}}If}{{ceIj}{{Af{j}}}BjIf}{{ceKjIjNb}{{Af{j}}}BjIf}{{LnAb}Ln}{L`Ab}{KlKn}{L`Kn}{LbKn}1{c{{Af{Ld}}}{{I`{Ad}}}}{{c{Bl{{Nd{Fj}}}}}{{Mn{c}}}Bj}{Ld{{B`{c}}}{}}{{{Mn{c}}}{{B`{{Af{M`}}}}}Bj}{M`Dd}{L`Dd}{IdId}{IhIh}{IjIj}{IlIl}{InIn}{J`J`}{JbJb}{JdJd}{JfJf}{JhJh}{JjJj}{JlJl}{JnJn}{{cIlIj}{{Af{Ad}}}If}{{ceIlIj}{{Af{Ad}}}BjIf}{{ceIlIjIn}{{Af{Ad}}}BjIf}{L`Dd}{Ld{{B`{{Af{Mb}}}}}}{{Nf{Bl{Fj}}Dd}{{Cb{C`Ff}}}}{{Nf{Bl{Fj}}Dd}{{Cb{jFf}}}}{c{{Af{Ld}}}Bj}{{Nf{Bl{Nh}}Dd}{{Cb{C`Ff}}}}{{ce}{{Af{Fh}}}If{{I`{{Gl{Fj}}}}}}{{ceg}{{Af{Fh}}}BjIf{{I`{{Gl{Fj}}}}}}{{ce{Bl{{Nd{Fj}}}}}{{Af{{N`{{Bl{Fj}}{Bl{{Nd{Fj}}}}}}}}}BjIf}{{IdId}j}{{IhIh}j}{{IjIj}j}{{IlIl}j}{{InIn}j}{{J`J`}j}{{JbJb}j}{{JdJd}j}{{JfJf}j}{{JhJh}j}{{JjJj}j}{{JlJl}j}{{JnJn}j}{{ce}{{Af{j}}}IfIf}0{{cegi}{{Af{j}}}BjIfBjIf}{{cegiJ`}{{Af{j}}}BjIfBjIf}{Ldj}{c{{Af{j}}}If}{{cLl}{{Af{Dd}}}Bj}{{ce{B`{Dd}}C`}{{Af{C`}}}BjBj}{{IdIdA`}j}{{IhIhA`}j}{{IjIjA`}j}{{IlIlA`}j}{{InInA`}j}{{J`J`A`}j}{{JbJbA`}j}{{JdJdA`}j}{{JfJfA`}j}{{JhJhA`}j}{{JjJjA`}j}{{JlJlA`}j}{{JnJnA`}j}{{ce{Bl{Fj}}Jn}{{Af{j}}}IfIf}{L`Dd}````````````````{c{{Af{Lb}}}If}{Ld{{Af{Lb}}}}{{ceIh}{{Af{Lb}}}BjIf}{c{{Af{Mf}}}If}{Ld{{Af{Mf}}}}{c{{Af{Mh}}}If}{Ld{{Af{Mh}}}}{{ceIhJf}{{Af{Nj}}}BjIf}``````````````````````{{IdId}Id}{{IhIh}Ih}{{IjIj}Ij}{{IlIl}Il}{{InIn}In}{{J`J`}J`}{{JbJb}Jb}{{JdJd}Jd}{{JfJf}Jf}{{JhJh}Jh}{{JjJj}Jj}{{JlJl}Jl}{{JnJn}Jn}{{IdId}j}{{IhIh}j}{{IjIj}j}{{IlIl}j}{{InIn}j}{{J`J`}j}{{JbJb}j}{{JdJd}j}{{JfJf}j}{{JhJh}j}{{JjJj}j}{{JlJl}j}{{JnJn}j}{{ce}{{Af{j}}}IfIf}{{ceg}{{Af{j}}}IfBjIf}{{IdId}Id}{{IhIh}Ih}{{IjIj}Ij}{{IlIl}Il}{{InIn}In}{{J`J`}J`}{{JbJb}Jb}{{JdJd}Jd}{{JfJf}Jf}{{JhJh}Jh}{{JjJj}Jj}{{JlJl}Jl}{{JnJn}Jn}{{}j}{c{{Af{j}}}Bj}{c{{Af{Dd}}}Bj}{ce{}{}}000000000000000000{{IdId}j}{{IhIh}j}{{IjIj}j}{{IlIl}j}{{InIn}j}{{J`J`}j}{{JbJb}j}{{JdJd}j}{{JfJf}j}{{JhJh}j}{{JjJj}j}{{JlJl}j}{{JnJn}j}{c{{Cb{e}}}{}{}}0000000000000000000000000000000000000000000000000````{cCd{}}000000000000000000000000{L`Ab}{{IdId}Id}{{IhIh}Ih}{{IjIj}Ij}{{IlIl}Il}{{InIn}In}{{J`J`}J`}{{JbJb}Jb}{{JdJd}Jd}{{JfJf}Jf}{{JhJh}Jh}{{JjJj}Jj}{{JlJl}Jl}{{JnJn}Jn}{c{{Af{j}}}If}{{ceIh}{{Af{j}}}BjIf}{{ceLjIh}{{Af{j}}}BjIf}{{Nf{Bl{Fj}}Dd}{{Cb{jFf}}}}{{Nf{Bl{Fj}}Dd}{{Cb{C`Ff}}}}{{Nf{Bl{Nl}}Dd}{{Cb{C`Ff}}}}`````````````````````````{{}Nn}0{{}O`}0{{NnNn}Nn}{{O`O`}O`}{{NnNn}j}{{O`O`}j}3210{Nnn}00{O`n}005432{ce{}{}}000{NnNn}{O`O`}{{ce}j{}{}}02211{{NnNn}A`}0{{O`O`}A`}0<;;::==<<10{{Nnc}j{{Aj{}{{Ah{Nn}}}}}}{{O`c}j{{Aj{}{{Ah{O`}}}}}}{{NnAl}An}0000{{O`Al}An}0000{cc{}}0{n{{B`{Nn}}}}0{n{{B`{O`}}}}0{nNn}00{nO`}001100{cNn{{Aj{}{{Ah{Nn}}}}}}{cO`{{Aj{}{{Ah{O`}}}}}}{Bb{{B`{Nn}}}}0{Bb{{B`{O`}}}}0{{Nnc}jBd}{{O`c}jBd}{{hcO`}{{Af{Bn}}}If}{Nn{{Af{Ad}}}}{{hBn}{{Af{j}}}}{{NnNn}j}0{{O`O`}j}0{{NnNn}Nn}0{{O`O`}O`}0{{NnNn}A`}0{{O`O`}A`}0{ce{}{}}0{Nnc{}}{O`c{}}{NnA`}0{O`A`}01100{Nn{{Bf{Nn}}}}0{O`{{Bf{O`}}}}0{Nn{{Bh{Nn}}}}0{O`{{Bh{O`}}}}0{NnNn}{O`O`}{{NnNn}j}0{{O`O`}j}0{{NnNnA`}j}0{{O`O`A`}j}0{{NnNn}Nn}{{O`O`}O`}541100{ce{}{}}06655{c{{Cb{e}}}{}{}}000{cCd{}}04433``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{NhC`}j}{{NlC`}j}{{{Bl{Nh}}C`}j}{{{Bl{Nl}}C`}j}{{}Ob}{{}Od}{{}Of}{{ObOb}Ob}{{OdOd}Od}{{OfOf}Of}{{ObOb}j}{{OdOd}j}{{OfOf}j}543210{Obn}0{Odn}0{Ofn}0876543{ce{}{}}00000000000{OhOh}{ObOb}{OdOd}{NlNl}{OfOf}{{ce}j{}{}}0000{Ojj}542{{ObOb}A`}{{OdOd}A`}{{OfOf}A`}{Nh{{Bl{Fj}}}}{Nl{{Bl{Fj}}}}1{{ObOb}Ob}{{OdOd}Od}{{OfOf}Of}{c{{Af{Ad}}}Bj}{{cAd}{{Af{j}}}Bj}{{cAdOf}{{Af{j}}}Bj}{{}Ob}{{}Od}{{}Of}{{OhOh}A`}>=<{{Obc}j{{Aj{}{{Ah{Ob}}}}}}{{Odc}j{{Aj{}{{Ah{Od}}}}}}{{Ofc}j{{Aj{}{{Ah{Of}}}}}}{{cOj}{{Af{Ad}}}Bj}{c{{Af{Ob}}}Bj}{{cOb}{{Af{j}}}Bj}{{NhAl}{{Cb{jDj}}}}{{OhAl}An}0{{ObAl}An}0000{{OdAl}An}0000{{NlAl}{{Cb{jDj}}}}{{OfAl}An}0000{cc{}}00000{n{{B`{Ob}}}}{n{{B`{Od}}}}{n{{B`{Of}}}}{nOb}0{nOd}0{nOf}0210{Ff{{B`{Oh}}}}{cOb{{Aj{}{{Ah{Ob}}}}}}{cOd{{Aj{}{{Ah{Od}}}}}}{cOf{{Aj{}{{Ah{Of}}}}}}{Bb{{B`{Ob}}}}{Bb{{B`{Od}}}}{Bb{{B`{Of}}}}{BnOh}{{Ohc}jBd}{{Obc}jBd}{{Odc}jBd}{{Ofc}jBd}{{ObOb}j}{{OdOd}j}{{OfOf}j}{{ObOb}Ob}{{OdOd}Od}{{OfOf}Of}{{ObOb}A`}{{OdOd}A`}{{OfOf}A`}{ce{}{}}00000{Obc{}}{Odc{}}{Ofc{}}{{cA`}{{Af{j}}}Bj}{c{{Af{Dd}}}Bj}{ObA`}{OdA`}{OfA`}210{c{{Af{{N`{A`A`}}}}}Bj}{Ob{{Bf{Ob}}}}{Od{{Bf{Od}}}}{Of{{Bf{Of}}}}{Ob{{Bh{Ob}}}}{Od{{Bh{Od}}}}{Of{{Bh{Of}}}}{OhOl}{{{Bl{Fj}}}Nh}{{{Bl{Fj}}}Nl}{ObOb}{OdOd}{OfOf}{{c{Bl{Fj}}Dd}{{Af{C`}}}Bj}{{c{Bl{{Nd{Fj}}}}Dd}{{Af{{N`{{Bl{Fj}}{Bl{{Nd{Fj}}}}}}}}}Bj}{{c{Bl{Nh}}Dd}{{Af{C`}}}Bj}{{c{Bl{Nh}}DdOd}{{Af{C`}}}Bj}3{{c{Bl{Nl}}Dd}{{Af{C`}}}Bj}{{c{Bl{Nl}}DdOd}{{Af{C`}}}Bj}{OhBn}{{c{Bl{Fj}}}{{Af{C`}}}Bj}{{c{Bl{{Nd{Fj}}}}}{{Af{{N`{{Bl{Fj}}{Bl{{Nd{Fj}}}}}}}}}Bj}{{c{Bl{Nh}}}{{Af{C`}}}Bj}{{ObOb}j}{{OdOd}j}{{OfOf}j}{e{{Af{c}}}{}{{On{}{{Hl{{Af{c}}}}}}}}{{ObObA`}j}{{OdOdA`}j}{{OfOfA`}j}{{ObOb}Ob}{{OdOd}Od}{{OfOf}Of}987210{ce{}{}}0000{cHh{}};:9{c{{Cb{e}}}{}{}}00000000000{cCd{}}00000654{{c{Bl{Fj}}}{{Af{C`}}}Bj}{{c{Bl{Nl}}}{{Af{C`}}}Bj}```````````````````````{{{A`{}{{Hl{c}}}}}Db{}}{{{Ab{c}}}DbAd}{{{Af{ce}}}DbAd{}}{{{Ah{ce}}}DbAd{}}{{{Aj{ce}}}DbAd{}}::::::::::::::::::::::{AlAl}{AnAn}{{ce}j{}{}}0{{AlAl}Gh}{{AnAn}Gh}{{AlAl}A`}{{AnAn}A`}{{{Ab{c}}Al}AnAd}{{{Af{ce}}Al}AnAd{}}{{{Ah{ce}}Al}AnAdAA`}{{AlAl}An}{{AnAl}An}{cc{}}0000000000{{AnFjFjC`}Al}{{Alc}jBd}{{Anc}jBd}{ce{}{}}0000000000{{ce}AfBjA`}{{}{{Ab{c}}}Ad}{{}{{Af{ce}}}Ad{}}{c{{Ah{ec}}}{}Ad}{c{{Aj{ec}}}{}Ad}{{FjFj}Al}{AAbAl}{{AAdDb}{{Af{c}}}{}}000{{AAdDb}{{Af{j}}}}{{AlAl}{{B`{Gh}}}}{{AnAn}{{B`{Gh}}}}{AlAAb}66<<{c{{Cb{e}}}{}{}}000000000000000000000{cCd{}}00000000008````````````````````````````````````````````````````````````````````````````````````````````````````````````````{AAf{{B`{{Bl{Fj}}}}}}{c{{Af{Ad}}}Bj}{{cAAh}{{Af{Ad}}}Bj}{c{{Af{{N`{Ad{B`{AAj}}}}}}}Bj}{{cAAh}{{Af{{N`{Ad{B`{AAj}}}}}}}Bj}`{AAjAAl}{{}AAn}{{}AB`}{{}AAh}{ABbABd}{AAlABf}{ABhABj}{{ABlC`}{{B`{ABl}}}}{{ABnC`}{{B`{ABn}}}}{{ABlC`}ABl}{{ABnC`}ABn}{{cAC`}{{Af{j}}}Bj}{{cAAj}{{Af{j}}}Bj}{{cAAf}{{Af{j}}}Bj}{{cACb}{{Af{j}}}Bj}{{cACd}{{Af{j}}}Bj}{{cACf}{{Af{j}}}Bj}{{AAnAAn}AAn}{{AB`AB`}AB`}{{AAhAAh}AAh}{{ABlABl}ABl}000{{ABnABn}ABn}000{{AAnAAn}j}{{AB`AB`}j}{{AAhAAh}j}{{ABlABl}j}0{{ABnABn}j}0987666655554321100{AAnAb}0{AB`Ab}0{AAhn}0<;:765{ce{}{}}000000000000000000000000000000000000000000000`{AChj}{AAfAAf}{AAnAAn}{AB`AB`}{AAjAAj}{ABbABb}{AAlAAl}{ABhABh}{ACjACj}{AAhAAh}{AClACl}{ACnACn}{ABlABl}{ABnABn}{AC`AC`}{ACbACb}{ACdACd}{{ce}j{}{}}000000000000000{{AAfAAf}Gh}{{AAjAAj}Gh}{{ACnACn}Gh}{{ABlABl}Gh}{{ABnABn}Gh}{{AC`AC`}Gh}{{ACbACb}Gh}{{ACdACd}Gh}`{AD`e{}{{ADb{c}}}}{AAnAAn}{AB`AB`}{AAhAAh}{{cAC`}{{Af{j}}}Bj}{{cAAj}{{Af{j}}}Bj}{{cAAf}{{Af{j}}}Bj}{c{{Af{j}}}Bj}{{cACb}{{Af{j}}}Bj}{{cACd}{{Af{j}}}Bj}{{AAnAAn}A`}{{AB`AB`}A`}{{AAhAAh}A`}{AD`C`}{{{ADd{c}}}C`{}}{{}ACh}{{}ADf}{{AAnAAn}AAn}{{AB`AB`}AB`}{{AAhAAh}AAh}{ADfAD`}{{{ADd{c}}}j{}}{ADfj}{{}AAn}{{}AB`}{{}AAh}{{AAfAAf}A`}{{AAnAAn}A`}{{AB`AB`}A`}{{AAjAAj}A`}{{ABbABb}A`}{{AAlAAl}A`}{{ABhABh}A`}{{ACjACj}A`}{{AAhAAh}A`}{{AClACl}A`}{{ACnABl}A`}{{ACnABn}A`}{{ACnACn}A`}{{ABlABl}A`}{{ABlACn}A`}{{ABnACn}A`}{{ABnABn}A`}{{AC`AC`}A`}{{ACbACb}A`}{{ACdACd}A`}`{{AChc}j{{Aj{}{{Ah{ADh}}}}}}{{AAnc}j{{Aj{}{{Ah{AAn}}}}}}{{AB`c}j{{Aj{}{{Ah{AB`}}}}}}{{AAhc}j{{Aj{}{{Ah{AAh}}}}}}`{ACdAb}{{AAfAl}An}{{AAnAl}An}0000{{AB`Al}An}0000{{AAjAl}An}{{ABbAl}An}{{AAlAl}An}{{ABhAl}An}{{ACjAl}An}{{AAhAl}An}0000{{AClAl}An}{{ACnAl}{{Cb{jDj}}}}0{{ABlAl}{{Cb{jDj}}}}0{{ABnAl}{{Cb{jDj}}}}0{{AC`Al}{{Cb{jDj}}}}0{{ACbAl}{{Cb{jDj}}}}0{{ACdAl}{{Cb{jDj}}}}0{{AD`cg}c{}{}{{On{ce}{{Hl{c}}}}}}{{ABlC`}{{B`{ABl}}}}{{ABnC`}{{B`{ABn}}}}{{ABlC`}ABl}{{ABnC`}ABn}{cc{}}0{{{Bl{Fj}}}ACh}1111111{{{Bl{Fj}}}ADf}2{AC`AAj}{AAfAAj}{ACbAAj}5{ACdAAj}666666{ABlACn}{{{ADj{l}}}ACn}{{{ADj{Fj}}}ACn}{ABnACn}:1{AbABl};{{{ADj{Fj}}}ABl}<{ADlABn}{{{ADj{l}}}ABn}{{{ADj{Fj}}}ABn}?{{{N`{cl}}}AC`{{I`{ACn}}}}{ACbAC`}{ACdAC`}{cc{}}0{Ab{{B`{AAn}}}}{Ab{{B`{AB`}}}}{n{{B`{AAh}}}};9{AbAAn}0{AbAB`}0{nAAh}0210{cAAn{{Aj{}{{Ah{AAn}}}}}}{cAB`{{Aj{}{{Ah{AB`}}}}}}{cAAh{{Aj{}{{Ah{AAh}}}}}}{Bb{{B`{AAn}}}}{Bb{{B`{AB`}}}}{Bb{{B`{AAh}}}}{ABdABb}{ABfAAl}{ABjABh}{Bb{{Cb{ACnADn}}}}{Bb{{Cb{ABlADn}}}}{Bb{{Cb{ABnADn}}}}{Bb{{Cb{AC`ADn}}}}{Bb{{Cb{ACbADn}}}}{Bb{{Cb{ACdADn}}}}{c{{Af{{B`{AAj}}}}}Bj}{c{{Af{AAj}}}Bj}`{{AAfc}jBd}{{AAnc}jBd}{{AB`c}jBd}{{AAjc}jBd}{{ABbc}jBd}{{AAlc}jBd}{{ABhc}jBd}{{ACjc}jBd}{{AAhc}jBd}{{AClc}jBd}{{ACnc}jBd}{{ABlc}jBd}{{ABnc}jBd}{{AC`c}jBd}{{ACbc}jBd}{{ACdc}jBd}{{AAnAAn}j}{{AB`AB`}j}{{AAhAAh}j}{{AAnAAn}AAn}{{AB`AB`}AB`}{{AAhAAh}AAh}{{AAnAAn}A`}{{AB`AB`}A`}{{AAhAAh}A`}{ce{}{}}000000000000000000000000{AAnc{}}{AB`c{}}{AAhc{}}{AC`ACn}{ACbABl}{ACdABn}`{AAnA`}{AB`A`}{AAhA`}{ACnA`}{ABlA`}{ABnA`}12105432102{AC`A`}13023213212221111321{AAn{{Bf{AAn}}}}{AB`{{Bf{AB`}}}}{AAh{{Bf{AAh}}}}{AAn{{Bh{AAn}}}}{AB`{{Bh{AB`}}}}{AAh{{Bh{AAh}}}}{AD`{{B`{c}}}{}}{{{ADd{c}}}{{B`{e}}}{}{}}{{{ADd{c}}}C`{}}{{cBn}{{Af{j}}}Bj}{ABn{{B`{AE`}}}}``{{{Bl{Fj}}}ACh}{c{{Af{AAf}}}If}{{{Bl{Fj}}}ADf}{{FjFjFjFj}ABl}{{llllllll}ABn}{{ACnl}AC`}{{ABll}ACb}{{ABnlAbAb}ACd}{{{Bl{Fj}}}{{Af{AAf}}}}=<<{AAnAAn}{AB`AB`}{AAhAAh}{ABlABl}0{ABnABn}0{ABl{{ADj{Fj}}}}{ABn{{ADj{Fj}}}}{{{Bl{Fj}}}AD`}{{{Bl{Fj}}}{{Cb{ACnADn}}}}{{{Bl{Fj}}}{{Cb{ABlADn}}}}{{{Bl{Fj}}}{{Cb{ABnADn}}}}{{{Bl{Fj}}}{{Cb{AC`ADn}}}}{{{Bl{Fj}}}{{Cb{ACbADn}}}}{{{Bl{Fj}}}{{Cb{ACdADn}}}}{{AAfAAf}{{B`{Gh}}}}{{AAjAAj}{{B`{Gh}}}}{{ACnACn}{{B`{Gh}}}}{{ACnABl}{{B`{Gh}}}}{{ACnABn}{{B`{Gh}}}}{{ABlABl}{{B`{Gh}}}}{{ABlACn}{{B`{Gh}}}}{{ABnACn}{{B`{Gh}}}}{{ABnABn}{{B`{Gh}}}}{{AC`AC`}{{B`{Gh}}}}{{ACbACb}{{B`{Gh}}}}{{ACdACd}{{B`{Gh}}}}{AAf{{B`{Fl}}}}`{AC`l}{ACbl}{ACdl}{{AChADh}A`}{{AEbC`}{{Af{AAj}}}}{{c{Bl{Fj}}AB`}{{Af{C`}}}Bj}{{c{Bl{{Nd{Fj}}}}AB`}{{Af{{N`{{Bl{Fj}}{Bl{{Nd{Fj}}}}}}}}}Bj}{{c{Bl{Fj}}AB`}{{Af{{N`{C`{B`{AAj}}}}}}}Bj}{{c{Bl{{Nd{Fj}}}}AB`}{{Af{{N`{{Bl{Fj}}{Bl{{Nd{Fj}}}}{B`{AAj}}}}}}}Bj}{{c{Bl{Nh}}ADfAB`}{{Af{AEd}}}Bj}{{AAnAAn}j}{{AB`AB`}j}{{AAhAAh}j}{ACdAb}{ABn{{ADj{l}}}}{{c{Bl{Fj}}AAn}{{Af{C`}}}Bj}{{c{Bl{Nl}}AChAAn}{{Af{C`}}}Bj}{{c{B`{AAj}}{Bl{Nl}}AChAAn}{{Af{C`}}}Bj}{{cAAf{Bl{Nl}}AChAAn}{{Af{C`}}}Bj}{{cACb{Bl{Nl}}AChAAn}{{Af{C`}}}Bj}{{cACd{Bl{Nl}}AChAAn}{{Af{C`}}}Bj}{{cACf{Bl{Nl}}AChAAn}{{Af{C`}}}Bj}{{c{Bl{Fj}}AAnAC`}{{Af{C`}}}Bj}{{c{Bl{Fj}}AAnAAj}{{Af{C`}}}Bj}{{c{Bl{Fj}}AAnAAf}{{Af{C`}}}Bj}{{c{Bl{Fj}}AAnACb}{{Af{C`}}}Bj}{{c{Bl{Fj}}AAnACd}{{Af{C`}}}Bj}{{c{Bl{Fj}}AAnACf}{{Af{C`}}}Bj}{{AAnAAnA`}j}{{AB`AB`A`}j}{{AAhAAhA`}j}{{ACdAb}j}{{AC`ACn}j}{{ACbABl}j}{{ACdABn}j}{{AC`l}j}{{ACbl}j}{{ACdl}j}6{{cACj}{{Af{j}}}Bj}{ADhC`}{AD`{{N`{C`{B`{C`}}}}}}{{{ADd{c}}}{{N`{C`{B`{C`}}}}}{}}{{AAlABb{B`{ABh}}}{{Af{Ad}}}}{{AAlABbAAh{B`{ABh}}}{{Af{Ad}}}}{{AAlABbAAh{B`{ABh}}}{{Af{{N`{AdAd}}}}}}`{{ABlABl}{{B`{C`}}}}{{ABnABn}{{B`{C`}}}}{{AAnAAn}AAn}{{AB`AB`}AB`}{{AAhAAh}AAh}{{AAnAAn}j}{{AB`AB`}j}{{AAhAAh}j}543`{ABlAb}{ABnADl}{ACnACn}{ABnACn}{ABn{{B`{ABl}}}}0{ABlABn}0{ce{}{}}000000000000000{AC`{{Cb{{AEf{AC`}}Ff}}}}{ACb{{Cb{{AEf{AC`}}Ff}}}}{ACd{{Cb{{AEf{AC`}}Ff}}}}{cHh{}}00000=<;{c{{Cb{e}}}{}{}}000000000000000000000000000000000000000000000{cCd{}}0000000000000000000000`{{AAnAAn}AAn}{{AB`AB`}AB`}{{AAhAAh}AAh}{{AAjAEb}C`}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{cAb}{{Af{Hh}}}Bj}{{cBb}{{Af{Ab}}}Bj}````````````````````````````````````<<{AEhAEh}{{ce}j{}{}}{{AEhAEh}A`}{{AEhAl}An}{cc{}}{c{{Af{A`}}}Bj}0{c{{Af{Ab}}}Bj}{c{{Af{ACb}}}Bj}2{c{{Af{Fj}}}Bj}2323{c{{Af{ACd}}}Bj}431444{c{{Af{Dd}}}Bj}{c{{Af{AAl}}}Bj}{c{{Af{{Cb{jOh}}}}}Bj}67{c{{Af{{B`{AEj}}}}}Bj}88{c{{Af{ACl}}}Bj}{c{{Af{{B`{ABh}}}}}Bj}{c{{Af{C`}}}Bj};;0{{cAEh}{{Af{{B`{AEj}}}}}Bj}{c{{Af{ABb}}}Bj}{c{{Af{Hh}}}Bj}>={c{{Af{AEj}}}Bj}0???>{c{{Af{AEl}}}Bj}{c{{Af{AEn}}}Bj}{c{{Af{AF`}}}Bj}{{AEhc}jBd}{ce{}{}}{{cABlABl}{{Af{j}}}Bj}{{cABlABlBn}{{Af{j}}}Bj}{{cABlABlABl}{{Af{j}}}Bj}210{{cA`}{{Af{j}}}Bj}0{{cAb}{{Af{j}}}Bj}1{{cFj}{{Af{j}}}Bj}1{{cABnAb}{{Af{j}}}Bj}032332{{c{B`{Fj}}}{{Af{j}}}Bj}4434{{c{B`{AEj}}}{{Af{j}}}Bj}55{{cC`}{{Af{j}}}Bj}660{{cAEh{B`{AEj}}}{{Af{j}}}Bj}{{cBb}{{Af{j}}}Bj}87{{cAEj}{{Af{j}}}Bj}099988888{{cAFb}{{Af{j}}}Bj}>{c{{Cb{e}}}{}{}}0{cCd{}}`````````````````````````````{{}AEn}0{{}AFd}0{{}AFf}0{{}AFh}0{{}AFj}0{{AEnAEn}AEn}{{AFdAFd}AFd}{{AFfAFf}AFf}{{AFhAFh}AFh}{{AFjAFj}AFj}{{AEnAEn}j}{{AFdAFd}j}{{AFfAFf}j}{{AFhAFh}j}{{AFjAFj}j}9876543210{AEnAb}00{AFdl}00{AFfAb}00{AFhAb}00{AFjAb}00>=<;:98765{ce{}{}}00000000000000000000000`{AEnAEn}{AFdAFd}{AFfAFf}{AFhAFh}{ACfACf}{AFlAFl}{AElAEl}{AFbAFb}{AF`AF`}{AFnAFn}{AG`AG`}{AFjAFj}{{ce}j{}{}}00000000000{{AFdAFd}Gh}{{ACfACf}Gh}>>==<<;;33`{{AEnAEn}A`}0{{AFdAFd}A`}0{{AFfAFf}A`}0{{AFhAFh}A`}0{{AFjAFj}A`}0``{{AEnAEn}AEn}0{{AFdAFd}AFd}0{{AFfAFf}AFf}0{{AFhAFh}AFh}0{{AFjAFj}AFj}0{{}AEn}0{{}AFd}0{{}AFf}0{{}AFh}0{{}AFj}0>=<;{{ACfACf}A`}{{AFlAFl}A`}{{AElAEl}A`}{{AFbAFb}A`}{{AF`AF`}A`}{{AFnAFn}A`}{{AG`AG`}A`}{{AFjAFj}A`}{{AEnc}j{{Aj{}{{Ah{AEn}}}}}}{{AFdc}j{{Aj{}{{Ah{AFd}}}}}}{{AFfc}j{{Aj{}{{Ah{AFf}}}}}}{{AFhc}j{{Aj{}{{Ah{AFh}}}}}}{{AFjc}j{{Aj{}{{Ah{AFj}}}}}}{ACfAFd}```{{AEnAl}An}0000{{AFdAl}An}0000{{AFfAl}An}0000{{AFhAl}An}0000{{ACfAl}An}{{AFlAl}An}{{AElAl}An}{{AFbAl}An}{{AF`Al}An}{{AFnAl}An}{{AG`Al}An}{{AFjAl}An}0000`{cc{}}00000000000{Ab{{B`{AEn}}}}0{l{{B`{AFd}}}}0{Ab{{B`{AFf}}}}0{Ab{{B`{AFh}}}}0{Ab{{B`{AFj}}}}0{AbAEn}00{lAFd}00{AbAFf}00{AbAFh}00{AbAFj}004433221100{cAEn{{Aj{}{{Ah{AEn}}}}}}{cAFd{{Aj{}{{Ah{AFd}}}}}}{cAFf{{Aj{}{{Ah{AFf}}}}}}{cAFh{{Aj{}{{Ah{AFh}}}}}}{cAFj{{Aj{}{{Ah{AFj}}}}}}{Bb{{B`{AEn}}}}0{Bb{{B`{AFd}}}}0{Bb{{B`{AFf}}}}0{Bb{{B`{AFh}}}}0{Bb{{B`{AFj}}}}0{{AEnc}jBd}{{AFdc}jBd}{{AFfc}jBd}{{AFhc}jBd}{{ACfc}jBd}{{AFlc}jBd}{{AElc}jBd}{{AFbc}jBd}{{AF`c}jBd}{{AFnc}jBd}{{AG`c}jBd}{{AFjc}jBd}`{{AEnAEn}j}0{{AFdAFd}j}0{{AFfAFf}j}0{{AFhAFh}j}0{{AFjAFj}j}0{ACfAb}{{AEnAEn}AEn}0{{AFdAFd}AFd}0{{AFfAFf}AFf}0{{AFhAFh}AFh}0{{AFjAFj}AFj}0{{AEnAEn}A`}0{{AFdAFd}A`}0{{AFfAFf}A`}0{{AFhAFh}A`}0{{AFjAFj}A`}0{ce{}{}}00000000000{AEnc{}}{AFdc{}}{AFfc{}}{AFhc{}}{AFjc{}}{AEnA`}0{AFdA`}0{AFfA`}0{AFhA`}0{AFjA`}04433221100{AEn{{Bf{AEn}}}}0{AFd{{Bf{AFd}}}}0{AFf{{Bf{AFf}}}}0{AFh{{Bf{AFh}}}}0{AFj{{Bf{AFj}}}}0{AEn{{Bh{AEn}}}}0{AFd{{Bh{AFd}}}}0{AFf{{Bh{AFf}}}}0{AFh{{Bh{AFh}}}}0{AFj{{Bh{AFj}}}}0``{{AFdAbAbAb}ACf}{AEnAEn}{AFdAFd}{AFfAFf}{AFhAFh}{AFjAFj}`{{AFdAFd}{{B`{Gh}}}}{{ACfACf}{{B`{Gh}}}}`{ACfAb}{{AEnAEn}j}0{{AFdAFd}j}0{{AFfAFf}j}0{{AFhAFh}j}0{{AFjAFj}j}0`````{{AEnAEnA`}j}0{{AFdAFdA`}j}0{{AFfAFfA`}j}0{{AFhAFhA`}j}0{{AFjAFjA`}j}0{{ACfAFd}j}{{ACfAb}j}00<{{AEnAEn}AEn}{{AFdAFd}AFd}{{AFfAFf}AFf}{{AFhAFh}AFh}{{AFjAFj}AFj}{{AEnAEn}j}{{AFdAFd}j}{{AFfAFf}j}{{AFhAFh}j}{{AFjAFj}j}9988776655{ce{}{}}000000000005544332211{c{{Cb{e}}}{}{}}00000000000000000000000```{cCd{}}00000000000<<;;::9988`{If{{Af{{Fn{Fl}}}}}}{If{{Af{Bb}}}}1{{Ife}{{Af{c}}}{}{{Hn{Fl}{{Hl{{Af{c}}}}}}}}{{{B`{c}}g}{{Af{e}}}{AGbIf}{}{{Hn{{B`{Fl}}}{{Hl{{Af{e}}}}}}}}{If{{Fn{Bb}}}}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{}AGd}{{}AGf}{{}AGh}{{}AGj}{{}AGl}{{}AGn}{{}AH`}{{}AHb}{{}AHd}{{}AHf}``{AHhAb}{AHjAb}{AHlAHn}{{{B`{AI`}}}AIb}{AI`AId}``{{AGdAGd}AGd}{{AGfAGf}AGf}{{AGhAGh}AGh}{{AGjAGj}AGj}{{AGlAGl}AGl}{{AGnAGn}AGn}{{AH`AH`}AH`}{{AHbAHb}AHb}{{AHdAHd}AHd}{{AHfAHf}AHf}{{AGdAGd}j}{{AGfAGf}j}{{AGhAGh}j}{{AGjAGj}j}{{AGlAGl}j}{{AGnAGn}j}{{AH`AH`}j}{{AHbAHb}j}{{AHdAHd}j}{{AHfAHf}j}{{AGdAGd}AGd}{{AGfAGf}AGf}{{AGhAGh}AGh}{{AGjAGj}AGj}{{AGlAGl}AGl}{{AGnAGn}AGn}{{AH`AH`}AH`}{{AHbAHb}AHb}{{AHdAHd}AHd}{{AHfAHf}AHf}{{AGdAGd}j}{{AGfAGf}j}{{AGhAGh}j}{{AGjAGj}j}{{AGlAGl}j}{{AGnAGn}j}{{AH`AH`}j}{{AHbAHb}j}{{AHdAHd}j}{{AHfAHf}j}{AGdAb}0{AGfn}0{AGhn}0{AGjAb}0{AGlAb}0{AGnAb}0{AH`Ab}0{AHbAb}0{AHdAb}0{AHfAb}0{{AGdAGd}AGd}{{AGfAGf}AGf}{{AGhAGh}AGh}{{AGjAGj}AGj}{{AGlAGl}AGl}{{AGnAGn}AGn}{{AH`AH`}AH`}{{AHbAHb}AHb}{{AHdAHd}AHd}{{AHfAHf}AHf}{{AGdAGd}j}{{AGfAGf}j}{{AGhAGh}j}{{AGjAGj}j}{{AGlAGl}j}{{AGnAGn}j}{{AH`AH`}j}{{AHbAHb}j}{{AHdAHd}j}{{AHfAHf}j}{ce{}{}}00000000000000000000000000000000000000000000000000000000000`{c{{Af{j}}}If}{{}{{Af{{B`{AI`}}}}}}1{AIfj}{AIhAIh}{AIjAIj}{AHhAHh}{AGdAGd}{AGfAGf}{AGhAGh}{AIlAIl}{AGjAGj}{AGlAGl}{AGnAGn}{AInAIn}{AJ`AJ`}{AJbAJb}{AJdAJd}{AJfAJf}{AJhAJh}{AJjAJj}{AJlAJl}{AJnAJn}{AH`AH`}{AHbAHb}{AK`AK`}{AIfAIf}{AHdAHd}{AHfAHf}{AHjAHj}{AHlAHl}{AKbAKb}{AI`AI`}{AKdAKd}{{ce}j{}{}}00000000000000000000000000000{AGdAGd}{AGfAGf}{AGhAGh}{AGjAGj}{AGlAGl}{AGnAGn}{AH`AH`}{AHbAHb}?>{A`{{Af{j}}}}0{c{{Af{j}}}{{AKf{}{{Ah{{N`{`A`}}}}}}}}{AJh{{Af{j}}}}{{AGdAGd}A`}{{AGfAGf}A`}{{AGhAGh}A`}{{AGjAGj}A`}{{AGlAGl}A`}{{AGnAGn}A`}{{AH`AH`}A`}{{AHbAHb}A`}{{AHdAHd}A`}{{AHfAHf}A`}{{AGdAIh}A`}{AHjA`}{AHlA`}{{AJnAH`}{{Af{j}}}}{AIfAb}`{{}AIf}{{AGdAGd}AGd}{{AGfAGf}AGf}{{AGhAGh}AGh}{{AGjAGj}AGj}{{AGlAGl}AGl}{{AGnAGn}AGn}{{AH`AH`}AH`}{{AHbAHb}AHb}{{AHdAHd}AHd}{{AHfAHf}AHf}{{}{{Af{AIl}}}}>{{}AGd}{{}AGf}{{}AGh}{{}AGj}{{}AGl}{{}AGn}{{}AH`}{{}AHb}{{}AHd}{{}AHf}{{}{{Af{`}}}}``{{}{{Af{AJ`}}}}``{{AIhAIh}A`}{{AIjAIj}A`}{{AHhAHh}A`}{{AGdAGd}A`}{{AGfAGf}A`}{{AGhAGh}A`}{{AIlAIl}A`}{{AGjAGj}A`}{{AGlAGl}A`}{{AGnAGn}A`}{{AInAIn}A`}{{AJ`AJ`}A`}{{AJbAJb}A`}{{AJdAJd}A`}{{AJfAJf}A`}{{AJjAJj}A`}{{AJlAJl}A`}{{AJnAJn}A`}{{AH`AH`}A`}{{AHbAHb}A`}{{AK`AK`}A`}{{AIfAIf}A`}{{AHdAHd}A`}{{AHfAHf}A`}{{AI`AI`}A`}{{AKdAKd}A`}`{AHj{{B`{Ab}}}}{AHl{{B`{Ab}}}}{AHjA`}{AHlA`}{{AGdc}j{{Aj{}{{Ah{AGd}}}}}}{{AGfc}j{{Aj{}{{Ah{AGf}}}}}}{{AGhc}j{{Aj{}{{Ah{AGh}}}}}}{{AGjc}j{{Aj{}{{Ah{AGj}}}}}}{{AGlc}j{{Aj{}{{Ah{AGl}}}}}}{{AGnc}j{{Aj{}{{Ah{AGn}}}}}}{{AH`c}j{{Aj{}{{Ah{AH`}}}}}}{{AHbc}j{{Aj{}{{Ah{AHb}}}}}}{{AHdc}j{{Aj{}{{Ah{AHd}}}}}}{{AHfc}j{{Aj{}{{Ah{AHf}}}}}}{c{{Af{j}}}Bj}{{}{{Af{AGl}}}}{{}{{Af{{B`{AGn}}}}}}{{}{{Af{AJl}}}}{{AIhAl}An}{{AIjAl}An}{{AHhAl}An}{{AGdAl}An}0000{{AGfAl}An}0000{{AGhAl}An}0000{{AIlAl}An}{{AGjAl}An}0000{{AGlAl}An}0000{{AGnAl}An}0000{{AInAl}An}{{AJ`Al}An}{{AJbAl}An}{{AJdAl}An}{{AJfAl}An}{{AJhAl}An}{{AJjAl}An}{{AJlAl}An}{{AJnAl}An}{{AH`Al}An}0000{{AHbAl}An}0000{{AK`Al}An}{{AIfAl}An}{{AHdAl}An}0000{{AHfAl}An}0000{{AHjAl}An}{{AKbAl}An}{{AI`Al}An}{{AKdAl}An}{cc{}}00000000000000000000000000000{Ab{{B`{AGd}}}}{n{{B`{AGf}}}}{n{{B`{AGh}}}}{Ab{{B`{AGj}}}}{Ab{{B`{AGl}}}}{Ab{{B`{AGn}}}}{Ab{{B`{AH`}}}}{Ab{{B`{AHb}}}}{Ab{{B`{AHd}}}}{Ab{{B`{AHf}}}}{AbAGd}0{nAGf}0{nAGh}0{AbAGj}0{AbAGl}0{AbAGn}0{AbAH`}0{AbAHb}0{AbAHd}0{AbAHf}09876543210{AKhAI`}{cAGd{{Aj{}{{Ah{AGd}}}}}}{cAGf{{Aj{}{{Ah{AGf}}}}}}{cAGh{{Aj{}{{Ah{AGh}}}}}}{cAGj{{Aj{}{{Ah{AGj}}}}}}{cAGl{{Aj{}{{Ah{AGl}}}}}}{cAGn{{Aj{}{{Ah{AGn}}}}}}{cAH`{{Aj{}{{Ah{AH`}}}}}}{cAHb{{Aj{}{{Ah{AHb}}}}}}{cAHd{{Aj{}{{Ah{AHd}}}}}}{cAHf{{Aj{}{{Ah{AHf}}}}}}{Bb{{B`{AGd}}}}{Bb{{B`{AGf}}}}{Bb{{B`{AGh}}}}{Bb{{B`{AGj}}}}{Bb{{B`{AGl}}}}{Bb{{B`{AGn}}}}{Bb{{B`{AH`}}}}{Bb{{B`{AHb}}}}{Bb{{B`{AHd}}}}{Bb{{B`{AHf}}}}{AbAHh}{AIb{{B`{AI`}}}}{Df{{B`{AKd}}}}{AIbAI`}{c{{Af{Fh}}}{{I`{{Gl{Fj}}}}}}{{}Kd}{{}K`}1{{}{{Af{{Gl{Kd}}}}}}{{{B`{AI`}}}{{Af{AI`}}}}{{}AI`}0{{}{{B`{AI`}}}}{{{B`{AI`}}}{{Af{Bn}}}}0{K`{{Af{Bn}}}}{AIjAK`}57{{AHhc}jBd}{{AGdc}jBd}{{AGfc}jBd}{{AGhc}jBd}{{AGjc}jBd}{{AGlc}jBd}{{AGnc}jBd}{{AH`c}jBd}{{AHbc}jBd}{{AIfc}jBd}{{AHdc}jBd}{{AHfc}jBd}{{AI`c}jBd}{{AGdAGd}j}{{AGfAGf}j}{{AGhAGh}j}{{AGjAGj}j}{{AGlAGl}j}{{AGnAGn}j}{{AH`AH`}j}{{AHbAHb}j}{{AHdAHd}j}{{AHfAHf}j}{{AGdAGd}AGd}{{AGfAGf}AGf}{{AGhAGh}AGh}{{AGjAGj}AGj}{{AGlAGl}AGl}{{AGnAGn}AGn}{{AH`AH`}AH`}{{AHbAHb}AHb}{{AHdAHd}AHd}{{AHfAHf}AHf}{{AGdAGd}A`}{{AGfAGf}A`}{{AGhAGh}A`}{{AGjAGj}A`}{{AGlAGl}A`}{{AGnAGn}A`}{{AH`AH`}A`}{{AHbAHb}A`}{{AHdAHd}A`}{{AHfAHf}A`}{ce{}{}}00000000000000000000000000000{AGdc{}}{AGfc{}}{AGhc{}}{AGjc{}}{AGlc{}}{AGnc{}}{AH`c{}}{AHbc{}}{AHdc{}}{AHfc{}}{c{{Af{j}}}Bj}{AGdA`}{AGfA`}{AGhA`}{AGjA`}{AGlA`}{AGnA`}{AH`A`}{AHbA`}{AHdA`}{AHfA`}9876543210{AI`A`}{{}{{Af{A`}}}}{{AIfC`}A`}{AGd{{Bf{AGd}}}}{AGf{{Bf{AGf}}}}{AGh{{Bf{AGh}}}}{AGj{{Bf{AGj}}}}{AGl{{Bf{AGl}}}}{AGn{{Bf{AGn}}}}{AH`{{Bf{AH`}}}}{AHb{{Bf{AHb}}}}{AHd{{Bf{AHd}}}}{AHf{{Bf{AHf}}}}{AGd{{Bh{AGd}}}}{AGf{{Bh{AGf}}}}{AGh{{Bh{AGh}}}}{AGj{{Bh{AGj}}}}{AGl{{Bh{AGl}}}}{AGn{{Bh{AGn}}}}{AH`{{Bh{AH`}}}}{AHb{{Bh{AHb}}}}{AHd{{Bh{AHd}}}}{AHf{{Bh{AHf}}}}{AKd{{Af{j}}}}{{AI`AKd}{{Af{j}}}}0{AHlA`}{{}{{Af{AJd}}}}`{AIh{{Af{j}}}}{{AIhAHh}{{Af{j}}}}{{}AGd}{{}AIf}{Bn{{Af{Bn}}}}{AGdAGd}{AGfAGf}{AGhAGh}{AGjAGj}{AGlAGl}{AGnAGn}{AH`AH`}{AHbAHb}{AHdAHd}{AHfAHf}{{}{{Af{{B`{AKd}}}}}}{{cAKjAGh}{{Af{Ad}}}Bj}{{AI`AGf}{{Af{Ad}}}}{{cAKd}{{Af{j}}}Bj}{{{B`{AI`}}AIjAK`}{{Af{AK`}}}}{{AGdAGd}j}{{AGfAGf}j}{{AGhAGh}j}{{AGjAGj}j}{{AGlAGl}j}{{AGnAGn}j}{{AH`AH`}j}{{AHbAHb}j}{{AHdAHd}j}{{AHfAHf}j}{{{B`{AI`}}}{{Af{AIf}}}}{{}C`}{{{B`{AI`}}AIf}{{Af{j}}}}{{}j}{{AGdAGdA`}j}{{AGfAGfA`}j}{{AGhAGhA`}j}{{AGjAGjA`}j}{{AGlAGlA`}j}{{AGnAGnA`}j}{{AH`AH`A`}j}{{AHbAHbA`}j}{{AIfC`}j}{{AHdAHdA`}j}{{AHfAHfA`}j}{{{Bl{Db}}}{{Af{j}}}}{{{B`{AI`}}}{{Af{j}}}}{AIl{{Af{j}}}}{AJ`{{Af{j}}}}{h{{Af{j}}}}{AGl{{Af{j}}}}{{{B`{AGn}}}{{Af{j}}}}{AJl{{Af{j}}}}{{{B`{AJd}}}{{Af{j}}}}{{{B`{AKd}}}{{Af{j}}}}{AJj{{Af{j}}}}{AJb{{Af{j}}}}{AIn{{Af{j}}}}{AGj{{Af{j}}}}{{AJf{B`{{AKl{Db}}}}}{{Af{j}}}}{{{Bl{Fj}}{B`{Fl}}}{{Af{j}}}}{{{B`{AI`}}{B`{AI`}}}{{Af{j}}}}{{{B`{AI`}}Bn}{{Af{j}}}}0{{K`Bn}{{Af{j}}}}{{AIjAK`}{{Af{j}}}}{{}{{Af{AI`}}}}{AHjA`}{AJn{{Af{{B`{AHb}}}}}}````1{AHlA`}{AHj{{B`{Ab}}}}{AHl{{B`{Ab}}}}{{AGdAGd}AGd}{{AGfAGf}AGf}{{AGhAGh}AGh}{{AGjAGj}AGj}{{AGlAGl}AGl}{{AGnAGn}AGn}{{AH`AH`}AH`}{{AHbAHb}AHb}{{AHdAHd}AHd}{{AHfAHf}AHf}{{AGdAGd}j}{{AGfAGf}j}{{AGhAGh}j}{{AGjAGj}j}{{AGlAGl}j}{{AGnAGn}j}{{AH`AH`}j}{{AHbAHb}j}{{AHdAHd}j}{{AHfAHf}j}{{AGdAGd}AGd}{{AGfAGf}AGf}{{AGhAGh}AGh}{{AGjAGj}AGj}{{AGlAGl}AGl}{{AGnAGn}AGn}{{AH`AH`}AH`}{{AHbAHb}AHb}{{AHdAHd}AHd}{{AHfAHf}AHf}{AHj{{B`{Ab}}}}{AHl{{B`{Ab}}}}{{}{{Af{j}}}}{AI`{{Af{j}}}}0{{}{{Af{AJb}}}}{{}{{Af{AIn}}}}{ce{}{}}00000000000000000000000000000{{AGdAGd}j}{{AGfAGf}j}{{AGhAGh}j}{{AGjAGj}j}{{AGlAGl}j}{{AGnAGn}j}{{AH`AH`}j}{{AHbAHb}j}{{AHdAHd}j}{{AHfAHf}j}{AHlA`}{AHl{{B`{Ab}}}}{c{{Cb{e}}}{}{}}000000{Bn{{Cb{AIlc}}}{}}111{Bn{{Cb{AInc}}}{}}2{Ab{{Cb{AJ`c}}}{}}33{Ab{{Cb{AJbc}}}{}}{Ab{{Cb{AJdc}}}{}}55555{Ab{{Cb{AJlc}}}{}}6{Ab{{Cb{AJnc}}}{}}77777777777777777777777777777777777777777{cCd{}}00000000000000000000000000000{IjIj}{{}{{Af{AGj}}}}{{AGdAGd}AGd}{{AGfAGf}AGf}{{AGhAGh}AGh}{{AGjAGj}AGj}{{AGlAGl}AGl}{{AGnAGn}AGn}{{AH`AH`}AH`}{{AHbAHb}AHb}{{AHdAHd}AHd}{{AHfAHf}AHf}{{AIfC`}j}{{}{{Af{C`}}}}{AHd{{Af{{B`{{N`{AI`AHj}}}}}}}}{{cAHf}{{Af{{B`{AHl}}}}}{{I`{AKb}}}}{{AI`AHd}{{Af{{B`{AHj}}}}}}{{{B`{AI`}}AHd}{{Af{{B`{AHj}}}}}}","c":[1022],"p":[[5,"PollFlags",11],[5,"EventfdFlags",11],[5,"PollFd",11],[5,"BorrowedFd",390],[1,"unit"],[1,"u16"],[8,"c_uint",5142],[1,"bool"],[1,"u32"],[5,"OwnedFd",390],[8,"Result",1971],[17,"Item"],[10,"IntoIterator",5143],[5,"Formatter",5144],[8,"Result",5144],[6,"Option",5145],[1,"str"],[10,"Hasher",5146],[5,"Iter",5147],[5,"IterNames",5147],[10,"AsFd",390],[1,"slice"],[1,"i32"],[1,"usize"],[6,"Result",5148],[5,"TypeId",5149],[20,"EventData",155],[5,"EventFlags",155],[5,"CreateFlags",155],[5,"EventVec",155],[5,"Event",155],[5,"Iter",155],[6,"c_void",5150],[1,"u64"],[8,"c_int",5142],[10,"AsRawFd",390],[5,"Error",5144],[5,"UnixStream",5151],[5,"PidFd",5152],[5,"ChildStderr",5153],[5,"UnixListener",5154],[5,"ChildStdin",5153],[5,"UnixDatagram",5155],[5,"UdpSocket",5156],[5,"ChildStdout",5153],[5,"TcpStream",5157],[5,"File",5158],[5,"TcpListener",5157],[10,"FromRawFd",390],[10,"IntoRawFd",390],[5,"Error",5159],[5,"CString",443],[1,"u8"],[5,"CStr",443],[6,"Cow",5160],[1,"i8"],[5,"Bytes",5161],[5,"NulError",443],[5,"FromBytesWithNulError",443],[6,"Ordering",5162],[5,"NonZero",5163],[5,"Vec",5164],[5,"Box",5165],[5,"FromBytesUntilNulError",5161],[5,"FromVecWithNulError",5166],[5,"RangeFull",5167],[5,"RangeFrom",5167],[5,"String",5168],[5,"IntoStringError",5166],[17,"Output"],[10,"FnOnce",5169],[10,"Into",5170],[5,"Utf8Error",5171],[5,"Access",559],[10,"Arg",4051],[5,"AtFlags",559],[5,"Mode",559],[5,"OFlags",559],[5,"ResolveFlags",559],[5,"RenameFlags",559],[5,"MemfdFlags",559],[5,"SealFlags",559],[5,"StatxFlags",559],[5,"FallocateFlags",559],[5,"StatVfsMountFlags",559],[5,"IFlags",559],[5,"XattrFlags",559],[5,"Uid",559],[8,"RawUid",4058],[5,"Gid",559],[8,"RawGid",4058],[8,"RawMode",559],[6,"FileType",559],[10,"StatExt",559],[1,"i64"],[10,"MetadataExt",559],[8,"Stat",559],[5,"Dir",559],[6,"Advice",559],[6,"FlockOperation",559],[5,"Timestamps",559],[6,"SeekFrom",559],[10,"OpenOptionsExt",559],[5,"RawDirEntry",559],[5,"DirEntry",559],[8,"c_char",5142],[8,"StatFs",559],[5,"StatVfs",559],[10,"DirEntryExt",559],[10,"FileTypeExt",559],[5,"RawDir",559],[1,"tuple"],[8,"Dev",559],[20,"MaybeUninit",5172],[10,"FileExt",559],[5,"IoSliceMut",1971],[8,"Statx",559],[5,"IoSlice",1971],[5,"CreateFlags",1792],[5,"WatchFlags",1792],[5,"FdFlags",1971],[5,"ReadWriteFlags",1971],[5,"DupFlags",1971],[5,"Errno",1971],[8,"RawFd",390],[6,"ErrorKind",5159],[10,"FnMut",5169],[10,"Ioctl",2350],[5,"NoArg",2350],[10,"CompileTimeOpcode",2350],[5,"Getter",2350],[5,"Setter",2350],[5,"Updater",2350],[5,"Opcode",2350],[6,"Direction",2350],[10,"Debug",5144],[8,"RawOpcode",2350],[8,"IoctlOutput",2350],[5,"SocketAddrUnix",2491],[5,"SocketFlags",2491],[6,"SocketAddrAny",2491],[5,"AddressFamily",2491],[5,"SendFlags",2491],[5,"RecvFlags",2491],[5,"SocketType",2491],[8,"RawSocketType",2491],[8,"RawAddressFamily",2491],[5,"Protocol",2491],[8,"RawProtocol",2491],[5,"Ipv4Addr",2491],[5,"Ipv6Addr",2491],[6,"SocketAddr",2491],[5,"SocketAddrV4",2491],[5,"SocketAddrV6",2491],[5,"SocketAddrXdp",3522],[5,"SendAncillaryBuffer",2491],[6,"Shutdown",2491],[5,"UCred",2491],[6,"IpAddr",2491],[5,"AncillaryDrain",2491],[10,"FromIterator",5143],[5,"AncillaryIter",2491],[5,"RecvAncillaryBuffer",2491],[6,"SendAncillaryMessage",2491],[1,"array"],[1,"u128"],[5,"AddrParseError",5173],[6,"Ipv6MulticastScope",5174],[8,"SocketAddrStorage",2491],[5,"RecvMsgReturn",2491],[5,"IntoIter",5145],[6,"Timeout",3415],[5,"Duration",5175],[5,"XdpMmapOffsets",3522],[5,"XdpOptionsFlags",3522],[5,"XdpStatistics",3522],[5,"XdpUmemReg",3522],[5,"SockaddrXdpFlags",3522],[5,"XdpRingFlags",3522],[5,"XdpUmemRegFlags",3522],[5,"XdpDescOptions",3522],[5,"XdpRingOffset",3522],[5,"XdpOptions",3522],[5,"XdpDesc",3522],[10,"Sized",5176],[5,"MembarrierQuery",4058],[5,"PidfdFlags",4058],[5,"PidfdGetfdFlags",4058],[5,"UnalignedAccessControl",4058],[5,"FloatingPointEmulationControl",4058],[5,"FloatingPointExceptionMode",4058],[5,"SpeculationFeatureControl",4058],[5,"SpeculationFeatureState",4058],[5,"WaitOptions",4058],[5,"WaitidOptions",4058],[5,"Cpuid",4058],[5,"WaitStatus",4058],[5,"WaitidStatus",4058],[8,"siginfo_t",5177],[5,"Pid",4058],[8,"RawPid",4058],[8,"NonZeroI32",5163],[5,"CpuSet",4058],[6,"MembarrierCommand",4058],[6,"Resource",4058],[6,"DumpableBehavior",4058],[6,"TimingMethod",4058],[6,"EndianMode",4058],[6,"TimeStampCounterReadability",4058],[6,"MachineCheckMemoryCorruptionKillPolicy",4058],[6,"VirtualMemoryMapAddress",4058],[5,"PrctlMmMap",4058],[6,"PTracer",4058],[6,"FloatingPointMode",4058],[6,"SpeculationFeature",4058],[5,"Rlimit",4058],[6,"WaitId",4058],[6,"Signal",4058],[10,"Iterator",5178],[5,"Child",5153],[8,"ForeignRawFd",4058],[5,"NonNull",5179],[8,"StatxTimestamp",559],[8,"Timespec",559],[5,"BadOpcode",2350],[5,"ReadOpcode",2350],[5,"WriteOpcode",2350],[5,"ReadWriteOpcode",2350],[5,"NoneOpcode",2350],[6,"RecvAncillaryMessage",2491]],"b":[[39,"impl-Flags-for-PollFlags"],[40,"impl-PollFlags"],[41,"impl-Flags-for-EventfdFlags"],[42,"impl-EventfdFlags"],[74,"impl-Octal-for-PollFlags"],[75,"impl-UpperHex-for-PollFlags"],[76,"impl-Binary-for-PollFlags"],[77,"impl-Debug-for-PollFlags"],[78,"impl-LowerHex-for-PollFlags"],[80,"impl-Debug-for-EventfdFlags"],[81,"impl-UpperHex-for-EventfdFlags"],[82,"impl-Octal-for-EventfdFlags"],[83,"impl-Binary-for-EventfdFlags"],[84,"impl-LowerHex-for-EventfdFlags"],[90,"impl-PollFlags"],[91,"impl-Flags-for-PollFlags"],[92,"impl-Flags-for-EventfdFlags"],[93,"impl-EventfdFlags"],[178,"impl-CreateFlags"],[179,"impl-CreateFlags"],[180,"impl-EventFlags"],[181,"impl-EventFlags"],[190,"impl-CreateFlags"],[191,"impl-CreateFlags"],[192,"impl-Flags-for-CreateFlags"],[193,"impl-Flags-for-EventFlags"],[194,"impl-EventFlags"],[195,"impl-EventFlags"],[222,"impl-CreateFlags"],[223,"impl-CreateFlags"],[224,"impl-EventFlags"],[225,"impl-EventFlags"],[226,"impl-CreateFlags"],[227,"impl-CreateFlags"],[228,"impl-EventFlags"],[229,"impl-EventFlags"],[234,"impl-CreateFlags"],[235,"impl-CreateFlags"],[236,"impl-EventFlags"],[237,"impl-EventFlags"],[238,"impl-CreateFlags"],[239,"impl-CreateFlags"],[240,"impl-EventFlags"],[241,"impl-EventFlags"],[249,"impl-UpperHex-for-CreateFlags"],[250,"impl-Debug-for-CreateFlags"],[251,"impl-Binary-for-CreateFlags"],[252,"impl-LowerHex-for-CreateFlags"],[253,"impl-Octal-for-CreateFlags"],[254,"impl-Binary-for-EventFlags"],[255,"impl-LowerHex-for-EventFlags"],[256,"impl-Octal-for-EventFlags"],[257,"impl-Debug-for-EventFlags"],[258,"impl-UpperHex-for-EventFlags"],[265,"impl-CreateFlags"],[266,"impl-CreateFlags"],[267,"impl-EventFlags"],[268,"impl-EventFlags"],[269,"impl-Flags-for-CreateFlags"],[270,"impl-CreateFlags"],[271,"impl-CreateFlags"],[272,"impl-EventFlags"],[273,"impl-EventFlags"],[274,"impl-Flags-for-EventFlags"],[275,"impl-CreateFlags"],[276,"impl-CreateFlags"],[277,"impl-EventFlags"],[278,"impl-EventFlags"],[281,"impl-CreateFlags"],[282,"impl-CreateFlags"],[283,"impl-EventFlags"],[284,"impl-EventFlags"],[290,"impl-CreateFlags"],[291,"impl-CreateFlags"],[292,"impl-EventFlags"],[293,"impl-EventFlags"],[294,"impl-CreateFlags"],[295,"impl-CreateFlags"],[296,"impl-EventFlags"],[297,"impl-EventFlags"],[298,"impl-CreateFlags"],[299,"impl-CreateFlags"],[300,"impl-EventFlags"],[301,"impl-EventFlags"],[312,"impl-CreateFlags"],[313,"impl-CreateFlags"],[314,"impl-EventFlags"],[315,"impl-EventFlags"],[317,"impl-CreateFlags"],[318,"impl-CreateFlags"],[319,"impl-EventFlags"],[320,"impl-EventFlags"],[322,"impl-CreateFlags"],[323,"impl-CreateFlags"],[324,"impl-EventFlags"],[325,"impl-EventFlags"],[326,"impl-CreateFlags"],[327,"impl-CreateFlags"],[328,"impl-EventFlags"],[329,"impl-EventFlags"],[338,"impl-CreateFlags"],[339,"impl-CreateFlags"],[340,"impl-EventFlags"],[341,"impl-EventFlags"],[344,"impl-CreateFlags"],[345,"impl-CreateFlags"],[346,"impl-EventFlags"],[347,"impl-EventFlags"],[353,"impl-CreateFlags"],[354,"impl-CreateFlags"],[355,"impl-EventFlags"],[356,"impl-EventFlags"],[361,"impl-CreateFlags"],[362,"impl-CreateFlags"],[363,"impl-EventFlags"],[364,"impl-EventFlags"],[384,"impl-CreateFlags"],[385,"impl-CreateFlags"],[386,"impl-EventFlags"],[387,"impl-EventFlags"],[414,"impl-From%3CUnixStream%3E-for-OwnedFd"],[415,"impl-From%3CPidFd%3E-for-OwnedFd"],[416,"impl-From%3CChildStderr%3E-for-OwnedFd"],[417,"impl-From%3CUnixListener%3E-for-OwnedFd"],[418,"impl-From%3CChildStdin%3E-for-OwnedFd"],[419,"impl-From%3CUnixDatagram%3E-for-OwnedFd"],[420,"impl-From%3CUdpSocket%3E-for-OwnedFd"],[421,"impl-From%3CChildStdout%3E-for-OwnedFd"],[422,"impl-From%3CTcpStream%3E-for-OwnedFd"],[423,"impl-From%3CFile%3E-for-OwnedFd"],[424,"impl-From%3CTcpListener%3E-for-OwnedFd"],[450,"impl-Arg-for-CString"],[451,"impl-Arg-for-%26CString"],[456,"impl-Arg-for-CString"],[457,"impl-Arg-for-%26CString"],[491,"impl-Display-for-NulError"],[492,"impl-Debug-for-NulError"],[494,"impl-Debug-for-FromBytesWithNulError"],[495,"impl-Display-for-FromBytesWithNulError"],[496,"impl-From%3CCow%3C\'a,+CStr%3E%3E-for-CString"],[498,"impl-From%3C%26CStr%3E-for-CString"],[499,"impl-From%3CVec%3CNonZero%3Cu8%3E%3E%3E-for-CString"],[500,"impl-From%3CBox%3CCStr%3E%3E-for-CString"],[521,"impl-Arg-for-CString"],[522,"impl-Arg-for-%26CString"],[528,"impl-Arg-for-%26CString"],[529,"impl-Arg-for-CString"],[545,"impl-Arg-for-%26CString"],[546,"impl-Arg-for-CString"],[547,"impl-Arg-for-%26CStr"],[548,"impl-CStr"],[843,"impl-Flags-for-Access"],[844,"impl-Access"],[845,"impl-AtFlags"],[846,"impl-Flags-for-AtFlags"],[847,"impl-Flags-for-Mode"],[848,"impl-Mode"],[849,"impl-Flags-for-OFlags"],[850,"impl-OFlags"],[851,"impl-Flags-for-ResolveFlags"],[852,"impl-ResolveFlags"],[853,"impl-Flags-for-RenameFlags"],[854,"impl-RenameFlags"],[855,"impl-MemfdFlags"],[856,"impl-Flags-for-MemfdFlags"],[857,"impl-SealFlags"],[858,"impl-Flags-for-SealFlags"],[859,"impl-Flags-for-StatxFlags"],[860,"impl-StatxFlags"],[861,"impl-Flags-for-FallocateFlags"],[862,"impl-FallocateFlags"],[863,"impl-Flags-for-StatVfsMountFlags"],[864,"impl-StatVfsMountFlags"],[865,"impl-Flags-for-IFlags"],[866,"impl-IFlags"],[867,"impl-XattrFlags"],[868,"impl-Flags-for-XattrFlags"],[1129,"impl-UpperHex-for-Access"],[1130,"impl-Binary-for-Access"],[1131,"impl-Octal-for-Access"],[1132,"impl-LowerHex-for-Access"],[1133,"impl-Debug-for-Access"],[1134,"impl-Binary-for-AtFlags"],[1135,"impl-LowerHex-for-AtFlags"],[1136,"impl-Debug-for-AtFlags"],[1137,"impl-UpperHex-for-AtFlags"],[1138,"impl-Octal-for-AtFlags"],[1139,"impl-Debug-for-Mode"],[1140,"impl-Binary-for-Mode"],[1141,"impl-LowerHex-for-Mode"],[1142,"impl-UpperHex-for-Mode"],[1143,"impl-Octal-for-Mode"],[1144,"impl-Binary-for-OFlags"],[1145,"impl-UpperHex-for-OFlags"],[1146,"impl-Debug-for-OFlags"],[1147,"impl-Octal-for-OFlags"],[1148,"impl-LowerHex-for-OFlags"],[1149,"impl-UpperHex-for-ResolveFlags"],[1150,"impl-Debug-for-ResolveFlags"],[1151,"impl-LowerHex-for-ResolveFlags"],[1152,"impl-Binary-for-ResolveFlags"],[1153,"impl-Octal-for-ResolveFlags"],[1154,"impl-Debug-for-RenameFlags"],[1155,"impl-Binary-for-RenameFlags"],[1156,"impl-UpperHex-for-RenameFlags"],[1157,"impl-Octal-for-RenameFlags"],[1158,"impl-LowerHex-for-RenameFlags"],[1161,"impl-Debug-for-MemfdFlags"],[1162,"impl-UpperHex-for-MemfdFlags"],[1163,"impl-Octal-for-MemfdFlags"],[1164,"impl-Binary-for-MemfdFlags"],[1165,"impl-LowerHex-for-MemfdFlags"],[1166,"impl-Debug-for-SealFlags"],[1167,"impl-LowerHex-for-SealFlags"],[1168,"impl-Octal-for-SealFlags"],[1169,"impl-UpperHex-for-SealFlags"],[1170,"impl-Binary-for-SealFlags"],[1171,"impl-Binary-for-StatxFlags"],[1172,"impl-LowerHex-for-StatxFlags"],[1173,"impl-Debug-for-StatxFlags"],[1174,"impl-UpperHex-for-StatxFlags"],[1175,"impl-Octal-for-StatxFlags"],[1176,"impl-LowerHex-for-FallocateFlags"],[1177,"impl-Binary-for-FallocateFlags"],[1178,"impl-Octal-for-FallocateFlags"],[1179,"impl-Debug-for-FallocateFlags"],[1180,"impl-UpperHex-for-FallocateFlags"],[1181,"impl-LowerHex-for-StatVfsMountFlags"],[1182,"impl-Octal-for-StatVfsMountFlags"],[1183,"impl-Debug-for-StatVfsMountFlags"],[1184,"impl-UpperHex-for-StatVfsMountFlags"],[1185,"impl-Binary-for-StatVfsMountFlags"],[1188,"impl-Octal-for-IFlags"],[1189,"impl-LowerHex-for-IFlags"],[1190,"impl-Binary-for-IFlags"],[1191,"impl-UpperHex-for-IFlags"],[1193,"impl-Binary-for-XattrFlags"],[1194,"impl-LowerHex-for-XattrFlags"],[1195,"impl-UpperHex-for-XattrFlags"],[1196,"impl-Octal-for-XattrFlags"],[1197,"impl-Debug-for-XattrFlags"],[1241,"impl-Access"],[1242,"impl-Flags-for-Access"],[1243,"impl-AtFlags"],[1244,"impl-Flags-for-AtFlags"],[1245,"impl-Flags-for-Mode"],[1246,"impl-Mode"],[1247,"impl-OFlags"],[1248,"impl-Flags-for-OFlags"],[1249,"impl-Flags-for-ResolveFlags"],[1250,"impl-ResolveFlags"],[1251,"impl-RenameFlags"],[1252,"impl-Flags-for-RenameFlags"],[1253,"impl-Flags-for-MemfdFlags"],[1254,"impl-MemfdFlags"],[1255,"impl-Flags-for-SealFlags"],[1256,"impl-SealFlags"],[1257,"impl-Flags-for-StatxFlags"],[1258,"impl-StatxFlags"],[1259,"impl-Flags-for-FallocateFlags"],[1260,"impl-FallocateFlags"],[1261,"impl-Flags-for-StatVfsMountFlags"],[1262,"impl-StatVfsMountFlags"],[1263,"impl-IFlags"],[1264,"impl-Flags-for-IFlags"],[1265,"impl-Flags-for-XattrFlags"],[1266,"impl-XattrFlags"],[1817,"impl-CreateFlags"],[1818,"impl-CreateFlags"],[1819,"impl-WatchFlags"],[1820,"impl-WatchFlags"],[1829,"impl-CreateFlags"],[1830,"impl-Flags-for-CreateFlags"],[1831,"impl-CreateFlags"],[1832,"impl-WatchFlags"],[1833,"impl-WatchFlags"],[1834,"impl-Flags-for-WatchFlags"],[1847,"impl-CreateFlags"],[1848,"impl-CreateFlags"],[1849,"impl-WatchFlags"],[1850,"impl-WatchFlags"],[1851,"impl-CreateFlags"],[1852,"impl-CreateFlags"],[1853,"impl-WatchFlags"],[1854,"impl-WatchFlags"],[1856,"impl-CreateFlags"],[1857,"impl-CreateFlags"],[1858,"impl-WatchFlags"],[1859,"impl-WatchFlags"],[1860,"impl-CreateFlags"],[1861,"impl-CreateFlags"],[1862,"impl-WatchFlags"],[1863,"impl-WatchFlags"],[1868,"impl-LowerHex-for-CreateFlags"],[1869,"impl-Binary-for-CreateFlags"],[1870,"impl-UpperHex-for-CreateFlags"],[1871,"impl-Debug-for-CreateFlags"],[1872,"impl-Octal-for-CreateFlags"],[1873,"impl-Binary-for-WatchFlags"],[1874,"impl-Octal-for-WatchFlags"],[1875,"impl-UpperHex-for-WatchFlags"],[1876,"impl-Debug-for-WatchFlags"],[1877,"impl-LowerHex-for-WatchFlags"],[1880,"impl-CreateFlags"],[1881,"impl-CreateFlags"],[1882,"impl-WatchFlags"],[1883,"impl-WatchFlags"],[1884,"impl-Flags-for-CreateFlags"],[1885,"impl-CreateFlags"],[1886,"impl-CreateFlags"],[1887,"impl-WatchFlags"],[1888,"impl-Flags-for-WatchFlags"],[1889,"impl-WatchFlags"],[1890,"impl-CreateFlags"],[1891,"impl-CreateFlags"],[1892,"impl-WatchFlags"],[1893,"impl-WatchFlags"],[1896,"impl-CreateFlags"],[1897,"impl-CreateFlags"],[1898,"impl-WatchFlags"],[1899,"impl-WatchFlags"],[1905,"impl-CreateFlags"],[1906,"impl-CreateFlags"],[1907,"impl-WatchFlags"],[1908,"impl-WatchFlags"],[1909,"impl-CreateFlags"],[1910,"impl-CreateFlags"],[1911,"impl-WatchFlags"],[1912,"impl-WatchFlags"],[1913,"impl-CreateFlags"],[1914,"impl-CreateFlags"],[1915,"impl-WatchFlags"],[1916,"impl-WatchFlags"],[1921,"impl-CreateFlags"],[1922,"impl-CreateFlags"],[1923,"impl-WatchFlags"],[1924,"impl-WatchFlags"],[1925,"impl-CreateFlags"],[1926,"impl-CreateFlags"],[1927,"impl-WatchFlags"],[1928,"impl-WatchFlags"],[1929,"impl-CreateFlags"],[1930,"impl-CreateFlags"],[1931,"impl-WatchFlags"],[1932,"impl-WatchFlags"],[1933,"impl-CreateFlags"],[1934,"impl-CreateFlags"],[1935,"impl-WatchFlags"],[1936,"impl-WatchFlags"],[1939,"impl-CreateFlags"],[1940,"impl-CreateFlags"],[1941,"impl-WatchFlags"],[1942,"impl-WatchFlags"],[1943,"impl-CreateFlags"],[1944,"impl-CreateFlags"],[1945,"impl-WatchFlags"],[1946,"impl-WatchFlags"],[1951,"impl-CreateFlags"],[1952,"impl-CreateFlags"],[1953,"impl-WatchFlags"],[1954,"impl-WatchFlags"],[1957,"impl-CreateFlags"],[1958,"impl-CreateFlags"],[1959,"impl-WatchFlags"],[1960,"impl-WatchFlags"],[1967,"impl-CreateFlags"],[1968,"impl-CreateFlags"],[1969,"impl-WatchFlags"],[1970,"impl-WatchFlags"],[2140,"impl-Flags-for-FdFlags"],[2141,"impl-FdFlags"],[2142,"impl-ReadWriteFlags"],[2143,"impl-Flags-for-ReadWriteFlags"],[2144,"impl-Flags-for-DupFlags"],[2145,"impl-DupFlags"],[2204,"impl-Debug-for-Errno"],[2205,"impl-Display-for-Errno"],[2206,"impl-UpperHex-for-FdFlags"],[2207,"impl-Debug-for-FdFlags"],[2208,"impl-LowerHex-for-FdFlags"],[2209,"impl-Octal-for-FdFlags"],[2210,"impl-Binary-for-FdFlags"],[2211,"impl-Octal-for-ReadWriteFlags"],[2212,"impl-LowerHex-for-ReadWriteFlags"],[2213,"impl-Binary-for-ReadWriteFlags"],[2214,"impl-UpperHex-for-ReadWriteFlags"],[2215,"impl-Debug-for-ReadWriteFlags"],[2217,"impl-Binary-for-DupFlags"],[2218,"impl-UpperHex-for-DupFlags"],[2219,"impl-LowerHex-for-DupFlags"],[2220,"impl-Debug-for-DupFlags"],[2221,"impl-Octal-for-DupFlags"],[2231,"impl-FdFlags"],[2232,"impl-Flags-for-FdFlags"],[2233,"impl-ReadWriteFlags"],[2234,"impl-Flags-for-ReadWriteFlags"],[2235,"impl-Flags-for-DupFlags"],[2236,"impl-DupFlags"],[2629,"impl-BitAnd%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[2630,"impl-BitAnd%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[2631,"impl-BitAnd%3CIpv4Addr%3E-for-%26Ipv4Addr"],[2632,"impl-BitAnd-for-Ipv4Addr"],[2633,"impl-BitAnd%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[2634,"impl-BitAnd-for-Ipv6Addr"],[2635,"impl-BitAnd%3CIpv6Addr%3E-for-%26Ipv6Addr"],[2636,"impl-BitAnd%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[2640,"impl-BitAndAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[2641,"impl-BitAndAssign-for-Ipv4Addr"],[2642,"impl-BitAndAssign-for-Ipv6Addr"],[2643,"impl-BitAndAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[2647,"impl-BitOr%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[2648,"impl-BitOr%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[2649,"impl-BitOr-for-Ipv4Addr"],[2650,"impl-BitOr%3CIpv4Addr%3E-for-%26Ipv4Addr"],[2651,"impl-BitOr%3CIpv6Addr%3E-for-%26Ipv6Addr"],[2652,"impl-BitOr%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[2653,"impl-BitOr%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[2654,"impl-BitOr-for-Ipv6Addr"],[2658,"impl-BitOrAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[2659,"impl-BitOrAssign-for-Ipv4Addr"],[2660,"impl-BitOrAssign-for-Ipv6Addr"],[2661,"impl-BitOrAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[2662,"impl-Flags-for-SendFlags"],[2663,"impl-SendFlags"],[2664,"impl-Flags-for-RecvFlags"],[2665,"impl-RecvFlags"],[2666,"impl-Flags-for-SocketFlags"],[2667,"impl-SocketFlags"],[2799,"impl-PartialEq%3CIpv4Addr%3E-for-IpAddr"],[2800,"impl-PartialEq%3CIpv6Addr%3E-for-IpAddr"],[2801,"impl-PartialEq-for-IpAddr"],[2802,"impl-PartialEq-for-Ipv4Addr"],[2803,"impl-PartialEq%3CIpAddr%3E-for-Ipv4Addr"],[2804,"impl-PartialEq%3CIpAddr%3E-for-Ipv6Addr"],[2805,"impl-PartialEq-for-Ipv6Addr"],[2817,"impl-UpperHex-for-SendFlags"],[2818,"impl-Octal-for-SendFlags"],[2819,"impl-Debug-for-SendFlags"],[2820,"impl-Binary-for-SendFlags"],[2821,"impl-LowerHex-for-SendFlags"],[2822,"impl-Debug-for-RecvFlags"],[2823,"impl-UpperHex-for-RecvFlags"],[2824,"impl-Binary-for-RecvFlags"],[2825,"impl-Octal-for-RecvFlags"],[2826,"impl-LowerHex-for-RecvFlags"],[2832,"impl-Debug-for-SocketFlags"],[2833,"impl-Binary-for-SocketFlags"],[2834,"impl-Octal-for-SocketFlags"],[2835,"impl-UpperHex-for-SocketFlags"],[2836,"impl-LowerHex-for-SocketFlags"],[2838,"impl-Debug-for-IpAddr"],[2839,"impl-Display-for-IpAddr"],[2840,"impl-Display-for-Ipv4Addr"],[2841,"impl-Debug-for-Ipv4Addr"],[2842,"impl-Debug-for-Ipv6Addr"],[2843,"impl-Display-for-Ipv6Addr"],[2844,"impl-Display-for-SocketAddr"],[2845,"impl-Debug-for-SocketAddr"],[2846,"impl-Display-for-SocketAddrV4"],[2847,"impl-Debug-for-SocketAddrV4"],[2848,"impl-Debug-for-SocketAddrV6"],[2849,"impl-Display-for-SocketAddrV6"],[2867,"impl-From%3CSocketAddr%3E-for-SocketAddrAny"],[2868,"impl-From%3CSocketAddrUnix%3E-for-SocketAddrAny"],[2869,"impl-From%3CSocketAddrV4%3E-for-SocketAddrAny"],[2871,"impl-From%3CSocketAddrV6%3E-for-SocketAddrAny"],[2878,"impl-From%3CIpv4Addr%3E-for-IpAddr"],[2879,"impl-From%3C%5Bu16;+8%5D%3E-for-IpAddr"],[2880,"impl-From%3C%5Bu8;+16%5D%3E-for-IpAddr"],[2881,"impl-From%3CIpv6Addr%3E-for-IpAddr"],[2883,"impl-From%3C%5Bu8;+4%5D%3E-for-IpAddr"],[2884,"impl-From%3Cu32%3E-for-Ipv4Addr"],[2886,"impl-From%3C%5Bu8;+4%5D%3E-for-Ipv4Addr"],[2888,"impl-From%3Cu128%3E-for-Ipv6Addr"],[2889,"impl-From%3C%5Bu16;+8%5D%3E-for-Ipv6Addr"],[2890,"impl-From%3C%5Bu8;+16%5D%3E-for-Ipv6Addr"],[2892,"impl-From%3C(I,+u16)%3E-for-SocketAddr"],[2893,"impl-From%3CSocketAddrV4%3E-for-SocketAddr"],[2894,"impl-From%3CSocketAddrV6%3E-for-SocketAddr"],[2902,"impl-SendFlags"],[2903,"impl-Flags-for-SendFlags"],[2904,"impl-RecvFlags"],[2905,"impl-Flags-for-RecvFlags"],[2906,"impl-SocketFlags"],[2907,"impl-Flags-for-SocketFlags"],[3052,"impl-Not-for-Ipv4Addr"],[3053,"impl-Not-for-%26Ipv4Addr"],[3054,"impl-Not-for-%26Ipv6Addr"],[3055,"impl-Not-for-Ipv6Addr"],[3067,"impl-PartialOrd-for-IpAddr"],[3068,"impl-PartialOrd%3CIpv4Addr%3E-for-IpAddr"],[3069,"impl-PartialOrd%3CIpv6Addr%3E-for-IpAddr"],[3070,"impl-PartialOrd-for-Ipv4Addr"],[3071,"impl-PartialOrd%3CIpAddr%3E-for-Ipv4Addr"],[3072,"impl-PartialOrd%3CIpAddr%3E-for-Ipv6Addr"],[3073,"impl-PartialOrd-for-Ipv6Addr"],[3551,"impl-XdpOptionsFlags"],[3552,"impl-XdpOptionsFlags"],[3553,"impl-SockaddrXdpFlags"],[3554,"impl-SockaddrXdpFlags"],[3555,"impl-XdpRingFlags"],[3556,"impl-XdpRingFlags"],[3557,"impl-XdpUmemRegFlags"],[3558,"impl-XdpUmemRegFlags"],[3559,"impl-XdpDescOptions"],[3560,"impl-XdpDescOptions"],[3581,"impl-XdpOptionsFlags"],[3582,"impl-Flags-for-XdpOptionsFlags"],[3583,"impl-XdpOptionsFlags"],[3584,"impl-Flags-for-SockaddrXdpFlags"],[3585,"impl-SockaddrXdpFlags"],[3586,"impl-SockaddrXdpFlags"],[3587,"impl-Flags-for-XdpRingFlags"],[3588,"impl-XdpRingFlags"],[3589,"impl-XdpRingFlags"],[3590,"impl-XdpUmemRegFlags"],[3591,"impl-Flags-for-XdpUmemRegFlags"],[3592,"impl-XdpUmemRegFlags"],[3593,"impl-XdpDescOptions"],[3594,"impl-XdpDescOptions"],[3595,"impl-Flags-for-XdpDescOptions"],[3657,"impl-XdpOptionsFlags"],[3658,"impl-XdpOptionsFlags"],[3659,"impl-SockaddrXdpFlags"],[3660,"impl-SockaddrXdpFlags"],[3661,"impl-XdpRingFlags"],[3662,"impl-XdpRingFlags"],[3663,"impl-XdpUmemRegFlags"],[3664,"impl-XdpUmemRegFlags"],[3665,"impl-XdpDescOptions"],[3666,"impl-XdpDescOptions"],[3668,"impl-XdpOptionsFlags"],[3669,"impl-XdpOptionsFlags"],[3670,"impl-SockaddrXdpFlags"],[3671,"impl-SockaddrXdpFlags"],[3672,"impl-XdpRingFlags"],[3673,"impl-XdpRingFlags"],[3674,"impl-XdpUmemRegFlags"],[3675,"impl-XdpUmemRegFlags"],[3676,"impl-XdpDescOptions"],[3677,"impl-XdpDescOptions"],[3680,"impl-XdpOptionsFlags"],[3681,"impl-XdpOptionsFlags"],[3682,"impl-SockaddrXdpFlags"],[3683,"impl-SockaddrXdpFlags"],[3684,"impl-XdpRingFlags"],[3685,"impl-XdpRingFlags"],[3686,"impl-XdpUmemRegFlags"],[3687,"impl-XdpUmemRegFlags"],[3688,"impl-XdpDescOptions"],[3689,"impl-XdpDescOptions"],[3690,"impl-XdpOptionsFlags"],[3691,"impl-XdpOptionsFlags"],[3692,"impl-SockaddrXdpFlags"],[3693,"impl-SockaddrXdpFlags"],[3694,"impl-XdpRingFlags"],[3695,"impl-XdpRingFlags"],[3696,"impl-XdpUmemRegFlags"],[3697,"impl-XdpUmemRegFlags"],[3698,"impl-XdpDescOptions"],[3699,"impl-XdpDescOptions"],[3721,"impl-Octal-for-XdpOptionsFlags"],[3722,"impl-LowerHex-for-XdpOptionsFlags"],[3723,"impl-Binary-for-XdpOptionsFlags"],[3724,"impl-Debug-for-XdpOptionsFlags"],[3725,"impl-UpperHex-for-XdpOptionsFlags"],[3726,"impl-UpperHex-for-SockaddrXdpFlags"],[3727,"impl-Binary-for-SockaddrXdpFlags"],[3728,"impl-LowerHex-for-SockaddrXdpFlags"],[3729,"impl-Debug-for-SockaddrXdpFlags"],[3730,"impl-Octal-for-SockaddrXdpFlags"],[3731,"impl-UpperHex-for-XdpRingFlags"],[3732,"impl-Debug-for-XdpRingFlags"],[3733,"impl-Octal-for-XdpRingFlags"],[3734,"impl-LowerHex-for-XdpRingFlags"],[3735,"impl-Binary-for-XdpRingFlags"],[3736,"impl-Binary-for-XdpUmemRegFlags"],[3737,"impl-UpperHex-for-XdpUmemRegFlags"],[3738,"impl-Debug-for-XdpUmemRegFlags"],[3739,"impl-Octal-for-XdpUmemRegFlags"],[3740,"impl-LowerHex-for-XdpUmemRegFlags"],[3748,"impl-Debug-for-XdpDescOptions"],[3749,"impl-UpperHex-for-XdpDescOptions"],[3750,"impl-Binary-for-XdpDescOptions"],[3751,"impl-LowerHex-for-XdpDescOptions"],[3752,"impl-Octal-for-XdpDescOptions"],[3766,"impl-XdpOptionsFlags"],[3767,"impl-XdpOptionsFlags"],[3768,"impl-SockaddrXdpFlags"],[3769,"impl-SockaddrXdpFlags"],[3770,"impl-XdpRingFlags"],[3771,"impl-XdpRingFlags"],[3772,"impl-XdpUmemRegFlags"],[3773,"impl-XdpUmemRegFlags"],[3774,"impl-XdpDescOptions"],[3775,"impl-XdpDescOptions"],[3776,"impl-Flags-for-XdpOptionsFlags"],[3777,"impl-XdpOptionsFlags"],[3778,"impl-XdpOptionsFlags"],[3779,"impl-Flags-for-SockaddrXdpFlags"],[3780,"impl-SockaddrXdpFlags"],[3781,"impl-SockaddrXdpFlags"],[3782,"impl-XdpRingFlags"],[3783,"impl-Flags-for-XdpRingFlags"],[3784,"impl-XdpRingFlags"],[3785,"impl-Flags-for-XdpUmemRegFlags"],[3786,"impl-XdpUmemRegFlags"],[3787,"impl-XdpUmemRegFlags"],[3788,"impl-Flags-for-XdpDescOptions"],[3789,"impl-XdpDescOptions"],[3790,"impl-XdpDescOptions"],[3791,"impl-XdpOptionsFlags"],[3792,"impl-XdpOptionsFlags"],[3793,"impl-SockaddrXdpFlags"],[3794,"impl-SockaddrXdpFlags"],[3795,"impl-XdpRingFlags"],[3796,"impl-XdpRingFlags"],[3797,"impl-XdpUmemRegFlags"],[3798,"impl-XdpUmemRegFlags"],[3799,"impl-XdpDescOptions"],[3800,"impl-XdpDescOptions"],[3806,"impl-XdpOptionsFlags"],[3807,"impl-XdpOptionsFlags"],[3808,"impl-SockaddrXdpFlags"],[3809,"impl-SockaddrXdpFlags"],[3810,"impl-XdpRingFlags"],[3811,"impl-XdpRingFlags"],[3812,"impl-XdpUmemRegFlags"],[3813,"impl-XdpUmemRegFlags"],[3814,"impl-XdpDescOptions"],[3815,"impl-XdpDescOptions"],[3829,"impl-XdpOptionsFlags"],[3830,"impl-XdpOptionsFlags"],[3831,"impl-SockaddrXdpFlags"],[3832,"impl-SockaddrXdpFlags"],[3833,"impl-XdpRingFlags"],[3834,"impl-XdpRingFlags"],[3835,"impl-XdpUmemRegFlags"],[3836,"impl-XdpUmemRegFlags"],[3837,"impl-XdpDescOptions"],[3838,"impl-XdpDescOptions"],[3840,"impl-XdpOptionsFlags"],[3841,"impl-XdpOptionsFlags"],[3842,"impl-SockaddrXdpFlags"],[3843,"impl-SockaddrXdpFlags"],[3844,"impl-XdpRingFlags"],[3845,"impl-XdpRingFlags"],[3846,"impl-XdpUmemRegFlags"],[3847,"impl-XdpUmemRegFlags"],[3848,"impl-XdpDescOptions"],[3849,"impl-XdpDescOptions"],[3850,"impl-XdpOptionsFlags"],[3851,"impl-XdpOptionsFlags"],[3852,"impl-SockaddrXdpFlags"],[3853,"impl-SockaddrXdpFlags"],[3854,"impl-XdpRingFlags"],[3855,"impl-XdpRingFlags"],[3856,"impl-XdpUmemRegFlags"],[3857,"impl-XdpUmemRegFlags"],[3858,"impl-XdpDescOptions"],[3859,"impl-XdpDescOptions"],[3877,"impl-XdpOptionsFlags"],[3878,"impl-XdpOptionsFlags"],[3879,"impl-SockaddrXdpFlags"],[3880,"impl-SockaddrXdpFlags"],[3881,"impl-XdpRingFlags"],[3882,"impl-XdpRingFlags"],[3883,"impl-XdpUmemRegFlags"],[3884,"impl-XdpUmemRegFlags"],[3885,"impl-XdpDescOptions"],[3886,"impl-XdpDescOptions"],[3887,"impl-XdpOptionsFlags"],[3888,"impl-XdpOptionsFlags"],[3889,"impl-SockaddrXdpFlags"],[3890,"impl-SockaddrXdpFlags"],[3891,"impl-XdpRingFlags"],[3892,"impl-XdpRingFlags"],[3893,"impl-XdpUmemRegFlags"],[3894,"impl-XdpUmemRegFlags"],[3895,"impl-XdpDescOptions"],[3896,"impl-XdpDescOptions"],[3897,"impl-XdpOptionsFlags"],[3898,"impl-XdpOptionsFlags"],[3899,"impl-SockaddrXdpFlags"],[3900,"impl-SockaddrXdpFlags"],[3901,"impl-XdpRingFlags"],[3902,"impl-XdpRingFlags"],[3903,"impl-XdpUmemRegFlags"],[3904,"impl-XdpUmemRegFlags"],[3905,"impl-XdpDescOptions"],[3906,"impl-XdpDescOptions"],[3907,"impl-XdpOptionsFlags"],[3908,"impl-XdpOptionsFlags"],[3909,"impl-SockaddrXdpFlags"],[3910,"impl-SockaddrXdpFlags"],[3911,"impl-XdpRingFlags"],[3912,"impl-XdpRingFlags"],[3913,"impl-XdpUmemRegFlags"],[3914,"impl-XdpUmemRegFlags"],[3915,"impl-XdpDescOptions"],[3916,"impl-XdpDescOptions"],[3930,"impl-XdpOptionsFlags"],[3931,"impl-XdpOptionsFlags"],[3932,"impl-SockaddrXdpFlags"],[3933,"impl-SockaddrXdpFlags"],[3934,"impl-XdpRingFlags"],[3935,"impl-XdpRingFlags"],[3936,"impl-XdpUmemRegFlags"],[3937,"impl-XdpUmemRegFlags"],[3938,"impl-XdpDescOptions"],[3939,"impl-XdpDescOptions"],[3945,"impl-XdpOptionsFlags"],[3946,"impl-XdpOptionsFlags"],[3947,"impl-SockaddrXdpFlags"],[3948,"impl-SockaddrXdpFlags"],[3949,"impl-XdpRingFlags"],[3950,"impl-XdpRingFlags"],[3951,"impl-XdpUmemRegFlags"],[3952,"impl-XdpUmemRegFlags"],[3953,"impl-XdpDescOptions"],[3954,"impl-XdpDescOptions"],[3970,"impl-XdpOptionsFlags"],[3971,"impl-XdpOptionsFlags"],[3972,"impl-SockaddrXdpFlags"],[3973,"impl-SockaddrXdpFlags"],[3974,"impl-XdpRingFlags"],[3975,"impl-XdpRingFlags"],[3976,"impl-XdpUmemRegFlags"],[3977,"impl-XdpUmemRegFlags"],[3978,"impl-XdpDescOptions"],[3979,"impl-XdpDescOptions"],[3992,"impl-XdpOptionsFlags"],[3993,"impl-XdpOptionsFlags"],[3994,"impl-SockaddrXdpFlags"],[3995,"impl-SockaddrXdpFlags"],[3996,"impl-XdpRingFlags"],[3997,"impl-XdpRingFlags"],[3998,"impl-XdpUmemRegFlags"],[3999,"impl-XdpUmemRegFlags"],[4000,"impl-XdpDescOptions"],[4001,"impl-XdpDescOptions"],[4041,"impl-XdpOptionsFlags"],[4042,"impl-XdpOptionsFlags"],[4043,"impl-SockaddrXdpFlags"],[4044,"impl-SockaddrXdpFlags"],[4045,"impl-XdpRingFlags"],[4046,"impl-XdpRingFlags"],[4047,"impl-XdpUmemRegFlags"],[4048,"impl-XdpUmemRegFlags"],[4049,"impl-XdpDescOptions"],[4050,"impl-XdpDescOptions"],[4290,"impl-MembarrierQuery"],[4291,"impl-Flags-for-MembarrierQuery"],[4292,"impl-PidfdFlags"],[4293,"impl-Flags-for-PidfdFlags"],[4294,"impl-Flags-for-PidfdGetfdFlags"],[4295,"impl-PidfdGetfdFlags"],[4296,"impl-Flags-for-UnalignedAccessControl"],[4297,"impl-UnalignedAccessControl"],[4298,"impl-Flags-for-FloatingPointEmulationControl"],[4299,"impl-FloatingPointEmulationControl"],[4300,"impl-FloatingPointExceptionMode"],[4301,"impl-Flags-for-FloatingPointExceptionMode"],[4302,"impl-Flags-for-SpeculationFeatureControl"],[4303,"impl-SpeculationFeatureControl"],[4304,"impl-SpeculationFeatureState"],[4305,"impl-Flags-for-SpeculationFeatureState"],[4306,"impl-WaitOptions"],[4307,"impl-Flags-for-WaitOptions"],[4308,"impl-Flags-for-WaitidOptions"],[4309,"impl-WaitidOptions"],[4562,"impl-UpperHex-for-MembarrierQuery"],[4563,"impl-Debug-for-MembarrierQuery"],[4564,"impl-Octal-for-MembarrierQuery"],[4565,"impl-Binary-for-MembarrierQuery"],[4566,"impl-LowerHex-for-MembarrierQuery"],[4567,"impl-LowerHex-for-PidfdFlags"],[4568,"impl-UpperHex-for-PidfdFlags"],[4569,"impl-Debug-for-PidfdFlags"],[4570,"impl-Octal-for-PidfdFlags"],[4571,"impl-Binary-for-PidfdFlags"],[4572,"impl-Binary-for-PidfdGetfdFlags"],[4573,"impl-UpperHex-for-PidfdGetfdFlags"],[4574,"impl-Octal-for-PidfdGetfdFlags"],[4575,"impl-Debug-for-PidfdGetfdFlags"],[4576,"impl-LowerHex-for-PidfdGetfdFlags"],[4578,"impl-UpperHex-for-UnalignedAccessControl"],[4579,"impl-Debug-for-UnalignedAccessControl"],[4580,"impl-LowerHex-for-UnalignedAccessControl"],[4581,"impl-Binary-for-UnalignedAccessControl"],[4582,"impl-Octal-for-UnalignedAccessControl"],[4583,"impl-LowerHex-for-FloatingPointEmulationControl"],[4584,"impl-UpperHex-for-FloatingPointEmulationControl"],[4585,"impl-Binary-for-FloatingPointEmulationControl"],[4586,"impl-Octal-for-FloatingPointEmulationControl"],[4587,"impl-Debug-for-FloatingPointEmulationControl"],[4588,"impl-LowerHex-for-FloatingPointExceptionMode"],[4589,"impl-Binary-for-FloatingPointExceptionMode"],[4590,"impl-Octal-for-FloatingPointExceptionMode"],[4591,"impl-Debug-for-FloatingPointExceptionMode"],[4592,"impl-UpperHex-for-FloatingPointExceptionMode"],[4602,"impl-Debug-for-SpeculationFeatureControl"],[4603,"impl-Octal-for-SpeculationFeatureControl"],[4604,"impl-UpperHex-for-SpeculationFeatureControl"],[4605,"impl-LowerHex-for-SpeculationFeatureControl"],[4606,"impl-Binary-for-SpeculationFeatureControl"],[4607,"impl-Debug-for-SpeculationFeatureState"],[4608,"impl-UpperHex-for-SpeculationFeatureState"],[4609,"impl-LowerHex-for-SpeculationFeatureState"],[4610,"impl-Octal-for-SpeculationFeatureState"],[4611,"impl-Binary-for-SpeculationFeatureState"],[4614,"impl-Debug-for-WaitOptions"],[4615,"impl-Binary-for-WaitOptions"],[4616,"impl-Octal-for-WaitOptions"],[4617,"impl-UpperHex-for-WaitOptions"],[4618,"impl-LowerHex-for-WaitOptions"],[4619,"impl-UpperHex-for-WaitidOptions"],[4620,"impl-Octal-for-WaitidOptions"],[4621,"impl-LowerHex-for-WaitidOptions"],[4622,"impl-Debug-for-WaitidOptions"],[4623,"impl-Binary-for-WaitidOptions"],[4668,"impl-MembarrierQuery"],[4669,"impl-Flags-for-MembarrierQuery"],[4670,"impl-Flags-for-PidfdFlags"],[4671,"impl-PidfdFlags"],[4672,"impl-PidfdGetfdFlags"],[4673,"impl-Flags-for-PidfdGetfdFlags"],[4674,"impl-UnalignedAccessControl"],[4675,"impl-Flags-for-UnalignedAccessControl"],[4676,"impl-Flags-for-FloatingPointEmulationControl"],[4677,"impl-FloatingPointEmulationControl"],[4678,"impl-Flags-for-FloatingPointExceptionMode"],[4679,"impl-FloatingPointExceptionMode"],[4680,"impl-SpeculationFeatureControl"],[4681,"impl-Flags-for-SpeculationFeatureControl"],[4682,"impl-Flags-for-SpeculationFeatureState"],[4683,"impl-SpeculationFeatureState"],[4684,"impl-Flags-for-WaitOptions"],[4685,"impl-WaitOptions"],[4686,"impl-Flags-for-WaitidOptions"],[4687,"impl-WaitidOptions"]],"a":{"2big":[2112],"abrt":[4059],"accept":[2606],"accept4":[2605,2607],"acces":[1971],"alrm":[4060],"at_fdcwd":[581],"bind":[2621,2622,2623,2624,2625],"blkpbszget":[1416],"blksszget":[1417],"chld":[4072],"connect":[2768,2769,2770,2771,2772],"creat":[578],"epoll_create1":[230],"epoll_ctl":[177,233,331],"errno":[2007],"ext4_ioc_resize_fs":[1069],"f_add_seals":[1110],"f_dupfd_cloexec":[2200],"f_get_seals":[1112],"f_getfd":[2201],"f_getfl":[1114],"f_setfd":[2202],"f_setfl":[1117],"f_setlk":[1115],"f_setlkw":[1115],"faccessat":[769],"fchmodat":[949],"fchownat":[951],"ficlone":[1418],"fionbio":[2270],"fionread":[2271],"fs_ioc_getflags":[1419],"fs_ioc_setflags":[1420],"fstatat":[1589],"getpriority":[4732,4733,4734],"getsockopt":[3125],"ifo":[608],"in6addr_any":[2588],"in6addr_any_init":[2588],"in6addr_loopback":[2530],"in6addr_loopback_init":[2530],"inaddr_any":[2587],"inode_number":[1335],"inotify_init1":[1903],"inotify_rm_watch":[1904],"iot":[4059],"ip6t_so_original_dst":[3435],"ip_add_membership":[3472,3473],"ip_add_source_membership":[3474],"ip_drop_membership":[3475,3476],"ip_drop_source_membership":[3477],"ip_freebind":[3425,3478],"ip_multicast_loop":[3426,3479],"ip_multicast_ttl":[3427,3480],"ip_recvtos":[3429,3481],"ip_tos":[3430,3482],"ip_ttl":[3431,3483],"ipproto_ip":[2544],"ipv6_add_membership":[3484],"ipv6_drop_membership":[3485],"ipv6_freebind":[3432,3486],"ipv6_join_group":[3484],"ipv6_leave_group":[3485],"ipv6_multicast_hops":[3433,3487],"ipv6_multicast_loop":[3434,3488],"ipv6_recvtclass":[3436,3489],"ipv6_tclass":[3437,3490],"ipv6_unicast_hops":[3438,3491],"ipv6_v6only":[3439,3492],"kill":[4865,4866,4867,4980,4981,4982],"len":[479],"local":[2585],"lseek":[1554,1660],"membarrier_cmd_query":[4873],"membarrier_cmd_shared":[4113,4116],"netlink_route":[2544],"noattr":[2054],"noprint":[4140],"off":[1508],"p_all":[4061],"p_pgid":[4154],"p_pid":[4156],"p_pidfd":[4157],"poll":[4124],"pollfd":[20],"posix_fadvise":[1106],"posix_fallocate":[1107],"pr_get_child_subreaper":[4392],"pr_get_dumpable":[4496],"pr_get_endian":[4511],"pr_get_fp_mode":[4558],"pr_get_fpemu":[4556],"pr_get_fpexec":[4557],"pr_get_io_flusher":[4843],"pr_get_pdeathsig":[4886],"pr_get_speculation_ctrl":[4939],"pr_get_timing":[4984],"pr_get_tsc":[4983],"pr_get_unalign":[5125],"pr_mce_kill":[4924],"pr_mce_kill_default":[4088],"pr_mce_kill_early":[4098],"pr_mce_kill_get":[4869],"pr_mce_kill_late":[4126],"pr_pac_get_enabled_keys":[4508],"pr_pac_set_enabled_keys":[4467],"pr_set_child_subreaper":[4917],"pr_set_dumpable":[4918],"pr_set_endian":[4919],"pr_set_fp_mode":[4923],"pr_set_fpemu":[4921],"pr_set_fpexec":[4922],"pr_set_io_flusher":[4465],"pr_set_mm":[4468,4916,4920,4930,5137],"pr_set_mm_auxv":[4916],"pr_set_mm_exe_file":[4920],"pr_set_mm_map":[4468],"pr_set_mm_map_size":[5137],"pr_set_pdeathsig":[4925],"pr_set_ptracer":[4926],"pr_set_speculation_ctrl":[4482],"pr_set_timing":[4928],"pr_set_tsc":[4927],"pr_set_unalign":[4929],"pr_set_vma":[4931],"pr_set_vma_anon_name":[4931],"pr_task_perf_events_disable":[4466],"pr_task_perf_events_enable":[4466],"pr_unalign_noprint":[4140,4141],"pr_unalign_sigbus":[4189],"pr_unalign_sigfpe":[4190],"pwr":[4161],"renameat2":[1551],"scm_credential":[2563],"scm_credentials":[2564],"scm_rights":[2565,2566],"sendto":[3103,3104,3105,3106],"setpriority":[4933,4934,4935],"setsockopt":[3125],"shared":[4113,4116],"siocgifindex":[3381],"siocgifname":[3380],"so_acceptconn":[3440],"so_broadcast":[3441,3493],"so_cookie":[3442],"so_domain":[3443],"so_error":[3444],"so_incoming_cpu":[3445,3494],"so_keepalive":[3446,3495],"so_linger":[3447,3496],"so_oobinline":[3448,3497],"so_original_dst":[3428],"so_passcred":[3449,3498],"so_peercred":[3450],"so_protocol":[3451],"so_rcvbuf":[3452,3499],"so_rcvtimeo":[3456,3503],"so_reuseaddr":[3453,3500],"so_reuseport":[3454,3501],"so_sndbuf":[3455,3502],"so_sndtimeo":[3456,3503],"so_type":[3457],"sockaddr":[2573],"sockaddr_un":[2575],"socket":[3123],"strlen":[479],"suid_dump_disable":[4145],"suid_dump_root":[4091],"suid_dump_user":[4089],"tcp_congestion":[3458,3504],"tcp_cork":[3459,3505],"tcp_keepcnt":[3460,3506],"tcp_keepidle":[3461,3507],"tcp_keepintvl":[3462,3508],"tcp_nodelay":[3463,3509],"tcp_quickack":[3464,3510],"tcp_thin_linear_timeouts":[3465,3511],"tcp_user_timeout":[3466,3512],"tiocsctty":[4821],"unused":[4205],"vtalrm":[4222],"xdp_mmap_offsets":[3467],"xdp_options":[3468],"xdp_rx_ring":[3513],"xdp_statistics":[3469],"xdp_tx_ring":[3514],"xdp_umem_completion_ring":[3515],"xdp_umem_fill_ring":[3516],"xdp_umem_reg":[3517]}}],\
["scoped_tls",{"doc":"Scoped thread-local storage","t":"FNNNNNQNNNNN","n":["ScopedKey","borrow","borrow_mut","from","into","is_set","scoped_thread_local","set","try_from","try_into","type_id","with"],"q":[[0,"scoped_tls"],[12,"core::ops::function"],[13,"core::result"],[14,"core::any"]],"d":["Type representing a thread local storage key corresponding …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Test whether this TLS key has been <code>set</code> for the current …","The macro. See the module level documentation for the …","Inserts a value into this scoped thread local storage slot …","","","","Gets a value out of this scoped variable."],"i":[0,1,1,1,1,1,0,1,1,1,1,1],"f":"`{ce{}{}}0{cc{}}1{{{b{c}}}d{}}`{{{b{c}}cg}e{}{}{{h{}{{f{e}}}}}}{c{{j{e}}}{}{}}0{cl{}}{{{b{c}}g}e{}{}{{h{c}{{f{e}}}}}}","c":[],"p":[[5,"ScopedKey",0],[1,"bool"],[17,"Output"],[10,"FnOnce",12],[6,"Result",13],[5,"TypeId",14]],"b":[]}],\
["smallvec",{"doc":"Small vectors in various sizes. These store a certain …","t":"PKPGFFRFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNQQNNNNMNNNNNNNNNNNNNNNNNNO","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_const","from_const_with_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","new_const","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","smallvec_inline","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[141,"smallvec::CollectionAllocErr"],[142,"core::clone"],[143,"core::cmp"],[144,"core::ops::function"],[145,"core::ops::range"],[146,"core::iter::traits::collect"],[147,"core::fmt"],[148,"core::fmt"],[149,"core::alloc::layout"],[150,"core::mem::maybe_uninit"],[151,"core::hash"],[152,"core::slice::index"],[153,"alloc::boxed"],[154,"core::result"],[155,"core::option"],[156,"alloc::string"],[157,"core::any"]],"d":["The allocator return an error","Types that can be used as the backing store for a <code>SmallVec</code>.","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","The array passed as an argument is moved to be an inline …","Constructs a new <code>SmallVec</code> on the stack from an array …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the <code>SmallVec</code> into an <code>A</code> if possible. Otherwise …","","","","","","Convert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","Construct an empty vector.","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Creates an inline <code>SmallVec</code> containing the arguments. This …","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[18,0,18,0,0,0,3,0,0,1,1,1,1,6,1,1,1,6,13,1,1,6,18,13,1,1,6,18,1,1,1,6,1,1,6,1,1,1,1,1,1,1,1,13,1,6,1,1,1,13,1,6,18,18,13,1,1,1,1,6,18,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,1,6,18,1,1,13,1,1,1,6,1,1,13,1,1,1,13,6,13,6,1,1,1,1,1,1,1,1,1,1,1,1,3,13,6,0,0,1,1,1,6,29,18,1,13,1,6,18,1,13,1,6,18,1,1,13,1,6,18,1,32],"f":"`````````{{{b{c}}{b{e}}}df{{f{}{{h{}}}}}}{{{b{c}}}jf}{{{b{c}}}{}f}1{{{l{c}}}jf}1220{ce{}{}}300000300{{{b{c}}}nf}{{{b{c}}}df}{{{b{c}}}{{b{c}}}f}{{{l{c}}}{{l{c}}}{fA`}}{{{b{c}}{b{c}}}df}{{ce}d{}{}}0{{{b{c}}{b{c}}}Abf}5{{{b{c}}e}df{{Ah{}{{Ad{Af}}}}}}{{{b{c}}g}df{}{{Ah{}{{Ad{e}}}}}}{{}{{b{c}}}f}=={{{b{c}}e}{{Aj{c}}}f{{Al{n}}}}{{{Aj{c}}}df}:{{{l{c}}}df}{{{b{c}}{b{e}}}Afff}{{{b{c}}e}df{{An{}{{h{}}}}}}{{{b{c}}j}df}{{{Aj{c}}B`}Bbf}{{{b{c}}B`}Bbf}{{{l{c}}B`}Bbf}{{BdB`}Bb}0{cc{}}0{j{{b{c}}}f}{c{{b{c}}}f}{Bf{{b{c}}}f}3{BhBd}42{{cn}{{b{c}}}f}{{{Bj{c}}n}{{b{c}}}f}{{{Bl{c}}}{{b{{Bl{c}}}}}{}}{{{Bl{c}}n}{{b{{Bl{c}}}}}{}}{n{{b{c}}}f}{c{{b{e}}}{{An{}{{h{}}}}}f}{{nn}{{b{c}}}f}:8{{{b{c}}n}df}{{{b{c}}e}dfBn}{{{b{c}}e}{}f{{C`{j}}}}0{{{b{c}}}nf}3{{{b{c}}nj}df}{{{b{c}}ne}df{{An{}{{h{}}}}}}{ce{}{}}000{{{b{c}}}{{Cb{j}}}f}{{{b{c}}}{{Cd{c{b{c}}}}}f}2{{{b{c}}}ef{}}003{{{b{c}}}Bff}{{{b{c}}}Aff}{{{Aj{c}}}nf}9{{}{{b{c}}}f}{{}{{b{{Bl{c}}}}}{}}{{{Aj{c}}}Cff}{{{l{c}}}Cff}10{{{b{c}}{b{c}}}{{Cf{Ab}}}f}{{{b{c}}}Cff}{{{b{c}}}df}{{{b{c}}n}{}f}{{{b{c}}n}df}00{{{b{c}}ne}df{{Ah{}{{Ad{}}}}}}{{{b{c}}e}df{{Ah{}{{Ad{Af}}}}}}024{{}n}{{{Aj{c}}}{{Ch{n{Cf{n}}}}}f}{{{l{c}}}{{Ch{n{Cf{n}}}}}f}``?6{ce{}{}}0{Cj{{b{c}}}f}{cCl{}}8{c{{Cd{e}}}{}{}}000{{{b{c}}n}{{Cd{dBd}}}f}111100{cCn{}}000{n{{b{c}}}f}`","c":[],"p":[[5,"SmallVec",0],[1,"unit"],[10,"Array",0],[17,"Item"],[1,"slice"],[5,"IntoIter",0],[1,"usize"],[10,"Clone",142],[6,"Ordering",143],[17,"Output"],[1,"bool"],[10,"FnMut",144],[5,"Drain",0],[10,"RangeBounds",145],[10,"IntoIterator",146],[5,"Formatter",147],[8,"Result",147],[6,"CollectionAllocErr",0],[5,"Vec",148],[8,"LayoutErr",149],[20,"MaybeUninit",150],[1,"array"],[10,"Hasher",151],[10,"SliceIndex",152],[5,"Box",153],[6,"Result",154],[6,"Option",155],[1,"tuple"],[10,"ToSmallVec",0],[5,"String",156],[5,"TypeId",157],[15,"AllocErr",141]],"b":[[52,"impl-Debug-for-CollectionAllocErr"],[53,"impl-Display-for-CollectionAllocErr"],[56,"impl-From%3C%26%5B%3CA+as+Array%3E::Item%5D%3E-for-SmallVec%3CA%3E"],[57,"impl-From%3CA%3E-for-SmallVec%3CA%3E"],[58,"impl-From%3CVec%3C%3CA+as+Array%3E::Item%3E%3E-for-SmallVec%3CA%3E"],[87,"impl-IntoIterator-for-SmallVec%3CA%3E"],[88,"impl-IntoIterator-for-%26mut+SmallVec%3CA%3E"],[89,"impl-IntoIterator-for-%26SmallVec%3CA%3E"]]}],\
["unicode_ident",{"doc":"github crates-io docs-rs","t":"HH","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":"{bd}0","c":[],"p":[[1,"char"],[1,"bool"]],"b":[]}],\
["wayland_backend",{"doc":"Backend API for wayland crates","t":"EQCCEDJGGGPPPPPPSPPFFFPPPPPFFPPPPPPGFPOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNONNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOHNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOUFFCCFFPFKFPFGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKFPFGKFFFGFPPKFPFNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONN","n":["client","message","protocol","rs","server","smallvec","ANONYMOUS_INTERFACE","AllowNull","Argument","ArgumentType","Array","Array","Fd","Fd","Fixed","Fixed","INLINE_ARGS","Int","Int","Interface","Message","MessageDesc","NewId","NewId","No","Object","Object","ObjectInfo","ProtocolError","Str","Str","Uint","Uint","Unknown","Value","WEnum","WEnumError","Yes","a","arg_interfaces","args","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_ptr","child_interface","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","eq","eq","eq","eq","eq","event_count","events","events","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_type","h","i","id","interface","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","is_destructor","map_fd","message","n","name","name","name","name","o","object_id","object_interface","opcode","request_count","requests","requests","s","same_interface","same_type","sender_id","signature","signature","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","u","version","version","version","wl_argument","wl_interface","wl_message","client","server","Backend","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","Protocol","ReadEventsGuard","WaylandError","WeakBackend","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connection_fd","data_as_any","debug","destroyed","dispatch_inner_queue","display_id","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","downgrade","eq","eq","event","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_data","hash","info","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_null","last_error","null","poll_fd","prepare_read","protocol_id","read","send_request","set_data","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","Backend","ClientData","ClientId","ConnectionClosed","Credentials","DisconnectReason","GlobalHandler","GlobalId","GlobalInfo","Handle","InitError","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","ProtocolError","WeakHandle","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_view","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_global","create_object","debug","debug","debug","destroyed","disable_global","disabled","disconnected","dispatch_all_clients","dispatch_single_client","downcast","downcast","downcast","downcast_arc","downcast_arc","downcast_arc","downcast_mut","downcast_mut","downcast_mut","downcast_rc","downcast_rc","downcast_rc","downcast_ref","downcast_ref","downcast_ref","downgrade","eq","eq","eq","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_client","get_client_credentials","get_client_data","get_global_handler","get_object_data","get_object_data_any","gid","global_info","handle","hash","hash","hash","initialized","insert_client","interface","interface","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is","is","is_null","kill_client","new","null","object_for_protocol_id","object_info","pid","poll_fd","post_error","protocol_id","remove_global","request","same_client_as","send_event","set_object_data","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","upgrade","version","with_all_clients","with_all_objects_for"],"q":[[0,"wayland_backend"],[6,"wayland_backend::protocol"],[290,"wayland_backend::rs"],[292,"wayland_backend::rs::client"],[452,"wayland_backend::rs::server"],[717,"core::any"],[718,"core::clone"],[719,"core::cmp"],[720,"std::os::fd::raw"],[721,"core::fmt"],[722,"core::fmt"],[723,"core::fmt"],[724,"alloc::boxed"],[725,"alloc::sync"],[726,"alloc::rc"],[727,"core::ops::function"],[728,"alloc::string"],[729,"core::any"],[730,"core::option"],[731,"std::os::unix::net::stream"],[732,"std::os::fd::owned"],[733,"core::marker"],[734,"core::marker"],[735,"core::hash"],[736,"std::os::fd::raw"]],"d":["","Helper macro for quickly making a <code>Message</code>","Types and utilities for manipulating the Wayland protocol","Rust implementations of the Wayland backends","","Reexport of the <code>smallvec</code> crate, which is part of …","Special interface representing an anonymous object","Describes whether an argument may have a null value.","Enum of possible argument of the protocol","Enum of possible argument types as recognized by the wire","<code>Vec&lt;u8&gt;</code>","<code>Vec&lt;u8&gt;</code>","A file descriptor argument. Represented by a <code>RawFd</code>.","A file descriptor argument. Represented by a <code>RawFd</code>.","A signed fixed point number with 1/256 precision","A signed fixed point number with 1/256 precision","Number of arguments that are stocked inline in a <code>Message</code> …","An integer argument. Represented by a <code>i32</code>.","An integer argument. Represented by a <code>i32</code>.","Description of wayland interface.","Represents a message that has been sent from some object.","Wire metadata of a given message","Id of a newly created wayland object","Id of a newly created wayland object","Null values are forbidden.","Id of a wayland object","Id of a wayland object","Description of the protocol-level information of an object","A protocol error","A string. This is represented as a <code>CString</code> in a message.","CString","An unsigned integer argument. Represented by a <code>u32</code>.","An unsigned integer argument. Represented by a <code>u32</code>.","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","Error representing an unknown numeric variant for a <code>WEnum</code>","Null values are allowed.","","The interfaces passed into this message as arguments.","The arguments of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A C representation of this interface that may be used to …","The child interface created from this message.","","","","","","","","","","","","","","","","","","","The error code associated with the error","","","","","","","","A list that describes every event this interface supports.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an enum from the integer format used by the …","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve the type of a given argument instance","","","The protocol ID","The interface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>WEnum</code> into a result","Whether this message is a destructor","Map some closure on all Fd contained in this message, to …","The message sent by the server describing the error","","","","The name of the interface.","Name of this message","","The id of the object that caused the error","The interface of the object that caused the error","The opcode of the message.","","","A list that describes every request this interface …","","Returns true if the two interfaces are the same.","Returns true if the type of the argument is the same.","The id of the object that sent the message.","","Signature of the message","Minimum required version of the interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum supported version of the interface.","The version","","","","Client-side rust implementation of a Wayland protocol …","Server-side rust implementation of a Wayland protocol …","A Wayland client backend","An error generated when trying to act on an invalid …","The connection encountered an IO error","An error type representing the failure to load libwayland","A trait representing your data associated to an object","An ID representing a Wayland object","The connection encountered a protocol error","Guard for synchronizing event reading across multiple …","An error that can occur when using a Wayland connection","A weak handle to a <code>Backend</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to initialize a Wayland backend on the provided unix …","Access the Wayland socket FD for polling","Helper for accessing user data","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Dispatches the inner queue of this backend if necessary","Get the object ID for the <code>wl_display</code>","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Get a <code>WeakBackend</code> from this backend","","","Dispatch an event for the associated object","Flush all pending outgoing requests to the server","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Access the object data associated with a given object ID","","Get the detailed protocol information about a wayland …","Interface of the represented object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Check if this is a null ID","Get the last error that occurred on this backend","Create a null object ID","Access the Wayland socket FD for polling","Create a new reading guard","Return the protocol-level numerical ID of this object","Attempt to read events from the Wayland socket","Sends a request to the server","Set the object data associated with a given object ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to upgrade this weak handle to a <code>Backend</code>","A backend object that represents the state of a wayland …","A trait representing your data associated to a client","An ID representing a Wayland client","The connection has been closed by the server or client.","Holds the client credentials","Describes why a client has been disconnected from the …","A trait representing the handling of new bound globals","An Id representing a global","Description of a global advertised to some clients.","Main handle of a backend to the Wayland protocol","An error type representing the failure to initialize a …","An error generated when trying to act on an invalid …","Initialized failed due to an underlying I/O error","The wayland system library could not be loaded","A trait representing your data associated to an object","An ID representing a Wayland object","The server has sent the client a protocol error, …","A weak reference to a <code>Handle</code>","","","","","","","","","","","","","","","","","","","","","","","A global has been bound","","","","","","","","","","","","","","","","","","","","","","","Check if given client is allowed to interact with given …","","","","","","","","","","","","","","","","Creates a global of the specified interface and version …","Create a new object for given client","Helper for forwarding a Debug implementation of your …","Helper for forwarding a Debug implementation of your …","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Disables a global object that is currently active.","Whether the global is disabled.","Notification that the client is disconnected","Dispatches all pending messages from all clients.","Dispatches all pending messages from the specified client.","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Get a <code>WeakHandle</code> from this handle","","","","Flushes pending events destined for a client.","Flushes pending events destined for a client.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the id of the client which owns the object.","Retrive the <code>Credentials</code> of a client","Returns the data associated with a client.","Returns the handler which manages the visibility and …","Returns the data associated with an object.","Returns the data associated with an object as a <code>dyn Any</code>","gid of the client","Returns information about a global.","Returns a handle which represents the server side state of …","","","","Notification that the client was initialized","Initializes a connection with a client.","Returns the interface of this object.","The interface of the global.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns whether this object is a null object.","Kills the connection to a client.","Initialize a new Wayland backend","Returns an object id that represents a null object.","Retrieve the <code>ObjectId</code> for a wayland object given its …","Get the detailed protocol information about a wayland …","pid of the client","Returns the underlying file descriptor.","Posts a protocol error on an object. This will also …","Return the protocol-level numerical ID of this object","Removes a global object and free its ressources.","Dispatch a request for the associated object","Check if two object IDs are associated with the same client","Send an event to the client","Sets the data associated with some object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uid of the client","Try to upgrade this weak handle to a <code>Handle</code>","The version of the global that is advertised to clients.","Invokes a closure for all clients connected to this server","Invokes a closure for all objects owned by a client."],"i":[0,0,0,0,0,0,0,0,0,0,3,4,3,4,3,4,0,3,4,0,0,0,3,4,2,3,4,0,0,3,4,3,4,10,10,0,0,2,69,6,9,70,16,69,2,3,4,23,6,7,8,9,10,11,70,16,69,2,3,4,23,6,7,8,9,10,11,70,16,69,2,3,4,23,6,7,8,9,10,11,70,16,69,2,3,4,23,6,7,8,9,10,11,23,6,2,3,4,6,7,8,9,10,11,2,3,4,6,7,8,9,10,11,8,2,3,4,9,10,16,16,23,69,16,2,3,4,4,23,23,6,7,8,8,9,10,11,11,70,16,69,2,3,4,23,6,7,8,9,10,10,11,4,69,69,7,7,70,16,69,2,3,4,23,6,7,8,9,10,11,70,16,69,2,3,4,23,6,7,8,9,10,11,16,2,3,4,23,6,7,8,9,10,11,70,16,69,2,3,4,23,6,7,8,9,10,11,10,6,9,8,69,70,16,23,6,69,8,8,9,16,16,23,69,0,3,9,70,6,6,2,3,4,6,7,8,9,10,11,4,23,8,11,70,16,69,2,3,4,23,6,7,8,9,10,11,70,16,69,2,3,4,23,6,7,8,9,10,11,70,16,69,2,3,4,23,6,7,8,9,10,11,70,69,16,23,7,0,0,0,0,0,0,0,33,0,0,0,33,0,0,0,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,33,36,37,38,33,39,36,37,38,33,39,37,42,44,44,44,37,37,44,44,44,44,44,37,36,37,44,37,44,36,36,37,38,42,41,41,33,33,39,39,36,37,38,42,41,33,33,33,39,37,36,37,36,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,44,36,37,36,37,37,36,42,37,37,36,37,38,33,39,36,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,36,37,38,42,41,33,39,38,0,0,0,64,0,0,0,0,0,0,0,0,60,60,0,0,64,0,57,55,56,54,61,65,67,60,62,64,63,57,55,56,54,61,65,67,60,62,64,63,53,57,55,56,54,61,65,67,60,62,64,63,57,55,56,54,61,65,67,60,62,64,63,53,60,57,55,56,54,61,62,63,57,55,56,54,61,62,63,54,54,58,53,59,58,54,67,59,65,65,58,53,59,58,53,59,58,53,59,58,53,59,58,53,59,54,57,55,56,54,65,58,53,59,57,57,55,56,54,61,65,67,60,60,62,62,64,63,57,55,56,54,61,65,67,60,62,64,63,54,54,54,54,54,54,63,54,65,57,55,56,59,54,57,67,57,55,56,54,61,65,67,60,62,64,63,57,55,56,54,61,65,67,60,62,64,63,57,55,56,54,61,65,67,60,62,64,63,57,55,56,54,61,65,67,60,62,64,63,58,53,59,57,54,65,57,54,54,63,65,54,57,54,58,57,54,54,57,55,56,54,61,62,63,57,60,62,57,55,56,54,61,65,67,60,62,64,63,57,55,56,54,61,65,67,60,62,64,63,57,55,56,54,61,65,67,60,62,64,63,63,61,67,54,54],"f":"`````````````````````````````````````````{cb{}}0000000000000000000000000{ce{}{}}0000000000000000000000000``{dd}{ff}{{{h{ce}}}{{h{ce}}}jj}{ll}{nn}{A`A`}{{{Ab{ce}}}{{Ab{ce}}}jj}{{{Ad{c}}}{{Ad{c}}}j}{AfAf}{{ce}Ah{}{}}00000000`{{dd}Aj}{{ff}Aj}{{{h{ce}}{h{ce}}}AjAlAn}{{{Ab{ce}}{Ab{ce}}}AjAlAn}{{{Ad{c}}{Ad{c}}}AjAl}````{{B`Bb}{{Bf{AhBd}}}}{{dBb}Bh}{{fBb}Bh}{{{h{ce}}Bb}BhBjBj}{{{h{ce}}Bb}BhBlAn}{{BnBb}Bh}0{{lBb}Bh}{{nBb}Bh}{{A`Bb}{{Bf{AhBd}}}}{{A`Bb}Bh}{{{Ab{ce}}Bb}BhBjBj}{{{Ad{c}}Bb}BhBj}{{AfBb}Bh}0{cc{}}0000000000{C`{{Ad{c}}}{{Cb{C`}}}}11{{{h{ce}}}f{}{}}````{ce{}{}}000000000000{{{Cd{c}}}{{Cd{b}}}{}}000000000000{{{Cf{c}}}{{Cf{b}}}{}}0000000000{{{Ch{c}}}{{Ch{b}}}{}}000000000000{{{Ad{c}}}{{Bf{cAf}}}{}}`{{{Ab{ce}}i}{{Ab{cg}}}{}{}{}{{Cl{e}{{Cj{g}}}}}}``````````````{{BnBn}Aj}{{ff}Aj}````777777777{cCn{}}000{c{{Bf{e}}}{}{}}0000000000000000000000000{cD`{}}000000000000````````````````````{cb{}}0000000000000;;;;;;;;;;;;;;{Db{{Df{Dd}}}}{DhDh}{DjDj}{DlDl}{DbDb}{DnDn}{{ce}Ah{}{}}0000{E`{{Bf{DjEb}}}}{EdEf}{Ehb}{{EhBb}Bh}{{EhDh}Ah}{Dj{{Bf{EjDb}}}}{DjDh}{{{Cd{Eh}}}{{Bf{{Cd{c}}{Cd{Eh}}}}}Eh}{{{Cf{Eh}}}{{Bf{{Cf{c}}{Cf{Eh}}}}}{EhbElEn}}{Eh{{Df{c}}}Eh}{{{Ch{Eh}}}{{Bf{{Ch{c}}{Ch{Eh}}}}}Eh}1{DjDl}{{DhDh}Aj}{{DjDj}Aj}{{{Cf{Eh}}Dj{Ab{DhF`}}}{{Df{{Cf{Eh}}}}}}{Dj{{Bf{AhDb}}}}<{{DhBb}Bh}0{{DjBb}Bh}{{DlBb}Bh}{{EdBb}Bh}{{EbBb}{{Bf{AhBd}}}}{{EbBb}Bh}{{DbBb}{{Bf{AhBd}}}}{{DbBb}Bh}{{DnBb}Bh}{{DnBb}{{Bf{AhBd}}}}{cc{}}00000{A`Db}{FbDb}2{{DjDh}{{Bf{{Cf{Eh}}Dn}}}}{{Dhc}AhFd}{{DjDh}{{Bf{nDn}}}}{DhBn}{ce{}{}}000000{{{Cd{c}}}{{Cd{b}}}{}}000000{{{Cf{c}}}{{Cf{b}}}{}}000000{{{Ch{c}}}{{Ch{b}}}{}}000000{EhAj}{DhAj}{Dj{{Df{Db}}}}{{}Dh}{DjEf}{Dj{{Df{Ed}}}}{DhC`}{Ed{{Bf{EjDb}}}}{{Dj{Ab{DhFf}}{Df{{Cf{Eh}}}}{Df{{Fh{BnC`}}}}}{{Bf{DhDn}}}}{{DjDh{Cf{Eh}}}{{Bf{AhDn}}}}====={cCn{}}000{c{{Bf{e}}}{}{}}0000000000000{cD`{}}000000{Dl{{Df{Dj}}}}``````````````````{cb{}}000000000000000000000{{{Cf{Fj}}FlcFnG`Gb}{{Cf{Gd}}}{}}{ce{}{}}000000000000000000000{{FjFn{Cf{Gf}}G`}Aj}{Gh{{Df{Dd}}}}{GbGb}{FnFn}{G`G`}{FlFl}{GjGj}{GlGl}{GnGn}{{ce}Ah{}{}}000000{{FlBnC`{Cf{Fj}}}G`}{{FlFnBnC`{Cf{Gd}}}{{Bf{GbGl}}}}{{GdBb}Bh}{{FjBb}Bh}{{GfBb}Bh}{{{Cf{Gd}}FlcFnGb}Ah{}}{{FlG`}Ah}`{{GfFnH`}Ah}{{{Hb{c}}c}{{Hd{Ej}}}{}}{{{Hb{c}}cFn}{{Hd{Ej}}}{}}{{{Cd{Gd}}}{{Bf{{Cd{e}}{Cd{Gd}}}}}b{{Gd{c}}}}{{{Cd{Fj}}}{{Bf{{Cd{e}}{Cd{Fj}}}}}b{{Fj{c}}}}{{{Cd{Gf}}}{{Bf{{Cd{c}}{Cd{Gf}}}}}Gf}{{{Cf{Gd}}}{{Bf{{Cf{e}}{Cf{Gd}}}}}b{{Gd{c}}bElEn}}{{{Cf{Fj}}}{{Bf{{Cf{e}}{Cf{Fj}}}}}b{{Fj{c}}bElEn}}{{{Cf{Gf}}}{{Bf{{Cf{c}}{Cf{Gf}}}}}{GfbElEn}}{Gd{{Df{e}}}b{{Gd{c}}}}{Fj{{Df{e}}}b{{Fj{c}}}}{Gf{{Df{c}}}Gf}{{{Ch{Gd}}}{{Bf{{Ch{e}}{Ch{Gd}}}}}b{{Gd{c}}}}{{{Ch{Fj}}}{{Bf{{Ch{e}}{Ch{Fj}}}}}b{{Fj{c}}}}{{{Ch{Gf}}}{{Bf{{Ch{c}}{Ch{Gf}}}}}Gf}543{FlGj}{{GbGb}Aj}{{FnFn}Aj}{{G`G`}Aj}{{Fl{Df{Fn}}}{{Hd{Ah}}}}{{{Hb{c}}{Df{Fn}}}{{Hd{Ah}}}{}}{{GdBb}Bh}{{FjBb}Bh}{{GfBb}Bh}{{GbBb}Bh}0{{FnBb}Bh}{{G`Bb}Bh}{{FlBb}Bh}{{GjBb}Bh}{{{Hb{c}}Bb}BhBj}{{HfBb}Bh}{{GhBb}Bh}{{GhBb}{{Bf{AhBd}}}}{{GlBb}{{Bf{AhBd}}}}{{GlBb}Bh}{{H`Bb}Bh}{{GnBb}Bh}{cc{}}0000000000{{FlGb}{{Bf{FnGl}}}}{{FlFn}{{Bf{GnGl}}}}{{FlFn}{{Bf{{Cf{Gf}}Gl}}}}{{FlG`}{{Bf{{Cf{Fj}}Gl}}}}{{FlGb}{{Bf{{Cf{Gd}}Gl}}}}{{FlGb}{{Bf{{Cf{b}}Gl}}}}`{{FlG`}{{Bf{HfGl}}}}{{{Hb{c}}}Fl{}}{{Gbc}AhFd}{{Fnc}AhFd}{{G`c}AhFd}{{GfFn}Ah}{{FlE`{Cf{Gf}}}{{Hd{Fn}}}}{GbBn}`{ce{}{}}0000000000{{{Cd{c}}}{{Cd{b}}}{}}0000000000{{{Cf{c}}}{{Cf{b}}}{}}0000000000{{{Ch{c}}}{{Ch{b}}}{}}0000000000{GdAj}{FjAj}{GfAj}{GbAj}{{FlFnH`}Ah}{{}{{Bf{{Hb{c}}Gh}}}{}}{{}Gb}{{FlFnBnC`}{{Bf{GbGl}}}}{{FlGb}{{Bf{nGl}}}}`{{{Hb{c}}}Ef{}}{{FlGbC`Hh}Ah}{GbC`}{{FlG`}Ah}{{{Cf{Gd}}FlcFn{Ab{GbF`}}}{{Df{{Cf{Gd}}}}}{}}{{GbGb}Aj}{{Fl{Ab{GbFf}}}{{Bf{AhGl}}}}{{FlGb{Cf{Gd}}}{{Bf{AhGl}}}}{ce{}{}}000000{cCn{}}00{c{{Bf{e}}}{}{}}000000000000000000000{cD`{}}0000000000`{Gj{{Df{Fl}}}}`{{Flc}Ah{{Cl{Fn}}}}{{FlFnc}{{Bf{AhGl}}}{{Cl{Gb}}}}","c":[],"p":[[10,"Any",717],[6,"AllowNull",6],[6,"ArgumentType",6],[6,"Argument",6],[10,"Clone",718],[5,"MessageDesc",6],[5,"ObjectInfo",6],[5,"ProtocolError",6],[5,"Message",6],[6,"WEnum",6],[5,"WEnumError",6],[1,"unit"],[1,"bool"],[10,"PartialEq",719],[10,"AsRawFd",720],[5,"wl_interface",6],[5,"Formatter",721],[5,"Error",721],[6,"Result",722],[8,"Result",721],[10,"Debug",721],[10,"Display",721],[5,"Interface",6],[1,"u32"],[10,"TryFrom",723],[5,"Box",724],[5,"Arc",725],[5,"Rc",726],[17,"Output"],[10,"FnMut",727],[5,"String",728],[5,"TypeId",717],[6,"WaylandError",292],[10,"Error",729],[6,"Option",730],[5,"ObjectId",292],[5,"Backend",292],[5,"WeakBackend",292],[5,"InvalidId",292],[5,"UnixStream",731],[5,"NoWaylandLib",292],[5,"ReadEventsGuard",292],[5,"BorrowedFd",732],[10,"ObjectData",292],[1,"usize"],[10,"Send",733],[10,"Sync",733],[5,"OwnedFd",732],[5,"Error",734],[10,"Hasher",735],[8,"RawFd",720],[1,"tuple"],[10,"GlobalHandler",452],[5,"Handle",452],[5,"ClientId",452],[5,"GlobalId",452],[5,"ObjectId",452],[10,"ObjectData",452],[10,"ClientData",452],[6,"InitError",452],[5,"WeakHandle",452],[5,"InvalidId",452],[5,"Credentials",452],[6,"DisconnectReason",452],[5,"Backend",452],[8,"Result",734],[5,"GlobalInfo",452],[5,"CString",736],[20,"wl_argument",6],[5,"wl_message",6]],"b":[[126,"impl-Debug-for-Argument%3CId,+Fd%3E"],[127,"impl-Display-for-Argument%3CId,+Fd%3E"],[128,"impl-Display-for-Interface"],[129,"impl-Debug-for-Interface"],[132,"impl-Display-for-ProtocolError"],[133,"impl-Debug-for-ProtocolError"],[136,"impl-Display-for-WEnumError"],[137,"impl-Debug-for-WEnumError"],[359,"impl-Display-for-ObjectId"],[360,"impl-Debug-for-ObjectId"],[364,"impl-Display-for-NoWaylandLib"],[365,"impl-Debug-for-NoWaylandLib"],[366,"impl-Display-for-WaylandError"],[367,"impl-Debug-for-WaylandError"],[368,"impl-Debug-for-InvalidId"],[369,"impl-Display-for-InvalidId"],[376,"impl-From%3CProtocolError%3E-for-WaylandError"],[377,"impl-From%3CError%3E-for-WaylandError"],[566,"impl-Display-for-ObjectId"],[567,"impl-Debug-for-ObjectId"],[574,"impl-Debug-for-InitError"],[575,"impl-Display-for-InitError"],[576,"impl-Display-for-InvalidId"],[577,"impl-Debug-for-InvalidId"]]}],\
["wayland_client",{"doc":"Interface for interacting with the Wayland protocol, …","t":"PPGFKGRFPPPKFFFRPPGFNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNQQNNNNNNNNNMNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNMNNCNNMNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNCNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMMOOOFFPFKFPFGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJGGGPPPPPPSPPFFFPPPPPFFPPPPPPGFPOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNONNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOHNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOUFFPGFGFFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONHNNNNNNNNNNNNNNNNNNNONCCCCCCCCCCCCCCCCCCCCCCCJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJPSSGSSPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPSSGGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPPGSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPSSSSSSSSSSSSPGGPPSSSSSSPGPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOTTPFGPTTSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPPPSSSSSSGGPPPPPPSSSSSSSSSSPGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOPPPPPSSSSSSSSSSSSGGPPPSSSSSSGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOPSSSSGPGPPPPPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOSSSSSSSSSSSSPGPGPGPPPPSSPPPGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOTPPSSSSSSSSSSSSGPPPPPPPFPPPPTSSPGPGGPPPFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOGPPGPGPPPPGPSSSSSSSSSSSSSSSSSSSSSSPGGPPPPPPPPSSSSPPGPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPPGSSSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOPSSSSGPPSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOPFSSSSGGPPPTPPTSSSSSSSSPGTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOGGPSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTPPPSSSSSSGPGTTPTPPPSSSSSSSSSSSSSSSSSSSSGFPTPPPPPPPPTTTFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSGGGPPPPPPPPPPPPPPPPPPPPPSSGPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPGSSSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOPPPGGPSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPPGGPPSSSSSSSSSSSSGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOPPPPPPSSSSSSSSPGGPPPPPPPPPSSSSSSSSSSSSSSSSSSSSSSGPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOPPSSSSSSSSSSSSSSGPPPSSPGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOO","n":["Backend","BadMessage","ConnectError","Connection","Dispatch","DispatchError","Event","EventQueue","InvalidFd","NoCompositor","NoWaylandLib","Proxy","QueueFreezeGuard","QueueHandle","QueueProxyData","Request","Unknown","Value","WEnum","Weak","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_fd","as_fd","backend","backend","backend","blocking_dispatch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect_to_env","data","data_as_any","delegate_dispatch","delegate_noop","destroyed","dispatch_pending","display","downgrade","drop","eq","eq","eq","eq","event","event","event_created_child","event_created_child","event_created_child","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from","from_backend","from_id","from_socket","get_object_data","globals","handle","hash","id","id","inert","interface","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","is_alive","make_data","new_event_queue","object_data","object_info","parse_event","poll_dispatch_pending","prepare_read","prepare_read","protocol","protocol_error","roundtrip","roundtrip","send_constructor","send_request","send_request","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udata","upgrade","version","write_request","interface","opcode","sender_id","Backend","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","Protocol","ReadEventsGuard","WaylandError","WeakBackend","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connection_fd","data_as_any","debug","destroyed","dispatch_inner_queue","display_id","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","downgrade","eq","eq","event","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_data","hash","info","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is_null","last_error","null","poll_fd","prepare_read","protocol","protocol_id","read","send_request","set_data","smallvec","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","ANONYMOUS_INTERFACE","AllowNull","Argument","ArgumentType","Array","Array","Fd","Fd","Fixed","Fixed","INLINE_ARGS","Int","Int","Interface","Message","MessageDesc","NewId","NewId","No","Object","Object","ObjectInfo","ProtocolError","Str","Str","Uint","Uint","Unknown","Value","WEnum","WEnumError","Yes","a","arg_interfaces","args","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_ptr","child_interface","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","eq","eq","eq","eq","event_count","events","events","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_type","h","i","id","interface","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_destructor","map_fd","message","n","name","name","name","name","o","object_id","object_interface","opcode","request_count","requests","requests","s","same_interface","same_type","sender_id","signature","signature","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","u","version","version","version","wl_argument","wl_interface","wl_message","Backend","BindError","Global","GlobalError","GlobalList","GlobalListContents","InvalidId","NotPresent","UnsupportedVersion","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_list","contents","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","name","registry","registry_queue_init","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","with_list","__interfaces","wl_buffer","wl_callback","wl_compositor","wl_data_device","wl_data_device_manager","wl_data_offer","wl_data_source","wl_display","wl_keyboard","wl_output","wl_pointer","wl_region","wl_registry","wl_seat","wl_shell","wl_shell_surface","wl_shm","wl_shm_pool","wl_subcompositor","wl_subsurface","wl_surface","wl_touch","WL_BUFFER_INTERFACE","WL_CALLBACK_INTERFACE","WL_COMPOSITOR_INTERFACE","WL_DATA_DEVICE_INTERFACE","WL_DATA_DEVICE_MANAGER_INTERFACE","WL_DATA_OFFER_INTERFACE","WL_DATA_SOURCE_INTERFACE","WL_DISPLAY_INTERFACE","WL_KEYBOARD_INTERFACE","WL_OUTPUT_INTERFACE","WL_POINTER_INTERFACE","WL_REGION_INTERFACE","WL_REGISTRY_INTERFACE","WL_SEAT_INTERFACE","WL_SHELL_INTERFACE","WL_SHELL_SURFACE_INTERFACE","WL_SHM_INTERFACE","WL_SHM_POOL_INTERFACE","WL_SUBCOMPOSITOR_INTERFACE","WL_SUBSURFACE_INTERFACE","WL_SURFACE_INTERFACE","WL_TOUCH_INTERFACE","wl_buffer_events","wl_buffer_interface","wl_buffer_requests","wl_callback_events","wl_callback_interface","wl_compositor_interface","wl_compositor_requests","wl_data_device_events","wl_data_device_interface","wl_data_device_manager_interface","wl_data_device_manager_requests","wl_data_device_requests","wl_data_offer_events","wl_data_offer_interface","wl_data_offer_requests","wl_data_source_events","wl_data_source_interface","wl_data_source_requests","wl_display_events","wl_display_interface","wl_display_requests","wl_keyboard_events","wl_keyboard_interface","wl_keyboard_requests","wl_output_events","wl_output_interface","wl_output_requests","wl_pointer_events","wl_pointer_interface","wl_pointer_requests","wl_region_interface","wl_region_requests","wl_registry_events","wl_registry_interface","wl_registry_requests","wl_seat_events","wl_seat_interface","wl_seat_requests","wl_shell_interface","wl_shell_requests","wl_shell_surface_events","wl_shell_surface_interface","wl_shell_surface_requests","wl_shm_events","wl_shm_interface","wl_shm_pool_interface","wl_shm_pool_requests","wl_shm_requests","wl_subcompositor_interface","wl_subcompositor_requests","wl_subsurface_interface","wl_subsurface_requests","wl_surface_events","wl_surface_interface","wl_surface_requests","wl_touch_events","wl_touch_interface","wl_touch_requests","Destroy","EVT_RELEASE_OPCODE","EVT_RELEASE_SINCE","Event","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Release","Request","WlBuffer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","Event","Request","WlCallback","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","callback_data","CreateRegion","CreateSurface","Event","REQ_CREATE_REGION_OPCODE","REQ_CREATE_REGION_SINCE","REQ_CREATE_SURFACE_OPCODE","REQ_CREATE_SURFACE_SINCE","Request","WlCompositor","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_region","create_surface","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","DataOffer","Drop","EVT_DATA_OFFER_OPCODE","EVT_DATA_OFFER_SINCE","EVT_DROP_OPCODE","EVT_DROP_SINCE","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","EVT_SELECTION_OPCODE","EVT_SELECTION_SINCE","Enter","Error","Event","Leave","Motion","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_SELECTION_OPCODE","REQ_SET_SELECTION_SINCE","REQ_START_DRAG_OPCODE","REQ_START_DRAG_SINCE","Release","Request","Role","Selection","SetSelection","StartDrag","WlDataDevice","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","release","send_constructor","send_request","set_selection","start_drag","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","id","id","id","serial","surface","time","x","x","y","y","icon","origin","serial","serial","source","source","Ask","Copy","CreateDataSource","DndAction","Event","GetDataDevice","Move","None","REQ_CREATE_DATA_SOURCE_OPCODE","REQ_CREATE_DATA_SOURCE_SINCE","REQ_GET_DATA_DEVICE_OPCODE","REQ_GET_DATA_DEVICE_SINCE","Request","WlDataDeviceManager","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","contains","create_data_source","data","difference","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_id","from_iter","from_name","get_data_device","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_empty","iter","iter_names","not","object_data","opcode","opcode","parse_event","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","version","write_request","seat","Accept","Action","Destroy","EVT_ACTION_OPCODE","EVT_ACTION_SINCE","EVT_OFFER_OPCODE","EVT_OFFER_SINCE","EVT_SOURCE_ACTIONS_OPCODE","EVT_SOURCE_ACTIONS_SINCE","Error","Event","Finish","InvalidAction","InvalidActionMask","InvalidFinish","InvalidOffer","Offer","REQ_ACCEPT_OPCODE","REQ_ACCEPT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FINISH_OPCODE","REQ_FINISH_SINCE","REQ_RECEIVE_OPCODE","REQ_RECEIVE_SINCE","REQ_SET_ACTIONS_OPCODE","REQ_SET_ACTIONS_SINCE","Receive","Request","SetActions","SourceActions","WlDataOffer","accept","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","finish","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","receive","send_constructor","send_request","set_actions","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","dnd_action","mime_type","source_actions","dnd_actions","fd","mime_type","mime_type","preferred_action","serial","Action","Cancelled","Destroy","DndDropPerformed","DndFinished","EVT_ACTION_OPCODE","EVT_ACTION_SINCE","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_DND_DROP_PERFORMED_OPCODE","EVT_DND_DROP_PERFORMED_SINCE","EVT_DND_FINISHED_OPCODE","EVT_DND_FINISHED_SINCE","EVT_SEND_OPCODE","EVT_SEND_SINCE","EVT_TARGET_OPCODE","EVT_TARGET_SINCE","Error","Event","InvalidActionMask","InvalidSource","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_OFFER_OPCODE","REQ_OFFER_SINCE","REQ_SET_ACTIONS_OPCODE","REQ_SET_ACTIONS_SINCE","Request","Send","SetActions","Target","WlDataSource","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","offer","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_actions","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","dnd_action","fd","mime_type","mime_type","dnd_actions","mime_type","DeleteId","EVT_DELETE_ID_OPCODE","EVT_DELETE_ID_SINCE","EVT_ERROR_OPCODE","EVT_ERROR_SINCE","Error","Error","Event","GetRegistry","Implementation","InvalidMethod","InvalidObject","NoMemory","REQ_GET_REGISTRY_OPCODE","REQ_GET_REGISTRY_SINCE","REQ_SYNC_OPCODE","REQ_SYNC_SINCE","Request","Sync","WlDisplay","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_registry","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","sync","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","code","id","message","object_id","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_KEYMAP_OPCODE","EVT_KEYMAP_SINCE","EVT_KEY_OPCODE","EVT_KEY_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MODIFIERS_OPCODE","EVT_MODIFIERS_SINCE","EVT_REPEAT_INFO_OPCODE","EVT_REPEAT_INFO_SINCE","Enter","Event","Key","KeyState","Keymap","KeymapFormat","Leave","Modifiers","NoKeymap","Pressed","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Released","RepeatInfo","Request","WlKeyboard","XkbV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","release","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","delay","fd","format","group","key","keys","mods_depressed","mods_latched","mods_locked","rate","serial","serial","serial","serial","size","state","surface","surface","time","Current","Description","Done","EVT_DESCRIPTION_OPCODE","EVT_DESCRIPTION_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_GEOMETRY_OPCODE","EVT_GEOMETRY_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_SCALE_OPCODE","EVT_SCALE_SINCE","Event","Flipped","Flipped180","Flipped270","Flipped90","Geometry","HorizontalBgr","HorizontalRgb","Mode","Mode","Name","None","Normal","Preferred","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Scale","Subpixel","Transform","Unknown","VerticalBgr","VerticalRgb","WlOutput","_180","_270","_90","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","data","difference","empty","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_id","from_iter","from_name","hash","hash","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_empty","iter","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","release","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","version","write_request","description","factor","flags","height","make","model","name","physical_height","physical_width","refresh","subpixel","transform","width","x","y","Axis","Axis","AxisDiscrete","AxisRelativeDirection","AxisRelativeDirection","AxisSource","AxisSource","AxisStop","AxisValue120","Button","ButtonState","Continuous","EVT_AXIS_DISCRETE_OPCODE","EVT_AXIS_DISCRETE_SINCE","EVT_AXIS_OPCODE","EVT_AXIS_RELATIVE_DIRECTION_OPCODE","EVT_AXIS_RELATIVE_DIRECTION_SINCE","EVT_AXIS_SINCE","EVT_AXIS_SOURCE_OPCODE","EVT_AXIS_SOURCE_SINCE","EVT_AXIS_STOP_OPCODE","EVT_AXIS_STOP_SINCE","EVT_AXIS_VALUE120_OPCODE","EVT_AXIS_VALUE120_SINCE","EVT_BUTTON_OPCODE","EVT_BUTTON_SINCE","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","Enter","Error","Event","Finger","Frame","HorizontalScroll","Identical","Inverted","Leave","Motion","Pressed","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_CURSOR_OPCODE","REQ_SET_CURSOR_SINCE","Release","Released","Request","Role","SetCursor","VerticalScroll","Wheel","WheelTilt","WlPointer","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","data","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_id","hash","hash","hash","hash","hash","hash","id","inert","interface","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","release","send_constructor","send_request","set_cursor","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","write_request","axis","axis","axis","axis","axis","axis_source","button","direction","discrete","serial","serial","serial","state","surface","surface","surface_x","surface_x","surface_y","surface_y","time","time","time","time","value","value120","hotspot_x","hotspot_y","serial","surface","Add","Destroy","Event","REQ_ADD_OPCODE","REQ_ADD_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SUBTRACT_OPCODE","REQ_SUBTRACT_SINCE","Request","Subtract","WlRegion","add","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","subtract","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","height","height","width","width","x","x","y","y","Bind","EVT_GLOBAL_OPCODE","EVT_GLOBAL_REMOVE_OPCODE","EVT_GLOBAL_REMOVE_SINCE","EVT_GLOBAL_SINCE","Event","Global","GlobalRemove","REQ_BIND_OPCODE","REQ_BIND_SINCE","Request","WlRegistry","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","bind","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","interface","name","name","version","id","name","Capabilities","Capability","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","Error","Event","GetKeyboard","GetPointer","GetTouch","Keyboard","MissingCapability","Name","Pointer","REQ_GET_KEYBOARD_OPCODE","REQ_GET_KEYBOARD_SINCE","REQ_GET_POINTER_OPCODE","REQ_GET_POINTER_SINCE","REQ_GET_TOUCH_OPCODE","REQ_GET_TOUCH_SINCE","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Touch","WlSeat","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","data","difference","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_id","from_iter","from_name","get_keyboard","get_pointer","get_touch","hash","hash","hash","id","inert","insert","interface","intersection","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_empty","iter","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","release","remove","send_constructor","send_request","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","version","write_request","capabilities","name","Error","Event","GetShellSurface","REQ_GET_SHELL_SURFACE_OPCODE","REQ_GET_SHELL_SURFACE_SINCE","Request","Role","WlShell","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_shell_surface","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","surface","Bottom","BottomLeft","BottomRight","Configure","Default","Driver","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_PING_OPCODE","EVT_PING_SINCE","EVT_POPUP_DONE_OPCODE","EVT_POPUP_DONE_SINCE","Event","Fill","FullscreenMethod","Inactive","Left","Move","None","Ping","Pong","PopupDone","REQ_MOVE_OPCODE","REQ_MOVE_SINCE","REQ_PONG_OPCODE","REQ_PONG_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","REQ_SET_CLASS_OPCODE","REQ_SET_CLASS_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_POPUP_OPCODE","REQ_SET_POPUP_SINCE","REQ_SET_TITLE_OPCODE","REQ_SET_TITLE_SINCE","REQ_SET_TOPLEVEL_OPCODE","REQ_SET_TOPLEVEL_SINCE","REQ_SET_TRANSIENT_OPCODE","REQ_SET_TRANSIENT_SINCE","Request","Resize","Resize","Right","Scale","SetClass","SetFullscreen","SetMaximized","SetPopup","SetTitle","SetToplevel","SetTransient","Top","TopLeft","TopRight","Transient","WlShellSurface","_move","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","complement","contains","contains","data","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_iter","from_name","from_name","hash","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","not","object_data","opcode","opcode","parse_event","partial_cmp","pong","remove","remove","resize","send_constructor","send_request","set","set","set_class","set_fullscreen","set_maximized","set_popup","set_title","set_toplevel","set_transient","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","edges","height","serial","width","class_","edges","flags","flags","framerate","method","output","output","parent","parent","seat","seat","seat","serial","serial","serial","serial","title","x","x","y","y","Abgr1555","Abgr16161616","Abgr16161616f","Abgr2101010","Abgr4444","Abgr8888","Argb1555","Argb16161616","Argb16161616f","Argb2101010","Argb4444","Argb8888","Axbxgxrx106106106106","Ayuv","Bgr233","Bgr565","Bgr565A8","Bgr888","Bgr888A8","Bgra1010102","Bgra4444","Bgra5551","Bgra8888","Bgrx1010102","Bgrx4444","Bgrx5551","Bgrx8888","Bgrx8888A8","C8","CreatePool","EVT_FORMAT_OPCODE","EVT_FORMAT_SINCE","Error","Event","Format","Format","Gr1616","Gr88","InvalidFd","InvalidFormat","InvalidStride","Nv12","Nv15","Nv16","Nv21","Nv24","Nv42","Nv61","P010","P012","P016","P210","Q401","Q410","R16","R8","REQ_CREATE_POOL_OPCODE","REQ_CREATE_POOL_SINCE","Request","Rg1616","Rg88","Rgb332","Rgb565","Rgb565A8","Rgb888","Rgb888A8","Rgba1010102","Rgba4444","Rgba5551","Rgba8888","Rgbx1010102","Rgbx4444","Rgbx5551","Rgbx8888","Rgbx8888A8","Uyvy","Vuy101010","Vuy888","Vyuy","WlShm","X0l0","X0l2","Xbgr1555","Xbgr16161616","Xbgr16161616f","Xbgr2101010","Xbgr4444","Xbgr8888","Xbgr8888A8","Xrgb1555","Xrgb16161616","Xrgb16161616f","Xrgb2101010","Xrgb4444","Xrgb8888","Xrgb8888A8","Xvyu1216161616","Xvyu16161616","Xvyu2101010","Xyuv8888","Y0l0","Y0l2","Y210","Y212","Y216","Y410","Y412","Y416","Yuv410","Yuv411","Yuv420","Yuv42010bit","Yuv4208bit","Yuv422","Yuv444","Yuyv","Yvu410","Yvu411","Yvu420","Yvu422","Yvu444","Yvyu","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","create_pool","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","format","fd","size","CreateBuffer","Destroy","Event","REQ_CREATE_BUFFER_OPCODE","REQ_CREATE_BUFFER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","Request","Resize","WlShmPool","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_buffer","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","resize","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","format","height","offset","size","stride","width","BadParent","BadSurface","Destroy","Error","Event","GetSubsurface","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_SUBSURFACE_OPCODE","REQ_GET_SUBSURFACE_SINCE","Request","WlSubcompositor","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_subsurface","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","parent","surface","BadSurface","Destroy","Error","Event","PlaceAbove","PlaceBelow","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_PLACE_ABOVE_OPCODE","REQ_PLACE_ABOVE_SINCE","REQ_PLACE_BELOW_OPCODE","REQ_PLACE_BELOW_SINCE","REQ_SET_DESYNC_OPCODE","REQ_SET_DESYNC_SINCE","REQ_SET_POSITION_OPCODE","REQ_SET_POSITION_SINCE","REQ_SET_SYNC_OPCODE","REQ_SET_SYNC_SINCE","Request","SetDesync","SetPosition","SetSync","WlSubsurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","place_above","place_below","send_constructor","send_request","set_desync","set_position","set_sync","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","sibling","sibling","x","y","Attach","Commit","Damage","DamageBuffer","DefunctRoleObject","Destroy","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_PREFERRED_BUFFER_SCALE_OPCODE","EVT_PREFERRED_BUFFER_SCALE_SINCE","EVT_PREFERRED_BUFFER_TRANSFORM_OPCODE","EVT_PREFERRED_BUFFER_TRANSFORM_SINCE","Enter","Error","Event","Frame","InvalidOffset","InvalidScale","InvalidSize","InvalidTransform","Leave","Offset","PreferredBufferScale","PreferredBufferTransform","REQ_ATTACH_OPCODE","REQ_ATTACH_SINCE","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_DAMAGE_BUFFER_OPCODE","REQ_DAMAGE_BUFFER_SINCE","REQ_DAMAGE_OPCODE","REQ_DAMAGE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FRAME_OPCODE","REQ_FRAME_SINCE","REQ_OFFSET_OPCODE","REQ_OFFSET_SINCE","REQ_SET_BUFFER_SCALE_OPCODE","REQ_SET_BUFFER_SCALE_SINCE","REQ_SET_BUFFER_TRANSFORM_OPCODE","REQ_SET_BUFFER_TRANSFORM_SINCE","REQ_SET_INPUT_REGION_OPCODE","REQ_SET_INPUT_REGION_SINCE","REQ_SET_OPAQUE_REGION_OPCODE","REQ_SET_OPAQUE_REGION_SINCE","Request","SetBufferScale","SetBufferTransform","SetInputRegion","SetOpaqueRegion","WlSurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","attach","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","commit","damage","damage_buffer","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","frame","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","offset","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_buffer_scale","set_buffer_transform","set_input_region","set_opaque_region","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","factor","output","output","transform","buffer","height","height","region","region","scale","transform","width","width","x","x","x","x","y","y","y","y","Cancel","Down","EVT_CANCEL_OPCODE","EVT_CANCEL_SINCE","EVT_DOWN_OPCODE","EVT_DOWN_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","EVT_ORIENTATION_OPCODE","EVT_ORIENTATION_SINCE","EVT_SHAPE_OPCODE","EVT_SHAPE_SINCE","EVT_UP_OPCODE","EVT_UP_SINCE","Event","Frame","Motion","Orientation","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Shape","Up","WlTouch","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","release","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","id","id","id","id","id","major","minor","orientation","serial","serial","surface","time","time","time","x","x","y","y"],"q":[[0,"wayland_client"],[216,"wayland_client::DispatchError"],[219,"wayland_client::backend"],[381,"wayland_client::backend::protocol"],[646,"wayland_client::globals"],[740,"wayland_client::protocol"],[763,"wayland_client::protocol::__interfaces"],[843,"wayland_client::protocol::wl_buffer"],[913,"wayland_client::protocol::wl_callback"],[979,"wayland_client::protocol::wl_callback::Event"],[980,"wayland_client::protocol::wl_compositor"],[1051,"wayland_client::protocol::wl_data_device"],[1167,"wayland_client::protocol::wl_data_device::Event"],[1177,"wayland_client::protocol::wl_data_device::Request"],[1183,"wayland_client::protocol::wl_data_device_manager"],[1318,"wayland_client::protocol::wl_data_device_manager::Request"],[1319,"wayland_client::protocol::wl_data_offer"],[1437,"wayland_client::protocol::wl_data_offer::Event"],[1440,"wayland_client::protocol::wl_data_offer::Request"],[1446,"wayland_client::protocol::wl_data_source"],[1563,"wayland_client::protocol::wl_data_source::Event"],[1567,"wayland_client::protocol::wl_data_source::Request"],[1569,"wayland_client::protocol::wl_display"],[1672,"wayland_client::protocol::wl_display::Event"],[1676,"wayland_client::protocol::wl_keyboard"],[1809,"wayland_client::protocol::wl_keyboard::Event"],[1828,"wayland_client::protocol::wl_output"],[2033,"wayland_client::protocol::wl_output::Event"],[2048,"wayland_client::protocol::wl_pointer"],[2273,"wayland_client::protocol::wl_pointer::Event"],[2298,"wayland_client::protocol::wl_pointer::Request"],[2302,"wayland_client::protocol::wl_region"],[2377,"wayland_client::protocol::wl_region::Request"],[2385,"wayland_client::protocol::wl_registry"],[2458,"wayland_client::protocol::wl_registry::Event"],[2462,"wayland_client::protocol::wl_registry::Request"],[2464,"wayland_client::protocol::wl_seat"],[2635,"wayland_client::protocol::wl_seat::Event"],[2637,"wayland_client::protocol::wl_shell"],[2727,"wayland_client::protocol::wl_shell::Request"],[2728,"wayland_client::protocol::wl_shell_surface"],[2996,"wayland_client::protocol::wl_shell_surface::Event"],[3000,"wayland_client::protocol::wl_shell_surface::Request"],[3022,"wayland_client::protocol::wl_shm"],[3247,"wayland_client::protocol::wl_shm::Event"],[3248,"wayland_client::protocol::wl_shm::Request"],[3250,"wayland_client::protocol::wl_shm_pool"],[3325,"wayland_client::protocol::wl_shm_pool::Request"],[3331,"wayland_client::protocol::wl_subcompositor"],[3426,"wayland_client::protocol::wl_subcompositor::Request"],[3428,"wayland_client::protocol::wl_subsurface"],[3538,"wayland_client::protocol::wl_subsurface::Request"],[3542,"wayland_client::protocol::wl_surface"],[3688,"wayland_client::protocol::wl_surface::Event"],[3692,"wayland_client::protocol::wl_surface::Request"],[3709,"wayland_client::protocol::wl_touch"],[3797,"wayland_client::protocol::wl_touch::Event"],[3815,"core::any"],[3816,"std::os::fd::owned"],[3817,"core::result"],[3818,"core::clone"],[3819,"core::option"],[3820,"core::marker"],[3821,"core::marker"],[3822,"alloc::sync"],[3823,"std::os::fd::owned"],[3824,"core::fmt"],[3825,"std::os::unix::net::stream"],[3826,"core::hash"],[3827,"alloc::boxed"],[3828,"alloc::rc"],[3829,"core::task::wake"],[3830,"core::convert"],[3831,"core::error"],[3832,"alloc::string"],[3833,"core::any"],[3834,"std::os::fd::raw"],[3835,"core::fmt"],[3836,"core::ops::range"],[3837,"alloc::vec"],[3838,"core::ops::function"],[3839,"bitflags::iter"],[3840,"bitflags::iter"]],"d":["The backend generated an error","The received message does not match the specification for …","An error when trying to establish a Wayland connection.","The Wayland connection","A trait for handlers of proxies’ events delivered to an …","Wayland dispatching error","The event enum for this interface","An event queue","<code>WAYLAND_SOCKET</code> was set but contained garbage","Could not find wayland compositor","The wayland library could not be loaded.","Trait representing a Wayland interface","A handle that temporarily pauses event processing on an …","A handle representing an <code>EventQueue</code>, used to assign …","The <code>ObjectData</code> implementation used by Wayland proxies, …","The request enum for this interface","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","A weak handle to a Wayland object","","","","","","","","","","","","","","","","","","","Provides fd from <code>Backend::poll_fd</code> for polling.","Provides fd from <code>Backend::poll_fd</code> for polling.","Backend reexports","Access the backend associated with this object","Get the <code>Backend</code> underlying this <code>Connection</code>","Block waiting for events and dispatch them","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to connect to the Wayland server following the …","Access the user-data associated with this object","","A helper macro which delegates a set of <code>Dispatch</code> …","A helper macro which delegates a set of <code>Dispatch</code> …","","Dispatch pending events","Get the <code>WlDisplay</code> associated with this connection","Creates a weak handle to this object","","","","","","Called when an event from the server is processed","","Method used to initialize the user-data of objects created …","Method used to initialize the user-data of objects created …","Macro used to override <code>Dispatch::event_created_child()</code>","Flush pending outgoing events to the server","Flush pending outgoing events to the server","","","","","","","","","","","","Temporarily block processing on this queue.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an enum from the integer format used by the …","","Returns the argument unchanged.","Returns the argument unchanged.","Wrap an existing <code>Backend</code> into a <code>Connection</code>","Create an object proxy from its ID","Initialize a Wayland connection from an already existing …","Get the object data for a given object ID","Helpers for handling the initialization of an app","Get a <code>QueueHandle</code> for this event queue","","The ID of this object","The underlying <code>ObjectId</code>","Create an inert object proxy","The interface description","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>WEnum</code> into a result","Checks if the Wayland object associated with this proxy is …","Create an object data associated with this event queue","Create a new event queue","Access the raw data associated with this object.","Get the protocol information related to given object ID","Parse a event for this object","Attempt to dispatch events from this queue, registering …","Start a synchronized read from the socket","Start a synchronized read from the socket","Generated protocol definitions","Retrieve the protocol error that occured on the connection …","Synchronous roundtrip","Do a roundtrip to the server","Send a request for this object that creates another object.","Send a request for this object.","Send a request associated with the provided object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user data associated with this object","Try to upgrade with weak handle back into a full proxy.","The version of this object","Serialize a request for this object","The interface of the target object","The opcode number","The id of the target object","A Wayland client backend","An error generated when trying to act on an invalid …","The connection encountered an IO error","An error type representing the failure to load libwayland","A trait representing your data associated to an object","An ID representing a Wayland object","The connection encountered a protocol error","Guard for synchronizing event reading across multiple …","An error that can occur when using a Wayland connection","A weak handle to a <code>Backend</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to initialize a Wayland backend on the provided unix …","Access the Wayland socket FD for polling","Helper for accessing user data","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Dispatches the inner queue of this backend if necessary","Get the object ID for the <code>wl_display</code>","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Get a <code>WeakBackend</code> from this backend","","","Dispatch an event for the associated object","Flush all pending outgoing requests to the server","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Access the object data associated with a given object ID","","Get the detailed protocol information about a wayland …","Interface of the represented object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Check if this is a null ID","Get the last error that occurred on this backend","Create a null object ID","Access the Wayland socket FD for polling","Create a new reading guard","Types and utilities for manipulating the Wayland protocol","Return the protocol-level numerical ID of this object","Attempt to read events from the Wayland socket","Sends a request to the server","Set the object data associated with a given object ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to upgrade this weak handle to a <code>Backend</code>","Special interface representing an anonymous object","Describes whether an argument may have a null value.","Enum of possible argument of the protocol","Enum of possible argument types as recognized by the wire","<code>Vec&lt;u8&gt;</code>","<code>Vec&lt;u8&gt;</code>","A file descriptor argument. Represented by a <code>RawFd</code>.","A file descriptor argument. Represented by a <code>RawFd</code>.","A signed fixed point number with 1/256 precision","A signed fixed point number with 1/256 precision","Number of arguments that are stocked inline in a <code>Message</code> …","An integer argument. Represented by a <code>i32</code>.","An integer argument. Represented by a <code>i32</code>.","Description of wayland interface.","Represents a message that has been sent from some object.","Wire metadata of a given message","Id of a newly created wayland object","Id of a newly created wayland object","Null values are forbidden.","Id of a wayland object","Id of a wayland object","Description of the protocol-level information of an object","A protocol error","A string. This is represented as a <code>CString</code> in a message.","CString","An unsigned integer argument. Represented by a <code>u32</code>.","An unsigned integer argument. Represented by a <code>u32</code>.","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","Error representing an unknown numeric variant for a <code>WEnum</code>","Null values are allowed.","","The interfaces passed into this message as arguments.","The arguments of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A C representation of this interface that may be used to …","The child interface created from this message.","","","","","","","","","","","","","","","","","The error code associated with the error","","","","","","","A list that describes every event this interface supports.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve the type of a given argument instance","","","The protocol ID","The interface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this message is a destructor","Map some closure on all Fd contained in this message, to …","The message sent by the server describing the error","","","","The name of the interface.","Name of this message","","The id of the object that caused the error","The interface of the object that caused the error","The opcode of the message.","","","A list that describes every request this interface …","","Returns true if the two interfaces are the same.","Returns true if the type of the argument is the same.","The id of the object that sent the message.","","Signature of the message","Minimum required version of the interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum supported version of the interface.","The version","","","","The backend generated an error","An error that occurs when a binding a global fails.","Description of a global.","An error that may occur when initializing the global list.","A helper for global initialization.","A container representing the current contents of the list …","An invalid object id was acted upon.","The requested global was not found in the registry.","The requested version of the global is not supported.","","","","","","","","","","","Binds a global, returning a new protocol object associated …","","","","","","","","","","","","","Get a copy of the contents of the list of globals.","Access the contents of the list of globals","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The interface of the global.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The name of the global.","Returns the <code>WlRegistry</code> protocol object.","Initialize a new event queue with its associated registry …","","","","","","","","","","","","","","","","","","","","The advertised version of the global.","Access the list of globals","","content for a wl_surface","callback object","the compositor singleton","data transfer device","data transfer interface","offer to transfer data","offer to transfer data","core global object","keyboard input device","compositor output region","pointer input device","region interface","global registry object","group of input devices","create desktop-style surfaces","desktop-style metadata interface","shared memory support","a shared memory pool","sub-surface compositing","sub-surface interface to a wl_surface","an onscreen surface","touchscreen input device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy a buffer","The wire opcode for this event","The minimal object version supporting this event","","The wire opcode for this request","The minimal object version supporting this request","compositor releases buffer","","content for a wl_surface","","","","","","","","","","","","","","","","","","destroy a buffer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","done event","The wire opcode for this event","The minimal object version supporting this event","","","callback object","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","request-specific data for the callback","create new region","create new surface","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the compositor singleton","","","","","","","","","","","","","","","","","create new region","create new surface","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","introduce a new wl_data_offer","end drag-and-drop session successfully","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","initiate drag-and-drop session","","","end drag-and-drop session","drag-and-drop session motion","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","destroy data device","","given wl_surface has another role","advertise new selection","copy data to the selection","start drag-and-drop operation","data transfer device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","destroy data device","","","copy data to the selection","start drag-and-drop operation","","","","","","","","","","","","","","","","","","the new data_offer object","source data_offer object","selection data_offer object","serial number of the enter event","client surface entered","timestamp with millisecond granularity","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","drag-and-drop icon surface","surface where the drag originates","serial number of the implicit grab on the origin","serial number of the event that triggered this request","data source for the eventual transfer","data source for the selection","ask action","copy action","create a new data source","drag and drop actions","","create a new data device","move action","no action","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","data transfer interface","Get a flags value with all known bits set.","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","create a new data source","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","create a new data device","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","seat associated with the data device","accept one of the offered mime types","notify the selected action","destroy data offer","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the offer will no longer be used","action argument has an invalid value","action mask contains invalid values","finish request was called untimely","offer doesn’t accept this request","advertise offered mime type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","request that the data is transferred","","set the available/preferred drag-and-drop actions","notify the source-side available actions","offer to transfer data","accept one of the offered mime types","","","","","","","","","","","","","","","","","","","","","","","","","destroy data offer","","","","the offer will no longer be used","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","request that the data is transferred","","","set the available/preferred drag-and-drop actions","","","","","","","","","","","","","","","","","","action selected by the compositor","offered mime type","actions offered by the data source","actions supported by the destination client","file descriptor for data transfer","mime type accepted by the client","mime type desired by receiver","action preferred by the destination client","serial number of the accept request","notify the selected action","selection was cancelled","destroy the data source","the drag-and-drop operation physically finished","the drag-and-drop operation concluded","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","action mask contains invalid values","source doesn’t accept this request","add an offered mime type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","send the data","set the available drag-and-drop actions","a target accepts an offered mime type","offer to transfer data","","","","","","","","","","","","","","","","","","","","","","","","","destroy the data source","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","add an offered mime type","Get the opcode number of this message","Get the opcode number of this message","","","","","set the available drag-and-drop actions","","","","","","","","","","","","","","","","","","action selected by the compositor","file descriptor for the data","mime type accepted by the target","mime type for the data","actions supported by the data source","mime type offered by the data source","acknowledge object ID deletion","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","global error values","fatal error event","","get global registry object","implementation error in compositor","method doesn’t exist on the specified interface or …","server couldn’t find object","server is out of memory","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","asynchronous roundtrip","core global object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get global registry object","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","asynchronous roundtrip","","","","","","","","","","","","","","","","","","error code","deleted object ID","error description","object where the error occurred","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enter event","","key event","physical key state","keyboard mapping","keyboard mapping format","leave event","modifier and group state","no keymap; client must understand how to interpret the raw …","key is pressed","The wire opcode for this request","The minimal object version supporting this request","release the keyboard object","key is not pressed","repeat rate and delay","","keyboard input device","libxkbcommon compatible, null-terminated string; to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","release the keyboard object","","","","","","","","","","","","","","","","","","","","","","","","","delay in milliseconds since key down until repeating starts","keymap file descriptor","keymap format","keyboard layout","key that produced the event","the currently pressed keys","depressed modifiers","latched modifiers","locked modifiers","the rate of repeating keys in characters per second","serial number of the enter event","serial number of the leave event","serial number of the key event","serial number of the modifiers event","keymap size, in bytes","physical state of the key","surface gaining keyboard focus","surface that lost keyboard focus","timestamp with millisecond granularity","indicates this is the current mode","human-readable description of this output","sent all information about output","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","180 degree flip around a vertical axis","flip and rotate 180 degrees counter-clockwise","flip and rotate 270 degrees counter-clockwise","flip and rotate 90 degrees counter-clockwise","properties of the output","horizontal BGR","horizontal RGB","mode information","advertise available modes for the output","name of this output","no geometry","no transform","indicates this is the preferred mode","The wire opcode for this request","The minimal object version supporting this request","release the output object","","output scaling properties","subpixel geometry information","transform from framebuffer to output","unknown geometry","vertical BGR","vertical RGB","compositor output region","180 degrees counter-clockwise","270 degrees counter-clockwise","90 degrees counter-clockwise","Get a flags value with all known bits set.","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","","release the output object","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","output description","scaling factor of output","bitfield of mode flags","height of the mode in hardware units","textual description of the manufacturer","textual description of the model","output name","height in millimeters of the output","width in millimeters of the output","vertical refresh rate in mHz","subpixel orientation of the output","transform that maps framebuffer to output","width of the mode in hardware units","x position within the global compositor space","y position within the global compositor space","axis types","axis event","axis click event","axis relative direction","axis relative physical direction event","axis source types","axis source event","axis stop event","axis high-resolution scroll event","pointer button event","physical button state","continuous coordinate space","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The wire opcode for this event","The minimal object version supporting this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enter event","","","finger on a touch surface","end of a pointer event sequence","horizontal axis","physical motion matches axis direction","physical motion is the inverse of the axis direction","leave event","pointer motion event","the button is pressed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","release the pointer object","the button is not pressed","","given wl_surface has another role","set the pointer surface","vertical axis","a physical wheel rotation","a physical wheel tilt","pointer input device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","release the pointer object","","","set the pointer surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","axis type","the axis stopped with this event","axis type","axis type","axis type","source of the axis event","button that produced the event","physical direction relative to axis motion","number of steps","serial number of the enter event","serial number of the leave event","serial number of the button event","physical state of the button","surface entered by the pointer","surface left by the pointer","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","length of vector in surface-local coordinate space","scroll distance as fraction of 120","surface-local x coordinate","surface-local y coordinate","serial number of the enter event","pointer surface","add rectangle to region","destroy region","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","subtract rectangle from region","region interface","add rectangle to region","","","","","","","","","","","","","","","","","","destroy region","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","subtract rectangle from region","","","","","","","","","","","","","rectangle height","rectangle height","rectangle width","rectangle width","region-local x coordinate","region-local x coordinate","region-local y coordinate","region-local y coordinate","bind an object to the display","The wire opcode for this event","The wire opcode for this event","The minimal object version supporting this event","The minimal object version supporting this event","","announce global object","announce removal of global object","The wire opcode for this request","The minimal object version supporting this request","","global registry object","","","","","","","","bind an object to the display","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","interface implemented by the object","numeric name of the global object","numeric name of the global object","interface version","bounded object","unique numeric name of the object","seat capabilities changed","seat capability bitmask","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","wl_seat error values","","return keyboard object","return pointer object","return touch object","the seat has one or more keyboards","get_pointer, get_keyboard or get_touch called on seat …","unique identifier for this seat","the seat has pointer devices","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","release the seat object","","the seat has touch devices","group of input devices","Get a flags value with all known bits set.","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","return keyboard object","return pointer object","return touch object","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","release the seat object","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","capabilities of the seat","seat identifier","","","create a shell surface from a surface","The wire opcode for this request","The minimal object version supporting this request","","given wl_surface has another role","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","create a shell surface from a surface","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","surface to be given the shell surface role","bottom edge","bottom and left edges","bottom and right edges","suggest resize","no preference, apply default policy","switch output mode to the smallest mode that can fit the …","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","no upscaling, center on output and add black borders to …","different method to set the surface fullscreen","do not set keyboard focus","left edge","start an interactive move","no edge","ping client","respond to a ping event","popup interaction is done","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","edge values for resizing","start an interactive resize","right edge","scale, preserve the surface’s aspect ratio and center on …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","top edge","top and left edges","top and right edges","details of transient behaviour","desktop-style metadata interface","start an interactive move","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","respond to a ping event","The intersection of a source flags value with the …","The intersection of a source flags value with the …","start an interactive resize","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","how the surface was resized","new height of the surface","serial number of the ping","new width of the surface","surface class","which edge or corner is being dragged","transient surface behavior","transient surface behavior","framerate in mHz","method for resolving size conflict","output on which the surface is to be fullscreen","output on which the surface is to be maximized","parent surface","parent surface","seat whose pointer is used","seat whose pointer is used","seat whose pointer is used","serial number of the ping event","serial number of the implicit grab on the pointer","serial number of the implicit grab on the pointer","serial number of the implicit grab on the pointer","surface title","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …","[63:0] A:B:G:R 16:16:16:16 little endian","[63:0] A:B:G:R 16:16:16:16 little endian","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …","[63:0] A:R:G:B 16:16:16:16 little endian","[63:0] A:R:G:B 16:16:16:16 little endian","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian","[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …","8-bit BGR format, [7:0] B:G:R 2:3:3","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian","","24-bit BGR format, [23:0] B:G:R little endian","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian","","8-bit color index format, [7:0] C","create a shm pool","The wire opcode for this event","The minimal object version supporting this event","wl_shm error values","","pixel formats","pixel format description","[31:0] G:R 16:16 little endian","[15:0] G:R 8:8 little endian","mmapping the file descriptor failed","buffer format is not known","invalid size or stride during pool or buffer creation","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane","2x2 subsampled Cr:Cb plane","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane","non-subsampled Cr:Cb plane","non-subsampled Cb:Cr plane","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane","2x2 subsampled Cr:Cb plane 10 bits per channel","2x2 subsampled Cr:Cb plane 12 bits per channel","2x2 subsampled Cr:Cb plane 16 bits per channel","2x1 subsampled Cr:Cb plane, 10 bit per channel","","","[15:0] R little endian","[7:0] R","The wire opcode for this request","The minimal object version supporting this request","","[31:0] R:G 16:16 little endian","[15:0] R:G 8:8 little endian","8-bit RGB format, [7:0] R:G:B 3:3:2","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian","","24-bit RGB format, [23:0] R:G:B little endian","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …","Y followed by U then V, 10:10:10. Non-linear modifier only","[23:0] Cr:Cb:Y 8:8:8 little endian","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …","shared memory support","[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …","[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …","[63:0] x:B:G:R 16:16:16:16 little endian","[63:0] x:B:G:R 16:16:16:16 little endian","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian","","[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] X:Cr:Y:Cb 16:16:16:16 little endian","[31:0] X:Cr:Y:Cb 2:10:10:10 little endian","[31:0] X:Y:Cb:Cr 8:8:8:8 little endian","[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …","[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …","[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …","[31:0] A:Cr:Y:Cb 2:10:10:10 little endian","[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] A:Cr:Y:Cb 16:16:16:16 little endian","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …","","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create a shm pool","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","buffer pixel format","file descriptor for the pool","pool size, in bytes","create a buffer from the pool","destroy the pool","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","change the size of the pool mapping","a shared memory pool","","","","","","","","","","","","","","","","","create a buffer from the pool","","destroy the pool","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","change the size of the pool mapping","","","","","","","","","","","","","","","buffer pixel format","buffer height, in pixels","buffer byte offset within the pool","new size of the pool, in bytes","number of bytes from the beginning of one row to the …","buffer width, in pixels","the to-be sub-surface parent is invalid","the to-be sub-surface is invalid","unbind from the subcompositor interface","","","give a surface the role sub-surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","sub-surface compositing","","","","","","","","","","","","","","","","","","","","","","","","","unbind from the subcompositor interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","give a surface the role sub-surface","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","the parent surface","the surface to be turned into a sub-surface","wl_surface is not a sibling or the parent","remove sub-surface interface","","","restack the sub-surface","restack the sub-surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","sub-surface interface to a wl_surface","","","","","","","","","","","","","","","","","","","","","","","","","remove sub-surface interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","restack the sub-surface","restack the sub-surface","","","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","","","","","","","","","","","","","","","","","","the reference surface","the reference surface","x coordinate in the parent surface","y coordinate in the parent surface","set the surface contents","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","surface was destroyed before its role object","delete surface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","surface enters an output","wl_surface error values","","request a frame throttling hint","buffer offset is invalid","buffer scale value is invalid","buffer size is invalid","buffer transform value is invalid","surface leaves an output","set the surface contents offset","preferred buffer scale for the surface","preferred buffer transform for the surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","an onscreen surface","","","","","","","","","set the surface contents","","","","","","","","","","","","","","","","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","","delete surface","","","","","","","","request a frame throttling hint","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","set the surface contents offset","Get the opcode number of this message","Get the opcode number of this message","","","","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","","","","","","","","","","","","","","","","","","preferred scaling factor","output entered by the surface","output left by the surface","preferred transform","buffer of surface contents","height of damage rectangle","height of damage rectangle","opaque region of the surface","input region of the surface","positive scale for interpreting buffer contents","transform for interpreting buffer contents","width of damage rectangle","width of damage rectangle","surface-local x coordinate","surface-local x coordinate","buffer-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","buffer-local y coordinate","surface-local y coordinate","touch session cancelled","touch down event and beginning of a touch sequence","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","end of touch frame event","update of touch point coordinates","update orientation of touch point","The wire opcode for this request","The minimal object version supporting this request","release the touch object","","update shape of touch point","end of a touch event sequence","touchscreen input device","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","release the touch object","","","","","","","","","","","","","","","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","length of the major axis in surface-local coordinates","length of the minor axis in surface-local coordinates","angle between major axis and positive surface y-axis in …","serial number of the touch down event","serial number of the touch up event","surface touched","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate"],"i":[11,11,0,0,0,0,7,0,18,18,18,0,0,0,0,7,14,14,0,0,2,13,22,4,18,25,14,11,16,2,13,22,4,18,25,14,11,16,2,4,0,7,4,2,2,13,22,4,18,25,14,11,16,2,13,22,4,18,25,14,11,16,13,4,14,16,13,4,14,16,4,7,22,0,0,22,2,4,7,25,4,14,16,16,28,22,28,28,0,2,4,2,13,22,4,18,18,25,14,11,11,16,13,2,13,22,4,18,25,14,14,11,11,16,4,7,4,4,0,2,16,7,16,7,7,2,13,22,4,18,25,14,11,16,2,13,22,4,18,25,14,11,16,2,13,22,4,18,25,14,11,16,2,13,22,4,18,25,14,11,16,14,7,13,4,7,4,7,2,2,4,0,4,2,4,7,7,4,11,13,4,14,16,18,11,2,13,22,4,18,25,14,11,16,2,13,22,4,18,25,14,11,16,2,13,22,4,18,25,14,11,16,22,16,7,7,176,176,176,0,0,34,0,0,0,34,0,0,0,23,9,8,53,58,34,41,23,9,8,53,58,34,41,23,9,8,53,58,34,41,23,9,8,53,58,34,41,34,23,9,8,34,41,23,9,8,34,41,9,53,32,32,32,9,9,32,32,32,32,32,9,23,9,32,9,32,23,23,9,8,53,58,58,34,34,41,41,23,9,8,53,58,34,34,34,41,9,23,9,23,23,9,8,53,58,34,41,23,9,8,53,58,34,41,23,9,8,53,58,34,41,23,9,8,53,58,34,41,32,23,9,23,9,9,0,23,53,9,9,0,23,9,8,34,41,23,58,34,41,23,9,8,53,58,34,41,23,9,8,53,58,34,41,23,9,8,53,58,34,41,8,0,0,0,0,62,63,62,63,62,63,0,62,63,0,0,0,62,63,61,62,63,0,0,62,63,62,63,14,14,0,0,61,177,64,31,178,66,177,61,62,63,44,64,48,54,31,47,178,66,177,61,62,63,44,64,48,54,31,47,178,66,177,61,62,63,44,64,48,54,31,47,178,66,177,61,62,63,44,64,48,54,31,47,44,64,61,62,63,64,48,54,31,47,61,62,63,64,48,54,31,47,54,61,62,63,31,66,66,44,177,66,61,62,63,63,44,44,64,48,54,54,31,47,47,178,66,177,61,62,63,44,64,48,54,31,47,63,177,177,48,48,178,66,177,61,62,63,44,64,48,54,31,47,178,66,177,61,62,63,44,64,48,54,31,47,66,61,62,63,44,64,48,54,31,47,178,66,177,61,62,63,44,64,48,54,31,47,64,31,54,177,178,66,44,64,177,54,54,31,66,66,44,177,0,62,31,178,64,64,61,62,63,64,48,54,31,47,63,44,54,47,178,66,177,61,62,63,44,64,48,54,31,47,178,66,177,61,62,63,44,64,48,54,31,47,178,66,177,61,62,63,44,64,48,54,31,47,178,177,66,44,48,0,0,0,76,0,0,0,0,0,76,72,72,70,76,72,73,74,70,76,72,73,74,70,70,76,72,73,74,70,76,72,73,74,73,73,74,70,73,70,76,76,72,72,73,74,70,76,76,76,72,73,74,73,70,76,72,73,74,70,76,72,73,74,70,76,72,73,74,70,76,72,73,74,73,70,0,76,73,76,72,70,76,72,73,74,70,76,72,73,74,70,76,72,73,74,73,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,0,0,0,0,0,82,0,0,81,82,80,81,82,80,80,81,82,80,80,81,82,80,80,80,80,80,80,80,81,82,80,81,82,80,80,80,80,80,80,81,82,80,81,82,80,81,82,80,81,82,80,80,81,82,80,80,80,80,81,82,80,81,82,80,81,82,80,80,80,85,0,0,0,0,0,84,85,83,84,85,83,83,84,85,83,83,84,85,83,83,83,83,83,83,84,85,83,84,85,83,83,83,83,83,83,84,85,83,84,85,83,84,85,83,84,85,83,83,84,85,83,83,83,83,84,85,83,84,85,83,84,85,83,83,83,179,89,89,0,0,0,0,0,0,0,89,90,86,89,90,86,86,89,90,86,86,89,90,86,86,86,86,86,86,86,86,89,90,86,89,90,86,86,86,86,86,86,89,90,86,89,90,86,89,90,86,89,90,86,86,89,90,86,86,86,86,89,90,86,89,90,86,89,90,86,86,86,95,95,0,0,0,0,0,0,0,0,0,0,0,0,95,0,0,95,95,0,0,0,0,0,0,94,0,92,95,94,94,0,92,94,95,91,92,94,95,91,91,92,94,95,91,91,92,94,95,91,92,91,92,91,92,91,92,91,91,92,94,95,91,92,94,95,91,91,92,91,91,91,91,92,94,95,91,92,94,95,91,92,94,95,91,92,94,95,91,91,94,95,91,92,91,91,91,91,91,92,91,92,92,94,95,91,92,94,95,91,92,94,95,91,91,91,180,181,182,181,181,183,181,183,181,183,184,184,184,185,184,185,97,97,101,0,0,101,97,97,0,0,0,0,0,0,97,97,101,102,98,97,101,102,98,98,97,97,97,97,97,97,97,97,97,101,102,98,98,97,101,102,98,97,98,97,98,97,97,98,98,97,97,97,98,98,97,97,97,97,97,97,101,102,98,97,101,102,98,97,97,97,97,98,97,97,98,97,98,98,98,97,98,97,97,97,101,102,98,97,101,102,98,97,101,102,98,97,101,102,98,97,97,97,97,97,97,98,101,102,98,97,98,98,97,97,97,97,97,98,97,97,97,101,102,98,97,101,102,98,97,101,102,98,97,98,98,186,109,110,109,0,0,0,0,0,0,0,0,109,108,108,108,108,110,0,0,0,0,0,0,0,0,0,0,109,0,109,110,0,107,108,109,110,107,108,109,110,107,107,108,109,110,107,107,108,109,110,107,108,107,108,107,108,107,107,108,107,107,107,108,109,110,107,108,109,110,107,107,108,107,107,107,107,108,109,110,107,108,109,110,107,108,109,110,107,108,109,110,107,107,109,110,107,108,107,107,107,107,108,107,108,108,109,110,107,108,109,110,107,108,109,110,107,107,107,187,188,189,190,191,192,191,190,192,113,113,112,113,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,112,0,0,0,0,0,0,0,113,112,113,0,111,112,113,96,111,112,113,96,96,111,112,113,96,96,111,112,113,96,111,96,111,96,111,96,96,111,96,96,111,112,113,96,111,112,113,96,96,111,96,96,96,96,111,112,113,96,111,112,113,96,111,112,113,96,111,112,113,96,96,96,112,113,96,111,96,96,96,111,96,111,111,112,113,96,111,112,113,96,111,112,113,96,96,96,193,194,195,194,196,197,116,0,0,0,0,0,116,0,115,114,114,114,114,0,0,0,0,0,115,0,114,115,116,24,114,115,116,24,24,114,115,116,24,24,114,115,116,24,114,24,114,24,114,24,114,24,24,114,115,116,24,114,115,116,24,24,24,114,24,24,24,24,114,115,116,24,114,115,116,24,114,115,116,24,114,115,116,24,24,115,116,24,114,24,24,24,114,24,114,114,115,116,24,114,115,116,24,114,115,116,24,24,24,198,199,198,198,0,0,0,0,0,0,0,0,0,0,0,0,121,0,121,0,121,0,121,121,118,119,0,0,120,119,121,0,0,118,118,119,120,121,117,118,119,120,121,117,117,118,119,120,121,117,117,118,119,120,121,117,118,119,117,118,119,117,118,119,117,118,119,117,117,118,119,120,121,117,118,119,120,121,117,117,118,119,117,117,117,117,118,119,120,121,117,118,119,120,121,117,118,119,120,121,117,118,119,120,121,117,117,120,121,117,118,119,117,117,117,118,119,117,118,118,119,119,120,121,117,118,119,120,121,117,118,119,120,121,117,117,117,200,201,201,202,203,204,202,202,202,200,204,205,203,202,201,203,204,205,203,122,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,125,125,125,125,127,124,124,0,127,127,124,125,122,0,0,126,0,127,0,0,124,124,124,0,125,125,125,122,124,125,122,126,127,123,124,125,122,126,127,123,123,122,122,122,122,122,122,122,122,124,125,122,126,127,123,123,124,125,122,126,127,123,124,125,122,123,124,125,122,123,124,125,122,122,123,122,122,124,125,122,123,123,122,124,125,122,122,122,122,122,126,127,123,124,125,122,126,127,123,122,122,122,122,123,122,122,124,125,122,123,123,123,122,123,122,122,124,125,122,126,127,123,124,125,122,126,127,123,124,125,122,126,127,123,124,125,122,126,127,123,122,122,122,122,122,122,123,126,127,123,124,125,123,122,123,123,122,122,122,122,124,125,122,123,122,124,124,125,125,122,122,126,127,123,124,125,122,126,127,123,124,125,122,126,127,123,122,123,123,206,207,208,208,209,209,210,209,209,208,209,209,208,209,209,0,135,135,0,135,0,135,135,135,135,0,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,0,0,132,135,131,133,133,135,135,130,0,0,0,0,134,130,0,129,134,131,132,132,0,129,130,131,132,133,134,135,128,129,130,131,132,133,134,135,128,128,129,130,131,132,133,134,135,128,128,129,130,131,132,133,134,135,128,129,130,131,132,133,128,129,130,131,132,133,128,129,130,131,132,133,128,129,130,131,132,133,128,128,129,130,131,132,133,134,135,128,129,130,131,132,133,134,135,128,128,129,130,131,132,133,128,128,128,128,129,130,131,132,133,134,135,128,129,130,131,132,133,134,135,128,129,130,131,132,133,134,135,128,129,130,131,132,133,134,135,128,128,134,135,128,129,130,131,132,133,128,128,128,128,129,130,131,132,133,128,129,129,130,130,131,131,132,132,133,133,134,135,128,129,130,131,132,133,134,135,128,129,130,131,132,133,134,135,128,128,128,211,212,213,214,215,216,217,215,213,218,219,217,217,218,219,218,220,218,220,220,217,211,212,211,214,221,221,221,221,136,136,0,0,0,0,0,0,0,0,136,0,87,136,137,87,136,137,87,87,136,137,87,87,136,137,87,87,87,87,87,87,87,136,137,87,136,137,87,87,87,87,87,87,136,137,87,136,137,87,136,137,87,136,137,87,87,136,137,87,87,87,87,87,136,137,87,136,137,87,136,137,87,87,87,222,223,222,223,222,223,222,223,138,0,0,0,0,0,139,139,0,0,0,0,138,139,77,138,139,77,77,77,138,139,77,77,138,139,77,77,77,77,77,77,138,139,77,138,139,77,77,77,77,77,77,138,139,77,138,139,77,138,139,77,138,139,77,77,138,139,77,77,77,77,138,139,77,138,139,77,138,139,77,77,77,224,224,225,224,226,226,143,0,0,0,0,0,0,0,142,142,142,140,141,143,140,0,0,0,0,0,0,0,0,142,0,140,0,140,140,141,142,143,104,140,141,142,143,104,104,140,140,140,140,140,140,140,140,140,141,142,143,104,104,140,141,142,143,104,140,141,104,140,141,104,141,140,140,104,140,140,140,141,104,104,140,140,140,140,140,140,141,142,143,104,140,141,142,143,104,140,140,140,140,104,140,140,104,104,104,140,141,104,104,104,140,104,140,140,140,141,142,143,104,140,141,142,143,104,140,141,142,143,104,140,141,142,143,104,140,140,140,140,140,140,104,142,143,104,141,104,140,104,104,140,140,140,140,140,141,104,140,140,140,141,141,142,143,104,140,141,142,143,104,140,141,142,143,104,140,104,104,227,228,0,0,147,0,0,0,146,0,146,147,148,145,146,147,148,145,145,146,147,148,145,145,146,147,148,145,146,145,146,145,146,145,146,145,145,146,147,148,145,146,147,148,145,145,145,146,145,145,145,145,146,147,148,145,146,147,148,145,146,147,148,145,146,147,148,145,145,147,148,145,146,145,145,146,145,146,146,147,148,145,146,147,148,145,146,147,148,145,145,145,229,150,150,150,154,152,152,0,0,0,0,0,0,0,152,0,151,150,153,150,154,153,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,150,152,153,153,153,153,153,153,153,150,150,150,0,0,149,150,151,150,151,152,153,154,149,150,151,152,153,154,149,149,150,151,150,151,150,151,150,151,150,150,151,151,150,151,150,151,150,151,152,153,154,149,149,150,151,152,153,154,149,150,151,152,149,150,151,152,149,152,150,151,150,151,149,150,151,150,151,150,151,152,149,149,150,151,150,150,150,150,150,151,151,151,151,151,152,153,154,149,150,151,152,153,154,149,150,151,150,150,151,151,150,151,149,150,151,150,151,150,151,152,149,149,149,150,151,149,150,151,150,151,150,151,152,153,154,149,150,151,152,153,154,149,150,151,152,153,154,149,150,151,152,153,154,149,150,151,150,151,150,151,150,151,150,151,150,151,149,153,154,149,152,149,150,151,149,149,149,150,151,149,149,149,149,149,149,149,150,151,150,151,150,151,150,151,152,149,150,151,150,150,151,151,152,152,153,154,149,150,151,152,153,154,149,150,151,152,153,154,149,150,151,149,149,230,230,231,230,232,233,234,235,236,236,236,237,234,235,238,233,235,239,238,233,235,240,234,235,234,235,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,159,0,0,0,0,0,160,157,157,156,156,156,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,156,157,159,160,155,156,157,159,160,155,155,156,157,159,160,155,155,156,157,159,160,155,156,157,155,156,157,155,156,157,155,155,156,157,155,155,156,157,159,160,155,156,157,159,160,155,155,156,157,155,155,155,155,156,157,159,160,155,156,157,159,160,155,156,157,159,160,155,156,157,159,160,155,155,159,160,155,156,157,155,155,156,157,155,156,156,157,157,159,160,155,156,157,159,160,155,156,157,159,160,155,155,155,241,242,242,161,161,0,0,0,0,0,0,0,0,161,0,161,162,158,161,162,158,158,161,162,158,158,161,162,158,158,158,158,158,158,158,158,161,162,158,161,162,158,158,158,158,158,158,161,162,158,161,162,158,161,162,158,161,162,158,158,161,162,158,158,158,158,158,161,162,158,161,162,158,161,162,158,158,158,243,243,243,244,243,243,164,164,165,0,0,165,0,0,0,0,0,0,164,165,166,163,164,165,166,163,163,164,165,166,163,163,164,165,166,163,164,163,164,163,164,163,163,164,163,163,164,165,166,163,164,165,166,163,163,163,164,163,163,163,163,164,165,166,163,164,165,166,163,164,165,166,163,164,165,166,163,163,165,166,163,164,163,163,164,163,164,164,165,166,163,164,165,166,163,164,165,166,163,163,163,245,245,168,169,0,0,169,169,0,0,0,0,0,0,0,0,0,0,0,0,0,169,169,169,0,168,169,170,167,168,169,170,167,167,168,169,170,167,167,168,169,170,167,168,167,168,167,168,167,167,168,167,167,168,169,170,167,168,169,170,167,167,168,167,167,167,167,168,169,170,167,168,169,170,167,168,169,170,167,168,169,170,167,167,169,170,167,168,167,167,167,167,167,167,167,168,167,168,168,169,170,167,168,169,170,167,168,169,170,167,167,167,246,247,248,248,172,172,172,172,171,172,0,0,0,0,0,0,0,0,173,0,0,172,171,171,171,171,173,172,173,173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,172,172,172,0,171,172,173,88,171,172,173,88,88,88,171,172,173,88,88,171,172,173,88,171,88,171,88,171,88,88,88,88,88,171,88,88,171,172,173,88,88,171,172,173,88,88,171,88,88,88,88,171,172,173,88,171,172,173,88,171,172,173,88,171,172,173,88,88,88,172,173,88,171,88,88,88,88,88,88,171,88,171,171,172,173,88,171,172,173,88,171,172,173,88,88,88,249,250,251,252,253,254,255,256,257,258,259,254,255,253,254,255,260,253,254,255,260,175,175,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,175,175,0,0,174,0,175,175,0,174,175,144,174,175,144,144,174,175,144,144,174,175,144,144,144,144,144,144,174,175,144,174,175,144,144,144,144,144,144,174,175,144,174,175,144,174,175,144,174,175,144,144,174,175,144,144,144,144,144,174,175,144,174,175,144,174,175,144,144,144,261,262,263,264,265,264,264,265,261,262,261,261,262,263,261,263,261,263],"f":"````````````````````{cb{}}00000000000000000{{{d{c}}}f{}}{hf}`{{{n{}{{j{c}}{l{e}}}}}A`{}{}}{hAb}{{{d{c}}c}{{Ah{AdAf}}}{}}{ce{}{}}00000000000000000{{{Aj{c}}}{{Aj{c}}}{}}{hh}{{{Al{c}}}{{Al{c}}}An}{{{B`{c}}}{{B`{c}}}An}{{ce}Bb{}{}}000{{}{{Ah{hBd}}}}{{{n{}{{j{c}}{l{e}}}}}{{Bf{g}}}{}{}{BhBj}}{{{Bl{ceg}}}bn{BhBj}{}}``{{{Bl{ceg}}Bn}Bbn{BhBj}{}}:{hC`}{{{n{}{{j{c}}{l{e}}}}}{{B`{{n{}{{j{c}}{l{e}}}}}}}{}{}}{{{Cb{c}}}Bb{}}{{hh}Cd}{{{Al{c}}{Al{c}}}CdCf}{{{B`{c}}c}Cdn}{{{B`{c}}{B`{c}}}Cd{}}{{gceh{Aj{g}}}Bbn{}Ch}{{{Cj{{Bl{ceg}}}}Ab{Cn{BnCl}}}{{Bf{{Cj{D`}}}}}n{BhBj}Ch}{{Db{Aj{g}}}{{Cj{D`}}}n{}{}}0`{{{d{c}}}{{Ah{BbDd}}}{}}{h{{Ah{BbDd}}}}{{{d{c}}Df}Dh{}}{{{Aj{c}}Df}Dh{}}{{{Bl{ceg}}Df}DhnDj{}}{{hDf}Dh}{{BdDf}Dh}0{{{Cb{c}}Df}DhDj}{{{Al{c}}Df}{{Ah{BbDl}}}Dj}{{AfDf}Dh}0{{{B`{c}}Df}DhDj}{{{Aj{c}}}{{Cb{c}}}{}}{cc{}}000000{Dn{{Al{c}}}{{E`{Dn}}}}{DdAf}22{Abh}{{hBn}{{Ah{{n{}{{j{c}}{l{e}}}}Eb}}}{}{}}{Ed{{Ah{hBd}}}}{{hBn}{{Ah{{Cj{D`}}Eb}}}}`{{{d{c}}}{{Aj{c}}}{}}{{{B`{c}}e}Bb{}Ef}{{{n{}{{j{c}}{l{e}}}}}Bn{}{}}{{{B`{c}}}Bnn}{A`{{n{}{{j{c}}{l{e}}}}}{}{}}{{}Eh}{ce{}{}}00000000{{{Ej{c}}}{{Ej{b}}}{}}00000000{{{Cj{c}}}{{Cj{b}}}{}}00000000{{{El{c}}}{{El{b}}}{}}00000000{{{Al{c}}}{{Ah{cEn}}}{}}{{{n{}{{j{c}}{l{e}}}}}Cd{}{}}{{{Aj{g}}e}{{Cj{D`}}}n{BhBj}{}}{h{{d{c}}}{}}{{{n{}{{j{c}}{l{e}}}}}{{Bf{{Cj{D`}}}}}{}{}}{{hBn}{{Ah{F`Eb}}}}{{h{Cn{BnCl}}}{{Ah{{Fb{{n{}{{j{c}}{l{e}}}}c}}Af}}}{}{}}{{{d{c}}Fdc}{{Fh{{Ah{FfAf}}}}}{}}{{{d{c}}}{{Bf{Fj}}}{}}{h{{Bf{Fj}}}}`{h{{Bf{Fl}}}}{{{d{c}}c}{{Ah{AdAf}}}{}}{h{{Ah{AdDd}}}}{{{n{}{{j{c}}{l{e}}}}e{Cj{D`}}}{{Ah{gEb}}}{}{}n}{{{n{}{{j{c}}{l{e}}}}e}{{Ah{BbEb}}}{}{}}{{hc{Bf{{Cj{D`}}}}}{{Ah{BnEb}}}n}{Af{{Bf{Fn}}}}{ce{}{}}000{cG`{}}0{c{{Ah{e}}}{}{}}00000000000000000{cGb{}}00000000`{{{B`{c}}}{{Ah{cEb}}}n}{{{n{}{{j{c}}{l{e}}}}}Dn{}{}}{{{n{}{{j{c}}{l{e}}}}he}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}{}}`````````````{cb{}}000000000000077777777777777{Dd{{Bf{Fn}}}}{BnBn}{AbAb}{A`A`}{DdDd}{EbEb}{{ce}Bb{}{}}0000{Ed{{Ah{AbGd}}}}{Fjf}{D`b}{{D`Df}{{Ah{BbDl}}}}{{D`Bn}Bb}{Ab{{Ah{AdDd}}}}{AbBn}{{{Ej{D`}}}{{Ah{{Ej{c}}{Ej{D`}}}}}D`}{{{Cj{D`}}}{{Ah{{Cj{c}}{Cj{D`}}}}}{D`bBhBj}}{D`{{Bf{c}}}D`}{{{El{D`}}}{{Ah{{El{c}}{El{D`}}}}}D`}1{AbA`}{{BnBn}Cd}{{AbAb}Cd}{{{Cj{D`}}Ab{Cn{BnCl}}}{{Bf{{Cj{D`}}}}}}{Ab{{Ah{BbDd}}}}<{{BnDf}{{Ah{BbDl}}}}0{{AbDf}{{Ah{BbDl}}}}{{A`Df}{{Ah{BbDl}}}}{{FjDf}{{Ah{BbDl}}}}{{GdDf}{{Ah{BbDl}}}}0{{DdDf}{{Ah{BbDl}}}}0{{EbDf}{{Ah{BbDl}}}}0{cc{}}0000{GfDd}1{FlDd}2{{AbBn}{{Ah{{Cj{D`}}Eb}}}}{{Bnc}BbEf}{{AbBn}{{Ah{F`Eb}}}}{BnEh}{ce{}{}}000000{{{Ej{c}}}{{Ej{b}}}{}}000000{{{Cj{c}}}{{Cj{b}}}{}}000000{{{El{c}}}{{El{b}}}{}}000000{D`Cd}{BnCd}{Ab{{Bf{Dd}}}}{{}Bn}{Abf}{Ab{{Bf{Fj}}}}`{BnDn}{Fj{{Ah{AdDd}}}}{{Ab{Cn{BnGh}}{Bf{{Cj{D`}}}}{Bf{{Fb{EhDn}}}}}{{Ah{BnEb}}}}{{AbBn{Cj{D`}}}{{Ah{BbEb}}}}`====={cG`{}}000{c{{Ah{e}}}{}{}}0000000000000{cGb{}}000000{A`{{Bf{Ab}}}}```````````````````````````````````{cb{}}00000000000000000000000{ce{}{}}00000000000000000000000``{GjGj}{GlGl}{{{Gn{ce}}}{{Gn{ce}}}AnAn}{H`H`}{F`F`}{FlFl}{{{Cn{ce}}}{{Cn{ce}}}AnAn}{EnEn}{{ce}Bb{}{}}0000000`{{GjGj}Cd}{{GlGl}Cd}{{{Gn{ce}}{Gn{ce}}}CdCfHb}{{{Cn{ce}}{Cn{ce}}}CdCfHb}````{{HdDf}{{Ah{BbDl}}}}{{GjDf}{{Ah{BbDl}}}}{{GlDf}{{Ah{BbDl}}}}{{{Gn{ce}}Df}{{Ah{BbDl}}}DjDj}{{{Gn{ce}}Df}{{Ah{BbDl}}}HfHb}{{EhDf}{{Ah{BbDl}}}}0{{H`Df}{{Ah{BbDl}}}}{{F`Df}{{Ah{BbDl}}}}{{FlDf}{{Ah{BbDl}}}}0{{{Cn{ce}}Df}{{Ah{BbDl}}}DjDj}{{EnDf}{{Ah{BbDl}}}}0{cc{}}00000000000{{{Gn{ce}}}Gl{}{}}````{ce{}{}}00000000000{{{Ej{c}}}{{Ej{b}}}{}}00000000000{{{Cj{c}}}{{Cj{b}}}{}}000000000{{{El{c}}}{{El{b}}}{}}00000000000`{{{Cn{ce}}i}{{Cn{cg}}}{}{}{}{{Hj{e}{{Hh{g}}}}}}``````````````{{EhEh}Cd}{{GlGl}Cd}````66666666{cG`{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{cGb{}}00000000000`````````````````{cb{}}000000000{{Hl{Aj{g}}{Hn{Dn}}e}{{Ah{cI`}}}n{BhBj}{{Ch{ce}}}};;;;;;;;;;{IbIb}{{ce}Bb{}{}}{Id{{If{Ib}}}}{HlId}{{IbIb}Cd}{{HlDf}Dh}{{IhDf}Dh}0{{I`Df}Dh}0{{IbDf}Dh}{{IdDf}Dh}{cc{}}{EbIh}1{DdIh}222`{ce{}{}}0000{{{Ej{c}}}{{Ej{b}}}{}}0000{{{Cj{c}}}{{Cj{b}}}{}}0000{{{El{c}}}{{El{b}}}{}}0000`{HlIj}{h{{Ah{{Fb{Hl{d{c}}}}Ih}}}{{Ch{IjId}}}}{Ih{{Bf{Fn}}}}6{cG`{}}0{c{{Ah{e}}}{}{}}000000000{cGb{}}0000`{{Ide}c{}{{In{{Il{Ib}}}{{Hh{c}}}}}}````````````````````````````````````````````````````````````````````````````````````````````````````````````````{cb{}}00000{J`A`}<<<{J`Bn}==={J`J`}{{ce}Bb{}{}}{J`{{Bf{c}}}{BhBj}}{J`Bb}{{J`J`}Cd}{{J`{B`{J`}}}Cd}{{JbDf}Dh}{{JdDf}Dh}{{J`Df}Dh}{cc{}}00{{hBn}{{Ah{J`Eb}}}}{{J`c}BbEf}<{A`J`}{{}Eh}{ce{}{}}00{{{Ej{c}}}{{Ej{b}}}{}}00{{{Cj{c}}}{{Cj{b}}}{}}00{{{El{c}}}{{El{b}}}{}}00{J`{{Bf{{Cj{D`}}}}}}{JbDb}{JdDb}{{h{Cn{BnCl}}}{{Ah{{Fb{J`c}}Af}}}{}}{{J`c{Cj{D`}}}{{Ah{eEb}}}{}n}{{J`c}{{Ah{BbEb}}}{}}9{c{{Ah{e}}}{}{}}00000{cGb{}}00{J`Dn}{{J`hc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````{cb{}}00000{JfA`}???{JfBn}{ce{}{}}00{JfJf}{{ce}Bb{}{}}{Jf{{Bf{c}}}{BhBj}}{{Jf{B`{Jf}}}Cd}{{JfJf}Cd}{{JhDf}Dh}{{JjDf}Dh}{{JfDf}Dh}{cc{}}00{{hBn}{{Ah{JfEb}}}}{{Jfc}BbEf}<{A`Jf}{{}Eh}==={{{Ej{c}}}{{Ej{b}}}{}}00{{{Cj{c}}}{{Cj{b}}}{}}00{{{El{c}}}{{El{b}}}{}}00{Jf{{Bf{{Cj{D`}}}}}}{JhDb}{JjDb}{{h{Cn{BnCl}}}{{Ah{{Fb{Jfc}}Af}}}{}}{{Jfc{Cj{D`}}}{{Ah{eEb}}}{}n}{{Jfc}{{Ah{BbEb}}}{}}{ce{}{}}{c{{Ah{e}}}{}{}}00000{cGb{}}00{JfDn}{{Jfhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````````{cb{}}00000{JlA`}666{JlBn}777{JlJl}{{ce}Bb{}{}}{{Jl{Aj{e}}c}Jn{BhBj}{{Ch{Jnc}}}}{{Jl{Aj{e}}c}K`{BhBj}{{Ch{K`c}}}}{Jl{{Bf{c}}}{BhBj}}{{Jl{B`{Jl}}}Cd}{{JlJl}Cd}{{KbDf}Dh}{{KdDf}Dh}{{JlDf}Dh}{cc{}}00{{hBn}{{Ah{JlEb}}}}{{Jlc}BbEf}={A`Jl}{{}Eh}{ce{}{}}00{{{Ej{c}}}{{Ej{b}}}{}}00{{{Cj{c}}}{{Cj{b}}}{}}00{{{El{c}}}{{El{b}}}{}}00{Jl{{Bf{{Cj{D`}}}}}}{KbDb}{KdDb}{{h{Cn{BnCl}}}{{Ah{{Fb{Jlc}}Af}}}{}}{{Jlc{Cj{D`}}}{{Ah{eEb}}}{}n}{{Jlc}{{Ah{BbEb}}}{}}9{c{{Ah{e}}}{}{}}00000{cGb{}}00{JlDn}{{Jlhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}````````````````````````````````{cb{}}0000000{KfA`}???{KfBn}{ce{}{}}0000{KhKh}{KfKf}{{ce}Bb{}{}}0{{KhKh}Kj}{Kf{{Bf{c}}}{BhBj}}{{KhKh}Cd}{{Kf{B`{Kf}}}Cd}{{KfKf}Cd}{{KhDf}Dh}{{KlDf}Dh}{{KnDf}Dh}{{KfDf}Dh}{cc{}}000{{hBn}{{Ah{KfEb}}}}{{Khc}BbEf}{{Kfc}BbEf}{KfBn}{A`Kf}{{}Eh}{ce{}{}}000{{{Ej{c}}}{{Ej{b}}}{}}000{{{Cj{c}}}{{Cj{b}}}{}}000{{{El{c}}}{{El{b}}}{}}000{Kf{{Bf{{Cj{D`}}}}}}{KlDb}{KnDb}{{h{Cn{BnCl}}}{{Ah{{Fb{Kfc}}Af}}}{}}{{KhKh}{{Bf{Kj}}}}{KfBb}{{Kfc{Cj{D`}}}{{Ah{eEb}}}{}n}{{Kfc}{{Ah{BbEb}}}{}}{{Kf{Bf{L`}}Dn}Bb}{{Kf{Bf{L`}}K`{Bf{K`}}Dn}Bb}=={Dn{{Ah{KhBb}}}}{c{{Ah{e}}}{}{}}0000000{cGb{}}000{KfDn}{{Kfhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````````````````````````````{{}Lb}{cb{}}0000000{LdA`}{{LbLb}Lb}{{LbLb}Bb}10{LbDn}021{ce{}{}}000{LdBn}1111{LbLb}{LdLd}{{ce}Bb{}{}}02{{LbLb}Cd}{{Ld{Aj{e}}c}L`{BhBj}{{Ch{L`c}}}}{Ld{{Bf{c}}}{BhBj}}:=2{{Ld{B`{Ld}}}Cd}{{LdLd}Cd}{{Lbc}Bb{{Lh{}{{Lf{Lb}}}}}}{{LbDf}Dh}0000{{LjDf}Dh}{{LlDf}Dh}{{LdDf}Dh}{cc{}}000{Dn{{Bf{Lb}}}}{DnLb}00{{hBn}{{Ah{LdEb}}}}{cLb{{Lh{}{{Lf{Lb}}}}}}{Ln{{Bf{Lb}}}}{{LdM`{Aj{e}}c}Kf{BhBj}{{Ch{Kfc}}}}{{Lbc}BbEf}{{Ldc}BbEf}{LdBn}{A`Ld}{{LbLb}Bb}{{}Eh}{{LbLb}Lb}{{LbLb}Cd}{ce{}{}}000{{{Ej{c}}}{{Ej{b}}}{}}000{{{Cj{c}}}{{Cj{b}}}{}}000{{{El{c}}}{{El{b}}}{}}000{Lbc{}}{LbCd}0{Lb{{Mb{Lb}}}}{Lb{{Md{Lb}}}}{LbLb}{Ld{{Bf{{Cj{D`}}}}}}{LjDb}{LlDb}{{h{Cn{BnCl}}}{{Ah{{Fb{Ldc}}Af}}}{}}{{LbLb}Bb}{{Ldc{Cj{D`}}}{{Ah{eEb}}}{}n}{{Ldc}{{Ah{BbEb}}}{}}{{LbLbCd}Bb}{{LbLb}Lb}40{ce{}{}}05{Dn{{Ah{LbBb}}}}{c{{Ah{e}}}{}{}}0000000{cGb{}}0004{LdDn}{{Ldhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}`````````````````````````````````{{MfDn{Bf{G`}}}Bb}{cb{}}0000000{MfA`}8888{MfBn}9999{MhMh}{MfMf}{{ce}Bb{}{}}0{{MhMh}Kj}{Mf{{Bf{c}}}{BhBj}}{MfBb}{{MhMh}Cd}{{MfMf}Cd}{{Mf{B`{Mf}}}Cd}3{{MhDf}Dh}{{MjDf}Dh}{{MlDf}Dh}{{MfDf}Dh}{cc{}}000{{hBn}{{Ah{MfEb}}}}{{Mhc}BbEf}{{Mfc}BbEf}{MfBn}{A`Mf}{{}Eh}{ce{}{}}000{{{Ej{c}}}{{Ej{b}}}{}}000{{{Cj{c}}}{{Cj{b}}}{}}000{{{El{c}}}{{El{b}}}{}}000{Mf{{Bf{{Cj{D`}}}}}}{MjDb}{MlDb}{{h{Cn{BnCl}}}{{Ah{{Fb{Mfc}}Af}}}{}}{{MhMh}{{Bf{Kj}}}}{{MfG`f}Bb}{{Mfc{Cj{D`}}}{{Ah{eEb}}}{}n}{{Mfc}{{Ah{BbEb}}}{}}{{MfLbLb}Bb}<<{Dn{{Ah{MhBb}}}}{c{{Ah{e}}}{}{}}0000000{cGb{}}000{MfDn}{{Mfhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````````````````````````````````````````{cb{}}0000000{L`A`}{ce{}{}}000{L`Bn}1111{MnMn}{L`L`}{{ce}Bb{}{}}0{{MnMn}Kj}{L`{{Bf{c}}}{BhBj}}{L`Bb}{{MnMn}Cd}{{L`{B`{L`}}}Cd}{{L`L`}Cd}{{MnDf}Dh}{{N`Df}Dh}{{NbDf}Dh}{{L`Df}Dh}{cc{}}000{{hBn}{{Ah{L`Eb}}}}{{Mnc}BbEf}{{L`c}BbEf}{L`Bn}{A`L`}{{}Eh}{ce{}{}}000{{{Ej{c}}}{{Ej{b}}}{}}000{{{Cj{c}}}{{Cj{b}}}{}}000{{{El{c}}}{{El{b}}}{}}000{L`{{Bf{{Cj{D`}}}}}}{{L`G`}Bb}{N`Db}{NbDb}{{h{Cn{BnCl}}}{{Ah{{Fb{L`c}}Af}}}{}}{{MnMn}{{Bf{Kj}}}}{{L`c{Cj{D`}}}{{Ah{eEb}}}{}n}{{L`c}{{Ah{BbEb}}}{}}{{L`Lb}Bb}<<{c{{Ah{e}}}{}{}}{Dn{{Ah{MnBb}}}}1111111{cGb{}}000{L`Dn}{{L`hc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````````````````````````{cb{}}0000000{C`A`}{ce{}{}}00{C`Bn}11111{NdNd}{C`C`}{{ce}Bb{}{}}0{{NdNd}Kj}{C`{{Bf{c}}}{BhBj}}{{NdNd}Cd}{{C`C`}Cd}{{C`{B`{C`}}}Cd}{{NdDf}Dh}{{NfDf}Dh}{{NhDf}Dh}{{C`Df}Dh}{cc{}}000{{hBn}{{Ah{C`Eb}}}}{{C`{Aj{e}}c}Ij{BhBj}{{Ch{Ijc}}}}{{Ndc}BbEf}{{C`c}BbEf}{C`Bn}{A`C`}{{}Eh}{ce{}{}}000{{{Ej{c}}}{{Ej{b}}}{}}000{{{Cj{c}}}{{Cj{b}}}{}}000{{{El{c}}}{{El{b}}}{}}000{C`{{Bf{{Cj{D`}}}}}}{NfDb}{NhDb}{{h{Cn{BnCl}}}{{Ah{{Fb{C`c}}Af}}}{}}{{NdNd}{{Bf{Kj}}}}{{C`c{Cj{D`}}}{{Ah{eEb}}}{}n}{{C`c}{{Ah{BbEb}}}{}}{{C`{Aj{e}}c}Jf{BhBj}{{Ch{Jfc}}}};;{c{{Ah{e}}}{}{}}{Dn{{Ah{NdBb}}}}1111111{cGb{}}000{C`Dn}{{C`hc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````````````````````````````````{cb{}}000000000{NjA`}{ce{}{}}000{NjBn}111111{NlNl}{NnNn}{NjNj}{{ce}Bb{}{}}00{{NlNl}Kj}{{NnNn}Kj}{Nj{{Bf{c}}}{BhBj}}{{NlNl}Cd}{{NnNn}Cd}{{NjNj}Cd}{{Nj{B`{Nj}}}Cd}{{NlDf}Dh}{{NnDf}Dh}{{O`Df}Dh}{{ObDf}Dh}{{NjDf}Dh}{cc{}}0000{{hBn}{{Ah{NjEb}}}}{{Nlc}BbEf}{{Nnc}BbEf}{{Njc}BbEf}{NjBn}{A`Nj}{{}Eh}{ce{}{}}0000{{{Ej{c}}}{{Ej{b}}}{}}0000{{{Cj{c}}}{{Cj{b}}}{}}0000{{{El{c}}}{{El{b}}}{}}0000{Nj{{Bf{{Cj{D`}}}}}}{O`Db}{ObDb}{{h{Cn{BnCl}}}{{Ah{{Fb{Njc}}Af}}}{}}{{NlNl}{{Bf{Kj}}}}{{NnNn}{{Bf{Kj}}}}{NjBb}{{Njc{Cj{D`}}}{{Ah{eEb}}}{}n}{{Njc}{{Ah{BbEb}}}{}}<<<{Dn{{Ah{NlBb}}}}{c{{Ah{e}}}{}{}}{Dn{{Ah{NnBb}}}}111111111{cGb{}}0000{NjDn}{{Njhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````````````````````````````````````````````````````````````{{}Od}{cb{}}00000000000{OfA`}{{OdOd}Od}{{OdOd}Bb}10{OdDn}021{ce{}{}}00000{OfBn}111111{OhOh}{OjOj}{OdOd}{OfOf}{{ce}Bb{}{}}000{{OhOh}Kj}{{OjOj}Kj}4{{OdOd}Cd}{Of{{Bf{c}}}{BhBj}}={{}Od}{{OhOh}Cd}{{OjOj}Cd}4{{Of{B`{Of}}}Cd}{{OfOf}Cd}{{Odc}Bb{{Lh{}{{Lf{Od}}}}}}{{OhDf}Dh}{{OjDf}Dh}{{OdDf}Dh}0000{{OlDf}Dh}{{OnDf}Dh}{{OfDf}Dh}{cc{}}00000{Dn{{Bf{Od}}}}{DnOd}00{{hBn}{{Ah{OfEb}}}}{cOd{{Lh{}{{Lf{Od}}}}}}{Ln{{Bf{Od}}}}{{Ohc}BbEf}{{Ojc}BbEf}{{Odc}BbEf}{{Ofc}BbEf}{OfBn}{A`Of}{{OdOd}Bb}{{}Eh}{{OdOd}Od}{{OdOd}Cd}{ce{}{}}00000{{{Ej{c}}}{{Ej{b}}}{}}00000{{{Cj{c}}}{{Cj{b}}}{}}00000{{{El{c}}}{{El{b}}}{}}00000{Odc{}}{OdCd}0{Od{{Mb{Od}}}}{Od{{Md{Od}}}}{OdOd}{Of{{Bf{{Cj{D`}}}}}}{OlDb}{OnDb}{{h{Cn{BnCl}}}{{Ah{{Fb{Ofc}}Af}}}{}}{{OhOh}{{Bf{Kj}}}}{{OjOj}{{Bf{Kj}}}}{OfBb}{{OdOd}Bb}{{Ofc{Cj{D`}}}{{Ah{eEb}}}{}n}{{Ofc}{{Ah{BbEb}}}{}}{{OdOdCd}Bb}{{OdOd}Od}40{ce{}{}}0005{Dn{{Ah{OhBb}}}}{c{{Ah{e}}}{}{}}0{Dn{{Ah{OjBb}}}}1{Dn{{Ah{OdBb}}}}222222222{cGb{}}000006{OfDn}{{Ofhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}`````````````````````````````````````````````````````````````````````````{cb{}}000000000000000{A`A`}99999999{A`Bn}::::::::{AbAb}{AdAd}{AfAf}{AhAh}{AjAj}{A`A`}{{ce}Bb{}{}}00000{{AbAb}Kj}{{AdAd}Kj}{{AfAf}Kj}{{AhAh}Kj}{{AjAj}Kj}{A`{{Bf{c}}}{BhBj}}{{AbAb}Cd}{{AdAd}Cd}{{AfAf}Cd}{{AhAh}Cd}{{AjAj}Cd}{{A`{B`{A`}}}Cd}{{A`A`}Cd}{{AbDf}Dh}{{AdDf}Dh}{{AfDf}Dh}{{AhDf}Dh}{{AjDf}Dh}{{AlDf}Dh}{{AnDf}Dh}{{A`Df}Dh}{cc{}}0000000{{hBn}{{Ah{A`Eb}}}}{{Abc}BbEf}{{Adc}BbEf}{{Afc}BbEf}{{Ahc}BbEf}{{Ajc}BbEf}{{A`c}BbEf}{A`Bn}{A`A`}{{}Eh}{ce{}{}}0000000{{{Ej{c}}}{{Ej{b}}}{}}0000000{{{Cj{c}}}{{Cj{b}}}{}}0000000{{{El{c}}}{{El{b}}}{}}0000000{A`{{Bf{{Cj{D`}}}}}}{AlDb}{AnDb}{{h{Cn{BnCl}}}{{Ah{{Fb{A`c}}Af}}}{}}{{AbAb}{{Bf{Kj}}}}{{AdAd}{{Bf{Kj}}}}{{AfAf}{{Bf{Kj}}}}{{AhAh}{{Bf{Kj}}}}{{AjAj}{{Bf{Kj}}}}{A`Bb}{{A`c{Cj{D`}}}{{Ah{eEb}}}{}n}{{A`c}{{Ah{BbEb}}}{}}{{A`Dn{Bf{K`}}GhGh}Bb}{ce{}{}}00000{Dn{{Ah{AbBb}}}}{c{{Ah{e}}}{}{}}0{Dn{{Ah{AdBb}}}}1{Dn{{Ah{AfBb}}}}2{Dn{{Ah{AhBb}}}}3{Dn{{Ah{AjBb}}}}44444444444{cGb{}}0000000{A`Dn}{{A`hc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}`````````````````````````````````````````{{JnGhGhGhGh}Bb}{cb{}}00000{JnA`}<<{JnBn}===={JnJn}{{ce}Bb{}{}}{Jn{{Bf{c}}}{BhBj}}{JnBb}{{JnJn}Cd}{{Jn{B`{Jn}}}Cd}{{AA`Df}Dh}{{AAbDf}Dh}{{JnDf}Dh}{cc{}}00{{hBn}{{Ah{JnEb}}}}{{Jnc}BbEf}<{A`Jn}{{}Eh}{ce{}{}}00{{{Ej{c}}}{{Ej{b}}}{}}00{{{Cj{c}}}{{Cj{b}}}{}}00{{{El{c}}}{{El{b}}}{}}00{Jn{{Bf{{Cj{D`}}}}}}{AA`Db}{AAbDb}{{h{Cn{BnCl}}}{{Ah{{Fb{Jnc}}Af}}}{}}{{Jnc{Cj{D`}}}{{Ah{eEb}}}{}n}{{Jnc}{{Ah{BbEb}}}{}}{{JnGhGhGhGh}Bb}:{c{{Ah{e}}}{}{}}00000{cGb{}}00{JnDn}{{Jnhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}````````````````````{cb{}}00000{IjA`}{{IjDnDn{Aj{g}}e}cn{BhBj}{{Ch{ce}}}}{ce{}{}}0{IjBn}1111{IjIj}{{ce}Bb{}{}}{Ij{{Bf{c}}}{BhBj}}{{Ij{B`{Ij}}}Cd}{{IjIj}Cd}{{AAdDf}Dh}{{AAfDf}Dh}{{IjDf}Dh}{cc{}}00{{hBn}{{Ah{IjEb}}}}{{Ijc}BbEf};{A`Ij}{{}Eh}>>>{{{Ej{c}}}{{Ej{b}}}{}}00{{{Cj{c}}}{{Cj{b}}}{}}00{{{El{c}}}{{El{b}}}{}}00{Ij{{Bf{{Cj{D`}}}}}}{AAdDb}{AAfDb}{{h{Cn{BnCl}}}{{Ah{{Fb{Ijc}}Af}}}{}}{{Ijc{Cj{D`}}}{{Ah{eEb}}}{}n}{{Ijc}{{Ah{BbEb}}}{}}{ce{}{}}{c{{Ah{e}}}{}{}}00000{cGb{}}00{IjDn}{{Ijhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}`````````````````````````````````{{}AAh}{cb{}}000000000{M`A`}{{AAhAAh}AAh}{{AAhAAh}Bb}10{AAhDn}021:::::{M`Bn};;;;;{AAhAAh}{AAjAAj}{M`M`}{{ce}Bb{}{}}00{{AAjAAj}Kj}4{{AAhAAh}Cd}{M`{{Bf{c}}}{BhBj}}:=1{{AAjAAj}Cd}{{M`M`}Cd}{{M`{B`{M`}}}Cd}{{AAhc}Bb{{Lh{}{{Lf{AAh}}}}}}{{AAhDf}Dh}0000{{AAjDf}Dh}{{AAlDf}Dh}{{AAnDf}Dh}{{M`Df}Dh}{cc{}}0000{Dn{{Bf{AAh}}}}{DnAAh}00{{hBn}{{Ah{M`Eb}}}}{cAAh{{Lh{}{{Lf{AAh}}}}}}{Ln{{Bf{AAh}}}}{{M`{Aj{e}}c}Nj{BhBj}{{Ch{Njc}}}}{{M`{Aj{e}}c}A`{BhBj}{{Ch{A`c}}}}{{M`{Aj{e}}c}AB`{BhBj}{{Ch{AB`c}}}}{{AAhc}BbEf}{{AAjc}BbEf}{{M`c}BbEf}{M`Bn}{A`M`}{{AAhAAh}Bb}{{}Eh}{{AAhAAh}AAh}{{AAhAAh}Cd}{ce{}{}}0000{{{Ej{c}}}{{Ej{b}}}{}}0000{{{Cj{c}}}{{Cj{b}}}{}}0000{{{El{c}}}{{El{b}}}{}}0000{AAhc{}}{AAhCd}0{AAh{{Mb{AAh}}}}{AAh{{Md{AAh}}}}{AAhAAh}{M`{{Bf{{Cj{D`}}}}}}{AAlDb}{AAnDb}{{h{Cn{BnCl}}}{{Ah{{Fb{M`c}}Af}}}{}}{{AAjAAj}{{Bf{Kj}}}}{M`Bb}{{AAhAAh}Bb}{{M`c{Cj{D`}}}{{Ah{eEb}}}{}n}{{M`c}{{Ah{BbEb}}}{}}{{AAhAAhCd}Bb}{{AAhAAh}AAh}40{ce{}{}}005{Dn{{Ah{AAhBb}}}}{c{{Ah{e}}}{}{}}0{Dn{{Ah{AAjBb}}}}11111111{cGb{}}00005{M`Dn}{{M`hc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````````{cb{}}0000000{ABbA`}8888{ABbBn}9999{ABdABd}{ABbABb}{{ce}Bb{}{}}0{{ABdABd}Kj}{ABb{{Bf{c}}}{BhBj}}{{ABdABd}Cd}{{ABbABb}Cd}{{ABb{B`{ABb}}}Cd}{{ABdDf}Dh}{{ABfDf}Dh}{{ABhDf}Dh}{{ABbDf}Dh}{cc{}}000{{hBn}{{Ah{ABbEb}}}}{{ABbK`{Aj{e}}c}ABj{BhBj}{{Ch{ABjc}}}}{{ABdc}BbEf}{{ABbc}BbEf}{ABbBn}{A`ABb}{{}Eh}{ce{}{}}000{{{Ej{c}}}{{Ej{b}}}{}}000{{{Cj{c}}}{{Cj{b}}}{}}000{{{El{c}}}{{El{b}}}{}}000{ABb{{Bf{{Cj{D`}}}}}}{ABfDb}{ABhDb}{{h{Cn{BnCl}}}{{Ah{{Fb{ABbc}}Af}}}{}}{{ABdABd}{{Bf{Kj}}}}{{ABbc{Cj{D`}}}{{Ah{eEb}}}{}n}{{ABbc}{{Ah{BbEb}}}{}}::{c{{Ah{e}}}{}{}}{Dn{{Ah{ABdBb}}}}1111111{cGb{}}000{ABbDn}{{ABbhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}````````````````````````````````````````````````````````````{{ABjM`Dn}Bb}{{}ABl}{{}ABn}{cb{}}00000000000{ABjA`}{{ABlABl}ABl}{{ABnABn}ABn}{{ABlABl}Bb}{{ABnABn}Bb}3210{ABlDn}0{ABnDn}05432{ce{}{}}0000{ABjBn}1111111{ABlABl}{ABnABn}{AC`AC`}{ABjABj}{{ce}Bb{}{}}000{{AC`AC`}Kj}54{{ABlABl}Cd}{{ABnABn}Cd}{ABj{{Bf{c}}}{BhBj}}{{ABlABl}ABl}{{ABnABn}ABn}{{}ABl}{{}ABn}65{{AC`AC`}Cd}{{ABj{B`{ABj}}}Cd}{{ABjABj}Cd}{{ABlc}Bb{{Lh{}{{Lf{ABl}}}}}}{{ABnc}Bb{{Lh{}{{Lf{ABn}}}}}}{{ABlDf}Dh}0000{{ABnDf}Dh}0000{{AC`Df}Dh}{{ACbDf}Dh}{{ACdDf}Dh}{{ABjDf}Dh}{cc{}}00000{Dn{{Bf{ABl}}}}{Dn{{Bf{ABn}}}}{DnABl}0{DnABn}010{{hBn}{{Ah{ABjEb}}}}{cABl{{Lh{}{{Lf{ABl}}}}}}{cABn{{Lh{}{{Lf{ABn}}}}}}{Ln{{Bf{ABl}}}}{Ln{{Bf{ABn}}}}{{ABlc}BbEf}{{ABnc}BbEf}{{AC`c}BbEf}{{ABjc}BbEf}{ABjBn}{A`ABj}{{ABlABl}Bb}{{ABnABn}Bb}{{}Eh}{{ABlABl}ABl}{{ABnABn}ABn}{{ABlABl}Cd}{{ABnABn}Cd}{ce{}{}}00000{{{Ej{c}}}{{Ej{b}}}{}}00000{{{Cj{c}}}{{Cj{b}}}{}}00000{{{El{c}}}{{El{b}}}{}}00000{ABlc{}}{ABnc{}}{ABlCd}{ABnCd}10{ABl{{Mb{ABl}}}}{ABn{{Mb{ABn}}}}{ABl{{Md{ABl}}}}{ABn{{Md{ABn}}}}{ABlABl}{ABnABn}{ABj{{Bf{{Cj{D`}}}}}}{ACbDb}{ACdDb}{{h{Cn{BnCl}}}{{Ah{{Fb{ABjc}}Af}}}{}}{{AC`AC`}{{Bf{Kj}}}}{{ABjDn}Bb}{{ABlABl}Bb}{{ABnABn}Bb}{{ABjM`DnABl}Bb}{{ABjc{Cj{D`}}}{{Ah{eEb}}}{}n}{{ABjc}{{Ah{BbEb}}}{}}{{ABlABlCd}Bb}{{ABnABnCd}Bb}{{ABjG`}Bb}{{ABjAC`Dn{Bf{Of}}}Bb}{{ABj{Bf{Of}}}Bb}{{ABjM`DnK`GhGhABn}Bb}3{ABjBb}{{ABjK`GhGhABn}Bb}{{ABlABl}ABl}{{ABnABn}ABn}>=10{ce{}{}}000?>{c{{Ah{e}}}{}{}}{Dn{{Ah{ABlBb}}}}{Dn{{Ah{ABnBb}}}}2{Dn{{Ah{AC`Bb}}}}3333333333{cGb{}}0000076{ABjDn}{{ABjhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{cb{}}000000000{ACfA`}99999{ACfBn}:::::{AChACh}{ACjACj}{ACfACf}{{ce}Bb{}{}}00{{AChACh}Kj}{{ACjACj}Kj}{{ACffGh{Aj{e}}c}ACl{BhBj}{{Ch{AClc}}}}{ACf{{Bf{c}}}{BhBj}}{{AChACh}Cd}{{ACjACj}Cd}{{ACf{B`{ACf}}}Cd}{{ACfACf}Cd}{{AChDf}Dh}{{ACjDf}Dh}{{ACnDf}Dh}{{AD`Df}Dh}{{ACfDf}Dh}{cc{}}0000{{hBn}{{Ah{ACfEb}}}}{{AChc}BbEf}{{ACjc}BbEf}{{ACfc}BbEf}{ACfBn}{A`ACf}{{}Eh}{ce{}{}}0000{{{Ej{c}}}{{Ej{b}}}{}}0000{{{Cj{c}}}{{Cj{b}}}{}}0000{{{El{c}}}{{El{b}}}{}}0000{ACf{{Bf{{Cj{D`}}}}}}{ACnDb}{AD`Db}{{h{Cn{BnCl}}}{{Ah{{Fb{ACfc}}Af}}}{}}{{AChACh}{{Bf{Kj}}}}{{ACjACj}{{Bf{Kj}}}}{{ACfc{Cj{D`}}}{{Ah{eEb}}}{}n}{{ACfc}{{Ah{BbEb}}}{}};;;{c{{Ah{e}}}{}{}}{Dn{{Ah{AChBb}}}}{Dn{{Ah{ACjBb}}}}222222222{cGb{}}0000{ACfDn}{{ACfhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}```````````````{cb{}}00000{AClA`}{ce{}{}}0{AClBn}1111{AClACl}{{ce}Bb{}{}}{{AClGhGhGhGhACj{Aj{e}}c}J`{BhBj}{{Ch{J`c}}}}{ACl{{Bf{c}}}{BhBj}}{AClBb}{{AClACl}Cd}{{ACl{B`{ACl}}}Cd}{{ADbDf}Dh}{{ADdDf}Dh}{{AClDf}Dh}{cc{}}00{{hBn}{{Ah{AClEb}}}}{{AClc}BbEf}={A`ACl}{{}Eh}{ce{}{}}00{{{Ej{c}}}{{Ej{b}}}{}}00{{{Cj{c}}}{{Cj{b}}}{}}00{{{El{c}}}{{El{b}}}{}}00{ACl{{Bf{{Cj{D`}}}}}}{ADbDb}{ADdDb}{{h{Cn{BnCl}}}{{Ah{{Fb{AClc}}Af}}}{}}{{AClGh}Bb}{{AClc{Cj{D`}}}{{Ah{eEb}}}{}n}{{AClc}{{Ah{BbEb}}}{}}:{c{{Ah{e}}}{}{}}00000{cGb{}}00{AClDn}{{AClhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````````````````{cb{}}0000000{ADfA`}{ce{}{}}00{ADfBn}11111{ADhADh}{ADfADf}{{ce}Bb{}{}}0{{ADhADh}Kj}{ADf{{Bf{c}}}{BhBj}}{ADfBb}{{ADhADh}Cd}{{ADf{B`{ADf}}}Cd}{{ADfADf}Cd}{{ADhDf}Dh}{{ADjDf}Dh}{{ADlDf}Dh}{{ADfDf}Dh}{cc{}}000{{hBn}{{Ah{ADfEb}}}}{{ADfK`K`{Aj{e}}c}ADn{BhBj}{{Ch{ADnc}}}}{{ADhc}BbEf}{{ADfc}BbEf}{ADfBn}{A`ADf}{{}Eh}{ce{}{}}000{{{Ej{c}}}{{Ej{b}}}{}}000{{{Cj{c}}}{{Cj{b}}}{}}000{{{El{c}}}{{El{b}}}{}}000{ADf{{Bf{{Cj{D`}}}}}}{ADjDb}{ADlDb}{{h{Cn{BnCl}}}{{Ah{{Fb{ADfc}}Af}}}{}}{{ADhADh}{{Bf{Kj}}}}{{ADfc{Cj{D`}}}{{Ah{eEb}}}{}n}{{ADfc}{{Ah{BbEb}}}{}}::{Dn{{Ah{ADhBb}}}}{c{{Ah{e}}}{}{}}0000000{cGb{}}000{ADfDn}{{ADfhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}`````````````````````````{cb{}}0000000{ADnA`}{ce{}{}}00{ADnBn}11111{AE`AE`}{ADnADn}{{ce}Bb{}{}}0{{AE`AE`}Kj}{ADn{{Bf{c}}}{BhBj}}{ADnBb}{{AE`AE`}Cd}{{ADn{B`{ADn}}}Cd}{{ADnADn}Cd}{{AE`Df}Dh}{{AEbDf}Dh}{{AEdDf}Dh}{{ADnDf}Dh}{cc{}}000{{hBn}{{Ah{ADnEb}}}}{{AE`c}BbEf}{{ADnc}BbEf}{ADnBn}{A`ADn}{{}Eh}{ce{}{}}000{{{Ej{c}}}{{Ej{b}}}{}}000{{{Cj{c}}}{{Cj{b}}}{}}000{{{El{c}}}{{El{b}}}{}}000{ADn{{Bf{{Cj{D`}}}}}}{AEbDb}{AEdDb}{{h{Cn{BnCl}}}{{Ah{{Fb{ADnc}}Af}}}{}}{{AE`AE`}{{Bf{Kj}}}}{{ADnK`}Bb}0{{ADnc{Cj{D`}}}{{Ah{eEb}}}{}n}{{ADnc}{{Ah{BbEb}}}{}}{ADnBb}{{ADnGhGh}Bb}1=={Dn{{Ah{AE`Bb}}}}{c{{Ah{e}}}{}{}}0000000{cGb{}}000{ADnDn}{{ADnhc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````````````````````````````````````````````````````````{cb{}}0000000{{K`{Bf{J`}}GhGh}Bb}{K`A`}{ce{}{}}00{K`Bn}11111{AEfAEf}{K`K`}{{ce}Bb{}{}}0{{AEfAEf}Kj}{K`Bb}{{K`GhGhGhGh}Bb}0{K`{{Bf{c}}}{BhBj}}2{{AEfAEf}Cd}{{K`K`}Cd}{{K`{B`{K`}}}Cd}{{AEfDf}Dh}{{AEhDf}Dh}{{AEjDf}Dh}{{K`Df}Dh}{{K`{Aj{e}}c}Jf{BhBj}{{Ch{Jfc}}}}{cc{}}000{{hBn}{{Ah{K`Eb}}}}{{AEfc}BbEf}{{K`c}BbEf}{K`Bn}{A`K`}{{}Eh}{ce{}{}}000{{{Ej{c}}}{{Ej{b}}}{}}000{{{Cj{c}}}{{Cj{b}}}{}}000{{{El{c}}}{{El{b}}}{}}000{K`{{Bf{{Cj{D`}}}}}}{{K`GhGh}Bb}{AEhDb}{AEjDb}{{h{Cn{BnCl}}}{{Ah{{Fb{K`c}}Af}}}{}}{{AEfAEf}{{Bf{Kj}}}}{{K`c{Cj{D`}}}{{Ah{eEb}}}{}n}{{K`c}{{Ah{BbEb}}}{}}{{K`Gh}Bb}{{K`Oj}Bb}{{K`{Bf{Jn}}}Bb}0>>{Dn{{Ah{AEfBb}}}}{c{{Ah{e}}}{}{}}0000000{cGb{}}000{K`Dn}{{K`hc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}````````````````````````````````````````````````{cb{}}00000{AB`A`}{ce{}{}}0{AB`Bn}1111{AB`AB`}{{ce}Bb{}{}}{AB`{{Bf{c}}}{BhBj}}{{AB`{B`{AB`}}}Cd}{{AB`AB`}Cd}{{AElDf}Dh}{{AEnDf}Dh}{{AB`Df}Dh}{cc{}}00{{hBn}{{Ah{AB`Eb}}}}{{AB`c}BbEf};{A`AB`}{{}Eh}>>>{{{Ej{c}}}{{Ej{b}}}{}}00{{{Cj{c}}}{{Cj{b}}}{}}00{{{El{c}}}{{El{b}}}{}}00{AB`{{Bf{{Cj{D`}}}}}}{AElDb}{AEnDb}{{h{Cn{BnCl}}}{{Ah{{Fb{AB`c}}Af}}}{}}{AB`Bb}{{AB`c{Cj{D`}}}{{Ah{eEb}}}{}n}{{AB`c}{{Ah{BbEb}}}{}}{ce{}{}}{c{{Ah{e}}}{}{}}00000{cGb{}}00{AB`Dn}{{AB`hc}{{Ah{{Fb{{Cn{Bnf}}{Bf{{Fb{EhDn}}}}}}Eb}}}{}}``````````````````","c":[],"p":[[10,"Any",3815],[5,"EventQueue",0],[5,"BorrowedFd",3816],[5,"Connection",0],[17,"Event"],[17,"Request"],[10,"Proxy",0],[5,"WeakBackend",219],[5,"Backend",219],[1,"usize"],[6,"DispatchError",0],[6,"Result",3817],[5,"QueueHandle",0],[6,"WEnum",0],[10,"Clone",3818],[5,"Weak",0],[1,"unit"],[6,"ConnectError",0],[6,"Option",3819],[10,"Send",3820],[10,"Sync",3820],[5,"QueueProxyData",0],[5,"ObjectId",219],[5,"WlDisplay",1569],[5,"QueueFreezeGuard",0],[1,"bool"],[10,"PartialEq",3821],[10,"Dispatch",0],[5,"Arc",3822],[5,"OwnedFd",3816],[5,"Message",381],[10,"ObjectData",219],[1,"u16"],[6,"WaylandError",219],[5,"Formatter",3823],[8,"Result",3823],[10,"Debug",3823],[5,"Error",3823],[1,"u32"],[10,"TryFrom",3824],[5,"InvalidId",219],[5,"UnixStream",3825],[10,"Hasher",3826],[5,"Interface",381],[5,"Box",3827],[5,"Rc",3828],[5,"WEnumError",381],[5,"ObjectInfo",381],[1,"tuple"],[5,"Context",3829],[6,"Infallible",3824],[6,"Poll",3830],[5,"ReadEventsGuard",219],[5,"ProtocolError",381],[10,"Error",3831],[5,"String",3832],[5,"TypeId",3815],[5,"NoWaylandLib",219],[5,"Error",3833],[1,"i32"],[6,"AllowNull",381],[6,"ArgumentType",381],[6,"Argument",381],[5,"MessageDesc",381],[10,"AsRawFd",3834],[5,"wl_interface",381],[10,"Display",3823],[17,"Output"],[10,"FnMut",3835],[5,"GlobalList",646],[5,"RangeInclusive",3836],[6,"BindError",646],[5,"Global",646],[5,"GlobalListContents",646],[5,"Vec",3837],[6,"GlobalError",646],[5,"WlRegistry",2385],[1,"slice"],[10,"FnOnce",3835],[5,"WlBuffer",843],[6,"Request",843],[6,"Event",843],[5,"WlCallback",913],[6,"Request",913],[6,"Event",913],[5,"WlCompositor",980],[5,"WlRegion",2302],[5,"WlSurface",3542],[6,"Request",980],[6,"Event",980],[5,"WlDataDevice",1051],[6,"Error",1051],[6,"Ordering",3821],[6,"Request",1051],[6,"Event",1051],[5,"WlDataSource",1446],[5,"DndAction",1183],[5,"WlDataDeviceManager",1183],[17,"Item"],[10,"IntoIterator",3838],[6,"Request",1183],[6,"Event",1183],[1,"str"],[5,"WlSeat",2464],[5,"Iter",3839],[5,"IterNames",3839],[5,"WlDataOffer",1319],[6,"Error",1319],[6,"Request",1319],[6,"Event",1319],[6,"Error",1446],[6,"Request",1446],[6,"Event",1446],[6,"Error",1569],[6,"Request",1569],[6,"Event",1569],[5,"WlKeyboard",1676],[6,"KeymapFormat",1676],[6,"KeyState",1676],[6,"Request",1676],[6,"Event",1676],[5,"Mode",1828],[5,"WlOutput",1828],[6,"Subpixel",1828],[6,"Transform",1828],[6,"Request",1828],[6,"Event",1828],[5,"WlPointer",2048],[6,"Error",2048],[6,"ButtonState",2048],[6,"Axis",2048],[6,"AxisSource",2048],[6,"AxisRelativeDirection",2048],[6,"Request",2048],[6,"Event",2048],[6,"Request",2302],[6,"Event",2302],[6,"Request",2385],[6,"Event",2385],[5,"Capability",2464],[6,"Error",2464],[6,"Request",2464],[6,"Event",2464],[5,"WlTouch",3709],[5,"WlShell",2637],[6,"Error",2637],[6,"Request",2637],[6,"Event",2637],[5,"WlShellSurface",2728],[5,"Resize",2728],[5,"Transient",2728],[6,"FullscreenMethod",2728],[6,"Request",2728],[6,"Event",2728],[5,"WlShm",3022],[6,"Error",3022],[6,"Format",3022],[5,"WlShmPool",3250],[6,"Request",3022],[6,"Event",3022],[6,"Request",3250],[6,"Event",3250],[5,"WlSubcompositor",3331],[6,"Error",3331],[6,"Request",3331],[6,"Event",3331],[5,"WlSubsurface",3428],[6,"Error",3428],[6,"Request",3428],[6,"Event",3428],[6,"Error",3542],[6,"Request",3542],[6,"Event",3542],[6,"Request",3709],[6,"Event",3709],[15,"BadMessage",216],[20,"wl_argument",381],[5,"wl_message",381],[15,"Done",979],[15,"DataOffer",1167],[15,"Enter",1167],[15,"Selection",1167],[15,"Motion",1167],[15,"StartDrag",1177],[15,"SetSelection",1177],[15,"GetDataDevice",1318],[15,"Action",1437],[15,"Offer",1437],[15,"SourceActions",1437],[15,"SetActions",1440],[15,"Receive",1440],[15,"Accept",1440],[15,"Action",1563],[15,"Send",1563],[15,"Target",1563],[15,"SetActions",1567],[15,"Offer",1567],[15,"Error",1672],[15,"DeleteId",1672],[15,"RepeatInfo",1809],[15,"Keymap",1809],[15,"Modifiers",1809],[15,"Key",1809],[15,"Enter",1809],[15,"Leave",1809],[15,"Description",2033],[15,"Scale",2033],[15,"Mode",2033],[15,"Geometry",2033],[15,"Name",2033],[15,"Axis",2273],[15,"AxisStop",2273],[15,"AxisDiscrete",2273],[15,"AxisValue120",2273],[15,"AxisRelativeDirection",2273],[15,"AxisSource",2273],[15,"Button",2273],[15,"Enter",2273],[15,"Leave",2273],[15,"Motion",2273],[15,"SetCursor",2298],[15,"Add",2377],[15,"Subtract",2377],[15,"Global",2458],[15,"GlobalRemove",2458],[15,"Bind",2462],[15,"Capabilities",2635],[15,"Name",2635],[15,"GetShellSurface",2727],[15,"Configure",2996],[15,"Ping",2996],[15,"SetClass",3000],[15,"Resize",3000],[15,"SetTransient",3000],[15,"SetPopup",3000],[15,"SetFullscreen",3000],[15,"SetMaximized",3000],[15,"Move",3000],[15,"Pong",3000],[15,"SetTitle",3000],[15,"Format",3247],[15,"CreatePool",3248],[15,"CreateBuffer",3325],[15,"Resize",3325],[15,"GetSubsurface",3426],[15,"PlaceAbove",3538],[15,"PlaceBelow",3538],[15,"SetPosition",3538],[15,"PreferredBufferScale",3688],[15,"Enter",3688],[15,"Leave",3688],[15,"PreferredBufferTransform",3688],[15,"Attach",3692],[15,"Damage",3692],[15,"DamageBuffer",3692],[15,"SetOpaqueRegion",3692],[15,"SetInputRegion",3692],[15,"SetBufferScale",3692],[15,"SetBufferTransform",3692],[15,"Offset",3692],[15,"Down",3797],[15,"Up",3797],[15,"Motion",3797],[15,"Shape",3797],[15,"Orientation",3797]],"b":[[82,"impl-PartialEq%3CI%3E-for-Weak%3CI%3E"],[83,"impl-PartialEq-for-Weak%3CI%3E"],[95,"impl-Display-for-ConnectError"],[96,"impl-Debug-for-ConnectError"],[99,"impl-Display-for-DispatchError"],[100,"impl-Debug-for-DispatchError"],[286,"impl-Display-for-ObjectId"],[287,"impl-Debug-for-ObjectId"],[291,"impl-Debug-for-NoWaylandLib"],[292,"impl-Display-for-NoWaylandLib"],[293,"impl-Debug-for-WaylandError"],[294,"impl-Display-for-WaylandError"],[295,"impl-Display-for-InvalidId"],[296,"impl-Debug-for-InvalidId"],[302,"impl-From%3CError%3E-for-WaylandError"],[304,"impl-From%3CProtocolError%3E-for-WaylandError"],[494,"impl-Debug-for-Argument%3CId,+Fd%3E"],[495,"impl-Display-for-Argument%3CId,+Fd%3E"],[496,"impl-Debug-for-Interface"],[497,"impl-Display-for-Interface"],[500,"impl-Debug-for-ProtocolError"],[501,"impl-Display-for-ProtocolError"],[503,"impl-Debug-for-WEnumError"],[504,"impl-Display-for-WEnumError"],[682,"impl-Debug-for-GlobalError"],[683,"impl-Display-for-GlobalError"],[684,"impl-Debug-for-BindError"],[685,"impl-Display-for-BindError"],[689,"impl-From%3CInvalidId%3E-for-GlobalError"],[691,"impl-From%3CWaylandError%3E-for-GlobalError"],[870,"impl-PartialEq-for-WlBuffer"],[871,"impl-PartialEq%3CWeak%3CWlBuffer%3E%3E-for-WlBuffer"],[936,"impl-PartialEq%3CWeak%3CWlCallback%3E%3E-for-WlCallback"],[937,"impl-PartialEq-for-WlCallback"],[1008,"impl-PartialEq%3CWeak%3CWlCompositor%3E%3E-for-WlCompositor"],[1009,"impl-PartialEq-for-WlCompositor"],[1108,"impl-PartialEq%3CWeak%3CWlDataDevice%3E%3E-for-WlDataDevice"],[1109,"impl-PartialEq-for-WlDataDevice"],[1211,"impl-Flags-for-DndAction"],[1212,"impl-DndAction"],[1235,"impl-PartialEq%3CWeak%3CWlDataDeviceManager%3E%3E-for-WlDataDeviceManager"],[1236,"impl-PartialEq-for-WlDataDeviceManager"],[1238,"impl-Octal-for-DndAction"],[1239,"impl-Debug-for-DndAction"],[1240,"impl-Binary-for-DndAction"],[1241,"impl-UpperHex-for-DndAction"],[1242,"impl-LowerHex-for-DndAction"],[1251,"impl-Flags-for-DndAction"],[1252,"impl-DndAction"],[1378,"impl-PartialEq-for-WlDataOffer"],[1379,"impl-PartialEq%3CWeak%3CWlDataOffer%3E%3E-for-WlDataOffer"],[1505,"impl-PartialEq%3CWeak%3CWlDataSource%3E%3E-for-WlDataSource"],[1506,"impl-PartialEq-for-WlDataSource"],[1614,"impl-PartialEq-for-WlDisplay"],[1615,"impl-PartialEq%3CWeak%3CWlDisplay%3E%3E-for-WlDisplay"],[1739,"impl-PartialEq-for-WlKeyboard"],[1740,"impl-PartialEq%3CWeak%3CWlKeyboard%3E%3E-for-WlKeyboard"],[1889,"impl-Mode"],[1890,"impl-Flags-for-Mode"],[1924,"impl-PartialEq%3CWeak%3CWlOutput%3E%3E-for-WlOutput"],[1925,"impl-PartialEq-for-WlOutput"],[1929,"impl-LowerHex-for-Mode"],[1930,"impl-Binary-for-Mode"],[1931,"impl-Debug-for-Mode"],[1932,"impl-UpperHex-for-Mode"],[1933,"impl-Octal-for-Mode"],[1944,"impl-Flags-for-Mode"],[1945,"impl-Mode"],[2163,"impl-PartialEq%3CWeak%3CWlPointer%3E%3E-for-WlPointer"],[2164,"impl-PartialEq-for-WlPointer"],[2333,"impl-PartialEq-for-WlRegion"],[2334,"impl-PartialEq%3CWeak%3CWlRegion%3E%3E-for-WlRegion"],[2415,"impl-PartialEq%3CWeak%3CWlRegistry%3E%3E-for-WlRegistry"],[2416,"impl-PartialEq-for-WlRegistry"],[2507,"impl-Capability"],[2508,"impl-Flags-for-Capability"],[2536,"impl-PartialEq-for-WlSeat"],[2537,"impl-PartialEq%3CWeak%3CWlSeat%3E%3E-for-WlSeat"],[2539,"impl-LowerHex-for-Capability"],[2540,"impl-Octal-for-Capability"],[2541,"impl-Binary-for-Capability"],[2542,"impl-Debug-for-Capability"],[2543,"impl-UpperHex-for-Capability"],[2554,"impl-Capability"],[2555,"impl-Flags-for-Capability"],[2670,"impl-PartialEq-for-WlShell"],[2671,"impl-PartialEq%3CWeak%3CWlShell%3E%3E-for-WlShell"],[2811,"impl-Resize"],[2812,"impl-Flags-for-Resize"],[2813,"impl-Transient"],[2814,"impl-Flags-for-Transient"],[2853,"impl-PartialEq%3CWeak%3CWlShellSurface%3E%3E-for-WlShellSurface"],[2854,"impl-PartialEq-for-WlShellSurface"],[2857,"impl-Binary-for-Resize"],[2858,"impl-UpperHex-for-Resize"],[2859,"impl-LowerHex-for-Resize"],[2860,"impl-Octal-for-Resize"],[2861,"impl-Debug-for-Resize"],[2862,"impl-Binary-for-Transient"],[2863,"impl-Octal-for-Transient"],[2864,"impl-UpperHex-for-Transient"],[2865,"impl-LowerHex-for-Transient"],[2866,"impl-Debug-for-Transient"],[2879,"impl-Flags-for-Resize"],[2880,"impl-Resize"],[2881,"impl-Transient"],[2882,"impl-Flags-for-Transient"],[3178,"impl-PartialEq%3CWeak%3CWlShm%3E%3E-for-WlShm"],[3179,"impl-PartialEq-for-WlShm"],[3281,"impl-PartialEq-for-WlShmPool"],[3282,"impl-PartialEq%3CWeak%3CWlShmPool%3E%3E-for-WlShmPool"],[3369,"impl-PartialEq%3CWeak%3CWlSubcompositor%3E%3E-for-WlSubcompositor"],[3370,"impl-PartialEq-for-WlSubcompositor"],[3477,"impl-PartialEq%3CWeak%3CWlSubsurface%3E%3E-for-WlSubsurface"],[3478,"impl-PartialEq-for-WlSubsurface"],[3626,"impl-PartialEq-for-WlSurface"],[3627,"impl-PartialEq%3CWeak%3CWlSurface%3E%3E-for-WlSurface"],[3753,"impl-PartialEq%3CWeak%3CWlTouch%3E%3E-for-WlTouch"],[3754,"impl-PartialEq-for-WlTouch"]]}],\
["wayland_protocols",{"doc":"This crate provides bindings to the official wayland …","t":"CCCCCCCCCCCCCCJJJJJJJJJJJJPPTPPPPSSSSGGPFPTPPPPPPSSSSSSSSGTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOPPSSSSSSSSSSSSSSGPPSSGTPFPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOPPSSSSGPPPPSSSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOCCCCJJJJJJJJJJJJPPTPPPPSSSSGGPFPTPPPPPPSSSSSSSSGTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOPPSSSSSSSSSSSSSSGPPSSGTPFPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOPPSSSSGPPPPSSSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOCCCCCJJJJJJJPPSSGGPPPSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPSSSSSSGTTFPGPTFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOCCCJJJJJJJPPSSGGPPPSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPSSSSSSGTTFPGPTFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOCCCCCJJJJJJPPPGGPPSSSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOPGGPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCCCJJJJJJPPPGGPPSSSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOPGGPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCCCCCCCCJJJJJJJJJJJJJJJJJJJPPSSSSSSGGPPPSSSSSSPPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOGPPPPPPFPGGTTGPPPPPTSSSSSSSSSSSSSSSSSSSSGTTPPPPPPPPPPPTTPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOPPPPPSSGGPPPPPSSSSSSSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOPPPPPPPPSSSSSSSSGGPPPPPPPPPPPSSSSSSSSSSSSSSSSSSSSSSSSSSSSGPGPPPPPPPPPPPGPPPPPPPPPPPGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOPPPSSGGPPPPPPPSSSSSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCCCCCCJJJJJJJJJJJJJJJJJJJPPSSSSSSGGPPPSSSSSSPPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOGPPPPPPFPGGTTGPPPPPTSSSSSSSSSSSSSSSSSSSSGTTPPPPPPPPPPPTTPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOPPPPPSSGGPPPPPSSSSSSSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOPPPPPPPPSSSSSSSSGGPPPPPPPPPPPSSSSSSSSSSSSSSSSSSSSSSSSSSSSGPGPPPPPPPPPPPGPPPPPPPPPPPGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOPPPSSGGPPPPPPPSSSSSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOO","n":["ext","wp","xdg","xwayland","linux_dmabuf","presentation_time","viewporter","zv1","client","server","__interfaces","zwp_linux_buffer_params_v1","zwp_linux_dmabuf_feedback_v1","zwp_linux_dmabuf_v1","ZWP_LINUX_BUFFER_PARAMS_V1_INTERFACE","ZWP_LINUX_DMABUF_FEEDBACK_V1_INTERFACE","ZWP_LINUX_DMABUF_V1_INTERFACE","zwp_linux_buffer_params_v1_events","zwp_linux_buffer_params_v1_interface","zwp_linux_buffer_params_v1_requests","zwp_linux_dmabuf_feedback_v1_events","zwp_linux_dmabuf_feedback_v1_interface","zwp_linux_dmabuf_feedback_v1_requests","zwp_linux_dmabuf_v1_events","zwp_linux_dmabuf_v1_interface","zwp_linux_dmabuf_v1_requests","Add","AlreadyUsed","BottomFirst","Create","CreateImmed","Created","Destroy","EVT_CREATED_OPCODE","EVT_CREATED_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","Error","Event","Failed","Flags","Incomplete","Interlaced","InvalidDimensions","InvalidFormat","InvalidWlBuffer","OutOfBounds","PlaneIdx","PlaneSet","REQ_ADD_OPCODE","REQ_ADD_SINCE","REQ_CREATE_IMMED_OPCODE","REQ_CREATE_IMMED_SINCE","REQ_CREATE_OPCODE","REQ_CREATE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","YInvert","ZwpLinuxBufferParamsV1","add","all","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","complement","contains","contains","create","create_immed","data","destroy","difference","difference","empty","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","remove","remove","send_constructor","send_request","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","buffer","fd","flags","flags","format","format","height","height","modifier_hi","modifier_lo","offset","plane_idx","stride","width","width","Destroy","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_FORMAT_TABLE_OPCODE","EVT_FORMAT_TABLE_SINCE","EVT_MAIN_DEVICE_OPCODE","EVT_MAIN_DEVICE_SINCE","EVT_TRANCHE_DONE_OPCODE","EVT_TRANCHE_DONE_SINCE","EVT_TRANCHE_FLAGS_OPCODE","EVT_TRANCHE_FLAGS_SINCE","EVT_TRANCHE_FORMATS_OPCODE","EVT_TRANCHE_FORMATS_SINCE","EVT_TRANCHE_TARGET_DEVICE_OPCODE","EVT_TRANCHE_TARGET_DEVICE_SINCE","Event","FormatTable","MainDevice","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","Scanout","TrancheDone","TrancheFlags","TrancheFlags","TrancheFormats","TrancheTargetDevice","ZwpLinuxDmabufFeedbackV1","all","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","complement","contains","contains","data","destroy","difference","difference","empty","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","remove","remove","send_constructor","send_request","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","version","write_request","device","device","fd","flags","indices","size","CreateParams","Destroy","EVT_FORMAT_OPCODE","EVT_FORMAT_SINCE","EVT_MODIFIER_OPCODE","EVT_MODIFIER_SINCE","Event","Format","GetDefaultFeedback","GetSurfaceFeedback","Modifier","REQ_CREATE_PARAMS_OPCODE","REQ_CREATE_PARAMS_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_DEFAULT_FEEDBACK_OPCODE","REQ_GET_DEFAULT_FEEDBACK_SINCE","REQ_GET_SURFACE_FEEDBACK_OPCODE","REQ_GET_SURFACE_FEEDBACK_SINCE","Request","ZwpLinuxDmabufV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_params","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","get_default_feedback","get_surface_feedback","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","format","format","modifier_hi","modifier_lo","surface","__interfaces","zwp_linux_buffer_params_v1","zwp_linux_dmabuf_feedback_v1","zwp_linux_dmabuf_v1","ZWP_LINUX_BUFFER_PARAMS_V1_INTERFACE","ZWP_LINUX_DMABUF_FEEDBACK_V1_INTERFACE","ZWP_LINUX_DMABUF_V1_INTERFACE","zwp_linux_buffer_params_v1_events","zwp_linux_buffer_params_v1_interface","zwp_linux_buffer_params_v1_requests","zwp_linux_dmabuf_feedback_v1_events","zwp_linux_dmabuf_feedback_v1_interface","zwp_linux_dmabuf_feedback_v1_requests","zwp_linux_dmabuf_v1_events","zwp_linux_dmabuf_v1_interface","zwp_linux_dmabuf_v1_requests","Add","AlreadyUsed","BottomFirst","Create","CreateImmed","Created","Destroy","EVT_CREATED_OPCODE","EVT_CREATED_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","Error","Event","Failed","Flags","Incomplete","Interlaced","InvalidDimensions","InvalidFormat","InvalidWlBuffer","OutOfBounds","PlaneIdx","PlaneSet","REQ_ADD_OPCODE","REQ_ADD_SINCE","REQ_CREATE_IMMED_OPCODE","REQ_CREATE_IMMED_SINCE","REQ_CREATE_OPCODE","REQ_CREATE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","YInvert","ZwpLinuxBufferParamsV1","all","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","complement","contains","contains","created","data","difference","difference","empty","empty","eq","eq","eq","eq","extend","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","handle","hash","hash","hash","id","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_request","partial_cmp","remove","remove","send_event","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","version","write_event","buffer","buffer_id","fd","flags","flags","format","format","height","height","modifier_hi","modifier_lo","offset","plane_idx","stride","width","width","Destroy","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_FORMAT_TABLE_OPCODE","EVT_FORMAT_TABLE_SINCE","EVT_MAIN_DEVICE_OPCODE","EVT_MAIN_DEVICE_SINCE","EVT_TRANCHE_DONE_OPCODE","EVT_TRANCHE_DONE_SINCE","EVT_TRANCHE_FLAGS_OPCODE","EVT_TRANCHE_FLAGS_SINCE","EVT_TRANCHE_FORMATS_OPCODE","EVT_TRANCHE_FORMATS_SINCE","EVT_TRANCHE_TARGET_DEVICE_OPCODE","EVT_TRANCHE_TARGET_DEVICE_SINCE","Event","FormatTable","MainDevice","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","Scanout","TrancheDone","TrancheFlags","TrancheFlags","TrancheFormats","TrancheTargetDevice","ZwpLinuxDmabufFeedbackV1","all","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","complement","contains","contains","data","difference","difference","done","empty","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_table","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","handle","hash","hash","id","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","main_device","not","object_data","opcode","opcode","parse_request","remove","remove","send_event","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","tranche_done","tranche_flags","tranche_formats","tranche_target_device","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","version","write_event","device","device","fd","flags","indices","size","CreateParams","Destroy","EVT_FORMAT_OPCODE","EVT_FORMAT_SINCE","EVT_MODIFIER_OPCODE","EVT_MODIFIER_SINCE","Event","Format","GetDefaultFeedback","GetSurfaceFeedback","Modifier","REQ_CREATE_PARAMS_OPCODE","REQ_CREATE_PARAMS_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_DEFAULT_FEEDBACK_OPCODE","REQ_GET_DEFAULT_FEEDBACK_SINCE","REQ_GET_SURFACE_FEEDBACK_OPCODE","REQ_GET_SURFACE_FEEDBACK_SINCE","Request","ZwpLinuxDmabufV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","format","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","modifier","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","format","format","modifier_hi","modifier_lo","id","id","params_id","surface","client","server","__interfaces","wp_presentation","wp_presentation_feedback","WP_PRESENTATION_FEEDBACK_INTERFACE","WP_PRESENTATION_INTERFACE","wp_presentation_events","wp_presentation_feedback_events","wp_presentation_feedback_interface","wp_presentation_interface","wp_presentation_requests","ClockId","Destroy","EVT_CLOCK_ID_OPCODE","EVT_CLOCK_ID_SINCE","Error","Event","Feedback","InvalidFlag","InvalidTimestamp","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FEEDBACK_OPCODE","REQ_FEEDBACK_SINCE","Request","WpPresentation","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","feedback","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","clk_id","surface","Discarded","EVT_DISCARDED_OPCODE","EVT_DISCARDED_SINCE","EVT_PRESENTED_OPCODE","EVT_PRESENTED_SINCE","EVT_SYNC_OUTPUT_OPCODE","EVT_SYNC_OUTPUT_SINCE","Event","HwClock","HwCompletion","Kind","Presented","Request","SyncOutput","Vsync","WpPresentationFeedback","ZeroCopy","all","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","complement","contains","contains","data","difference","difference","empty","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","remove","remove","send_constructor","send_request","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","version","write_request","flags","output","refresh","seq_hi","seq_lo","tv_nsec","tv_sec_hi","tv_sec_lo","__interfaces","wp_presentation","wp_presentation_feedback","WP_PRESENTATION_FEEDBACK_INTERFACE","WP_PRESENTATION_INTERFACE","wp_presentation_events","wp_presentation_feedback_events","wp_presentation_feedback_interface","wp_presentation_interface","wp_presentation_requests","ClockId","Destroy","EVT_CLOCK_ID_OPCODE","EVT_CLOCK_ID_SINCE","Error","Event","Feedback","InvalidFlag","InvalidTimestamp","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FEEDBACK_OPCODE","REQ_FEEDBACK_SINCE","Request","WpPresentation","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clock_id","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","clk_id","callback","surface","Discarded","EVT_DISCARDED_OPCODE","EVT_DISCARDED_SINCE","EVT_PRESENTED_OPCODE","EVT_PRESENTED_SINCE","EVT_SYNC_OUTPUT_OPCODE","EVT_SYNC_OUTPUT_SINCE","Event","HwClock","HwCompletion","Kind","Presented","Request","SyncOutput","Vsync","WpPresentationFeedback","ZeroCopy","all","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","complement","contains","contains","data","difference","difference","discarded","empty","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","handle","hash","hash","id","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_request","presented","remove","remove","send_event","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","sync_output","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","version","write_event","flags","output","refresh","seq_hi","seq_lo","tv_nsec","tv_sec_hi","tv_sec_lo","client","server","__interfaces","wp_viewport","wp_viewporter","WP_VIEWPORTER_INTERFACE","WP_VIEWPORT_INTERFACE","wp_viewport_interface","wp_viewport_requests","wp_viewporter_interface","wp_viewporter_requests","BadSize","BadValue","Destroy","Error","Event","NoSurface","OutOfBuffer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_DESTINATION_OPCODE","REQ_SET_DESTINATION_SINCE","REQ_SET_SOURCE_OPCODE","REQ_SET_SOURCE_SINCE","Request","SetDestination","SetSource","WpViewport","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_destination","set_source","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","height","height","width","width","x","y","Destroy","Error","Event","GetViewport","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_VIEWPORT_OPCODE","REQ_GET_VIEWPORT_SINCE","Request","ViewportExists","WpViewporter","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_viewport","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","surface","__interfaces","wp_viewport","wp_viewporter","WP_VIEWPORTER_INTERFACE","WP_VIEWPORT_INTERFACE","wp_viewport_interface","wp_viewport_requests","wp_viewporter_interface","wp_viewporter_requests","BadSize","BadValue","Destroy","Error","Event","NoSurface","OutOfBuffer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_DESTINATION_OPCODE","REQ_SET_DESTINATION_SINCE","REQ_SET_SOURCE_OPCODE","REQ_SET_SOURCE_SINCE","Request","SetDestination","SetSource","WpViewport","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","height","height","width","width","x","y","Destroy","Error","Event","GetViewport","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_VIEWPORT_OPCODE","REQ_GET_VIEWPORT_SINCE","Request","ViewportExists","WpViewporter","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","id","surface","shell","client","server","__interfaces","xdg_popup","xdg_positioner","xdg_surface","xdg_toplevel","xdg_wm_base","XDG_POPUP_INTERFACE","XDG_POSITIONER_INTERFACE","XDG_SURFACE_INTERFACE","XDG_TOPLEVEL_INTERFACE","XDG_WM_BASE_INTERFACE","xdg_popup_events","xdg_popup_interface","xdg_popup_requests","xdg_positioner_interface","xdg_positioner_requests","xdg_surface_events","xdg_surface_interface","xdg_surface_requests","xdg_toplevel_events","xdg_toplevel_interface","xdg_toplevel_requests","xdg_wm_base_events","xdg_wm_base_interface","xdg_wm_base_requests","Configure","Destroy","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_POPUP_DONE_OPCODE","EVT_POPUP_DONE_SINCE","EVT_REPOSITIONED_OPCODE","EVT_REPOSITIONED_SINCE","Error","Event","Grab","InvalidGrab","PopupDone","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GRAB_OPCODE","REQ_GRAB_SINCE","REQ_REPOSITION_OPCODE","REQ_REPOSITION_SINCE","Reposition","Repositioned","Request","XdgPopup","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","grab","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","reposition","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","height","token","width","x","y","positioner","seat","serial","token","Anchor","Bottom","Bottom","BottomLeft","BottomLeft","BottomRight","BottomRight","ConstraintAdjustment","Destroy","Error","Event","FlipX","FlipY","Gravity","InvalidInput","Left","Left","None","None","None","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_ANCHOR_OPCODE","REQ_SET_ANCHOR_RECT_OPCODE","REQ_SET_ANCHOR_RECT_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_CONSTRAINT_ADJUSTMENT_OPCODE","REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","REQ_SET_GRAVITY_OPCODE","REQ_SET_GRAVITY_SINCE","REQ_SET_OFFSET_OPCODE","REQ_SET_OFFSET_SINCE","REQ_SET_PARENT_CONFIGURE_OPCODE","REQ_SET_PARENT_CONFIGURE_SINCE","REQ_SET_PARENT_SIZE_OPCODE","REQ_SET_PARENT_SIZE_SINCE","REQ_SET_REACTIVE_OPCODE","REQ_SET_REACTIVE_SINCE","REQ_SET_SIZE_OPCODE","REQ_SET_SIZE_SINCE","Request","ResizeX","ResizeY","Right","Right","SetAnchor","SetAnchorRect","SetConstraintAdjustment","SetGravity","SetOffset","SetParentConfigure","SetParentSize","SetReactive","SetSize","SlideX","SlideY","Top","Top","TopLeft","TopLeft","TopRight","TopRight","XdgPositioner","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","data","destroy","difference","difference","empty","empty","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","hash","hash","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","remove","remove","send_constructor","send_request","set","set","set_anchor","set_anchor_rect","set_constraint_adjustment","set_gravity","set_offset","set_parent_configure","set_parent_size","set_reactive","set_size","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","anchor","constraint_adjustment","gravity","height","height","parent_height","parent_width","serial","width","width","x","x","y","y","AckConfigure","AlreadyConstructed","Configure","DefunctRoleObject","Destroy","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","Error","Event","GetPopup","GetToplevel","InvalidSerial","InvalidSize","NotConstructed","REQ_ACK_CONFIGURE_OPCODE","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_POPUP_OPCODE","REQ_GET_POPUP_SINCE","REQ_GET_TOPLEVEL_OPCODE","REQ_GET_TOPLEVEL_SINCE","REQ_SET_WINDOW_GEOMETRY_OPCODE","REQ_SET_WINDOW_GEOMETRY_SINCE","Request","SetWindowGeometry","UnconfiguredBuffer","XdgSurface","ack_configure","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_popup","get_toplevel","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_window_geometry","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","serial","height","parent","positioner","serial","width","x","y","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","ConfigureBounds","Destroy","EVT_CLOSE_OPCODE","EVT_CLOSE_SINCE","EVT_CONFIGURE_BOUNDS_OPCODE","EVT_CONFIGURE_BOUNDS_SINCE","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_WM_CAPABILITIES_OPCODE","EVT_WM_CAPABILITIES_SINCE","Error","Event","Fullscreen","Fullscreen","InvalidParent","InvalidResizeEdge","InvalidSize","Left","Maximize","Maximized","Minimize","Move","None","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_MOVE_OPCODE","REQ_MOVE_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_OPCODE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MAX_SIZE_OPCODE","REQ_SET_MAX_SIZE_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_MIN_SIZE_OPCODE","REQ_SET_MIN_SIZE_SINCE","REQ_SET_PARENT_OPCODE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_OPCODE","REQ_SET_TITLE_SINCE","REQ_SHOW_WINDOW_MENU_OPCODE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetParent","SetTitle","ShowWindowMenu","State","Suspended","TiledBottom","TiledLeft","TiledRight","TiledTop","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","WindowMenu","WmCapabilities","WmCapabilities","XdgToplevel","_move","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","data","destroy","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_id","hash","hash","hash","hash","hash","id","inert","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","partial_cmp","partial_cmp","resize","send_constructor","send_request","set_app_id","set_fullscreen","set_max_size","set_maximized","set_min_size","set_minimized","set_parent","set_title","show_window_menu","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","version","write_request","capabilities","height","height","states","width","width","app_id","edges","height","height","output","parent","seat","seat","seat","serial","serial","serial","title","width","width","x","y","CreatePositioner","DefunctSurfaces","Destroy","EVT_PING_OPCODE","EVT_PING_SINCE","Error","Event","GetXdgSurface","InvalidPopupParent","InvalidPositioner","InvalidSurfaceState","NotTheTopmostPopup","Ping","Pong","REQ_CREATE_POSITIONER_OPCODE","REQ_CREATE_POSITIONER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_XDG_SURFACE_OPCODE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_OPCODE","REQ_PONG_SINCE","Request","Role","Unresponsive","XdgWmBase","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","create_positioner","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_xdg_surface","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","pong","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","serial","serial","surface","__interfaces","xdg_popup","xdg_positioner","xdg_surface","xdg_toplevel","xdg_wm_base","XDG_POPUP_INTERFACE","XDG_POSITIONER_INTERFACE","XDG_SURFACE_INTERFACE","XDG_TOPLEVEL_INTERFACE","XDG_WM_BASE_INTERFACE","xdg_popup_events","xdg_popup_interface","xdg_popup_requests","xdg_positioner_interface","xdg_positioner_requests","xdg_surface_events","xdg_surface_interface","xdg_surface_requests","xdg_toplevel_events","xdg_toplevel_interface","xdg_toplevel_requests","xdg_wm_base_events","xdg_wm_base_interface","xdg_wm_base_requests","Configure","Destroy","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_POPUP_DONE_OPCODE","EVT_POPUP_DONE_SINCE","EVT_REPOSITIONED_OPCODE","EVT_REPOSITIONED_SINCE","Error","Event","Grab","InvalidGrab","PopupDone","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GRAB_OPCODE","REQ_GRAB_SINCE","REQ_REPOSITION_OPCODE","REQ_REPOSITION_SINCE","Reposition","Repositioned","Request","XdgPopup","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","configure","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","popup_done","repositioned","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","height","token","width","x","y","positioner","seat","serial","token","Anchor","Bottom","Bottom","BottomLeft","BottomLeft","BottomRight","BottomRight","ConstraintAdjustment","Destroy","Error","Event","FlipX","FlipY","Gravity","InvalidInput","Left","Left","None","None","None","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_ANCHOR_OPCODE","REQ_SET_ANCHOR_RECT_OPCODE","REQ_SET_ANCHOR_RECT_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_CONSTRAINT_ADJUSTMENT_OPCODE","REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","REQ_SET_GRAVITY_OPCODE","REQ_SET_GRAVITY_SINCE","REQ_SET_OFFSET_OPCODE","REQ_SET_OFFSET_SINCE","REQ_SET_PARENT_CONFIGURE_OPCODE","REQ_SET_PARENT_CONFIGURE_SINCE","REQ_SET_PARENT_SIZE_OPCODE","REQ_SET_PARENT_SIZE_SINCE","REQ_SET_REACTIVE_OPCODE","REQ_SET_REACTIVE_SINCE","REQ_SET_SIZE_OPCODE","REQ_SET_SIZE_SINCE","Request","ResizeX","ResizeY","Right","Right","SetAnchor","SetAnchorRect","SetConstraintAdjustment","SetGravity","SetOffset","SetParentConfigure","SetParentSize","SetReactive","SetSize","SlideX","SlideY","Top","Top","TopLeft","TopLeft","TopRight","TopRight","XdgPositioner","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","data","difference","difference","empty","empty","eq","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","handle","hash","hash","hash","hash","hash","id","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","partial_cmp","remove","remove","send_event","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_event","anchor","constraint_adjustment","gravity","height","height","parent_height","parent_width","serial","width","width","x","x","y","y","AckConfigure","AlreadyConstructed","Configure","DefunctRoleObject","Destroy","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","Error","Event","GetPopup","GetToplevel","InvalidSerial","InvalidSize","NotConstructed","REQ_ACK_CONFIGURE_OPCODE","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_POPUP_OPCODE","REQ_GET_POPUP_SINCE","REQ_GET_TOPLEVEL_OPCODE","REQ_GET_TOPLEVEL_SINCE","REQ_SET_WINDOW_GEOMETRY_OPCODE","REQ_SET_WINDOW_GEOMETRY_SINCE","Request","SetWindowGeometry","UnconfiguredBuffer","XdgSurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","configure","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","serial","height","id","id","parent","positioner","serial","width","x","y","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","ConfigureBounds","Destroy","EVT_CLOSE_OPCODE","EVT_CLOSE_SINCE","EVT_CONFIGURE_BOUNDS_OPCODE","EVT_CONFIGURE_BOUNDS_SINCE","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_WM_CAPABILITIES_OPCODE","EVT_WM_CAPABILITIES_SINCE","Error","Event","Fullscreen","Fullscreen","InvalidParent","InvalidResizeEdge","InvalidSize","Left","Maximize","Maximized","Minimize","Move","None","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_MOVE_OPCODE","REQ_MOVE_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_OPCODE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MAX_SIZE_OPCODE","REQ_SET_MAX_SIZE_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_MIN_SIZE_OPCODE","REQ_SET_MIN_SIZE_SINCE","REQ_SET_PARENT_OPCODE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_OPCODE","REQ_SET_TITLE_SINCE","REQ_SHOW_WINDOW_MENU_OPCODE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetParent","SetTitle","ShowWindowMenu","State","Suspended","TiledBottom","TiledLeft","TiledRight","TiledTop","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","WindowMenu","WmCapabilities","WmCapabilities","XdgToplevel","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","cmp","cmp","configure","configure_bounds","data","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_id","handle","hash","hash","hash","hash","hash","id","interface","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","partial_cmp","partial_cmp","send_event","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","wm_capabilities","write_event","capabilities","height","height","states","width","width","app_id","edges","height","height","output","parent","seat","seat","seat","serial","serial","serial","title","width","width","x","y","CreatePositioner","DefunctSurfaces","Destroy","EVT_PING_OPCODE","EVT_PING_SINCE","Error","Event","GetXdgSurface","InvalidPopupParent","InvalidPositioner","InvalidSurfaceState","NotTheTopmostPopup","Ping","Pong","REQ_CREATE_POSITIONER_OPCODE","REQ_CREATE_POSITIONER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_XDG_SURFACE_OPCODE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_OPCODE","REQ_PONG_SINCE","Request","Role","Unresponsive","XdgWmBase","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","ping","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","serial","id","id","serial","surface"],"q":[[0,"wayland_protocols"],[4,"wayland_protocols::wp"],[7,"wayland_protocols::wp::linux_dmabuf"],[8,"wayland_protocols::wp::linux_dmabuf::zv1"],[10,"wayland_protocols::wp::linux_dmabuf::zv1::client"],[14,"wayland_protocols::wp::linux_dmabuf::zv1::client::__interfaces"],[26,"wayland_protocols::wp::linux_dmabuf::zv1::client::zwp_linux_buffer_params_v1"],[226,"wayland_protocols::wp::linux_dmabuf::zv1::client::zwp_linux_buffer_params_v1::Event"],[227,"wayland_protocols::wp::linux_dmabuf::zv1::client::zwp_linux_buffer_params_v1::Request"],[241,"wayland_protocols::wp::linux_dmabuf::zv1::client::zwp_linux_dmabuf_feedback_v1"],[412,"wayland_protocols::wp::linux_dmabuf::zv1::client::zwp_linux_dmabuf_feedback_v1::Event"],[418,"wayland_protocols::wp::linux_dmabuf::zv1::client::zwp_linux_dmabuf_v1"],[503,"wayland_protocols::wp::linux_dmabuf::zv1::client::zwp_linux_dmabuf_v1::Event"],[507,"wayland_protocols::wp::linux_dmabuf::zv1::client::zwp_linux_dmabuf_v1::Request"],[508,"wayland_protocols::wp::linux_dmabuf::zv1::server"],[512,"wayland_protocols::wp::linux_dmabuf::zv1::server::__interfaces"],[524,"wayland_protocols::wp::linux_dmabuf::zv1::server::zwp_linux_buffer_params_v1"],[720,"wayland_protocols::wp::linux_dmabuf::zv1::server::zwp_linux_buffer_params_v1::Event"],[721,"wayland_protocols::wp::linux_dmabuf::zv1::server::zwp_linux_buffer_params_v1::Request"],[736,"wayland_protocols::wp::linux_dmabuf::zv1::server::zwp_linux_dmabuf_feedback_v1"],[911,"wayland_protocols::wp::linux_dmabuf::zv1::server::zwp_linux_dmabuf_feedback_v1::Event"],[917,"wayland_protocols::wp::linux_dmabuf::zv1::server::zwp_linux_dmabuf_v1"],[998,"wayland_protocols::wp::linux_dmabuf::zv1::server::zwp_linux_dmabuf_v1::Event"],[1002,"wayland_protocols::wp::linux_dmabuf::zv1::server::zwp_linux_dmabuf_v1::Request"],[1006,"wayland_protocols::wp::presentation_time"],[1008,"wayland_protocols::wp::presentation_time::client"],[1011,"wayland_protocols::wp::presentation_time::client::__interfaces"],[1018,"wayland_protocols::wp::presentation_time::client::wp_presentation"],[1116,"wayland_protocols::wp::presentation_time::client::wp_presentation::Event"],[1117,"wayland_protocols::wp::presentation_time::client::wp_presentation::Request"],[1118,"wayland_protocols::wp::presentation_time::client::wp_presentation_feedback"],[1276,"wayland_protocols::wp::presentation_time::client::wp_presentation_feedback::Event"],[1284,"wayland_protocols::wp::presentation_time::server"],[1287,"wayland_protocols::wp::presentation_time::server::__interfaces"],[1294,"wayland_protocols::wp::presentation_time::server::wp_presentation"],[1389,"wayland_protocols::wp::presentation_time::server::wp_presentation::Event"],[1390,"wayland_protocols::wp::presentation_time::server::wp_presentation::Request"],[1392,"wayland_protocols::wp::presentation_time::server::wp_presentation_feedback"],[1551,"wayland_protocols::wp::presentation_time::server::wp_presentation_feedback::Event"],[1559,"wayland_protocols::wp::viewporter"],[1561,"wayland_protocols::wp::viewporter::client"],[1564,"wayland_protocols::wp::viewporter::client::__interfaces"],[1570,"wayland_protocols::wp::viewporter::client::wp_viewport"],[1671,"wayland_protocols::wp::viewporter::client::wp_viewport::Request"],[1677,"wayland_protocols::wp::viewporter::client::wp_viewporter"],[1771,"wayland_protocols::wp::viewporter::client::wp_viewporter::Request"],[1772,"wayland_protocols::wp::viewporter::server"],[1775,"wayland_protocols::wp::viewporter::server::__interfaces"],[1781,"wayland_protocols::wp::viewporter::server::wp_viewport"],[1877,"wayland_protocols::wp::viewporter::server::wp_viewport::Request"],[1883,"wayland_protocols::wp::viewporter::server::wp_viewporter"],[1973,"wayland_protocols::wp::viewporter::server::wp_viewporter::Request"],[1975,"wayland_protocols::xdg"],[1976,"wayland_protocols::xdg::shell"],[1978,"wayland_protocols::xdg::shell::client"],[1984,"wayland_protocols::xdg::shell::client::__interfaces"],[2003,"wayland_protocols::xdg::shell::client::xdg_popup"],[2110,"wayland_protocols::xdg::shell::client::xdg_popup::Event"],[2115,"wayland_protocols::xdg::shell::client::xdg_popup::Request"],[2119,"wayland_protocols::xdg::shell::client::xdg_positioner"],[2396,"wayland_protocols::xdg::shell::client::xdg_positioner::Request"],[2410,"wayland_protocols::xdg::shell::client::xdg_surface"],[2524,"wayland_protocols::xdg::shell::client::xdg_surface::Event"],[2525,"wayland_protocols::xdg::shell::client::xdg_surface::Request"],[2532,"wayland_protocols::xdg::shell::client::xdg_toplevel"],[2776,"wayland_protocols::xdg::shell::client::xdg_toplevel::Event"],[2782,"wayland_protocols::xdg::shell::client::xdg_toplevel::Request"],[2799,"wayland_protocols::xdg::shell::client::xdg_wm_base"],[2910,"wayland_protocols::xdg::shell::client::xdg_wm_base::Event"],[2911,"wayland_protocols::xdg::shell::client::xdg_wm_base::Request"],[2913,"wayland_protocols::xdg::shell::server"],[2919,"wayland_protocols::xdg::shell::server::__interfaces"],[2938,"wayland_protocols::xdg::shell::server::xdg_popup"],[3043,"wayland_protocols::xdg::shell::server::xdg_popup::Event"],[3048,"wayland_protocols::xdg::shell::server::xdg_popup::Request"],[3052,"wayland_protocols::xdg::shell::server::xdg_positioner"],[3317,"wayland_protocols::xdg::shell::server::xdg_positioner::Request"],[3331,"wayland_protocols::xdg::shell::server::xdg_surface"],[3439,"wayland_protocols::xdg::shell::server::xdg_surface::Event"],[3440,"wayland_protocols::xdg::shell::server::xdg_surface::Request"],[3449,"wayland_protocols::xdg::shell::server::xdg_toplevel"],[3681,"wayland_protocols::xdg::shell::server::xdg_toplevel::Event"],[3687,"wayland_protocols::xdg::shell::server::xdg_toplevel::Request"],[3704,"wayland_protocols::xdg::shell::server::xdg_wm_base"],[3810,"wayland_protocols::xdg::shell::server::xdg_wm_base::Event"],[3811,"wayland_protocols::xdg::shell::server::xdg_wm_base::Request"],[3815,"std::os::fd::owned"],[3816,"core::any"],[3817,"wayland_backend::rs::client"],[3818,"wayland_backend::rs::client"],[3819,"wayland_client::event_queue"],[3820,"wayland_client::protocol::wl_buffer"],[3821,"core::marker"],[3822,"core::marker"],[3823,"wayland_client"],[3824,"core::iter::traits::collect"],[3825,"core::fmt"],[3826,"core::fmt"],[3827,"wayland_backend::types::client"],[3828,"core::result"],[3829,"core::hash"],[3830,"wayland_backend::protocol"],[3831,"alloc::boxed"],[3832,"alloc::sync"],[3833,"alloc::rc"],[3834,"bitflags::iter"],[3835,"bitflags::iter"],[3836,"wayland_backend::rs::server"],[3837,"wayland_server::protocol::wl_buffer"],[3838,"wayland_server"],[3839,"wayland_server::display"],[3840,"wayland_backend::types::server"],[3841,"wayland_backend::rs::server"],[3842,"wayland_server::protocol::wl_output"],[3843,"wayland_client::protocol::wl_seat"],[3844,"alloc::string"],[3845,"wayland_client::protocol::wl_output"]],"d":["Miscellaneous protocols","Generic wayland protocols","Protocols related to window management","XWayland related protocols","Linux DMA-BUF protocol","Presentation time protocol","Viewporter protocol","Unstable version 1","Client-side API of this protocol","Server-side API of this protocol","","parameters for creating a dmabuf-based wl_buffer","dmabuf feedback","factory for creating dmabuf-based wl_buffers","","","","","","","","","","","","","add a dmabuf to the temporary set","the dmabuf_batch object has already been used to create a …","bottom field first","create a wl_buffer from the given dmabufs","immediately create a wl_buffer from the given dmabufs","buffer creation succeeded","delete this object, used or not","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","buffer creation failed","","missing or too many planes to create a buffer","content is interlaced","invalid width or height","format not supported","invalid wl_buffer resulted from importing dmabufs via the …","offset + stride * height goes out of dmabuf bounds","plane index out of bounds","the plane index was already set","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","contents are y-inverted","parameters for creating a dmabuf-based wl_buffer","add a dmabuf to the temporary set","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","create a wl_buffer from the given dmabufs","immediately create a wl_buffer from the given dmabufs","","delete this object, used or not","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","the newly created wl_buffer","dmabuf fd","see enum flags","see enum flags","DRM_FORMAT code","DRM_FORMAT code","base plane height in pixels","base plane height in pixels","high 32 bits of layout modifier","low 32 bits of layout modifier","offset in bytes","plane index","stride in bytes","base plane width in pixels","base plane width in pixels","destroy the feedback object","all feedback has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","format and modifier table","preferred main device","The wire opcode for this request","The minimal object version supporting this request","","direct scan-out tranche","a preference tranche has been sent","","tranche flags","supported buffer format modifier","target device","dmabuf feedback","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","destroy the feedback object","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","device dev_t value","device dev_t value","table file descriptor","tranche flags","array of 16-bit indexes","table size, in bytes","create a temporary object for buffer parameters","unbind the factory","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","supported buffer format","get default feedback","get feedback for a surface","supported buffer format modifier","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","factory for creating dmabuf-based wl_buffers","","","","","","","","","","","","","","","","","create a temporary object for buffer parameters","","unbind the factory","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get default feedback","get feedback for a surface","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","DRM_FORMAT code","DRM_FORMAT code","high 32 bits of layout modifier","low 32 bits of layout modifier","","","parameters for creating a dmabuf-based wl_buffer","dmabuf feedback","factory for creating dmabuf-based wl_buffers","","","","","","","","","","","","","add a dmabuf to the temporary set","the dmabuf_batch object has already been used to create a …","bottom field first","create a wl_buffer from the given dmabufs","immediately create a wl_buffer from the given dmabufs","buffer creation succeeded","delete this object, used or not","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","buffer creation failed","","missing or too many planes to create a buffer","content is interlaced","invalid width or height","format not supported","invalid wl_buffer resulted from importing dmabufs via the …","offset + stride * height goes out of dmabuf bounds","plane index out of bounds","the plane index was already set","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","contents are y-inverted","parameters for creating a dmabuf-based wl_buffer","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","buffer creation succeeded","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","buffer creation failed","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","the newly created wl_buffer","id for the newly created wl_buffer","dmabuf fd","see enum flags","see enum flags","DRM_FORMAT code","DRM_FORMAT code","base plane height in pixels","base plane height in pixels","high 32 bits of layout modifier","low 32 bits of layout modifier","offset in bytes","plane index","stride in bytes","base plane width in pixels","base plane width in pixels","destroy the feedback object","all feedback has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","format and modifier table","preferred main device","The wire opcode for this request","The minimal object version supporting this request","","direct scan-out tranche","a preference tranche has been sent","","tranche flags","supported buffer format modifier","target device","dmabuf feedback","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","all feedback has been sent","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","format and modifier table","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","preferred main device","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","a preference tranche has been sent","tranche flags","supported buffer format modifier","target device","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","device dev_t value","device dev_t value","table file descriptor","tranche flags","array of 16-bit indexes","table size, in bytes","create a temporary object for buffer parameters","unbind the factory","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","supported buffer format","get default feedback","get feedback for a surface","supported buffer format modifier","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","factory for creating dmabuf-based wl_buffers","","","","","","","","","","","","","","","","","","","","","","supported buffer format","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","supported buffer format modifier","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","DRM_FORMAT code","DRM_FORMAT code","high 32 bits of layout modifier","low 32 bits of layout modifier","","","the new temporary","","Client-side API of this protocol","Server-side API of this protocol","","timed presentation related wl_surface requests","presentation time feedback event","","","","","","","","clock ID for timestamps","unbind from the presentation interface","The wire opcode for this event","The minimal object version supporting this event","fatal presentation errors","","request presentation feedback information","invalid flag","invalid value in tv_nsec","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","timed presentation related wl_surface requests","","","","","","","","","","","","","","","","","","","","","","","","","unbind from the presentation interface","","","","request presentation feedback information","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","platform clock identifier","target surface","the content update was not displayed","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","hardware provided the presentation timestamp","hardware signalled the start of the presentation","bitmask of flags in presented event","the content update was displayed","","presentation synchronized to this output","presentation was vsync’d","presentation time feedback event","presentation was done zero-copy","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","combination of ‘kind’ values","presentation output","nanoseconds till next refresh","high 32 bits of refresh counter","low 32 bits of refresh counter","nanoseconds part of the presentation timestamp","high 32 bits of the seconds part of the presentation …","low 32 bits of the seconds part of the presentation …","","timed presentation related wl_surface requests","presentation time feedback event","","","","","","","","clock ID for timestamps","unbind from the presentation interface","The wire opcode for this event","The minimal object version supporting this event","fatal presentation errors","","request presentation feedback information","invalid flag","invalid value in tv_nsec","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","timed presentation related wl_surface requests","","","","","","","","","","","","","","","","","","clock ID for timestamps","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","platform clock identifier","new feedback object","target surface","the content update was not displayed","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","hardware provided the presentation timestamp","hardware signalled the start of the presentation","bitmask of flags in presented event","the content update was displayed","","presentation synchronized to this output","presentation was vsync’d","presentation time feedback event","presentation was done zero-copy","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","the content update was not displayed","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","the content update was displayed","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","presentation synchronized to this output","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","combination of ‘kind’ values","presentation output","nanoseconds till next refresh","high 32 bits of refresh counter","low 32 bits of refresh counter","nanoseconds part of the presentation timestamp","high 32 bits of the seconds part of the presentation …","low 32 bits of the seconds part of the presentation …","Client-side API of this protocol","Server-side API of this protocol","","crop and scale interface to a wl_surface","surface cropping and scaling","","","","","","","destination size is not integer","negative or zero values in width or height","remove scaling and cropping from the surface","","","the wl_surface was destroyed","source rectangle extends outside of the content area","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the surface size for scaling","set the source rectangle for cropping","crop and scale interface to a wl_surface","","","","","","","","","","","","","","","","","","","","","","","","","remove scaling and cropping from the surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","set the surface size for scaling","set the source rectangle for cropping","","","","","","","","","","","","","","","","","","source rectangle height","surface height","source rectangle width","surface width","source rectangle x","source rectangle y","unbind from the cropping and scaling interface","","","extend surface interface for crop and scale","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the surface already has a viewport object associated","surface cropping and scaling","","","","","","","","","","","","","","","","","","","","","","","","","unbind from the cropping and scaling interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","extend surface interface for crop and scale","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","the surface","","crop and scale interface to a wl_surface","surface cropping and scaling","","","","","","","destination size is not integer","negative or zero values in width or height","remove scaling and cropping from the surface","","","the wl_surface was destroyed","source rectangle extends outside of the content area","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the surface size for scaling","set the source rectangle for cropping","crop and scale interface to a wl_surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","source rectangle height","surface height","source rectangle width","surface width","source rectangle x","source rectangle y","unbind from the cropping and scaling interface","","","extend surface interface for crop and scale","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the surface already has a viewport object associated","surface cropping and scaling","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","the new viewport interface id","the surface","XDG Shell protocol","Client-side API of this protocol","Server-side API of this protocol","","short-lived, popup surfaces for menus","child surface positioner","desktop user interface surface base interface","toplevel surface","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","configure the popup surface","remove xdg_popup interface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","make the popup take an explicit grab","tried to grab after being mapped","popup interaction is done","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","recalculate the popup’s location","signal the completion of a repositioned request","","short-lived, popup surfaces for menus","","","","","","","","","","","","","","","","","","","","","","","","","remove xdg_popup interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","make the popup take an explicit grab","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","recalculate the popup’s location","","","","","","","","","","","","","","","","","","","","window geometry height","reposition request token","window geometry width","x position relative to parent surface window geometry","y position relative to parent surface window geometry","","the wl_seat of the user event","the serial of the user event","reposition request token","","","","","","","","constraint adjustments","destroy the xdg_positioner object","","","invert the anchor and gravity on the x axis","invert the anchor and gravity on the y axis","","invalid input provided","","","","","don’t move the child surface when constrained","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The wire opcode for this request","The minimal object version supporting this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","horizontally resize the surface","vertically resize the surface","","","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","move along the x axis until unconstrained","move along the y axis until unconstrained","","","","","","","child surface positioner","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","destroy the xdg_positioner object","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","anchor","bit mask of constraint adjustments","gravity direction","height of positioned rectangle","height of anchor rectangle","future window geometry height of parent","future window geometry width of parent","serial of parent configure event","width of positioned rectangle","width of anchor rectangle","x position of anchor rectangle","surface position x offset","y position of anchor rectangle","surface position y offset","ack a configure event","Surface was already constructed","suggest a surface change","Surface was destroyed before its role object","destroy the xdg_surface","The wire opcode for this event","The minimal object version supporting this event","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","Invalid serial number when acking a configure event","Width or height was zero or negative","Surface was not fully constructed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the new window geometry","Attaching a buffer to an unconfigured surface","desktop user interface surface base interface","ack a configure event","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","set the new window geometry","","","","","","","","","","","","","","","","","","serial of the configure event","","","","the serial from the configure event","","","","the surface is now activated","","","","surface wants to be closed","suggest a surface change","recommended window geometry bounds","destroy the xdg_toplevel","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the surface is fullscreen","set_fullscreen and unset_fullscreen are available","invalid parent toplevel","provided value is not a valid variant of the resize_edge …","client provided an invalid min or max size","","set_maximized and unset_maximized are available","the surface is maximized","set_minimized is available","start an interactive move","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","types of state on the surface","surface repaint is suspended","the surface’s bottom edge is tiled","the surface’s left edge is tiled","the surface’s right edge is tiled","the surface’s top edge is tiled","","","","unset the window as fullscreen","unmaximize the window","show_window_menu is available","","compositor capabilities","toplevel surface","start an interactive move","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_toplevel","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","start an interactive resize","","","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unset the window as fullscreen","unmaximize the window","","","array of 32-bit capabilities","","","","","","","which edge or corner is being dragged","","","","","the wl_seat of the user event","the wl_seat of the user event","the wl_seat of the user event","the serial of the user event","the serial of the user event","the serial of the user event","","","","the x position to pop up the window menu at","the y position to pop up the window menu at","create a positioner object","xdg_wm_base was destroyed before children","destroy xdg_wm_base","The wire opcode for this event","The minimal object version supporting this event","","","create a shell surface from a surface","the client specified an invalid popup parent surface","the client provided an invalid positioner","the client provided an invalid surface state","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","given wl_surface has another role","the client didn’t respond to a ping event in time","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","","","","","create a positioner object","","destroy xdg_wm_base","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","create a shell surface from a surface","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","respond to a ping event","","","","","","","","","","","","","","","","","","","","pass this to the pong request","serial of the ping event","","","short-lived, popup surfaces for menus","child surface positioner","desktop user interface surface base interface","toplevel surface","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","configure the popup surface","remove xdg_popup interface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","make the popup take an explicit grab","tried to grab after being mapped","popup interaction is done","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","recalculate the popup’s location","signal the completion of a repositioned request","","short-lived, popup surfaces for menus","","","","","","","","","","","","","","","","","","","","","","","configure the popup surface","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","popup interaction is done","signal the completion of a repositioned request","","","","","","","","","","","","","","","","","","","window geometry height","reposition request token","window geometry width","x position relative to parent surface window geometry","y position relative to parent surface window geometry","","the wl_seat of the user event","the serial of the user event","reposition request token","","","","","","","","constraint adjustments","destroy the xdg_positioner object","","","invert the anchor and gravity on the x axis","invert the anchor and gravity on the y axis","","invalid input provided","","","","","don’t move the child surface when constrained","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The wire opcode for this request","The minimal object version supporting this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","horizontally resize the surface","vertically resize the surface","","","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","move along the x axis until unconstrained","move along the y axis until unconstrained","","","","","","","child surface positioner","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","anchor","bit mask of constraint adjustments","gravity direction","height of positioned rectangle","height of anchor rectangle","future window geometry height of parent","future window geometry width of parent","serial of parent configure event","width of positioned rectangle","width of anchor rectangle","x position of anchor rectangle","surface position x offset","y position of anchor rectangle","surface position y offset","ack a configure event","Surface was already constructed","suggest a surface change","Surface was destroyed before its role object","destroy the xdg_surface","The wire opcode for this event","The minimal object version supporting this event","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","Invalid serial number when acking a configure event","Width or height was zero or negative","Surface was not fully constructed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the new window geometry","Attaching a buffer to an unconfigured surface","desktop user interface surface base interface","","","","","","","","","","","","","","","","","","","","","","","suggest a surface change","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","serial of the configure event","","","","","","the serial from the configure event","","","","the surface is now activated","","","","surface wants to be closed","suggest a surface change","recommended window geometry bounds","destroy the xdg_toplevel","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the surface is fullscreen","set_fullscreen and unset_fullscreen are available","invalid parent toplevel","provided value is not a valid variant of the resize_edge …","client provided an invalid min or max size","","set_maximized and unset_maximized are available","the surface is maximized","set_minimized is available","start an interactive move","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","types of state on the surface","surface repaint is suspended","the surface’s bottom edge is tiled","the surface’s left edge is tiled","the surface’s right edge is tiled","the surface’s top edge is tiled","","","","unset the window as fullscreen","unmaximize the window","show_window_menu is available","","compositor capabilities","toplevel surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","surface wants to be closed","","","","","suggest a surface change","recommended window geometry bounds","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","compositor capabilities","","array of 32-bit capabilities","","","","","","","which edge or corner is being dragged","","","","","the wl_seat of the user event","the wl_seat of the user event","the wl_seat of the user event","the serial of the user event","the serial of the user event","the serial of the user event","","","","the x position to pop up the window menu at","the y position to pop up the window menu at","create a positioner object","xdg_wm_base was destroyed before children","destroy xdg_wm_base","The wire opcode for this event","The minimal object version supporting this event","","","create a shell surface from a surface","the client specified an invalid popup parent surface","the client provided an invalid positioner","the client provided an invalid surface state","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","given wl_surface has another role","the client didn’t respond to a ping event in time","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","check if the client is alive","","","","","","","","","","","","","","","","","","","pass this to the pong request","","","serial of the ping event",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,9,5,24,24,25,24,0,0,0,0,0,0,25,0,9,5,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,5,0,1,5,5,9,5,24,25,1,9,5,24,25,1,1,5,5,5,5,5,5,5,5,5,9,5,24,25,1,1,9,5,24,25,1,9,5,1,9,5,1,9,5,5,5,5,1,1,1,1,5,5,5,5,9,5,1,1,5,9,5,5,5,5,5,24,25,1,9,5,24,25,1,5,5,5,5,5,5,5,1,5,5,5,9,5,1,1,1,5,5,1,5,5,5,5,9,5,24,25,1,9,5,24,25,1,9,5,24,25,1,9,5,24,25,1,5,5,5,5,5,5,5,5,5,5,1,24,25,1,9,5,5,1,1,5,5,5,5,5,5,9,5,1,5,5,9,9,5,5,24,25,1,9,5,24,25,1,9,5,24,25,1,5,5,1,1,163,164,165,166,165,166,165,166,164,164,164,164,164,165,166,47,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,0,0,0,45,48,0,48,48,48,0,45,45,45,47,48,46,45,47,48,46,46,45,45,45,45,45,45,45,45,45,45,47,48,46,46,45,47,48,46,45,46,45,46,45,45,45,45,46,46,45,45,45,45,45,46,46,45,45,45,45,45,45,47,48,46,45,47,48,46,45,45,45,45,45,45,45,46,45,45,45,45,46,46,46,45,45,46,45,45,45,45,45,47,48,46,45,47,48,46,45,47,48,46,45,47,48,46,45,45,45,45,45,45,45,45,45,45,46,47,48,46,45,45,46,46,45,45,45,45,45,45,45,46,45,45,45,45,47,48,46,45,47,48,46,45,47,48,46,45,45,46,46,167,168,169,170,171,169,50,50,0,0,0,0,0,51,50,50,51,0,0,0,0,0,0,0,0,0,0,50,51,49,50,51,49,49,50,51,49,49,50,51,49,49,49,49,49,49,49,49,50,51,49,50,51,49,49,49,49,49,49,49,49,50,51,49,50,51,49,50,51,49,50,51,49,49,50,51,49,49,49,49,50,51,49,50,51,49,50,51,49,49,49,172,173,173,173,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,56,53,59,59,60,59,0,0,0,0,0,0,60,0,56,53,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,53,0,53,53,56,53,59,60,54,56,53,59,60,54,53,53,53,53,53,53,53,53,53,56,53,59,60,54,54,56,53,59,60,54,56,53,54,56,53,54,56,53,53,53,53,54,54,53,53,53,53,56,53,54,54,53,54,56,53,53,53,53,53,59,60,54,56,53,59,60,54,53,53,53,53,53,53,53,54,53,53,53,54,56,53,54,54,53,53,54,53,53,53,53,56,53,59,60,54,56,53,59,60,54,56,53,59,60,54,56,53,59,60,54,53,53,53,53,53,53,53,53,53,53,54,59,60,54,56,53,53,54,53,53,53,53,53,53,56,53,54,53,53,56,56,53,53,59,60,54,56,53,59,60,54,56,53,59,60,54,53,53,54,54,175,176,177,178,176,178,176,178,176,177,177,177,177,177,178,176,67,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,68,0,0,0,65,68,0,68,68,68,0,65,65,65,67,68,66,65,67,68,66,65,65,65,65,65,65,65,65,65,65,67,68,66,66,65,67,68,66,65,66,65,66,65,65,65,65,66,65,65,66,65,65,65,66,66,65,65,65,65,65,65,67,68,66,66,65,67,68,66,65,65,65,65,65,65,65,66,65,65,65,66,65,66,66,65,65,66,65,65,65,65,65,67,68,66,65,67,68,66,65,67,68,66,65,67,68,66,65,65,65,65,65,65,65,65,65,66,65,66,67,68,66,65,65,66,65,65,65,65,65,65,65,66,65,65,66,66,66,66,65,65,67,68,66,65,67,68,66,65,67,68,66,65,65,66,66,179,180,181,182,183,181,72,72,0,0,0,0,0,73,72,72,73,0,0,0,0,0,0,0,0,0,0,72,73,71,72,73,71,72,73,71,71,72,73,71,71,71,71,71,71,72,73,71,71,72,73,71,71,71,71,71,71,72,73,71,72,73,71,72,73,71,72,73,71,71,71,72,73,71,71,71,72,73,71,72,73,71,72,73,71,71,71,184,185,185,185,186,187,188,187,0,0,0,0,0,0,0,0,0,0,0,0,78,77,0,0,0,0,77,75,75,0,0,0,0,0,0,75,77,78,74,75,77,78,74,74,75,77,78,74,74,75,77,78,74,75,74,75,74,75,74,74,75,74,74,74,75,77,78,74,75,77,78,74,74,75,74,74,74,74,75,77,78,74,75,77,78,74,75,77,78,74,75,77,78,74,74,77,78,74,75,74,74,75,74,75,75,77,78,74,75,77,78,74,75,77,78,74,74,74,189,190,81,0,0,0,0,0,0,0,79,79,0,81,0,81,79,0,79,79,79,79,80,81,76,79,80,81,76,76,79,79,79,79,79,79,79,79,79,79,80,81,76,76,79,80,81,76,79,76,79,76,79,79,79,79,76,79,79,79,79,79,76,76,79,79,79,79,79,79,80,81,76,79,80,81,76,79,79,79,79,79,79,79,76,79,79,79,79,76,76,76,79,79,76,79,79,79,79,79,80,81,76,79,80,81,76,79,80,81,76,79,80,81,76,79,79,79,79,79,79,79,79,79,79,76,80,81,76,79,79,76,76,79,79,79,79,79,79,79,76,79,79,79,79,80,81,76,79,80,81,76,79,80,81,76,79,79,76,76,191,192,191,191,191,191,191,191,0,0,0,0,0,0,0,0,0,0,85,84,0,0,0,0,84,83,83,0,0,0,0,0,0,83,84,85,82,83,84,85,82,83,84,85,82,82,83,84,85,82,82,83,82,83,82,83,82,83,82,82,83,84,85,82,83,84,85,82,82,82,83,82,82,82,83,84,85,82,83,84,85,82,83,84,85,82,83,84,85,82,82,84,85,82,83,82,83,82,83,83,84,85,82,83,84,85,82,83,84,85,82,82,82,193,194,194,89,0,0,0,0,0,0,0,86,86,0,89,0,89,86,0,86,86,86,86,88,89,87,86,88,89,87,86,86,86,86,86,86,86,86,86,86,88,89,87,87,86,88,89,87,86,87,86,87,86,86,86,86,87,86,86,87,86,86,86,87,87,86,86,86,86,86,86,88,89,87,86,88,89,87,86,86,86,86,86,86,86,87,86,86,86,87,86,87,87,86,86,87,86,86,86,86,86,88,89,87,86,88,89,87,86,88,89,87,86,88,89,87,86,86,86,86,86,86,86,86,86,86,87,88,89,87,87,86,86,87,86,86,86,86,86,86,87,86,87,86,86,86,86,88,89,87,86,88,89,87,86,88,89,87,86,86,87,87,195,196,195,195,195,195,195,195,0,0,0,0,0,0,0,0,0,0,0,92,92,93,0,0,92,92,0,0,0,0,0,0,0,93,93,0,92,93,94,91,92,93,94,91,91,92,93,94,91,91,92,93,94,91,92,91,92,91,92,91,91,92,91,91,92,93,94,91,92,93,94,91,91,92,91,91,91,91,92,93,94,91,92,93,94,91,92,93,94,91,92,93,94,91,91,93,94,91,92,91,91,91,91,92,91,92,92,93,94,91,92,93,94,91,92,93,94,91,91,91,197,198,197,198,197,197,98,0,0,98,0,0,0,0,0,97,0,97,98,99,96,97,98,99,96,96,97,98,99,96,96,97,98,99,96,97,96,97,96,97,96,96,97,96,96,97,98,99,96,97,98,99,96,96,96,97,96,96,96,96,97,98,99,96,97,98,99,96,97,98,99,96,97,98,99,96,96,98,99,96,97,96,96,97,96,97,97,98,99,96,97,98,99,96,97,98,99,96,96,96,199,0,0,0,0,0,0,0,0,0,101,101,102,0,0,101,101,0,0,0,0,0,0,0,102,102,0,101,102,103,100,101,102,103,100,101,102,103,100,100,101,102,103,100,101,100,101,100,101,100,101,100,100,101,102,103,100,101,102,103,100,100,100,101,100,100,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,103,100,100,102,103,100,101,100,101,100,101,101,102,103,100,101,102,103,100,101,102,103,100,100,100,200,201,200,201,200,200,106,0,0,106,0,0,0,0,0,105,0,105,106,107,104,105,106,107,104,105,106,107,104,104,105,106,107,104,105,104,105,104,105,104,105,104,104,105,106,107,104,105,106,107,104,104,104,105,104,104,104,105,106,107,104,105,106,107,104,105,106,107,104,105,106,107,104,104,106,107,104,105,104,105,104,105,105,106,107,104,105,106,107,104,105,106,107,104,104,104,202,202,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,110,0,0,0,0,0,0,0,0,110,109,111,0,0,0,0,0,0,110,111,0,0,109,110,111,108,109,110,111,108,108,109,110,111,108,108,109,110,111,108,109,108,109,108,109,108,108,109,108,108,109,110,111,108,109,110,111,108,108,108,109,108,108,108,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,108,110,111,108,109,108,108,108,109,108,109,109,110,111,108,109,110,111,108,109,110,111,108,108,108,203,204,203,203,203,205,206,206,205,0,116,117,116,117,116,117,0,118,0,0,114,114,0,115,116,117,116,117,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,114,116,117,118,118,118,118,118,118,118,118,118,114,114,116,117,116,117,116,117,0,114,114,115,116,117,114,118,119,113,115,116,117,114,118,119,113,113,114,114,114,114,114,114,114,114,114,115,116,117,114,118,119,113,113,115,116,117,114,118,119,113,115,116,117,114,113,115,116,117,114,113,115,116,117,114,114,114,114,113,113,114,114,114,114,115,116,117,114,113,113,114,115,116,117,114,114,114,114,114,118,119,113,115,116,117,114,118,119,113,114,114,114,114,114,114,114,113,114,114,114,115,116,117,114,113,113,113,114,114,113,114,114,114,114,115,116,117,114,118,119,113,115,116,117,114,118,119,113,115,116,117,114,118,119,113,115,116,117,114,118,119,113,114,114,114,114,114,114,114,114,114,114,113,118,119,113,115,116,117,114,114,113,113,114,114,113,113,113,113,113,113,113,113,113,114,114,114,114,115,116,117,114,113,114,114,115,115,116,116,117,117,114,114,118,119,113,115,116,117,114,118,119,113,115,116,117,114,118,119,113,114,114,113,113,207,208,209,210,211,212,212,213,210,211,211,214,211,214,122,121,123,121,122,0,0,0,0,122,122,121,121,121,0,0,0,0,0,0,0,0,0,0,0,122,121,0,120,121,122,123,120,121,122,123,120,120,121,122,123,120,120,121,122,123,120,121,120,121,120,121,120,120,121,120,120,121,122,123,120,121,122,123,120,120,120,120,121,120,120,120,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,120,122,123,120,121,120,120,120,121,120,121,121,122,123,120,121,122,123,120,121,122,123,120,120,120,215,216,217,217,218,216,216,216,127,126,126,126,130,130,130,129,0,0,0,0,0,0,0,0,0,0,127,128,125,125,125,126,128,127,128,129,126,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,127,126,129,129,129,129,129,129,129,129,129,0,127,127,127,127,127,126,126,126,129,129,128,0,130,0,124,125,126,127,128,129,130,124,125,126,127,128,129,130,124,124,125,126,127,128,129,130,124,124,125,126,127,128,129,130,124,125,126,127,128,124,125,126,127,128,124,125,126,127,128,124,124,125,126,127,128,124,124,125,126,127,128,129,130,124,125,126,127,128,129,130,124,124,125,126,127,128,124,124,124,124,125,126,127,128,129,130,124,125,126,127,128,129,130,124,125,126,127,128,129,130,124,125,126,127,128,129,130,124,124,129,130,124,125,126,127,128,124,124,124,124,124,124,124,124,124,124,124,124,125,126,127,128,124,125,125,126,126,127,127,128,128,129,130,124,125,126,127,128,129,130,124,125,126,127,128,129,130,124,124,124,124,124,219,220,221,220,220,221,222,223,224,225,226,227,228,229,223,228,229,223,230,224,225,228,228,135,134,135,0,0,0,0,135,134,134,134,134,136,135,0,0,0,0,0,0,0,0,0,134,134,0,134,135,136,133,134,135,136,133,133,134,135,136,133,133,134,135,136,133,134,133,134,133,134,133,133,133,134,133,133,134,135,136,133,134,135,136,133,133,133,134,133,133,133,133,134,135,136,133,134,135,136,133,134,135,136,133,134,135,136,133,133,135,136,133,134,133,133,133,134,133,134,134,135,136,133,134,135,136,133,134,135,136,133,133,133,231,232,233,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,140,139,0,0,0,0,0,0,0,0,139,138,140,0,0,0,0,0,0,139,140,0,0,138,139,140,137,138,139,140,137,138,139,140,137,137,138,139,140,137,138,137,138,137,138,137,137,138,137,137,138,139,140,137,138,139,140,137,137,137,138,137,137,137,138,139,140,137,138,139,140,137,138,139,140,137,138,139,140,137,137,139,140,137,138,137,137,137,138,137,138,138,139,140,137,138,139,140,137,138,139,140,137,137,137,234,235,234,234,234,236,237,237,236,0,144,145,144,145,144,145,0,146,0,0,141,141,0,143,144,145,144,145,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,141,144,145,146,146,146,146,146,146,146,146,146,141,141,144,145,144,145,144,145,0,141,141,143,144,145,141,146,147,142,143,144,145,141,146,147,142,141,141,141,141,141,141,141,141,141,143,144,145,141,146,147,142,142,143,144,145,141,146,147,142,143,144,145,141,142,143,144,145,141,142,143,144,145,141,141,141,141,142,141,141,141,141,143,144,145,141,142,142,141,143,144,145,141,141,141,141,141,146,147,142,143,144,145,141,146,147,142,141,141,141,141,141,141,141,142,141,141,141,142,143,144,145,141,142,142,141,141,142,141,141,141,141,143,144,145,141,146,147,142,143,144,145,141,146,147,142,143,144,145,141,146,147,142,143,144,145,141,146,147,142,141,141,141,141,141,141,141,141,141,141,142,146,147,142,143,144,145,141,141,142,141,141,141,141,141,141,143,144,145,141,142,141,141,143,143,144,144,145,145,141,141,146,147,142,143,144,145,141,146,147,142,143,144,145,141,146,147,142,141,141,142,142,238,239,240,241,242,243,243,244,241,242,242,245,242,245,150,149,151,149,150,0,0,0,0,150,150,149,149,149,0,0,0,0,0,0,0,0,0,0,0,150,149,0,149,150,151,148,149,150,151,148,149,150,151,148,148,149,150,151,148,149,148,149,148,149,148,148,149,148,148,149,150,151,148,149,150,151,148,148,148,149,148,148,148,149,150,151,148,149,150,151,148,149,150,151,148,149,150,151,148,148,150,151,148,149,148,149,148,149,149,150,151,148,149,150,151,148,149,150,151,148,148,148,246,247,248,249,249,249,250,247,247,247,155,154,154,154,158,158,158,157,0,0,0,0,0,0,0,0,0,0,155,156,153,153,153,154,156,155,156,157,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,0,155,154,157,157,157,157,157,157,157,157,157,0,155,155,155,155,155,154,154,154,157,157,156,0,158,0,153,154,155,156,157,158,152,153,154,155,156,157,158,152,153,154,155,156,157,158,152,152,153,154,155,156,157,158,152,153,154,155,156,152,153,154,155,156,152,152,153,154,155,156,152,152,152,153,154,155,156,152,152,153,154,155,156,157,158,152,153,154,155,156,157,158,152,152,152,153,154,155,156,152,152,152,153,154,155,156,157,158,152,153,154,155,156,157,158,152,153,154,155,156,157,158,152,153,154,155,156,157,158,152,152,157,158,152,153,154,155,156,152,153,154,155,156,152,153,153,154,154,155,155,156,156,157,158,152,153,154,155,156,157,158,152,153,154,155,156,157,158,152,152,152,152,251,252,253,252,252,253,254,255,256,257,258,259,260,261,255,260,261,255,262,256,257,260,260,161,160,161,0,0,0,0,161,160,160,160,160,162,161,0,0,0,0,0,0,0,0,0,160,160,0,160,161,162,159,160,161,162,159,160,161,162,159,159,160,161,162,159,160,159,160,159,160,159,160,159,159,160,161,162,159,160,161,162,159,159,159,160,159,159,159,160,161,162,159,160,161,162,159,160,161,162,159,160,161,162,159,159,161,162,159,160,159,159,160,159,160,160,161,162,159,160,161,162,159,160,161,162,159,159,159,263,264,265,266,265],"f":"````````````````````````````````````````````````````````````{{bdfffff}h}{{}j}0{cl{}}000000000{bn}{{jj}j}{{jj}h}10{jf}0021{ce{}{}}000{bA`}111111{AbAb}{jj}{bb}{{ce}h{}{}}00{{AbAb}Ad}33{{jj}Af}0{{bAhAhfj}h}{{bAhAhfj{Aj{e}}c}Al{AnB`}{{Bb{Alc}}}}{b{{Bd{c}}}{AnB`}}{bh}>>{{}j}0{{AbAb}Af}6{{bb}Af}{{b{Bf{b}}}Af}{{jc}h{{Bj{}{{Bh{j}}}}}}{{AbBl}Bn}{{jBl}Bn}0000{{C`Bl}Bn}{{CbBl}Bn}{{bBl}Bn}{cc{}}0000{f{{Bd{j}}}}0{fj}0000{{CdA`}{{Ch{bCf}}}}{cj{{Bj{}{{Bh{j}}}}}}{Cj{{Bd{j}}}}0{{Abc}hCl}{{jc}hCl}{{bc}hCl}{bA`}{nb}{{jj}h}0{{}Cn}{{jj}j}0{{jj}Af}0{ce{}{}}0000{{{D`{c}}}{{D`{l}}}{}}0000{{{Db{c}}}{{Db{l}}}{}}0000{{{Dd{c}}}{{Dd{l}}}{}}0000{jc{}}{jAf}000{j{{Df{j}}}}0{j{{Dh{j}}}}0{jj}{b{{Bd{{Db{Dj}}}}}}{C`Dl}{CbDl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{bc}}Ed}}}{}}{{AbAb}{{Bd{Ad}}}}{{jj}h}0{{bc{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{bc}{{Ch{hCf}}}{}}{{jjAf}h}0{{jj}j}400{ce{}{}}0055{f{{Ch{Abh}}}}{c{{Ch{e}}}{}{}}0{f{{Ch{jh}}}}11111111{cEh{}}000055{bf}{{bCdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}````````````````````````````````````````````{{}Ej}0{cl{}}0000000{Eln}{{EjEj}Ej}{{EjEj}h}10{Ejf}0021<<<<{ElA`}===={EjEj}{ElEl}{{ce}h{}{}}022{{EjEj}Af}0{El{{Bd{c}}}{AnB`}}{Elh}99<<2{{El{Bf{El}}}Af}{{ElEl}Af}{{Ejc}h{{Bj{}{{Bh{Ej}}}}}}{{EjBl}Bn}0000{{EnBl}Bn}{{F`Bl}Bn}{{ElBl}Bn}{cc{}}000{f{{Bd{Ej}}}}0{fEj}0000{{CdA`}{{Ch{ElCf}}}}{cEj{{Bj{}{{Bh{Ej}}}}}}{Cj{{Bd{Ej}}}}0{{Ejc}hCl}{{Elc}hCl}{ElA`}{nEl}{{EjEj}h}0{{}Cn}{{EjEj}Ej}0{{EjEj}Af}0{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{Ejc{}}{EjAf}000{Ej{{Df{Ej}}}}0{Ej{{Dh{Ej}}}}0{EjEj}{El{{Bd{{Db{Dj}}}}}}{EnDl}{F`Dl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{Elc}}Ed}}}{}}{{EjEj}h}0{{Elc{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{Elc}{{Ch{hCf}}}{}}{{EjEjAf}h}0{{EjEj}Ej}400{ce{}{}}055{c{{Ch{e}}}{}{}}{f{{Ch{Ejh}}}}1111111{cEh{}}00044{Elf}{{ElCdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}```````````````````````````{cl{}}00000{Fbn}777{FbA`}888{FbFb}{{ce}h{}{}}{{Fb{Aj{e}}c}b{AnB`}{{Bb{bc}}}}{Fb{{Bd{c}}}{AnB`}}{Fbh}{{Fb{Bf{Fb}}}Af}{{FbFb}Af}{{FdBl}Bn}{{FfBl}Bn}{{FbBl}Bn}{cc{}}00{{CdA`}{{Ch{FbCf}}}}{{Fb{Aj{e}}c}El{AnB`}{{Bb{Elc}}}}{{FbFh{Aj{e}}c}El{AnB`}{{Bb{Elc}}}}{{Fbc}hCl}?{nFb}{{}Cn}{ce{}{}}00{{{D`{c}}}{{D`{l}}}{}}00{{{Db{c}}}{{Db{l}}}{}}00{{{Dd{c}}}{{Dd{l}}}{}}00{Fb{{Bd{{Db{Dj}}}}}}{FdDl}{FfDl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{Fbc}}Ed}}}{}}{{Fbc{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{Fbc}{{Ch{hCf}}}{}}9{c{{Ch{e}}}{}{}}00000{cEh{}}00{Fbf}{{FbCdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}```````````````````````````````````````````````````````{{}Fj}0{cl{}}000000000{{FjFj}Fj}{{FjFj}h}10{Fjf}0021{ce{}{}}000{FlFn}111111{G`G`}{FjFj}{FlFl}{{ce}h{}{}}00{{G`G`}Ad}33{{FjFj}Af}0{{FlGb}h}{Fl{{Bd{c}}}{}}<<>>{{G`G`}Af}3{{FlFl}Af}{{Fl{Gd{Fl}}}Af}{{Fjc}h{{Bj{}{{Bh{Fj}}}}}}{Flh}{{G`Bl}Bn}{{FjBl}Bn}0000{{GfBl}Bn}{{GhBl}Bn}{{FlBl}Bn}{cc{}}0000{f{{Bd{Fj}}}}0{fFj}0000{{GjFn}{{Ch{FlGl}}}}{cFj{{Bj{}{{Bh{Fj}}}}}}{Cj{{Bd{Fj}}}}0{FlGn}{{G`c}hCl}{{Fjc}hCl}{{Flc}hCl}{FlFn}{{FjFj}h}0{{}Cn}{{FjFj}Fj}0{{FjFj}Af}0{ce{}{}}0000{{{D`{c}}}{{D`{l}}}{}}0000{{{Db{c}}}{{Db{l}}}{}}0000{{{Dd{c}}}{{Dd{l}}}{}}0000{Fjc{}}{FjAf}000{Fj{{Df{Fj}}}}0{Fj{{Dh{Fj}}}}0{FjFj}{Fl{{Bd{{Db{l}}}}}}{GfDl}{GhDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{Flc}}H`}}}{}}{{G`G`}{{Bd{Ad}}}}{{FjFj}h}0{{Flc}{{Ch{hGl}}}{}}{{FjFjAf}h}0{{FjFj}Fj}300{ce{}{}}0044{f{{Ch{G`h}}}}{c{{Ch{e}}}{}{}}{f{{Ch{Fjh}}}}111111111{cEh{}}000055{Flf}{{FlGjc}{{Ch{{E`{Fnd}}Gl}}}{}}`````````````````````````````````````````````{{}Hb}0{cl{}}0000000{{HbHb}Hb}{{HbHb}h}10{Hbf}0021;;;;{HdFn}<<<<{HbHb}{HdHd}{{ce}h{}{}}022{{HbHb}Af}0{Hd{{Bd{c}}}{}}88{Hdh};;2{{HdHd}Af}{{Hd{Gd{Hd}}}Af}{{Hbc}h{{Bj{}{{Bh{Hb}}}}}}{{HbBl}Bn}0000{{HfBl}Bn}{{HhBl}Bn}{{HdBl}Bn}{{Hddf}h}{cc{}}000{f{{Bd{Hb}}}}0{fHb}0000{{GjFn}{{Ch{HdGl}}}}{cHb{{Bj{}{{Bh{Hb}}}}}}{Cj{{Bd{Hb}}}}0{HdGn}{{Hbc}hCl}{{Hdc}hCl}{HdFn}{{HbHb}h}0{{}Cn}{{HbHb}Hb}0{{HbHb}Af}0{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{Hbc{}}{HbAf}000{Hb{{Df{Hb}}}}0{Hb{{Dh{Hb}}}}0{{Hd{Hl{Hj}}}h}{HbHb}{Hd{{Bd{{Db{l}}}}}}{HfDl}{HhDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{Hdc}}H`}}}{}}{{HbHb}h}0{{Hdc}{{Ch{hGl}}}{}}{{HbHbAf}h}0{{HbHb}Hb}300{ce{}{}}044{Hdh}{{HdHb}h}<<{f{{Ch{Hbh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}00066{Hdf}{{HdGjc}{{Ch{{E`{Fnd}}Gl}}}{}}```````````````````````````{cl{}}00000888{HnFn}999{HnHn}{{ce}h{}{}}{Hn{{Bd{c}}}{}}{{Hn{Gd{Hn}}}Af}{{HnHn}Af}{{I`Bl}Bn}{{IbBl}Bn}{{HnBl}Bn}{{Hnf}h}{cc{}}00{{GjFn}{{Ch{HnGl}}}}{HnGn}{{Hnc}hCl}={{}Cn}{ce{}{}}00{{{D`{c}}}{{D`{l}}}{}}00{{{Db{c}}}{{Db{l}}}{}}00{{{Dd{c}}}{{Dd{l}}}{}}00{{Hnfff}h}{Hn{{Bd{{Db{l}}}}}}{I`Dl}{IbDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{Hnc}}H`}}}{}}{{Hnc}{{Ch{hGl}}}{}}9{c{{Ch{e}}}{}{}}00000{cEh{}}00{Hnf}{{HnGjc}{{Ch{{E`{Fnd}}Gl}}}{}}```````````````````````````````````{cl{}}0000000{Idn}????{IdA`}{ce{}{}}000{IfIf}{IdId}{{ce}h{}{}}0{{IfIf}Ad}{Id{{Bd{c}}}{AnB`}}{Idh}{{IfIf}Af}{{Id{Bf{Id}}}Af}{{IdId}Af}{{IdFh{Aj{e}}c}Ih{AnB`}{{Bb{Ihc}}}}{{IfBl}Bn}{{IjBl}Bn}{{IlBl}Bn}{{IdBl}Bn}{cc{}}000{{CdA`}{{Ch{IdCf}}}}{{Ifc}hCl}{{Idc}hCl}{IdA`}{nId}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{Id{{Bd{{Db{Dj}}}}}}{IjDl}{IlDl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{Idc}}Ed}}}{}}{{IfIf}{{Bd{Ad}}}}{{Idc{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{Idc}{{Ch{hCf}}}{}}::{f{{Ch{Ifh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}000{Idf}{{IdCdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}```````````````````{{}In}0{cl{}}0000000{Ihn}{{InIn}In}{{InIn}h}10{Inf}0021{ce{}{}}00{IhA`}11111{InIn}{IhIh}{{ce}h{}{}}022{{InIn}Af}0{Ih{{Bd{c}}}{AnB`}}99<<1{{Ih{Bf{Ih}}}Af}{{IhIh}Af}{{Inc}h{{Bj{}{{Bh{In}}}}}}{{InBl}Bn}0000{{J`Bl}Bn}{{JbBl}Bn}{{IhBl}Bn}{cc{}}000{f{{Bd{In}}}}0{fIn}0000{{CdA`}{{Ch{IhCf}}}}{cIn{{Bj{}{{Bh{In}}}}}}{Cj{{Bd{In}}}}0{{Inc}hCl}{{Ihc}hCl}{IhA`}{nIh}{{InIn}h}0{{}Cn}{{InIn}In}0{{InIn}Af}0{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{Inc{}}{InAf}000{In{{Df{In}}}}0{In{{Dh{In}}}}0{InIn}{Ih{{Bd{{Db{Dj}}}}}}{J`Dl}{JbDl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{Ihc}}Ed}}}{}}{{InIn}h}0{{Ihc{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{Ihc}{{Ch{hCf}}}{}}{{InInAf}h}0{{InIn}In}400{ce{}{}}055{f{{Ch{Inh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}00044{Ihf}{{IhCdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}`````````````````````````````````{cl{}}0000000666{JdFn}77777{{Jdf}h}{JfJf}{JdJd}{{ce}h{}{}}0{{JfJf}Ad}{Jd{{Bd{c}}}{}}{{JfJf}Af}{{Jd{Gd{Jd}}}Af}{{JdJd}Af}{{JfBl}Bn}{{JhBl}Bn}{{JjBl}Bn}{{JdBl}Bn}{cc{}}000{{GjFn}{{Ch{JdGl}}}}{JdGn}{{Jfc}hCl}{{Jdc}hCl}{JdFn}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{Jd{{Bd{{Db{l}}}}}}{JhDl}{JjDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{Jdc}}H`}}}{}}{{JfJf}{{Bd{Ad}}}}{{Jdc}{{Ch{hGl}}}{}}99{f{{Ch{Jfh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}000{Jdf}{{JdGjc}{{Ch{{E`{Fnd}}Gl}}}{}}````````````````````{{}Jl}0{cl{}}0000000{{JlJl}Jl}{{JlJl}h}10{Jlf}0021{ce{}{}}00{JnFn}11111{JlJl}{JnJn}{{ce}h{}{}}022{{JlJl}Af}0{Jn{{Bd{c}}}{}}99{Jnh}<<2{{JnJn}Af}{{Jn{Gd{Jn}}}Af}{{Jlc}h{{Bj{}{{Bh{Jl}}}}}}{{JlBl}Bn}0000{{K`Bl}Bn}{{KbBl}Bn}{{JnBl}Bn}{cc{}}000{f{{Bd{Jl}}}}0{fJl}0000{{GjFn}{{Ch{JnGl}}}}{cJl{{Bj{}{{Bh{Jl}}}}}}{Cj{{Bd{Jl}}}}0{JnGn}{{Jlc}hCl}{{Jnc}hCl}{JnFn}{{JlJl}h}0{{}Cn}{{JlJl}Jl}0{{JlJl}Af}0{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{Jlc{}}{JlAf}000{Jl{{Df{Jl}}}}0{Jl{{Dh{Jl}}}}0{JlJl}{Jn{{Bd{{Db{l}}}}}}{K`Dl}{KbDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{Jnc}}H`}}}{}}{{JnffffffJl}h}{{JlJl}h}0{{Jnc}{{Ch{hGl}}}{}}{{JlJlAf}h}0{{JlJl}Jl}300{{JnKd}h}{ce{}{}}055{c{{Ch{e}}}{}{}}{f{{Ch{Jlh}}}}1111111{cEh{}}00055{Jnf}{{JnGjc}{{Ch{{E`{Fnd}}Gl}}}{}}````````````````````````````````````{cl{}}0000000{Kfn}777{KfA`}88888{KhKh}{KfKf}{{ce}h{}{}}0{{KhKh}Ad}{Kf{{Bd{c}}}{AnB`}}{Kfh}{{KhKh}Af}{{KfKf}Af}{{Kf{Bf{Kf}}}Af}{{KhBl}Bn}{{KjBl}Bn}{{KlBl}Bn}{{KfBl}Bn}{cc{}}000{{CdA`}{{Ch{KfCf}}}}{{Khc}hCl}{{Kfc}hCl}{KfA`}{nKf}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{Kf{{Bd{{Db{Dj}}}}}}{KjDl}{KlDl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{Kfc}}Ed}}}{}}{{KhKh}{{Bd{Ad}}}}{{Kfc{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{Kfc}{{Ch{hCf}}}{}}{{KfAhAh}h}{{KfKnKnKnKn}h}<<{f{{Ch{Khh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}000{Kff}{{KfCdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}`````````````````{cl{}}0000000{L`n}{ce{}{}}000{L`A`}1111{LbLb}{L`L`}{{ce}h{}{}}0{{LbLb}Ad}{L`{{Bd{c}}}{AnB`}}{L`h}{{LbLb}Af}{{L`L`}Af}{{L`{Bf{L`}}}Af}{{LbBl}Bn}{{LdBl}Bn}{{LfBl}Bn}{{L`Bl}Bn}{cc{}}000{{CdA`}{{Ch{L`Cf}}}}{{L`Fh{Aj{e}}c}Kf{AnB`}{{Bb{Kfc}}}}{{Lbc}hCl}{{L`c}hCl}{L`A`}{nL`}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{L`{{Bd{{Db{Dj}}}}}}{LdDl}{LfDl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{L`c}}Ed}}}{}}{{LbLb}{{Bd{Ad}}}}{{L`c{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{L`c}{{Ch{hCf}}}{}}::{f{{Ch{Lbh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}000{L`f}{{L`Cdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}```````````````````````````{cl{}}0000000{ce{}{}}00{LhFn}11111{LjLj}{LhLh}{{ce}h{}{}}0{{LjLj}Ad}{Lh{{Bd{c}}}{}}{{LjLj}Af}{{LhLh}Af}{{Lh{Gd{Lh}}}Af}{{LjBl}Bn}{{LlBl}Bn}{{LnBl}Bn}{{LhBl}Bn}{cc{}}000{{GjFn}{{Ch{LhGl}}}}{LhGn}{{Ljc}hCl}{{Lhc}hCl}{LhFn}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{Lh{{Bd{{Db{l}}}}}}{LlDl}{LnDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{Lhc}}H`}}}{}}{{LjLj}{{Bd{Ad}}}}{{Lhc}{{Ch{hGl}}}{}}99{c{{Ch{e}}}{}{}}{f{{Ch{Ljh}}}}1111111{cEh{}}000{Lhf}{{LhGjc}{{Ch{{E`{Fnd}}Gl}}}{}}`````````````````{cl{}}0000000????{M`Fn}{ce{}{}}000{MbMb}{M`M`}{{ce}h{}{}}0{{MbMb}Ad}{M`{{Bd{c}}}{}}{{MbMb}Af}{{M`{Gd{M`}}}Af}{{M`M`}Af}{{MbBl}Bn}{{MdBl}Bn}{{MfBl}Bn}{{M`Bl}Bn}{cc{}}000{{GjFn}{{Ch{M`Gl}}}}{M`Gn}{{Mbc}hCl}{{M`c}hCl}{M`Fn}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{M`{{Bd{{Db{l}}}}}}{MdDl}{MfDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{M`c}}H`}}}{}}{{MbMb}{{Bd{Ad}}}}{{M`c}{{Ch{hGl}}}{}}99{f{{Ch{Mbh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}000{M`f}{{M`Gjc}{{Ch{{E`{Fnd}}Gl}}}{}}`````````````````````````````````````````````````````{cl{}}0000000{Mhn}{ce{}{}}00{MhA`}11111{MjMj}{MhMh}{{ce}h{}{}}0{{MjMj}Ad}{Mh{{Bd{c}}}{AnB`}}{Mhh}{{MjMj}Af}{{Mh{Bf{Mh}}}Af}{{MhMh}Af}{{MjBl}Bn}{{MlBl}Bn}{{MnBl}Bn}{{MhBl}Bn}{cc{}}000{{CdA`}{{Ch{MhCf}}}}{{MhN`f}h}{{Mjc}hCl}{{Mhc}hCl}{MhA`}{nMh}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{Mh{{Bd{{Db{Dj}}}}}}{MlDl}{MnDl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{Mhc}}Ed}}}{}}{{MjMj}{{Bd{Ad}}}}{{MhNbf}h}{{Mhc{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{Mhc}{{Ch{hCf}}}{}};;{c{{Ch{e}}}{}{}}{f{{Ch{Mjh}}}}1111111{cEh{}}000{Mhf}{{MhCdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}````````````````````````````````````````````````````````````````````````{{}Nd}0{cl{}}0000000000000{Nbn}{{NdNd}Nd}{{NdNd}h}10{Ndf}0021{ce{}{}}000000{NbA`}1111111{NfNf}{NhNh}{NjNj}{NdNd}{NbNb}{{ce}h{}{}}0000{{NfNf}Ad}{{NhNh}Ad}{{NjNj}Ad}55{{NdNd}Af}0{Nb{{Bd{c}}}{AnB`}}{Nbh}{{NdNd}Nd}0{{}Nd}0{{NfNf}Af}{{NhNh}Af}{{NjNj}Af}7{{Nb{Bf{Nb}}}Af}{{NbNb}Af}{{Ndc}h{{Bj{}{{Bh{Nd}}}}}}{{NfBl}Bn}{{NhBl}Bn}{{NjBl}Bn}{{NdBl}Bn}0000{{NlBl}Bn}{{NnBl}Bn}{{NbBl}Bn}{cc{}}000000{f{{Bd{Nd}}}}0{fNd}0000{{CdA`}{{Ch{NbCf}}}}{cNd{{Bj{}{{Bh{Nd}}}}}}{Cj{{Bd{Nd}}}}0{{Nfc}hCl}{{Nhc}hCl}{{Njc}hCl}{{Ndc}hCl}{{Nbc}hCl}{NbA`}{nNb}{{NdNd}h}0{{}Cn}{{NdNd}Nd}0{{NdNd}Af}0{ce{}{}}000000{{{D`{c}}}{{D`{l}}}{}}000000{{{Db{c}}}{{Db{l}}}{}}000000{{{Dd{c}}}{{Dd{l}}}{}}000000{Ndc{}}{NdAf}000{Nd{{Df{Nd}}}}0{Nd{{Dh{Nd}}}}0{NdNd}{Nb{{Bd{{Db{Dj}}}}}}{NlDl}{NnDl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{Nbc}}Ed}}}{}}{{NfNf}{{Bd{Ad}}}}{{NhNh}{{Bd{Ad}}}}{{NjNj}{{Bd{Ad}}}}{{NdNd}h}0{{Nbc{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{Nbc}{{Ch{hCf}}}{}}{{NdNdAf}h}0{{NbNh}h}{{NbAhAhAhAh}h}{{Nbf}h}{{NbNj}h}{{NbAhAh}h}20{Nbh}1{{NdNd}Nd}:00{ce{}{}}0000;;{c{{Ch{e}}}{}{}}{f{{Ch{Nfh}}}}1{f{{Ch{Nhh}}}}2{f{{Ch{Njh}}}}{f{{Ch{Ndh}}}}44444444444{cEh{}}00000077{Nbf}{{NbCdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}``````````````````````````````````````````{{O`f}h}{cl{}}0000000{O`n};;;;{O`A`}<<<<{ObOb}{O`O`}{{ce}h{}{}}0{{ObOb}Ad}{O`{{Bd{c}}}{AnB`}}{O`h}{{ObOb}Af}{{O`O`}Af}{{O`{Bf{O`}}}Af}{{ObBl}Bn}{{OdBl}Bn}{{OfBl}Bn}{{O`Bl}Bn}{cc{}}000{{CdA`}{{Ch{O`Cf}}}}{{O`{Bd{O`}}Nb{Aj{e}}c}Mh{AnB`}{{Bb{Mhc}}}}{{O`{Aj{e}}c}Oh{AnB`}{{Bb{Ohc}}}}{{Obc}hCl}{{O`c}hCl}{O`A`}{nO`}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{O`{{Bd{{Db{Dj}}}}}}{OdDl}{OfDl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{O`c}}Ed}}}{}}{{ObOb}{{Bd{Ad}}}}{{O`c{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{O`c}{{Ch{hCf}}}{}}{{O`AhAhAhAh}h};;{f{{Ch{Obh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}000{O`f}{{O`Cdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}``````````````````````````````````````````````````````````````````````````````````````````````{{OhN`f}h}{cl{}}0000000000000{Ohn}{ce{}{}}000000{OhA`}1111111{OjOj}{OlOl}{OnOn}{A`A`}{OhOh}{{ce}h{}{}}0000{{OjOj}Ad}{{OlOl}Ad}{{OnOn}Ad}{{A`A`}Ad}{Oh{{Bd{c}}}{AnB`}}{Ohh}{{OjOj}Af}{{OlOl}Af}{{OnOn}Af}{{A`A`}Af}{{OhOh}Af}{{Oh{Bf{Oh}}}Af}{{OjBl}Bn}{{OlBl}Bn}{{OnBl}Bn}{{A`Bl}Bn}{{AbBl}Bn}{{AdBl}Bn}{{OhBl}Bn}{cc{}}000000{{CdA`}{{Ch{OhCf}}}}{{Ojc}hCl}{{Olc}hCl}{{Onc}hCl}{{A`c}hCl}{{Ohc}hCl}{OhA`}{nOh}{{}Cn}{ce{}{}}000000{{{D`{c}}}{{D`{l}}}{}}000000{{{Db{c}}}{{Db{l}}}{}}000000{{{Dd{c}}}{{Dd{l}}}{}}000000{Oh{{Bd{{Db{Dj}}}}}}{AbDl}{AdDl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{Ohc}}Ed}}}{}}{{OjOj}{{Bd{Ad}}}}{{OlOl}{{Bd{Ad}}}}{{OnOn}{{Bd{Ad}}}}{{A`A`}{{Bd{Ad}}}}{{OhN`fOl}h}{{Ohc{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{Ohc}{{Ch{hCf}}}{}}{{OhAf}h}{{Oh{Bd{Ah}}}h}{{OhAhAh}h}{Ohh}10{{Oh{Bd{Oh}}}h}4{{OhN`fAhAh}h}{ce{}{}}0000{f{{Ch{Ojh}}}}{c{{Ch{e}}}{}{}}0{f{{Ch{Olh}}}}1{f{{Ch{Onh}}}}2{f{{Ch{A`h}}}}3333333333{cEh{}}00000099{Ohf}{{OhCdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}`````````````````````````````````````````````````{cl{}}0000000{Ajn}:::{AjA`};;;;;{AlAl}{AjAj}{{ce}h{}{}}0{{AlAl}Ad}{{Aj{Aj{e}}c}Nb{AnB`}{{Bb{Nbc}}}}{Aj{{Bd{c}}}{AnB`}}{Ajh}{{AlAl}Af}{{AjAj}Af}{{Aj{Bf{Aj}}}Af}{{AlBl}Bn}{{AnBl}Bn}{{AA`Bl}Bn}{{AjBl}Bn}{cc{}}000{{CdA`}{{Ch{AjCf}}}}{{AjFh{Aj{e}}c}O`{AnB`}{{Bb{O`c}}}}{{Alc}hCl}{{Ajc}hCl}{AjA`}{nAj}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{Aj{{Bd{{Db{Dj}}}}}}{AnDl}{AA`Dl}{{Cd{E`{A`Dn}}}{{Ch{{Eb{Ajc}}Ed}}}{}}{{AlAl}{{Bd{Ad}}}}{{Ajf}h}{{Ajc{Db{Dj}}}{{Ch{eCf}}}{}Ef}{{Ajc}{{Ch{hCf}}}{}};;{f{{Ch{Alh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}000{Ajf}{{AjCdc}{{Ch{{Eb{{E`{A`d}}{Bd{{Eb{Cnf}}}}}}Cf}}}{}}```````````````````````````````````````````````````{cl{}}0000000{ce{}{}}000{AAbFn}1111{AAdAAd}{AAbAAb}{{ce}h{}{}}0{{AAdAAd}Ad}{{AAbAhAhAhAh}h}{AAb{{Bd{c}}}{}}{{AAdAAd}Af}{{AAb{Gd{AAb}}}Af}{{AAbAAb}Af}{{AAdBl}Bn}{{AAfBl}Bn}{{AAhBl}Bn}{{AAbBl}Bn}{cc{}}000{{GjFn}{{Ch{AAbGl}}}}{AAbGn}{{AAdc}hCl}{{AAbc}hCl}{AAbFn}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{AAb{{Bd{{Db{l}}}}}}{AAfDl}{AAhDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{AAbc}}H`}}}{}}{{AAdAAd}{{Bd{Ad}}}}{AAbh}{{AAbf}h}{{AAbc}{{Ch{hGl}}}{}};;{f{{Ch{AAdh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}000{AAbf}{{AAbGjc}{{Ch{{E`{Fnd}}Gl}}}{}}````````````````````````````````````````````````````````````````````````{{}AAj}0{cl{}}0000000000000{{AAjAAj}AAj}{{AAjAAj}h}10{AAjf}0021{ce{}{}}000000{AAlFn}1111111{AAnAAn}{AB`AB`}{ABbABb}{AAjAAj}{AAlAAl}{{ce}h{}{}}0000{{AAnAAn}Ad}{{AB`AB`}Ad}{{ABbABb}Ad}55{{AAjAAj}Af}0{AAl{{Bd{c}}}{}}??{{}AAj}0{{AAnAAn}Af}{{AB`AB`}Af}{{ABbABb}Af}5{{AAl{Gd{AAl}}}Af}{{AAlAAl}Af}{{AAjc}h{{Bj{}{{Bh{AAj}}}}}}{{AAnBl}Bn}{{AB`Bl}Bn}{{ABbBl}Bn}{{AAjBl}Bn}0000{{ABdBl}Bn}{{ABfBl}Bn}{{AAlBl}Bn}{cc{}}000000{f{{Bd{AAj}}}}0{fAAj}0000{{GjFn}{{Ch{AAlGl}}}}{cAAj{{Bj{}{{Bh{AAj}}}}}}{Cj{{Bd{AAj}}}}0{AAlGn}{{AAnc}hCl}{{AB`c}hCl}{{ABbc}hCl}{{AAjc}hCl}{{AAlc}hCl}{AAlFn}{{AAjAAj}h}0{{}Cn}{{AAjAAj}AAj}0{{AAjAAj}Af}0{ce{}{}}000000{{{D`{c}}}{{D`{l}}}{}}000000{{{Db{c}}}{{Db{l}}}{}}000000{{{Dd{c}}}{{Dd{l}}}{}}000000{AAjc{}}{AAjAf}000{AAj{{Df{AAj}}}}0{AAj{{Dh{AAj}}}}0{AAjAAj}{AAl{{Bd{{Db{l}}}}}}{ABdDl}{ABfDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{AAlc}}H`}}}{}}{{AAnAAn}{{Bd{Ad}}}}{{AB`AB`}{{Bd{Ad}}}}{{ABbABb}{{Bd{Ad}}}}{{AAjAAj}h}0{{AAlc}{{Ch{hGl}}}{}}{{AAjAAjAf}h}0{{AAjAAj}AAj}300{ce{}{}}000044{c{{Ch{e}}}{}{}}{f{{Ch{AAnh}}}}{f{{Ch{AB`h}}}}2{f{{Ch{ABbh}}}}33{f{{Ch{AAjh}}}}4444444444{cEh{}}00000077{AAlf}{{AAlGjc}{{Ch{{E`{Fnd}}Gl}}}{}}``````````````````````````````````````````{cl{}}0000000999{ABhFn}:::::{ABjABj}{ABhABh}{{ce}h{}{}}0{{ABjABj}Ad}{{ABhf}h}{ABh{{Bd{c}}}{}}{{ABjABj}Af}{{ABh{Gd{ABh}}}Af}{{ABhABh}Af}{{ABjBl}Bn}{{ABlBl}Bn}{{ABnBl}Bn}{{ABhBl}Bn}{cc{}}000{{GjFn}{{Ch{ABhGl}}}}{ABhGn}{{ABjc}hCl}{{ABhc}hCl}{ABhFn}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{ABh{{Bd{{Db{l}}}}}}{ABlDl}{ABnDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{ABhc}}H`}}}{}}{{ABjABj}{{Bd{Ad}}}}{{ABhc}{{Ch{hGl}}}{}}99{f{{Ch{ABjh}}}}{c{{Ch{e}}}{}{}}0000000{cEh{}}000{ABhf}{{ABhGjc}{{Ch{{E`{Fnd}}Gl}}}{}}````````````````````````````````````````````````````````````````````````````````````````````````{cl{}}0000000000000??????{AC`Fn}{ce{}{}}0000000{ACbACb}{ACdACd}{ACfACf}{AChACh}{AC`AC`}{{ce}h{}{}}0000{AC`h}{{ACbACb}Ad}{{ACdACd}Ad}{{ACfACf}Ad}{{AChACh}Ad}{{AC`AhAh{Hl{Hj}}}h}{{AC`AhAh}h}{AC`{{Bd{c}}}{}}{{ACbACb}Af}{{ACdACd}Af}{{ACfACf}Af}{{AChACh}Af}{{AC`AC`}Af}{{AC`{Gd{AC`}}}Af}{{ACbBl}Bn}{{ACdBl}Bn}{{ACfBl}Bn}{{AChBl}Bn}{{ACjBl}Bn}{{AClBl}Bn}{{AC`Bl}Bn}{cc{}}000000{{GjFn}{{Ch{AC`Gl}}}}{AC`Gn}{{ACbc}hCl}{{ACdc}hCl}{{ACfc}hCl}{{AChc}hCl}{{AC`c}hCl}{AC`Fn}{{}Cn}{ce{}{}}000000{{{D`{c}}}{{D`{l}}}{}}000000{{{Db{c}}}{{Db{l}}}{}}000000{{{Dd{c}}}{{Dd{l}}}{}}000000{AC`{{Bd{{Db{l}}}}}}{ACjDl}{AClDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{AC`c}}H`}}}{}}{{ACbACb}{{Bd{Ad}}}}{{ACdACd}{{Bd{Ad}}}}{{ACfACf}{{Bd{Ad}}}}{{AChACh}{{Bd{Ad}}}}{{AC`c}{{Ch{hGl}}}{}}<<<<<{c{{Ch{e}}}{}{}}{f{{Ch{ACbh}}}}1{f{{Ch{ACdh}}}}2{f{{Ch{ACfh}}}}{f{{Ch{AChh}}}}44444444444{cEh{}}000000{AC`f}{{AC`{Hl{Hj}}}h}{{AC`Gjc}{{Ch{{E`{Fnd}}Gl}}}{}}`````````````````````````````````````````````````{cl{}}0000000{ce{}{}}000{ACnFn}1111{AD`AD`}{ACnACn}{{ce}h{}{}}0{{AD`AD`}Ad}{ACn{{Bd{c}}}{}}{{AD`AD`}Af}{{ACnACn}Af}{{ACn{Gd{ACn}}}Af}{{AD`Bl}Bn}{{ADbBl}Bn}{{ADdBl}Bn}{{ACnBl}Bn}{cc{}}000{{GjFn}{{Ch{ACnGl}}}}{ACnGn}{{AD`c}hCl}{{ACnc}hCl}{ACnFn}{{}Cn}{ce{}{}}000{{{D`{c}}}{{D`{l}}}{}}000{{{Db{c}}}{{Db{l}}}{}}000{{{Dd{c}}}{{Dd{l}}}{}}000{ACn{{Bd{{Db{l}}}}}}{ADbDl}{ADdDl}{{Gj{E`{FnDn}}}{{Ch{{Eb{ACnc}}H`}}}{}}{{AD`AD`}{{Bd{Ad}}}}{{ACnf}h}{{ACnc}{{Ch{hGl}}}{}}::{c{{Ch{e}}}{}{}}{f{{Ch{AD`h}}}}1111111{cEh{}}000{ACnf}{{ACnGjc}{{Ch{{E`{Fnd}}Gl}}}{}}`````","c":[],"p":[[5,"ZwpLinuxBufferParamsV1",26],[5,"BorrowedFd",3815],[1,"u32"],[1,"unit"],[5,"Flags",26],[10,"Any",3816],[5,"WeakBackend",3817],[5,"ObjectId",3817],[6,"Error",26],[6,"Ordering",3818],[1,"bool"],[1,"i32"],[5,"QueueHandle",3819],[5,"WlBuffer",3820],[10,"Send",3821],[10,"Sync",3821],[10,"Dispatch",3819],[6,"Option",3822],[5,"Weak",3823],[17,"Item"],[10,"IntoIterator",3824],[5,"Formatter",3825],[8,"Result",3825],[6,"Request",26],[6,"Event",26],[5,"Connection",3826],[5,"InvalidId",3827],[6,"Result",3828],[1,"str"],[10,"Hasher",3829],[5,"Interface",3830],[5,"Box",3831],[5,"Arc",3832],[5,"Rc",3833],[5,"Iter",3834],[5,"IterNames",3834],[10,"ObjectData",3817],[1,"u16"],[5,"OwnedFd",3815],[5,"Message",3830],[1,"tuple"],[6,"DispatchError",3823],[10,"Proxy",3823],[5,"TypeId",3816],[5,"TrancheFlags",241],[5,"ZwpLinuxDmabufFeedbackV1",241],[6,"Request",241],[6,"Event",241],[5,"ZwpLinuxDmabufV1",418],[6,"Request",418],[6,"Event",418],[5,"WlSurface",3835],[5,"Flags",524],[5,"ZwpLinuxBufferParamsV1",524],[5,"ObjectId",3836],[6,"Error",524],[5,"WlBuffer",3837],[5,"Weak",3838],[6,"Request",524],[6,"Event",524],[5,"DisplayHandle",3839],[5,"InvalidId",3840],[5,"WeakHandle",3836],[6,"DispatchError",3838],[5,"TrancheFlags",736],[5,"ZwpLinuxDmabufFeedbackV1",736],[6,"Request",736],[6,"Event",736],[1,"u8"],[5,"Vec",3841],[5,"ZwpLinuxDmabufV1",917],[6,"Request",917],[6,"Event",917],[5,"WpPresentation",1018],[6,"Error",1018],[5,"WpPresentationFeedback",1118],[6,"Request",1018],[6,"Event",1018],[5,"Kind",1118],[6,"Request",1118],[6,"Event",1118],[5,"WpPresentation",1294],[6,"Error",1294],[6,"Request",1294],[6,"Event",1294],[5,"Kind",1392],[5,"WpPresentationFeedback",1392],[6,"Request",1392],[6,"Event",1392],[5,"WlOutput",3842],[5,"WpViewport",1570],[6,"Error",1570],[6,"Request",1570],[6,"Event",1570],[1,"f64"],[5,"WpViewporter",1677],[6,"Error",1677],[6,"Request",1677],[6,"Event",1677],[5,"WpViewport",1781],[6,"Error",1781],[6,"Request",1781],[6,"Event",1781],[5,"WpViewporter",1883],[6,"Error",1883],[6,"Request",1883],[6,"Event",1883],[5,"XdgPopup",2003],[6,"Error",2003],[6,"Request",2003],[6,"Event",2003],[5,"WlSeat",3843],[5,"XdgPositioner",2119],[5,"ConstraintAdjustment",2119],[6,"Error",2119],[6,"Anchor",2119],[6,"Gravity",2119],[6,"Request",2119],[6,"Event",2119],[5,"XdgSurface",2410],[6,"Error",2410],[6,"Request",2410],[6,"Event",2410],[5,"XdgToplevel",2532],[6,"Error",2532],[6,"ResizeEdge",2532],[6,"State",2532],[6,"WmCapabilities",2532],[6,"Request",2532],[6,"Event",2532],[5,"String",3844],[5,"WlOutput",3845],[5,"XdgWmBase",2799],[6,"Error",2799],[6,"Request",2799],[6,"Event",2799],[5,"XdgPopup",2938],[6,"Error",2938],[6,"Request",2938],[6,"Event",2938],[5,"ConstraintAdjustment",3052],[5,"XdgPositioner",3052],[6,"Error",3052],[6,"Anchor",3052],[6,"Gravity",3052],[6,"Request",3052],[6,"Event",3052],[5,"XdgSurface",3331],[6,"Error",3331],[6,"Request",3331],[6,"Event",3331],[5,"XdgToplevel",3449],[6,"Error",3449],[6,"ResizeEdge",3449],[6,"State",3449],[6,"WmCapabilities",3449],[6,"Request",3449],[6,"Event",3449],[5,"XdgWmBase",3704],[6,"Error",3704],[6,"Request",3704],[6,"Event",3704],[15,"Created",226],[15,"Add",227],[15,"Create",227],[15,"CreateImmed",227],[15,"MainDevice",412],[15,"TrancheTargetDevice",412],[15,"FormatTable",412],[15,"TrancheFlags",412],[15,"TrancheFormats",412],[15,"Format",503],[15,"Modifier",503],[15,"GetSurfaceFeedback",507],[15,"Created",720],[15,"CreateImmed",721],[15,"Add",721],[15,"Create",721],[15,"MainDevice",911],[15,"TrancheTargetDevice",911],[15,"FormatTable",911],[15,"TrancheFlags",911],[15,"TrancheFormats",911],[15,"Format",998],[15,"Modifier",998],[15,"GetDefaultFeedback",1002],[15,"GetSurfaceFeedback",1002],[15,"CreateParams",1002],[15,"ClockId",1116],[15,"Feedback",1117],[15,"Presented",1276],[15,"SyncOutput",1276],[15,"ClockId",1389],[15,"Feedback",1390],[15,"Presented",1551],[15,"SyncOutput",1551],[15,"SetSource",1671],[15,"SetDestination",1671],[15,"GetViewport",1771],[15,"SetSource",1877],[15,"SetDestination",1877],[15,"GetViewport",1973],[15,"Configure",2110],[15,"Repositioned",2110],[15,"Reposition",2115],[15,"Grab",2115],[15,"SetAnchor",2396],[15,"SetConstraintAdjustment",2396],[15,"SetGravity",2396],[15,"SetSize",2396],[15,"SetAnchorRect",2396],[15,"SetParentSize",2396],[15,"SetParentConfigure",2396],[15,"SetOffset",2396],[15,"Configure",2524],[15,"SetWindowGeometry",2525],[15,"GetPopup",2525],[15,"AckConfigure",2525],[15,"WmCapabilities",2776],[15,"Configure",2776],[15,"ConfigureBounds",2776],[15,"SetAppId",2782],[15,"Resize",2782],[15,"SetMaxSize",2782],[15,"SetMinSize",2782],[15,"SetFullscreen",2782],[15,"SetParent",2782],[15,"ShowWindowMenu",2782],[15,"Move",2782],[15,"SetTitle",2782],[15,"Ping",2910],[15,"Pong",2911],[15,"GetXdgSurface",2911],[15,"Configure",3043],[15,"Repositioned",3043],[15,"Reposition",3048],[15,"Grab",3048],[15,"SetAnchor",3317],[15,"SetConstraintAdjustment",3317],[15,"SetGravity",3317],[15,"SetSize",3317],[15,"SetAnchorRect",3317],[15,"SetParentSize",3317],[15,"SetParentConfigure",3317],[15,"SetOffset",3317],[15,"Configure",3439],[15,"SetWindowGeometry",3440],[15,"GetToplevel",3440],[15,"GetPopup",3440],[15,"AckConfigure",3440],[15,"WmCapabilities",3681],[15,"Configure",3681],[15,"ConfigureBounds",3681],[15,"SetAppId",3687],[15,"Resize",3687],[15,"SetMaxSize",3687],[15,"SetMinSize",3687],[15,"SetFullscreen",3687],[15,"SetParent",3687],[15,"ShowWindowMenu",3687],[15,"Move",3687],[15,"SetTitle",3687],[15,"Ping",3810],[15,"CreatePositioner",3811],[15,"GetXdgSurface",3811],[15,"Pong",3811]],"b":[[61,"impl-Flags"],[62,"impl-Flags"],[78,"impl-Flags"],[79,"impl-Flags-for-Flags"],[80,"impl-Flags"],[101,"impl-Flags"],[102,"impl-Flags"],[103,"impl-Flags"],[104,"impl-Flags"],[109,"impl-Flags"],[110,"impl-Flags"],[111,"impl-Flags"],[112,"impl-Flags"],[115,"impl-PartialEq-for-ZwpLinuxBufferParamsV1"],[116,"impl-PartialEq%3CWeak%3CZwpLinuxBufferParamsV1%3E%3E-for-ZwpLinuxBufferParamsV1"],[119,"impl-UpperHex-for-Flags"],[120,"impl-Octal-for-Flags"],[121,"impl-LowerHex-for-Flags"],[122,"impl-Debug-for-Flags"],[123,"impl-Binary-for-Flags"],[132,"impl-Flags"],[133,"impl-Flags"],[134,"impl-Flags-for-Flags"],[135,"impl-Flags"],[136,"impl-Flags"],[137,"impl-Flags"],[138,"impl-Flags"],[141,"impl-Flags"],[142,"impl-Flags"],[148,"impl-Flags"],[149,"impl-Flags"],[151,"impl-Flags"],[152,"impl-Flags"],[153,"impl-Flags"],[154,"impl-Flags"],[176,"impl-Flags"],[177,"impl-Flags"],[178,"impl-Flags"],[179,"impl-Flags"],[180,"impl-Flags"],[181,"impl-Flags"],[182,"impl-Flags"],[183,"impl-Flags"],[190,"impl-Flags"],[191,"impl-Flags"],[194,"impl-Flags"],[195,"impl-Flags"],[198,"impl-Flags"],[199,"impl-Flags"],[203,"impl-Flags"],[204,"impl-Flags"],[222,"impl-Flags"],[223,"impl-Flags"],[270,"impl-TrancheFlags"],[271,"impl-TrancheFlags"],[285,"impl-TrancheFlags"],[286,"impl-Flags-for-TrancheFlags"],[287,"impl-TrancheFlags"],[303,"impl-TrancheFlags"],[304,"impl-TrancheFlags"],[305,"impl-TrancheFlags"],[306,"impl-TrancheFlags"],[309,"impl-TrancheFlags"],[310,"impl-TrancheFlags"],[311,"impl-TrancheFlags"],[312,"impl-TrancheFlags"],[314,"impl-PartialEq%3CWeak%3CZwpLinuxDmabufFeedbackV1%3E%3E-for-ZwpLinuxDmabufFeedbackV1"],[315,"impl-PartialEq-for-ZwpLinuxDmabufFeedbackV1"],[317,"impl-Binary-for-TrancheFlags"],[318,"impl-LowerHex-for-TrancheFlags"],[319,"impl-Octal-for-TrancheFlags"],[320,"impl-Debug-for-TrancheFlags"],[321,"impl-UpperHex-for-TrancheFlags"],[329,"impl-TrancheFlags"],[330,"impl-TrancheFlags"],[331,"impl-TrancheFlags"],[332,"impl-Flags-for-TrancheFlags"],[333,"impl-TrancheFlags"],[334,"impl-TrancheFlags"],[335,"impl-TrancheFlags"],[338,"impl-TrancheFlags"],[339,"impl-TrancheFlags"],[344,"impl-TrancheFlags"],[345,"impl-TrancheFlags"],[347,"impl-TrancheFlags"],[348,"impl-TrancheFlags"],[349,"impl-TrancheFlags"],[350,"impl-TrancheFlags"],[368,"impl-TrancheFlags"],[369,"impl-TrancheFlags"],[370,"impl-TrancheFlags"],[371,"impl-TrancheFlags"],[372,"impl-TrancheFlags"],[373,"impl-TrancheFlags"],[374,"impl-TrancheFlags"],[375,"impl-TrancheFlags"],[381,"impl-TrancheFlags"],[382,"impl-TrancheFlags"],[385,"impl-TrancheFlags"],[386,"impl-TrancheFlags"],[389,"impl-TrancheFlags"],[390,"impl-TrancheFlags"],[393,"impl-TrancheFlags"],[394,"impl-TrancheFlags"],[408,"impl-TrancheFlags"],[409,"impl-TrancheFlags"],[458,"impl-PartialEq%3CWeak%3CZwpLinuxDmabufV1%3E%3E-for-ZwpLinuxDmabufV1"],[459,"impl-PartialEq-for-ZwpLinuxDmabufV1"],[558,"impl-Flags"],[559,"impl-Flags"],[574,"impl-Flags"],[575,"impl-Flags-for-Flags"],[576,"impl-Flags"],[597,"impl-Flags"],[598,"impl-Flags"],[599,"impl-Flags"],[600,"impl-Flags"],[603,"impl-Flags"],[604,"impl-Flags"],[605,"impl-Flags"],[606,"impl-Flags"],[609,"impl-PartialEq-for-ZwpLinuxBufferParamsV1"],[610,"impl-PartialEq%3CWeak%3CZwpLinuxBufferParamsV1%3E%3E-for-ZwpLinuxBufferParamsV1"],[614,"impl-Debug-for-Flags"],[615,"impl-LowerHex-for-Flags"],[616,"impl-Binary-for-Flags"],[617,"impl-Octal-for-Flags"],[618,"impl-UpperHex-for-Flags"],[627,"impl-Flags"],[628,"impl-Flags"],[629,"impl-Flags"],[630,"impl-Flags-for-Flags"],[631,"impl-Flags"],[632,"impl-Flags"],[633,"impl-Flags"],[636,"impl-Flags"],[637,"impl-Flags"],[643,"impl-Flags"],[644,"impl-Flags"],[646,"impl-Flags"],[647,"impl-Flags"],[648,"impl-Flags"],[649,"impl-Flags"],[671,"impl-Flags"],[672,"impl-Flags"],[673,"impl-Flags"],[674,"impl-Flags"],[675,"impl-Flags"],[676,"impl-Flags"],[677,"impl-Flags"],[678,"impl-Flags"],[685,"impl-Flags"],[686,"impl-Flags"],[688,"impl-Flags"],[689,"impl-Flags"],[692,"impl-Flags"],[693,"impl-Flags"],[697,"impl-Flags"],[698,"impl-Flags"],[716,"impl-Flags"],[717,"impl-Flags"],[765,"impl-TrancheFlags"],[766,"impl-TrancheFlags"],[779,"impl-TrancheFlags"],[780,"impl-Flags-for-TrancheFlags"],[781,"impl-TrancheFlags"],[797,"impl-TrancheFlags"],[798,"impl-TrancheFlags"],[799,"impl-TrancheFlags"],[800,"impl-TrancheFlags"],[802,"impl-TrancheFlags"],[803,"impl-TrancheFlags"],[805,"impl-TrancheFlags"],[806,"impl-TrancheFlags"],[808,"impl-PartialEq-for-ZwpLinuxDmabufFeedbackV1"],[809,"impl-PartialEq%3CWeak%3CZwpLinuxDmabufFeedbackV1%3E%3E-for-ZwpLinuxDmabufFeedbackV1"],[811,"impl-Binary-for-TrancheFlags"],[812,"impl-UpperHex-for-TrancheFlags"],[813,"impl-Debug-for-TrancheFlags"],[814,"impl-LowerHex-for-TrancheFlags"],[815,"impl-Octal-for-TrancheFlags"],[824,"impl-TrancheFlags"],[825,"impl-TrancheFlags"],[826,"impl-Flags-for-TrancheFlags"],[827,"impl-TrancheFlags"],[828,"impl-TrancheFlags"],[829,"impl-TrancheFlags"],[830,"impl-TrancheFlags"],[833,"impl-TrancheFlags"],[834,"impl-TrancheFlags"],[839,"impl-TrancheFlags"],[840,"impl-TrancheFlags"],[842,"impl-TrancheFlags"],[843,"impl-TrancheFlags"],[844,"impl-TrancheFlags"],[845,"impl-TrancheFlags"],[863,"impl-TrancheFlags"],[864,"impl-TrancheFlags"],[865,"impl-TrancheFlags"],[866,"impl-TrancheFlags"],[867,"impl-TrancheFlags"],[868,"impl-TrancheFlags"],[869,"impl-TrancheFlags"],[870,"impl-TrancheFlags"],[877,"impl-TrancheFlags"],[878,"impl-TrancheFlags"],[880,"impl-TrancheFlags"],[881,"impl-TrancheFlags"],[884,"impl-TrancheFlags"],[885,"impl-TrancheFlags"],[888,"impl-TrancheFlags"],[889,"impl-TrancheFlags"],[907,"impl-TrancheFlags"],[908,"impl-TrancheFlags"],[954,"impl-PartialEq%3CWeak%3CZwpLinuxDmabufV1%3E%3E-for-ZwpLinuxDmabufV1"],[955,"impl-PartialEq-for-ZwpLinuxDmabufV1"],[1059,"impl-PartialEq%3CWeak%3CWpPresentation%3E%3E-for-WpPresentation"],[1060,"impl-PartialEq-for-WpPresentation"],[1135,"impl-Kind"],[1136,"impl-Kind"],[1150,"impl-Kind"],[1151,"impl-Flags-for-Kind"],[1152,"impl-Kind"],[1168,"impl-Kind"],[1169,"impl-Kind"],[1170,"impl-Kind"],[1171,"impl-Kind"],[1173,"impl-Kind"],[1174,"impl-Kind"],[1175,"impl-Kind"],[1176,"impl-Kind"],[1178,"impl-PartialEq%3CWeak%3CWpPresentationFeedback%3E%3E-for-WpPresentationFeedback"],[1179,"impl-PartialEq-for-WpPresentationFeedback"],[1181,"impl-Debug-for-Kind"],[1182,"impl-Binary-for-Kind"],[1183,"impl-UpperHex-for-Kind"],[1184,"impl-LowerHex-for-Kind"],[1185,"impl-Octal-for-Kind"],[1193,"impl-Kind"],[1194,"impl-Kind"],[1195,"impl-Flags-for-Kind"],[1196,"impl-Kind"],[1197,"impl-Kind"],[1198,"impl-Kind"],[1199,"impl-Kind"],[1202,"impl-Kind"],[1203,"impl-Kind"],[1208,"impl-Kind"],[1209,"impl-Kind"],[1211,"impl-Kind"],[1212,"impl-Kind"],[1213,"impl-Kind"],[1214,"impl-Kind"],[1232,"impl-Kind"],[1233,"impl-Kind"],[1234,"impl-Kind"],[1235,"impl-Kind"],[1236,"impl-Kind"],[1237,"impl-Kind"],[1238,"impl-Kind"],[1239,"impl-Kind"],[1245,"impl-Kind"],[1246,"impl-Kind"],[1249,"impl-Kind"],[1250,"impl-Kind"],[1253,"impl-Kind"],[1254,"impl-Kind"],[1257,"impl-Kind"],[1258,"impl-Kind"],[1272,"impl-Kind"],[1273,"impl-Kind"],[1334,"impl-PartialEq%3CWeak%3CWpPresentation%3E%3E-for-WpPresentation"],[1335,"impl-PartialEq-for-WpPresentation"],[1409,"impl-Kind"],[1410,"impl-Kind"],[1423,"impl-Kind"],[1424,"impl-Kind"],[1425,"impl-Flags-for-Kind"],[1441,"impl-Kind"],[1442,"impl-Kind"],[1443,"impl-Kind"],[1444,"impl-Kind"],[1446,"impl-Kind"],[1447,"impl-Kind"],[1449,"impl-Kind"],[1450,"impl-Kind"],[1452,"impl-PartialEq-for-WpPresentationFeedback"],[1453,"impl-PartialEq%3CWeak%3CWpPresentationFeedback%3E%3E-for-WpPresentationFeedback"],[1455,"impl-Binary-for-Kind"],[1456,"impl-UpperHex-for-Kind"],[1457,"impl-LowerHex-for-Kind"],[1458,"impl-Octal-for-Kind"],[1459,"impl-Debug-for-Kind"],[1467,"impl-Kind"],[1468,"impl-Kind"],[1469,"impl-Flags-for-Kind"],[1470,"impl-Kind"],[1471,"impl-Kind"],[1472,"impl-Kind"],[1473,"impl-Kind"],[1476,"impl-Kind"],[1477,"impl-Kind"],[1482,"impl-Kind"],[1483,"impl-Kind"],[1485,"impl-Kind"],[1486,"impl-Kind"],[1487,"impl-Kind"],[1488,"impl-Kind"],[1506,"impl-Kind"],[1507,"impl-Kind"],[1508,"impl-Kind"],[1509,"impl-Kind"],[1510,"impl-Kind"],[1511,"impl-Kind"],[1512,"impl-Kind"],[1513,"impl-Kind"],[1520,"impl-Kind"],[1521,"impl-Kind"],[1523,"impl-Kind"],[1524,"impl-Kind"],[1527,"impl-Kind"],[1528,"impl-Kind"],[1532,"impl-Kind"],[1533,"impl-Kind"],[1547,"impl-Kind"],[1548,"impl-Kind"],[1613,"impl-PartialEq-for-WpViewport"],[1614,"impl-PartialEq%3CWeak%3CWpViewport%3E%3E-for-WpViewport"],[1714,"impl-PartialEq-for-WpViewporter"],[1715,"impl-PartialEq%3CWeak%3CWpViewporter%3E%3E-for-WpViewporter"],[1822,"impl-PartialEq-for-WpViewport"],[1823,"impl-PartialEq%3CWeak%3CWpViewport%3E%3E-for-WpViewport"],[1918,"impl-PartialEq%3CWeak%3CWpViewporter%3E%3E-for-WpViewporter"],[1919,"impl-PartialEq-for-WpViewporter"],[2052,"impl-PartialEq%3CWeak%3CXdgPopup%3E%3E-for-XdgPopup"],[2053,"impl-PartialEq-for-XdgPopup"],[2182,"impl-ConstraintAdjustment"],[2183,"impl-ConstraintAdjustment"],[2203,"impl-ConstraintAdjustment"],[2204,"impl-ConstraintAdjustment"],[2205,"impl-Flags-for-ConstraintAdjustment"],[2236,"impl-ConstraintAdjustment"],[2237,"impl-ConstraintAdjustment"],[2238,"impl-ConstraintAdjustment"],[2239,"impl-ConstraintAdjustment"],[2242,"impl-ConstraintAdjustment"],[2243,"impl-ConstraintAdjustment"],[2244,"impl-ConstraintAdjustment"],[2245,"impl-ConstraintAdjustment"],[2250,"impl-PartialEq%3CWeak%3CXdgPositioner%3E%3E-for-XdgPositioner"],[2251,"impl-PartialEq-for-XdgPositioner"],[2256,"impl-Binary-for-ConstraintAdjustment"],[2257,"impl-LowerHex-for-ConstraintAdjustment"],[2258,"impl-Octal-for-ConstraintAdjustment"],[2259,"impl-Debug-for-ConstraintAdjustment"],[2260,"impl-UpperHex-for-ConstraintAdjustment"],[2271,"impl-ConstraintAdjustment"],[2272,"impl-ConstraintAdjustment"],[2273,"impl-ConstraintAdjustment"],[2274,"impl-Flags-for-ConstraintAdjustment"],[2275,"impl-ConstraintAdjustment"],[2276,"impl-ConstraintAdjustment"],[2277,"impl-ConstraintAdjustment"],[2280,"impl-ConstraintAdjustment"],[2281,"impl-ConstraintAdjustment"],[2289,"impl-ConstraintAdjustment"],[2290,"impl-ConstraintAdjustment"],[2292,"impl-ConstraintAdjustment"],[2293,"impl-ConstraintAdjustment"],[2294,"impl-ConstraintAdjustment"],[2295,"impl-ConstraintAdjustment"],[2325,"impl-ConstraintAdjustment"],[2326,"impl-ConstraintAdjustment"],[2327,"impl-ConstraintAdjustment"],[2328,"impl-ConstraintAdjustment"],[2329,"impl-ConstraintAdjustment"],[2330,"impl-ConstraintAdjustment"],[2331,"impl-ConstraintAdjustment"],[2332,"impl-ConstraintAdjustment"],[2341,"impl-ConstraintAdjustment"],[2342,"impl-ConstraintAdjustment"],[2345,"impl-ConstraintAdjustment"],[2346,"impl-ConstraintAdjustment"],[2358,"impl-ConstraintAdjustment"],[2359,"impl-ConstraintAdjustment"],[2365,"impl-ConstraintAdjustment"],[2366,"impl-ConstraintAdjustment"],[2392,"impl-ConstraintAdjustment"],[2393,"impl-ConstraintAdjustment"],[2465,"impl-PartialEq-for-XdgSurface"],[2466,"impl-PartialEq%3CWeak%3CXdgSurface%3E%3E-for-XdgSurface"],[2669,"impl-PartialEq-for-XdgToplevel"],[2670,"impl-PartialEq%3CWeak%3CXdgToplevel%3E%3E-for-XdgToplevel"],[2852,"impl-PartialEq-for-XdgWmBase"],[2853,"impl-PartialEq%3CWeak%3CXdgWmBase%3E%3E-for-XdgWmBase"],[2986,"impl-PartialEq%3CWeak%3CXdgPopup%3E%3E-for-XdgPopup"],[2987,"impl-PartialEq-for-XdgPopup"],[3115,"impl-ConstraintAdjustment"],[3116,"impl-ConstraintAdjustment"],[3135,"impl-Flags-for-ConstraintAdjustment"],[3136,"impl-ConstraintAdjustment"],[3137,"impl-ConstraintAdjustment"],[3168,"impl-ConstraintAdjustment"],[3169,"impl-ConstraintAdjustment"],[3170,"impl-ConstraintAdjustment"],[3171,"impl-ConstraintAdjustment"],[3173,"impl-ConstraintAdjustment"],[3174,"impl-ConstraintAdjustment"],[3175,"impl-ConstraintAdjustment"],[3176,"impl-ConstraintAdjustment"],[3181,"impl-PartialEq%3CWeak%3CXdgPositioner%3E%3E-for-XdgPositioner"],[3182,"impl-PartialEq-for-XdgPositioner"],[3187,"impl-Binary-for-ConstraintAdjustment"],[3188,"impl-Debug-for-ConstraintAdjustment"],[3189,"impl-Octal-for-ConstraintAdjustment"],[3190,"impl-UpperHex-for-ConstraintAdjustment"],[3191,"impl-LowerHex-for-ConstraintAdjustment"],[3202,"impl-ConstraintAdjustment"],[3203,"impl-ConstraintAdjustment"],[3204,"impl-ConstraintAdjustment"],[3205,"impl-ConstraintAdjustment"],[3206,"impl-Flags-for-ConstraintAdjustment"],[3207,"impl-ConstraintAdjustment"],[3208,"impl-ConstraintAdjustment"],[3211,"impl-ConstraintAdjustment"],[3212,"impl-ConstraintAdjustment"],[3220,"impl-ConstraintAdjustment"],[3221,"impl-ConstraintAdjustment"],[3223,"impl-ConstraintAdjustment"],[3224,"impl-ConstraintAdjustment"],[3225,"impl-ConstraintAdjustment"],[3226,"impl-ConstraintAdjustment"],[3256,"impl-ConstraintAdjustment"],[3257,"impl-ConstraintAdjustment"],[3258,"impl-ConstraintAdjustment"],[3259,"impl-ConstraintAdjustment"],[3260,"impl-ConstraintAdjustment"],[3261,"impl-ConstraintAdjustment"],[3262,"impl-ConstraintAdjustment"],[3263,"impl-ConstraintAdjustment"],[3272,"impl-ConstraintAdjustment"],[3273,"impl-ConstraintAdjustment"],[3275,"impl-ConstraintAdjustment"],[3276,"impl-ConstraintAdjustment"],[3279,"impl-ConstraintAdjustment"],[3280,"impl-ConstraintAdjustment"],[3286,"impl-ConstraintAdjustment"],[3287,"impl-ConstraintAdjustment"],[3313,"impl-ConstraintAdjustment"],[3314,"impl-ConstraintAdjustment"],[3384,"impl-PartialEq%3CWeak%3CXdgSurface%3E%3E-for-XdgSurface"],[3385,"impl-PartialEq-for-XdgSurface"],[3586,"impl-PartialEq-for-XdgToplevel"],[3587,"impl-PartialEq%3CWeak%3CXdgToplevel%3E%3E-for-XdgToplevel"],[3754,"impl-PartialEq-for-XdgWmBase"],[3755,"impl-PartialEq%3CWeak%3CXdgWmBase%3E%3E-for-XdgWmBase"]]}],\
["wayland_protocols_wlr",{"doc":"This crate provides bindings to the wlroots wayland …","t":"CCCCCCCCCCCCCCCCCCJJJJJJJJJJJJJJJPPSSSSSSSSGGPPSSSSSSGPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPPGPSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPSSGPSSSSPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPSSSSGGPPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCCCCCJJJJJJJJJJJJJJJPPSSSSSSSSGGPPSSSSSSGPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPPGPSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPSSGPSSSSPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPSSSSGGPPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCCCCCCJJJJJJJPGPSSSSSSSSGGPPPSSPGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOPPGSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCCJJJJJJJPGPSSSSSSSSGGPPPSSPGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOPPGSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCCCCCCJJJJJJJJPPPPPPPSSSSSSSSSSSSSSSSGGPPPPPPPSSSSSSSSSSSSSSSSSSSSGPPPPGPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOSSSSGPSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCCCJJJJJJJJPPPPPPPSSSSSSSSSSSSSSSSGGPPPPPPPSSSSSSSSSSSSSSSSSSSSGPPPPGPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOSSSSGPSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCCCCCCJJJJJJJPGPSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPSSSSGGPPPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCCJJJJJJJPGPSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPSSSSGGPPPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCCCCCJJJJJJPGGPSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCJJJJJJPGGPSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPGSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCCJJJJJJJPPPPGGPPGPSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOPFTPPPSSSSGGPPPPPPGTPPSSSSSSSSSSSSSSSSSSGTPPPPPPTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOCCCJJJJJJJPPPPGGPPGPSSSSGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPFTPPPSSSSGGPPPPPPGTPPSSSSSSSSSSSSSSSSSSGTPPPPPPTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOCCCCCCCCCJJJJJJJJJJJJJJJJJJJPGGPPPPPSSSSSSSSSSSSGPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOPPPPPPSSSSSSPGGPSSSSSSSSSSGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPGPPPSSSSSSSSSSSSSSSSSSSSSSSSSSSSPPGPPPPPPPSSPGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOPPSSSSSSGPPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOSSSSSSSSGPPSSPPGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCCCCCCJJJJJJJJJJJJJJJJJJJPGGPPPPPSSSSSSSSSSSSGPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOPPPPPPSSSSSSPGGPSSSSSSSSSSGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPGPPPSSSSSSSSSSSSSSSSSSSSSSSSSSSSPPGPPPPPPPSSPGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOPPSSSSSSGPPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOSSSSSSSSGPPSSPPGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCCCCCCJJJJJJJPGPSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPSSSSGGPPGPPPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCCJJJJJJJPGPSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPSSSSGGPPGPPPSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCCCCCJJJJJJJPPPPPPPSSSSSSSSSSSSSSGGPFPPPSSSSSSPGTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOPPPGSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOCCCJJJJJJJPPPPPPPSSSSSSSSSSSSSSGGPFPPPSSSSSSPGTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOPPPGSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOCCCCCCJJJJJJPPPGSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPPPPPGGPPPPPSSSSSSSSSSSSSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOCCCJJJJJJPPPGSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOPPPPPPGGPPPPPSSSSSSSSSSSSSSSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOO","n":["data_control","export_dmabuf","foreign_toplevel","gamma_control","input_inhibitor","layer_shell","output_management","output_power_management","screencopy","virtual_pointer","v1","client","server","__interfaces","zwlr_data_control_device_v1","zwlr_data_control_manager_v1","zwlr_data_control_offer_v1","zwlr_data_control_source_v1","ZWLR_DATA_CONTROL_DEVICE_V1_INTERFACE","ZWLR_DATA_CONTROL_MANAGER_V1_INTERFACE","ZWLR_DATA_CONTROL_OFFER_V1_INTERFACE","ZWLR_DATA_CONTROL_SOURCE_V1_INTERFACE","zwlr_data_control_device_v1_events","zwlr_data_control_device_v1_interface","zwlr_data_control_device_v1_requests","zwlr_data_control_manager_v1_interface","zwlr_data_control_manager_v1_requests","zwlr_data_control_offer_v1_events","zwlr_data_control_offer_v1_interface","zwlr_data_control_offer_v1_requests","zwlr_data_control_source_v1_events","zwlr_data_control_source_v1_interface","zwlr_data_control_source_v1_requests","DataOffer","Destroy","EVT_DATA_OFFER_OPCODE","EVT_DATA_OFFER_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_PRIMARY_SELECTION_OPCODE","EVT_PRIMARY_SELECTION_SINCE","EVT_SELECTION_OPCODE","EVT_SELECTION_SINCE","Error","Event","Finished","PrimarySelection","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_PRIMARY_SELECTION_OPCODE","REQ_SET_PRIMARY_SELECTION_SINCE","REQ_SET_SELECTION_OPCODE","REQ_SET_SELECTION_SINCE","Request","Selection","SetPrimarySelection","SetSelection","UsedSource","ZwlrDataControlDeviceV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_primary_selection","set_selection","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","id","id","id","source","source","CreateDataSource","Destroy","Event","GetDataDevice","REQ_CREATE_DATA_SOURCE_OPCODE","REQ_CREATE_DATA_SOURCE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_DATA_DEVICE_OPCODE","REQ_GET_DATA_DEVICE_SINCE","Request","ZwlrDataControlManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_data_source","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","get_data_device","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","seat","Destroy","EVT_OFFER_OPCODE","EVT_OFFER_SINCE","Event","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_RECEIVE_OPCODE","REQ_RECEIVE_SINCE","Receive","Request","ZwlrDataControlOfferV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","receive","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","mime_type","fd","mime_type","Cancelled","Destroy","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_SEND_OPCODE","EVT_SEND_SINCE","Error","Event","InvalidOffer","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_OFFER_OPCODE","REQ_OFFER_SINCE","Request","Send","ZwlrDataControlSourceV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","offer","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","fd","mime_type","mime_type","__interfaces","zwlr_data_control_device_v1","zwlr_data_control_manager_v1","zwlr_data_control_offer_v1","zwlr_data_control_source_v1","ZWLR_DATA_CONTROL_DEVICE_V1_INTERFACE","ZWLR_DATA_CONTROL_MANAGER_V1_INTERFACE","ZWLR_DATA_CONTROL_OFFER_V1_INTERFACE","ZWLR_DATA_CONTROL_SOURCE_V1_INTERFACE","zwlr_data_control_device_v1_events","zwlr_data_control_device_v1_interface","zwlr_data_control_device_v1_requests","zwlr_data_control_manager_v1_interface","zwlr_data_control_manager_v1_requests","zwlr_data_control_offer_v1_events","zwlr_data_control_offer_v1_interface","zwlr_data_control_offer_v1_requests","zwlr_data_control_source_v1_events","zwlr_data_control_source_v1_interface","zwlr_data_control_source_v1_requests","DataOffer","Destroy","EVT_DATA_OFFER_OPCODE","EVT_DATA_OFFER_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_PRIMARY_SELECTION_OPCODE","EVT_PRIMARY_SELECTION_SINCE","EVT_SELECTION_OPCODE","EVT_SELECTION_SINCE","Error","Event","Finished","PrimarySelection","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_PRIMARY_SELECTION_OPCODE","REQ_SET_PRIMARY_SELECTION_SINCE","REQ_SET_SELECTION_OPCODE","REQ_SET_SELECTION_SINCE","Request","Selection","SetPrimarySelection","SetSelection","UsedSource","ZwlrDataControlDeviceV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","data_offer","eq","eq","eq","finished","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","primary_selection","selection","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","id","id","id","source","source","CreateDataSource","Destroy","Event","GetDataDevice","REQ_CREATE_DATA_SOURCE_OPCODE","REQ_CREATE_DATA_SOURCE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_DATA_DEVICE_OPCODE","REQ_GET_DATA_DEVICE_SINCE","Request","ZwlrDataControlManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","id","id","seat","Destroy","EVT_OFFER_OPCODE","EVT_OFFER_SINCE","Event","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_RECEIVE_OPCODE","REQ_RECEIVE_SINCE","Receive","Request","ZwlrDataControlOfferV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","offer","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","mime_type","fd","mime_type","Cancelled","Destroy","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_SEND_OPCODE","EVT_SEND_SINCE","Error","Event","InvalidOffer","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_OFFER_OPCODE","REQ_OFFER_SINCE","Request","Send","ZwlrDataControlSourceV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancelled","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","fd","mime_type","mime_type","v1","client","server","__interfaces","zwlr_export_dmabuf_frame_v1","zwlr_export_dmabuf_manager_v1","ZWLR_EXPORT_DMABUF_FRAME_V1_INTERFACE","ZWLR_EXPORT_DMABUF_MANAGER_V1_INTERFACE","zwlr_export_dmabuf_frame_v1_events","zwlr_export_dmabuf_frame_v1_interface","zwlr_export_dmabuf_frame_v1_requests","zwlr_export_dmabuf_manager_v1_interface","zwlr_export_dmabuf_manager_v1_requests","Cancel","CancelReason","Destroy","EVT_CANCEL_OPCODE","EVT_CANCEL_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_OBJECT_OPCODE","EVT_OBJECT_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","Event","Flags","Frame","Object","Permanent","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","Resizing","Temporary","Transient","ZwlrExportDmabufFrameV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","destroy","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","buffer_flags","fd","flags","format","height","index","mod_high","mod_low","num_objects","offset","offset_x","offset_y","plane_index","reason","size","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","CaptureOutput","Destroy","Event","REQ_CAPTURE_OUTPUT_OPCODE","REQ_CAPTURE_OUTPUT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrExportDmabufManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capture_output","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","overlay_cursor","__interfaces","zwlr_export_dmabuf_frame_v1","zwlr_export_dmabuf_manager_v1","ZWLR_EXPORT_DMABUF_FRAME_V1_INTERFACE","ZWLR_EXPORT_DMABUF_MANAGER_V1_INTERFACE","zwlr_export_dmabuf_frame_v1_events","zwlr_export_dmabuf_frame_v1_interface","zwlr_export_dmabuf_frame_v1_requests","zwlr_export_dmabuf_manager_v1_interface","zwlr_export_dmabuf_manager_v1_requests","Cancel","CancelReason","Destroy","EVT_CANCEL_OPCODE","EVT_CANCEL_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_OBJECT_OPCODE","EVT_OBJECT_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","Event","Flags","Frame","Object","Permanent","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","Resizing","Temporary","Transient","ZwlrExportDmabufFrameV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from_id","handle","hash","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","ready","send_event","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","buffer_flags","fd","flags","format","height","index","mod_high","mod_low","num_objects","offset","offset_x","offset_y","plane_index","reason","size","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","CaptureOutput","Destroy","Event","REQ_CAPTURE_OUTPUT_OPCODE","REQ_CAPTURE_OUTPUT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrExportDmabufManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","frame","output","overlay_cursor","v1","client","server","__interfaces","zwlr_foreign_toplevel_handle_v1","zwlr_foreign_toplevel_manager_v1","ZWLR_FOREIGN_TOPLEVEL_HANDLE_V1_INTERFACE","ZWLR_FOREIGN_TOPLEVEL_MANAGER_V1_INTERFACE","zwlr_foreign_toplevel_handle_v1_events","zwlr_foreign_toplevel_handle_v1_interface","zwlr_foreign_toplevel_handle_v1_requests","zwlr_foreign_toplevel_manager_v1_events","zwlr_foreign_toplevel_manager_v1_interface","zwlr_foreign_toplevel_manager_v1_requests","Activate","Activated","AppId","Close","Closed","Destroy","Done","EVT_APP_ID_OPCODE","EVT_APP_ID_SINCE","EVT_CLOSED_OPCODE","EVT_CLOSED_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_PARENT_OPCODE","EVT_PARENT_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","EVT_TITLE_OPCODE","EVT_TITLE_SINCE","Error","Event","Fullscreen","InvalidRectangle","Maximized","Minimized","OutputEnter","OutputLeave","Parent","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_CLOSE_OPCODE","REQ_CLOSE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_RECTANGLE_OPCODE","REQ_SET_RECTANGLE_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","REQ_UNSET_MINIMIZED_OPCODE","REQ_UNSET_MINIMIZED_SINCE","Request","SetFullscreen","SetMaximized","SetMinimized","SetRectangle","State","State","Title","UnsetFullscreen","UnsetMaximized","UnsetMinimized","ZwlrForeignToplevelHandleV1","activate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","close","cmp","cmp","data","destroy","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","set_fullscreen","set_maximized","set_minimized","set_rectangle","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","unset_minimized","version","write_request","app_id","output","output","parent","state","title","height","output","seat","surface","width","x","y","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_TOPLEVEL_OPCODE","EVT_TOPLEVEL_SINCE","Event","Finished","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","Toplevel","ZwlrForeignToplevelManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","toplevel","__interfaces","zwlr_foreign_toplevel_handle_v1","zwlr_foreign_toplevel_manager_v1","ZWLR_FOREIGN_TOPLEVEL_HANDLE_V1_INTERFACE","ZWLR_FOREIGN_TOPLEVEL_MANAGER_V1_INTERFACE","zwlr_foreign_toplevel_handle_v1_events","zwlr_foreign_toplevel_handle_v1_interface","zwlr_foreign_toplevel_handle_v1_requests","zwlr_foreign_toplevel_manager_v1_events","zwlr_foreign_toplevel_manager_v1_interface","zwlr_foreign_toplevel_manager_v1_requests","Activate","Activated","AppId","Close","Closed","Destroy","Done","EVT_APP_ID_OPCODE","EVT_APP_ID_SINCE","EVT_CLOSED_OPCODE","EVT_CLOSED_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_OUTPUT_ENTER_OPCODE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_OPCODE","EVT_OUTPUT_LEAVE_SINCE","EVT_PARENT_OPCODE","EVT_PARENT_SINCE","EVT_STATE_OPCODE","EVT_STATE_SINCE","EVT_TITLE_OPCODE","EVT_TITLE_SINCE","Error","Event","Fullscreen","InvalidRectangle","Maximized","Minimized","OutputEnter","OutputLeave","Parent","REQ_ACTIVATE_OPCODE","REQ_ACTIVATE_SINCE","REQ_CLOSE_OPCODE","REQ_CLOSE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_OPCODE","REQ_SET_MINIMIZED_SINCE","REQ_SET_RECTANGLE_OPCODE","REQ_SET_RECTANGLE_SINCE","REQ_UNSET_FULLSCREEN_OPCODE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_OPCODE","REQ_UNSET_MAXIMIZED_SINCE","REQ_UNSET_MINIMIZED_OPCODE","REQ_UNSET_MINIMIZED_SINCE","Request","SetFullscreen","SetMaximized","SetMinimized","SetRectangle","State","State","Title","UnsetFullscreen","UnsetMaximized","UnsetMinimized","ZwlrForeignToplevelHandleV1","app_id","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","closed","cmp","cmp","data","done","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","handle","hash","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","output_enter","output_leave","parent","parse_request","partial_cmp","partial_cmp","send_event","state","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","app_id","output","output","parent","state","title","height","output","seat","surface","width","x","y","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_TOPLEVEL_OPCODE","EVT_TOPLEVEL_SINCE","Event","Finished","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","Toplevel","ZwlrForeignToplevelManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","finished","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","toplevel","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","toplevel","v1","client","server","__interfaces","zwlr_gamma_control_manager_v1","zwlr_gamma_control_v1","ZWLR_GAMMA_CONTROL_MANAGER_V1_INTERFACE","ZWLR_GAMMA_CONTROL_V1_INTERFACE","zwlr_gamma_control_manager_v1_interface","zwlr_gamma_control_manager_v1_requests","zwlr_gamma_control_v1_events","zwlr_gamma_control_v1_interface","zwlr_gamma_control_v1_requests","Destroy","Event","GetGammaControl","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_GAMMA_CONTROL_OPCODE","REQ_GET_GAMMA_CONTROL_SINCE","Request","ZwlrGammaControlManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","get_gamma_control","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","Destroy","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_GAMMA_SIZE_OPCODE","EVT_GAMMA_SIZE_SINCE","Error","Event","Failed","GammaSize","InvalidGamma","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_GAMMA_OPCODE","REQ_SET_GAMMA_SINCE","Request","SetGamma","ZwlrGammaControlV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_gamma","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","size","fd","__interfaces","zwlr_gamma_control_manager_v1","zwlr_gamma_control_v1","ZWLR_GAMMA_CONTROL_MANAGER_V1_INTERFACE","ZWLR_GAMMA_CONTROL_V1_INTERFACE","zwlr_gamma_control_manager_v1_interface","zwlr_gamma_control_manager_v1_requests","zwlr_gamma_control_v1_events","zwlr_gamma_control_v1_interface","zwlr_gamma_control_v1_requests","Destroy","Event","GetGammaControl","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_GAMMA_CONTROL_OPCODE","REQ_GET_GAMMA_CONTROL_SINCE","Request","ZwlrGammaControlManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","id","output","Destroy","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_GAMMA_SIZE_OPCODE","EVT_GAMMA_SIZE_SINCE","Error","Event","Failed","GammaSize","InvalidGamma","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_GAMMA_OPCODE","REQ_SET_GAMMA_SINCE","Request","SetGamma","ZwlrGammaControlV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","failed","fmt","fmt","fmt","fmt","from","from","from","from","from_id","gamma_size","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","size","fd","v1","client","server","__interfaces","zwlr_input_inhibit_manager_v1","zwlr_input_inhibitor_v1","ZWLR_INPUT_INHIBITOR_V1_INTERFACE","ZWLR_INPUT_INHIBIT_MANAGER_V1_INTERFACE","zwlr_input_inhibit_manager_v1_interface","zwlr_input_inhibit_manager_v1_requests","zwlr_input_inhibitor_v1_interface","zwlr_input_inhibitor_v1_requests","AlreadyInhibited","Error","Event","GetInhibitor","REQ_GET_INHIBITOR_OPCODE","REQ_GET_INHIBITOR_SINCE","Request","ZwlrInputInhibitManagerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","get_inhibitor","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","Destroy","Event","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrInputInhibitorV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","__interfaces","zwlr_input_inhibit_manager_v1","zwlr_input_inhibitor_v1","ZWLR_INPUT_INHIBITOR_V1_INTERFACE","ZWLR_INPUT_INHIBIT_MANAGER_V1_INTERFACE","zwlr_input_inhibit_manager_v1_interface","zwlr_input_inhibit_manager_v1_requests","zwlr_input_inhibitor_v1_interface","zwlr_input_inhibitor_v1_requests","AlreadyInhibited","Error","Event","GetInhibitor","REQ_GET_INHIBITOR_OPCODE","REQ_GET_INHIBITOR_SINCE","Request","ZwlrInputInhibitManagerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","id","Destroy","Event","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrInputInhibitorV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","v1","client","server","__interfaces","zwlr_layer_shell_v1","zwlr_layer_surface_v1","ZWLR_LAYER_SHELL_V1_INTERFACE","ZWLR_LAYER_SURFACE_V1_INTERFACE","zwlr_layer_shell_v1_interface","zwlr_layer_shell_v1_requests","zwlr_layer_surface_v1_events","zwlr_layer_surface_v1_interface","zwlr_layer_surface_v1_requests","AlreadyConstructed","Background","Bottom","Destroy","Error","Event","GetLayerSurface","InvalidLayer","Layer","Overlay","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_LAYER_SURFACE_OPCODE","REQ_GET_LAYER_SURFACE_SINCE","Request","Role","Top","ZwlrLayerShellV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","destroy","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","get_layer_surface","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","layer","namespace","output","surface","AckConfigure","Anchor","Bottom","Closed","Configure","Destroy","EVT_CLOSED_OPCODE","EVT_CLOSED_SINCE","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","Error","Event","Exclusive","GetPopup","InvalidAnchor","InvalidKeyboardInteractivity","InvalidSize","InvalidSurfaceState","KeyboardInteractivity","Left","None","OnDemand","REQ_ACK_CONFIGURE_OPCODE","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_POPUP_OPCODE","REQ_GET_POPUP_SINCE","REQ_SET_ANCHOR_OPCODE","REQ_SET_ANCHOR_SINCE","REQ_SET_EXCLUSIVE_ZONE_OPCODE","REQ_SET_EXCLUSIVE_ZONE_SINCE","REQ_SET_KEYBOARD_INTERACTIVITY_OPCODE","REQ_SET_KEYBOARD_INTERACTIVITY_SINCE","REQ_SET_LAYER_OPCODE","REQ_SET_LAYER_SINCE","REQ_SET_MARGIN_OPCODE","REQ_SET_MARGIN_SINCE","REQ_SET_SIZE_OPCODE","REQ_SET_SIZE_SINCE","Request","Right","SetAnchor","SetExclusiveZone","SetKeyboardInteractivity","SetLayer","SetMargin","SetSize","Top","ZwlrLayerSurfaceV1","ack_configure","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","data","destroy","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","get_popup","hash","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","remove","remove","send_constructor","send_request","set","set","set_anchor","set_exclusive_zone","set_keyboard_interactivity","set_layer","set_margin","set_size","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","height","serial","width","anchor","bottom","height","keyboard_interactivity","layer","left","popup","right","serial","top","width","zone","__interfaces","zwlr_layer_shell_v1","zwlr_layer_surface_v1","ZWLR_LAYER_SHELL_V1_INTERFACE","ZWLR_LAYER_SURFACE_V1_INTERFACE","zwlr_layer_shell_v1_interface","zwlr_layer_shell_v1_requests","zwlr_layer_surface_v1_events","zwlr_layer_surface_v1_interface","zwlr_layer_surface_v1_requests","AlreadyConstructed","Background","Bottom","Destroy","Error","Event","GetLayerSurface","InvalidLayer","Layer","Overlay","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_LAYER_SURFACE_OPCODE","REQ_GET_LAYER_SURFACE_SINCE","Request","Role","Top","ZwlrLayerShellV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","handle","hash","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","send_event","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","id","layer","namespace","output","surface","AckConfigure","Anchor","Bottom","Closed","Configure","Destroy","EVT_CLOSED_OPCODE","EVT_CLOSED_SINCE","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","Error","Event","Exclusive","GetPopup","InvalidAnchor","InvalidKeyboardInteractivity","InvalidSize","InvalidSurfaceState","KeyboardInteractivity","Left","None","OnDemand","REQ_ACK_CONFIGURE_OPCODE","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_POPUP_OPCODE","REQ_GET_POPUP_SINCE","REQ_SET_ANCHOR_OPCODE","REQ_SET_ANCHOR_SINCE","REQ_SET_EXCLUSIVE_ZONE_OPCODE","REQ_SET_EXCLUSIVE_ZONE_SINCE","REQ_SET_KEYBOARD_INTERACTIVITY_OPCODE","REQ_SET_KEYBOARD_INTERACTIVITY_SINCE","REQ_SET_LAYER_OPCODE","REQ_SET_LAYER_SINCE","REQ_SET_MARGIN_OPCODE","REQ_SET_MARGIN_SINCE","REQ_SET_SIZE_OPCODE","REQ_SET_SIZE_SINCE","Request","Right","SetAnchor","SetExclusiveZone","SetKeyboardInteractivity","SetLayer","SetMargin","SetSize","Top","ZwlrLayerSurfaceV1","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","closed","cmp","cmp","complement","complement","configure","contains","contains","data","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","handle","hash","hash","hash","hash","id","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","remove","remove","send_event","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_event","height","serial","width","anchor","bottom","height","keyboard_interactivity","layer","left","popup","right","serial","top","width","zone","v1","client","server","__interfaces","zwlr_output_configuration_head_v1","zwlr_output_configuration_v1","zwlr_output_head_v1","zwlr_output_manager_v1","zwlr_output_mode_v1","ZWLR_OUTPUT_CONFIGURATION_HEAD_V1_INTERFACE","ZWLR_OUTPUT_CONFIGURATION_V1_INTERFACE","ZWLR_OUTPUT_HEAD_V1_INTERFACE","ZWLR_OUTPUT_MANAGER_V1_INTERFACE","ZWLR_OUTPUT_MODE_V1_INTERFACE","zwlr_output_configuration_head_v1_interface","zwlr_output_configuration_head_v1_requests","zwlr_output_configuration_v1_events","zwlr_output_configuration_v1_interface","zwlr_output_configuration_v1_requests","zwlr_output_head_v1_events","zwlr_output_head_v1_interface","zwlr_output_head_v1_requests","zwlr_output_manager_v1_events","zwlr_output_manager_v1_interface","zwlr_output_manager_v1_requests","zwlr_output_mode_v1_events","zwlr_output_mode_v1_interface","zwlr_output_mode_v1_requests","AlreadySet","Error","Event","InvalidAdaptiveSyncState","InvalidCustomMode","InvalidMode","InvalidScale","InvalidTransform","REQ_SET_ADAPTIVE_SYNC_OPCODE","REQ_SET_ADAPTIVE_SYNC_SINCE","REQ_SET_CUSTOM_MODE_OPCODE","REQ_SET_CUSTOM_MODE_SINCE","REQ_SET_MODE_OPCODE","REQ_SET_MODE_SINCE","REQ_SET_POSITION_OPCODE","REQ_SET_POSITION_SINCE","REQ_SET_SCALE_OPCODE","REQ_SET_SCALE_SINCE","REQ_SET_TRANSFORM_OPCODE","REQ_SET_TRANSFORM_SINCE","Request","SetAdaptiveSync","SetCustomMode","SetMode","SetPosition","SetScale","SetTransform","ZwlrOutputConfigurationHeadV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","set_adaptive_sync","set_custom_mode","set_mode","set_position","set_scale","set_transform","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","height","mode","refresh","scale","state","transform","width","x","y","AlreadyConfiguredHead","AlreadyUsed","Apply","Cancelled","Destroy","DisableHead","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_SUCCEEDED_OPCODE","EVT_SUCCEEDED_SINCE","EnableHead","Error","Event","Failed","REQ_APPLY_OPCODE","REQ_APPLY_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_DISABLE_HEAD_OPCODE","REQ_DISABLE_HEAD_SINCE","REQ_ENABLE_HEAD_OPCODE","REQ_ENABLE_HEAD_SINCE","REQ_TEST_OPCODE","REQ_TEST_SINCE","Request","Succeeded","Test","UnconfiguredHead","ZwlrOutputConfigurationV1","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","destroy","disable_head","enable_head","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","test","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","head","head","AdaptiveSync","AdaptiveSyncState","CurrentMode","Description","Disabled","EVT_ADAPTIVE_SYNC_OPCODE","EVT_ADAPTIVE_SYNC_SINCE","EVT_CURRENT_MODE_OPCODE","EVT_CURRENT_MODE_SINCE","EVT_DESCRIPTION_OPCODE","EVT_DESCRIPTION_SINCE","EVT_ENABLED_OPCODE","EVT_ENABLED_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_MAKE_OPCODE","EVT_MAKE_SINCE","EVT_MODEL_OPCODE","EVT_MODEL_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_PHYSICAL_SIZE_OPCODE","EVT_PHYSICAL_SIZE_SINCE","EVT_POSITION_OPCODE","EVT_POSITION_SINCE","EVT_SCALE_OPCODE","EVT_SCALE_SINCE","EVT_SERIAL_NUMBER_OPCODE","EVT_SERIAL_NUMBER_SINCE","EVT_TRANSFORM_OPCODE","EVT_TRANSFORM_SINCE","Enabled","Enabled","Event","Finished","Make","Mode","Model","Name","PhysicalSize","Position","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Scale","SerialNumber","Transform","ZwlrOutputHeadV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","release","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","description","enabled","height","make","mode","mode","model","name","scale","serial_number","state","transform","width","x","y","CreateConfiguration","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_HEAD_OPCODE","EVT_HEAD_SINCE","Event","Finished","Head","REQ_CREATE_CONFIGURATION_OPCODE","REQ_CREATE_CONFIGURATION_SINCE","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","ZwlrOutputManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_configuration","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","head","serial","serial","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_PREFERRED_OPCODE","EVT_PREFERRED_SINCE","EVT_REFRESH_OPCODE","EVT_REFRESH_SINCE","EVT_SIZE_OPCODE","EVT_SIZE_SINCE","Event","Finished","Preferred","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Refresh","Release","Request","Size","ZwlrOutputModeV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","release","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","height","refresh","width","__interfaces","zwlr_output_configuration_head_v1","zwlr_output_configuration_v1","zwlr_output_head_v1","zwlr_output_manager_v1","zwlr_output_mode_v1","ZWLR_OUTPUT_CONFIGURATION_HEAD_V1_INTERFACE","ZWLR_OUTPUT_CONFIGURATION_V1_INTERFACE","ZWLR_OUTPUT_HEAD_V1_INTERFACE","ZWLR_OUTPUT_MANAGER_V1_INTERFACE","ZWLR_OUTPUT_MODE_V1_INTERFACE","zwlr_output_configuration_head_v1_interface","zwlr_output_configuration_head_v1_requests","zwlr_output_configuration_v1_events","zwlr_output_configuration_v1_interface","zwlr_output_configuration_v1_requests","zwlr_output_head_v1_events","zwlr_output_head_v1_interface","zwlr_output_head_v1_requests","zwlr_output_manager_v1_events","zwlr_output_manager_v1_interface","zwlr_output_manager_v1_requests","zwlr_output_mode_v1_events","zwlr_output_mode_v1_interface","zwlr_output_mode_v1_requests","AlreadySet","Error","Event","InvalidAdaptiveSyncState","InvalidCustomMode","InvalidMode","InvalidScale","InvalidTransform","REQ_SET_ADAPTIVE_SYNC_OPCODE","REQ_SET_ADAPTIVE_SYNC_SINCE","REQ_SET_CUSTOM_MODE_OPCODE","REQ_SET_CUSTOM_MODE_SINCE","REQ_SET_MODE_OPCODE","REQ_SET_MODE_SINCE","REQ_SET_POSITION_OPCODE","REQ_SET_POSITION_SINCE","REQ_SET_SCALE_OPCODE","REQ_SET_SCALE_SINCE","REQ_SET_TRANSFORM_OPCODE","REQ_SET_TRANSFORM_SINCE","Request","SetAdaptiveSync","SetCustomMode","SetMode","SetPosition","SetScale","SetTransform","ZwlrOutputConfigurationHeadV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","height","mode","refresh","scale","state","transform","width","x","y","AlreadyConfiguredHead","AlreadyUsed","Apply","Cancelled","Destroy","DisableHead","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_SUCCEEDED_OPCODE","EVT_SUCCEEDED_SINCE","EnableHead","Error","Event","Failed","REQ_APPLY_OPCODE","REQ_APPLY_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_DISABLE_HEAD_OPCODE","REQ_DISABLE_HEAD_SINCE","REQ_ENABLE_HEAD_OPCODE","REQ_ENABLE_HEAD_SINCE","REQ_TEST_OPCODE","REQ_TEST_SINCE","Request","Succeeded","Test","UnconfiguredHead","ZwlrOutputConfigurationV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancelled","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","failed","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","succeeded","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","head","head","id","AdaptiveSync","AdaptiveSyncState","CurrentMode","Description","Disabled","EVT_ADAPTIVE_SYNC_OPCODE","EVT_ADAPTIVE_SYNC_SINCE","EVT_CURRENT_MODE_OPCODE","EVT_CURRENT_MODE_SINCE","EVT_DESCRIPTION_OPCODE","EVT_DESCRIPTION_SINCE","EVT_ENABLED_OPCODE","EVT_ENABLED_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_MAKE_OPCODE","EVT_MAKE_SINCE","EVT_MODEL_OPCODE","EVT_MODEL_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_PHYSICAL_SIZE_OPCODE","EVT_PHYSICAL_SIZE_SINCE","EVT_POSITION_OPCODE","EVT_POSITION_SINCE","EVT_SCALE_OPCODE","EVT_SCALE_SINCE","EVT_SERIAL_NUMBER_OPCODE","EVT_SERIAL_NUMBER_SINCE","EVT_TRANSFORM_OPCODE","EVT_TRANSFORM_SINCE","Enabled","Enabled","Event","Finished","Make","Mode","Model","Name","PhysicalSize","Position","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Scale","SerialNumber","Transform","ZwlrOutputHeadV1","adaptive_sync","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","current_mode","data","description","enabled","eq","eq","eq","finished","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","make","mode","model","name","object_data","opcode","opcode","parse_request","partial_cmp","physical_size","position","scale","send_event","serial_number","to_owned","to_owned","transform","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","description","enabled","height","make","mode","mode","model","name","scale","serial_number","state","transform","width","x","y","CreateConfiguration","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_HEAD_OPCODE","EVT_HEAD_SINCE","Event","Finished","Head","REQ_CREATE_CONFIGURATION_OPCODE","REQ_CREATE_CONFIGURATION_SINCE","REQ_STOP_OPCODE","REQ_STOP_SINCE","Request","Stop","ZwlrOutputManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","done","eq","eq","finished","fmt","fmt","fmt","from","from","from","from_id","handle","hash","head","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","head","serial","id","serial","EVT_FINISHED_OPCODE","EVT_FINISHED_SINCE","EVT_PREFERRED_OPCODE","EVT_PREFERRED_SINCE","EVT_REFRESH_OPCODE","EVT_REFRESH_SINCE","EVT_SIZE_OPCODE","EVT_SIZE_SINCE","Event","Finished","Preferred","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Refresh","Release","Request","Size","ZwlrOutputModeV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","finished","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","preferred","refresh","send_event","size","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","height","refresh","width","v1","client","server","__interfaces","zwlr_output_power_manager_v1","zwlr_output_power_v1","ZWLR_OUTPUT_POWER_MANAGER_V1_INTERFACE","ZWLR_OUTPUT_POWER_V1_INTERFACE","zwlr_output_power_manager_v1_interface","zwlr_output_power_manager_v1_requests","zwlr_output_power_v1_events","zwlr_output_power_v1_interface","zwlr_output_power_v1_requests","Destroy","Event","GetOutputPower","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_OUTPUT_POWER_OPCODE","REQ_GET_OUTPUT_POWER_SINCE","Request","ZwlrOutputPowerManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","get_output_power","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","Destroy","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","Error","Event","Failed","InvalidMode","Mode","Mode","Off","On","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_MODE_OPCODE","REQ_SET_MODE_SINCE","Request","SetMode","ZwlrOutputPowerV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","destroy","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","hash","hash","hash","id","inert","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","partial_cmp","partial_cmp","send_constructor","send_request","set_mode","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_request","mode","mode","__interfaces","zwlr_output_power_manager_v1","zwlr_output_power_v1","ZWLR_OUTPUT_POWER_MANAGER_V1_INTERFACE","ZWLR_OUTPUT_POWER_V1_INTERFACE","zwlr_output_power_manager_v1_interface","zwlr_output_power_manager_v1_requests","zwlr_output_power_v1_events","zwlr_output_power_v1_interface","zwlr_output_power_v1_requests","Destroy","Event","GetOutputPower","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_OUTPUT_POWER_OPCODE","REQ_GET_OUTPUT_POWER_SINCE","Request","ZwlrOutputPowerManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","id","output","Destroy","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","Error","Event","Failed","InvalidMode","Mode","Mode","Off","On","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SET_MODE_OPCODE","REQ_SET_MODE_SINCE","Request","SetMode","ZwlrOutputPowerV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","failed","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","handle","hash","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mode","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","send_event","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","mode","mode","v1","client","server","__interfaces","zwlr_screencopy_frame_v1","zwlr_screencopy_manager_v1","ZWLR_SCREENCOPY_FRAME_V1_INTERFACE","ZWLR_SCREENCOPY_MANAGER_V1_INTERFACE","zwlr_screencopy_frame_v1_events","zwlr_screencopy_frame_v1_interface","zwlr_screencopy_frame_v1_requests","zwlr_screencopy_manager_v1_interface","zwlr_screencopy_manager_v1_requests","AlreadyUsed","Buffer","BufferDone","Copy","CopyWithDamage","Damage","Destroy","EVT_BUFFER_DONE_OPCODE","EVT_BUFFER_DONE_SINCE","EVT_BUFFER_OPCODE","EVT_BUFFER_SINCE","EVT_DAMAGE_OPCODE","EVT_DAMAGE_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_FLAGS_OPCODE","EVT_FLAGS_SINCE","EVT_LINUX_DMABUF_OPCODE","EVT_LINUX_DMABUF_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","Error","Event","Failed","Flags","Flags","InvalidBuffer","LinuxDmabuf","REQ_COPY_OPCODE","REQ_COPY_SINCE","REQ_COPY_WITH_DAMAGE_OPCODE","REQ_COPY_WITH_DAMAGE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","YInvert","ZwlrScreencopyFrameV1","all","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","backend","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","complement","contains","contains","copy","copy_with_damage","data","destroy","difference","difference","empty","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","hash","hash","hash","id","inert","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","object_data","opcode","opcode","parse_event","partial_cmp","remove","remove","send_constructor","send_request","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","version","write_request","flags","format","format","height","height","height","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","width","width","x","y","buffer","buffer","CaptureOutput","CaptureOutputRegion","Destroy","Event","REQ_CAPTURE_OUTPUT_OPCODE","REQ_CAPTURE_OUTPUT_REGION_OPCODE","REQ_CAPTURE_OUTPUT_REGION_SINCE","REQ_CAPTURE_OUTPUT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrScreencopyManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capture_output","capture_output_region","clone","clone_into","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","height","output","output","overlay_cursor","overlay_cursor","width","x","y","__interfaces","zwlr_screencopy_frame_v1","zwlr_screencopy_manager_v1","ZWLR_SCREENCOPY_FRAME_V1_INTERFACE","ZWLR_SCREENCOPY_MANAGER_V1_INTERFACE","zwlr_screencopy_frame_v1_events","zwlr_screencopy_frame_v1_interface","zwlr_screencopy_frame_v1_requests","zwlr_screencopy_manager_v1_interface","zwlr_screencopy_manager_v1_requests","AlreadyUsed","Buffer","BufferDone","Copy","CopyWithDamage","Damage","Destroy","EVT_BUFFER_DONE_OPCODE","EVT_BUFFER_DONE_SINCE","EVT_BUFFER_OPCODE","EVT_BUFFER_SINCE","EVT_DAMAGE_OPCODE","EVT_DAMAGE_SINCE","EVT_FAILED_OPCODE","EVT_FAILED_SINCE","EVT_FLAGS_OPCODE","EVT_FLAGS_SINCE","EVT_LINUX_DMABUF_OPCODE","EVT_LINUX_DMABUF_SINCE","EVT_READY_OPCODE","EVT_READY_SINCE","Error","Event","Failed","Flags","Flags","InvalidBuffer","LinuxDmabuf","REQ_COPY_OPCODE","REQ_COPY_SINCE","REQ_COPY_WITH_DAMAGE_OPCODE","REQ_COPY_WITH_DAMAGE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Ready","Request","YInvert","ZwlrScreencopyFrameV1","all","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_done","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","complement","contains","contains","damage","data","difference","difference","empty","empty","eq","eq","eq","eq","extend","failed","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_name","from_name","handle","hash","hash","hash","id","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","linux_dmabuf","not","object_data","opcode","opcode","parse_request","partial_cmp","ready","remove","remove","send_event","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","version","write_event","flags","format","format","height","height","height","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","width","width","x","y","buffer","buffer","CaptureOutput","CaptureOutputRegion","Destroy","Event","REQ_CAPTURE_OUTPUT_OPCODE","REQ_CAPTURE_OUTPUT_REGION_OPCODE","REQ_CAPTURE_OUTPUT_REGION_SINCE","REQ_CAPTURE_OUTPUT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrScreencopyManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","frame","frame","height","output","output","overlay_cursor","overlay_cursor","width","x","y","v1","client","server","__interfaces","zwlr_virtual_pointer_manager_v1","zwlr_virtual_pointer_v1","ZWLR_VIRTUAL_POINTER_MANAGER_V1_INTERFACE","ZWLR_VIRTUAL_POINTER_V1_INTERFACE","zwlr_virtual_pointer_manager_v1_interface","zwlr_virtual_pointer_manager_v1_requests","zwlr_virtual_pointer_v1_interface","zwlr_virtual_pointer_v1_requests","CreateVirtualPointer","CreateVirtualPointerWithOutput","Destroy","Event","REQ_CREATE_VIRTUAL_POINTER_OPCODE","REQ_CREATE_VIRTUAL_POINTER_SINCE","REQ_CREATE_VIRTUAL_POINTER_WITH_OUTPUT_OPCODE","REQ_CREATE_VIRTUAL_POINTER_WITH_OUTPUT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrVirtualPointerManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","backend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_virtual_pointer","create_virtual_pointer_with_output","data","destroy","eq","eq","fmt","fmt","fmt","from","from","from","from_id","hash","id","inert","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_event","send_constructor","send_request","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_request","output","seat","seat","Axis","AxisDiscrete","AxisSource","AxisStop","Button","Destroy","Error","Event","Frame","InvalidAxis","InvalidAxisSource","Motion","MotionAbsolute","REQ_AXIS_DISCRETE_OPCODE","REQ_AXIS_DISCRETE_SINCE","REQ_AXIS_OPCODE","REQ_AXIS_SINCE","REQ_AXIS_SOURCE_OPCODE","REQ_AXIS_SOURCE_SINCE","REQ_AXIS_STOP_OPCODE","REQ_AXIS_STOP_SINCE","REQ_BUTTON_OPCODE","REQ_BUTTON_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FRAME_OPCODE","REQ_FRAME_SINCE","REQ_MOTION_ABSOLUTE_OPCODE","REQ_MOTION_ABSOLUTE_SINCE","REQ_MOTION_OPCODE","REQ_MOTION_SINCE","Request","ZwlrVirtualPointerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","axis","axis_discrete","axis_source","axis_stop","backend","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone_into","clone_into","cmp","data","destroy","eq","eq","eq","fmt","fmt","fmt","fmt","frame","from","from","from","from","from_id","hash","hash","id","inert","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","motion","motion_absolute","object_data","opcode","opcode","parse_event","partial_cmp","send_constructor","send_request","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_request","axis","axis","axis","axis_source","button","discrete","dx","dy","state","time","time","time","time","time","time","value","value","x","x_extent","y","y_extent","__interfaces","zwlr_virtual_pointer_manager_v1","zwlr_virtual_pointer_v1","ZWLR_VIRTUAL_POINTER_MANAGER_V1_INTERFACE","ZWLR_VIRTUAL_POINTER_V1_INTERFACE","zwlr_virtual_pointer_manager_v1_interface","zwlr_virtual_pointer_manager_v1_requests","zwlr_virtual_pointer_v1_interface","zwlr_virtual_pointer_v1_requests","CreateVirtualPointer","CreateVirtualPointerWithOutput","Destroy","Event","REQ_CREATE_VIRTUAL_POINTER_OPCODE","REQ_CREATE_VIRTUAL_POINTER_SINCE","REQ_CREATE_VIRTUAL_POINTER_WITH_OUTPUT_OPCODE","REQ_CREATE_VIRTUAL_POINTER_WITH_OUTPUT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Request","ZwlrVirtualPointerManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","id","id","output","seat","seat","Axis","AxisDiscrete","AxisSource","AxisStop","Button","Destroy","Error","Event","Frame","InvalidAxis","InvalidAxisSource","Motion","MotionAbsolute","REQ_AXIS_DISCRETE_OPCODE","REQ_AXIS_DISCRETE_SINCE","REQ_AXIS_OPCODE","REQ_AXIS_SINCE","REQ_AXIS_SOURCE_OPCODE","REQ_AXIS_SOURCE_SINCE","REQ_AXIS_STOP_OPCODE","REQ_AXIS_STOP_SINCE","REQ_BUTTON_OPCODE","REQ_BUTTON_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FRAME_OPCODE","REQ_FRAME_SINCE","REQ_MOTION_ABSOLUTE_OPCODE","REQ_MOTION_ABSOLUTE_SINCE","REQ_MOTION_OPCODE","REQ_MOTION_SINCE","Request","ZwlrVirtualPointerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","axis","axis","axis","axis_source","button","discrete","dx","dy","state","time","time","time","time","time","time","value","value","x","x_extent","y","y_extent"],"q":[[0,"wayland_protocols_wlr"],[10,"wayland_protocols_wlr::data_control"],[11,"wayland_protocols_wlr::data_control::v1"],[13,"wayland_protocols_wlr::data_control::v1::client"],[18,"wayland_protocols_wlr::data_control::v1::client::__interfaces"],[33,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_device_v1"],[143,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_device_v1::Event"],[146,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_device_v1::Request"],[148,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_manager_v1"],[223,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_manager_v1::Request"],[224,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_offer_v1"],[298,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_offer_v1::Event"],[299,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_offer_v1::Request"],[301,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_source_v1"],[401,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_source_v1::Event"],[403,"wayland_protocols_wlr::data_control::v1::client::zwlr_data_control_source_v1::Request"],[404,"wayland_protocols_wlr::data_control::v1::server"],[409,"wayland_protocols_wlr::data_control::v1::server::__interfaces"],[424,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_device_v1"],[533,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_device_v1::Event"],[536,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_device_v1::Request"],[538,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_manager_v1"],[608,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_manager_v1::Request"],[611,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_offer_v1"],[682,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_offer_v1::Event"],[683,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_offer_v1::Request"],[685,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_source_v1"],[783,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_source_v1::Event"],[785,"wayland_protocols_wlr::data_control::v1::server::zwlr_data_control_source_v1::Request"],[786,"wayland_protocols_wlr::export_dmabuf"],[787,"wayland_protocols_wlr::export_dmabuf::v1"],[789,"wayland_protocols_wlr::export_dmabuf::v1::client"],[792,"wayland_protocols_wlr::export_dmabuf::v1::client::__interfaces"],[799,"wayland_protocols_wlr::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1"],[926,"wayland_protocols_wlr::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event"],[946,"wayland_protocols_wlr::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1"],[1017,"wayland_protocols_wlr::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1::Request"],[1019,"wayland_protocols_wlr::export_dmabuf::v1::server"],[1022,"wayland_protocols_wlr::export_dmabuf::v1::server::__interfaces"],[1029,"wayland_protocols_wlr::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1"],[1157,"wayland_protocols_wlr::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event"],[1177,"wayland_protocols_wlr::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1"],[1244,"wayland_protocols_wlr::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1::Request"],[1247,"wayland_protocols_wlr::foreign_toplevel"],[1248,"wayland_protocols_wlr::foreign_toplevel::v1"],[1250,"wayland_protocols_wlr::foreign_toplevel::v1::client"],[1253,"wayland_protocols_wlr::foreign_toplevel::v1::client::__interfaces"],[1261,"wayland_protocols_wlr::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1"],[1437,"wayland_protocols_wlr::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event"],[1443,"wayland_protocols_wlr::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Request"],[1450,"wayland_protocols_wlr::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1"],[1523,"wayland_protocols_wlr::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1::Event"],[1524,"wayland_protocols_wlr::foreign_toplevel::v1::server"],[1527,"wayland_protocols_wlr::foreign_toplevel::v1::server::__interfaces"],[1535,"wayland_protocols_wlr::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1"],[1707,"wayland_protocols_wlr::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event"],[1713,"wayland_protocols_wlr::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Request"],[1720,"wayland_protocols_wlr::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1"],[1792,"wayland_protocols_wlr::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1::Event"],[1793,"wayland_protocols_wlr::gamma_control"],[1794,"wayland_protocols_wlr::gamma_control::v1"],[1796,"wayland_protocols_wlr::gamma_control::v1::client"],[1799,"wayland_protocols_wlr::gamma_control::v1::client::__interfaces"],[1806,"wayland_protocols_wlr::gamma_control::v1::client::zwlr_gamma_control_manager_v1"],[1877,"wayland_protocols_wlr::gamma_control::v1::client::zwlr_gamma_control_manager_v1::Request"],[1878,"wayland_protocols_wlr::gamma_control::v1::client::zwlr_gamma_control_v1"],[1978,"wayland_protocols_wlr::gamma_control::v1::client::zwlr_gamma_control_v1::Event"],[1979,"wayland_protocols_wlr::gamma_control::v1::client::zwlr_gamma_control_v1::Request"],[1980,"wayland_protocols_wlr::gamma_control::v1::server"],[1983,"wayland_protocols_wlr::gamma_control::v1::server::__interfaces"],[1990,"wayland_protocols_wlr::gamma_control::v1::server::zwlr_gamma_control_manager_v1"],[2057,"wayland_protocols_wlr::gamma_control::v1::server::zwlr_gamma_control_manager_v1::Request"],[2059,"wayland_protocols_wlr::gamma_control::v1::server::zwlr_gamma_control_v1"],[2157,"wayland_protocols_wlr::gamma_control::v1::server::zwlr_gamma_control_v1::Event"],[2158,"wayland_protocols_wlr::gamma_control::v1::server::zwlr_gamma_control_v1::Request"],[2159,"wayland_protocols_wlr::input_inhibitor"],[2160,"wayland_protocols_wlr::input_inhibitor::v1"],[2162,"wayland_protocols_wlr::input_inhibitor::v1::client"],[2165,"wayland_protocols_wlr::input_inhibitor::v1::client::__interfaces"],[2171,"wayland_protocols_wlr::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1"],[2261,"wayland_protocols_wlr::input_inhibitor::v1::client::zwlr_input_inhibitor_v1"],[2328,"wayland_protocols_wlr::input_inhibitor::v1::server"],[2331,"wayland_protocols_wlr::input_inhibitor::v1::server::__interfaces"],[2337,"wayland_protocols_wlr::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1"],[2424,"wayland_protocols_wlr::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1::Request"],[2425,"wayland_protocols_wlr::input_inhibitor::v1::server::zwlr_input_inhibitor_v1"],[2489,"wayland_protocols_wlr::layer_shell"],[2490,"wayland_protocols_wlr::layer_shell::v1"],[2492,"wayland_protocols_wlr::layer_shell::v1::client"],[2495,"wayland_protocols_wlr::layer_shell::v1::client::__interfaces"],[2502,"wayland_protocols_wlr::layer_shell::v1::client::zwlr_layer_shell_v1"],[2624,"wayland_protocols_wlr::layer_shell::v1::client::zwlr_layer_shell_v1::Request"],[2628,"wayland_protocols_wlr::layer_shell::v1::client::zwlr_layer_surface_v1"],[2870,"wayland_protocols_wlr::layer_shell::v1::client::zwlr_layer_surface_v1::Event"],[2873,"wayland_protocols_wlr::layer_shell::v1::client::zwlr_layer_surface_v1::Request"],[2885,"wayland_protocols_wlr::layer_shell::v1::server"],[2888,"wayland_protocols_wlr::layer_shell::v1::server::__interfaces"],[2895,"wayland_protocols_wlr::layer_shell::v1::server::zwlr_layer_shell_v1"],[3013,"wayland_protocols_wlr::layer_shell::v1::server::zwlr_layer_shell_v1::Request"],[3018,"wayland_protocols_wlr::layer_shell::v1::server::zwlr_layer_surface_v1"],[3251,"wayland_protocols_wlr::layer_shell::v1::server::zwlr_layer_surface_v1::Event"],[3254,"wayland_protocols_wlr::layer_shell::v1::server::zwlr_layer_surface_v1::Request"],[3266,"wayland_protocols_wlr::output_management"],[3267,"wayland_protocols_wlr::output_management::v1"],[3269,"wayland_protocols_wlr::output_management::v1::client"],[3275,"wayland_protocols_wlr::output_management::v1::client::__interfaces"],[3294,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_configuration_head_v1"],[3409,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_configuration_head_v1::Request"],[3418,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_configuration_v1"],[3535,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_configuration_v1::Request"],[3537,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_head_v1"],[3670,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_head_v1::Event"],[3685,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_manager_v1"],[3765,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_manager_v1::Event"],[3767,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_manager_v1::Request"],[3768,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_mode_v1"],[3847,"wayland_protocols_wlr::output_management::v1::client::zwlr_output_mode_v1::Event"],[3850,"wayland_protocols_wlr::output_management::v1::server"],[3856,"wayland_protocols_wlr::output_management::v1::server::__interfaces"],[3875,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_configuration_head_v1"],[3982,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_configuration_head_v1::Request"],[3991,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_configuration_v1"],[4104,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_configuration_v1::Request"],[4107,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_head_v1"],[4251,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_head_v1::Event"],[4266,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_manager_v1"],[4345,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_manager_v1::Event"],[4347,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_manager_v1::Request"],[4349,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_mode_v1"],[4429,"wayland_protocols_wlr::output_management::v1::server::zwlr_output_mode_v1::Event"],[4432,"wayland_protocols_wlr::output_power_management"],[4433,"wayland_protocols_wlr::output_power_management::v1"],[4435,"wayland_protocols_wlr::output_power_management::v1::client"],[4438,"wayland_protocols_wlr::output_power_management::v1::client::__interfaces"],[4445,"wayland_protocols_wlr::output_power_management::v1::client::zwlr_output_power_manager_v1"],[4516,"wayland_protocols_wlr::output_power_management::v1::client::zwlr_output_power_manager_v1::Request"],[4517,"wayland_protocols_wlr::output_power_management::v1::client::zwlr_output_power_v1"],[4641,"wayland_protocols_wlr::output_power_management::v1::client::zwlr_output_power_v1::Event"],[4642,"wayland_protocols_wlr::output_power_management::v1::client::zwlr_output_power_v1::Request"],[4643,"wayland_protocols_wlr::output_power_management::v1::server"],[4646,"wayland_protocols_wlr::output_power_management::v1::server::__interfaces"],[4653,"wayland_protocols_wlr::output_power_management::v1::server::zwlr_output_power_manager_v1"],[4720,"wayland_protocols_wlr::output_power_management::v1::server::zwlr_output_power_manager_v1::Request"],[4722,"wayland_protocols_wlr::output_power_management::v1::server::zwlr_output_power_v1"],[4844,"wayland_protocols_wlr::output_power_management::v1::server::zwlr_output_power_v1::Event"],[4845,"wayland_protocols_wlr::output_power_management::v1::server::zwlr_output_power_v1::Request"],[4846,"wayland_protocols_wlr::screencopy"],[4847,"wayland_protocols_wlr::screencopy::v1"],[4849,"wayland_protocols_wlr::screencopy::v1::client"],[4852,"wayland_protocols_wlr::screencopy::v1::client::__interfaces"],[4859,"wayland_protocols_wlr::screencopy::v1::client::zwlr_screencopy_frame_v1"],[5062,"wayland_protocols_wlr::screencopy::v1::client::zwlr_screencopy_frame_v1::Event"],[5077,"wayland_protocols_wlr::screencopy::v1::client::zwlr_screencopy_frame_v1::Request"],[5079,"wayland_protocols_wlr::screencopy::v1::client::zwlr_screencopy_manager_v1"],[5154,"wayland_protocols_wlr::screencopy::v1::client::zwlr_screencopy_manager_v1::Request"],[5162,"wayland_protocols_wlr::screencopy::v1::server"],[5165,"wayland_protocols_wlr::screencopy::v1::server::__interfaces"],[5172,"wayland_protocols_wlr::screencopy::v1::server::zwlr_screencopy_frame_v1"],[5377,"wayland_protocols_wlr::screencopy::v1::server::zwlr_screencopy_frame_v1::Event"],[5392,"wayland_protocols_wlr::screencopy::v1::server::zwlr_screencopy_frame_v1::Request"],[5394,"wayland_protocols_wlr::screencopy::v1::server::zwlr_screencopy_manager_v1"],[5464,"wayland_protocols_wlr::screencopy::v1::server::zwlr_screencopy_manager_v1::Request"],[5474,"wayland_protocols_wlr::virtual_pointer"],[5475,"wayland_protocols_wlr::virtual_pointer::v1"],[5477,"wayland_protocols_wlr::virtual_pointer::v1::client"],[5480,"wayland_protocols_wlr::virtual_pointer::v1::client::__interfaces"],[5486,"wayland_protocols_wlr::virtual_pointer::v1::client::zwlr_virtual_pointer_manager_v1"],[5561,"wayland_protocols_wlr::virtual_pointer::v1::client::zwlr_virtual_pointer_manager_v1::Request"],[5564,"wayland_protocols_wlr::virtual_pointer::v1::client::zwlr_virtual_pointer_v1"],[5687,"wayland_protocols_wlr::virtual_pointer::v1::client::zwlr_virtual_pointer_v1::Request"],[5708,"wayland_protocols_wlr::virtual_pointer::v1::server"],[5711,"wayland_protocols_wlr::virtual_pointer::v1::server::__interfaces"],[5717,"wayland_protocols_wlr::virtual_pointer::v1::server::zwlr_virtual_pointer_manager_v1"],[5787,"wayland_protocols_wlr::virtual_pointer::v1::server::zwlr_virtual_pointer_manager_v1::Request"],[5792,"wayland_protocols_wlr::virtual_pointer::v1::server::zwlr_virtual_pointer_v1"],[5904,"wayland_protocols_wlr::virtual_pointer::v1::server::zwlr_virtual_pointer_v1::Request"],[5925,"core::any"],[5926,"wayland_backend::rs::client"],[5927,"wayland_backend::rs::client"],[5928,"core::option"],[5929,"core::marker"],[5930,"core::marker"],[5931,"core::fmt"],[5932,"core::fmt"],[5933,"wayland_backend::types::client"],[5934,"core::result"],[5935,"core::hash"],[5936,"wayland_backend::protocol"],[5937,"alloc::boxed"],[5938,"alloc::sync"],[5939,"alloc::rc"],[5940,"wayland_backend::rs::client"],[5941,"wayland_backend::protocol"],[5942,"wayland_client::event_queue"],[5943,"alloc::string"],[5944,"wayland_backend::rs::server"],[5945,"wayland_server"],[5946,"wayland_server::display"],[5947,"wayland_backend::types::server"],[5948,"wayland_backend::rs::server"],[5949,"wayland_client::protocol::wl_surface"],[5950,"wayland_server::protocol::wl_output"],[5951,"alloc::vec"],[5952,"core::iter::traits::collect"],[5953,"wayland_protocols::xdg::shell::generated::client::xdg_popup"],[5954,"bitflags::iter"],[5955,"bitflags::iter"],[5956,"wayland_server::protocol::wl_shm"],[5957,"wayland_client::protocol::wl_pointer"],[5958,"wayland_client::protocol::wl_pointer"]],"d":["Control data devices, particularly the clipboard.","A protocol for low overhead screen content capturing","List and control opened apps","Manage gamma tables of outputs.","Inhibits input events to other clients","Layered shell protocol","Output management protocol","Output power management protocol","Screen content capturing on client buffers","Virtual pointer protocol","","Client-side API of this protocol","Server-side API of this protocol","","manage a data device for a seat","manager to control data devices","offer to transfer data","offer to transfer data","","","","","","","","","","","","","","","","introduce a new wlr_data_control_offer","destroy this data device","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","this data control is no longer valid","advertise new primary selection","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","advertise new selection","copy data to the primary selection","copy data to the selection","source given to set_selection or set_primary_selection was …","manage a data device for a seat","","","","","","","","","","","","","","","","","","","","","","","","","destroy this data device","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","copy data to the primary selection","copy data to the selection","","","","","","","","","","","","","","","","","","","","","","","create a new data source","destroy the manager","","get a data device for a seat","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to control data devices","","","","","","","","","","","","","","","","","create a new data source","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get a data device for a seat","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","destroy this offer","The wire opcode for this event","The minimal object version supporting this event","","advertise offered MIME type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","request that the data is transferred","","offer to transfer data","","","","","","","","","","","","","","","","","","destroy this offer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","request that the data is transferred","","","","","","","","","","","","","","","offered MIME type","file descriptor for data transfer","MIME type desired by receiver","selection was cancelled","destroy this source","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","offer sent after wlr_data_control_device.set_selection","add an offered MIME type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","send the data","offer to transfer data","","","","","","","","","","","","","","","","","","","","","","","","","destroy this source","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","add an offered MIME type","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","file descriptor for the data","MIME type for the data","MIME type offered by the data source","","manage a data device for a seat","manager to control data devices","offer to transfer data","offer to transfer data","","","","","","","","","","","","","","","","introduce a new wlr_data_control_offer","destroy this data device","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","this data control is no longer valid","advertise new primary selection","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","advertise new selection","copy data to the primary selection","copy data to the selection","source given to set_selection or set_primary_selection was …","manage a data device for a seat","","","","","","","","","","","","","","","","","","","","","","","","introduce a new wlr_data_control_offer","","","","this data control is no longer valid","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","advertise new primary selection","advertise new selection","","","","","","","","","","","","","","","","","","","","","","","","create a new data source","destroy the manager","","get a data device for a seat","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to control data devices","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","data source to create","","","destroy this offer","The wire opcode for this event","The minimal object version supporting this event","","advertise offered MIME type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","request that the data is transferred","","offer to transfer data","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","advertise offered MIME type","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","offered MIME type","file descriptor for data transfer","MIME type desired by receiver","selection was cancelled","destroy this source","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","offer sent after wlr_data_control_device.set_selection","add an offered MIME type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","send the data","offer to transfer data","","","","","","","","","","","","","","","","","","selection was cancelled","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","send the data","","","","","","","","","","","","","","","","","","","file descriptor for the data","MIME type for the data","MIME type offered by the data source","","Client-side API of this protocol","Server-side API of this protocol","","a DMA-BUF frame","manager to inform clients and begin capturing","","","","","","","","indicates the frame is no longer valid","cancel reason","delete this object, used or not","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","frame flags","a frame description","an object description","fatal error, source will not produce frames","The wire opcode for this request","The minimal object version supporting this request","indicates frame is available for reading","","temporary error, source will produce more frames","temporary error, source will produce more frames","clients should copy frame before processing","a DMA-BUF frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","delete this object, used or not","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","flags which indicate properties (invert, interlacing), has …","fd of the current object","indicates special frame features","format of the frame (DRM_FORMAT_*)","frame height in pixels","index of the current object","drm format modifier, high","drm format modifier, low","indicates how many objects (FDs) the frame has (max 4)","starting point for the data in the object’s fd","crop offset for the x axis","crop offset for the y axis","index of the plane the data in the object applies to","indicates a reason for cancelling this frame capture","size in bytes for the current object","line size in bytes","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","frame width in pixels","capture a frame from an output","destroy the manager","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to inform clients and begin capturing","","","","","","","","","","","","","","","capture a frame from an output","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","include custom client hardware cursor on top of the frame","","a DMA-BUF frame","manager to inform clients and begin capturing","","","","","","","","indicates the frame is no longer valid","cancel reason","delete this object, used or not","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","frame flags","a frame description","an object description","fatal error, source will not produce frames","The wire opcode for this request","The minimal object version supporting this request","indicates frame is available for reading","","temporary error, source will produce more frames","temporary error, source will produce more frames","clients should copy frame before processing","a DMA-BUF frame","","","","","","","","","","","","","","","","","","","","","","indicates the frame is no longer valid","","","","","","","","","","","","","","","","","","","a frame description","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","an object description","","Get the opcode number of this message","Get the opcode number of this message","","","","indicates frame is available for reading","","","","","","","","","","","","","","","","","","","","","","","","flags which indicate properties (invert, interlacing), has …","fd of the current object","indicates special frame features","format of the frame (DRM_FORMAT_*)","frame height in pixels","index of the current object","drm format modifier, high","drm format modifier, low","indicates how many objects (FDs) the frame has (max 4)","starting point for the data in the object’s fd","crop offset for the x axis","crop offset for the y axis","index of the plane the data in the object applies to","indicates a reason for cancelling this frame capture","size in bytes for the current object","line size in bytes","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","frame width in pixels","capture a frame from an output","destroy the manager","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to inform clients and begin capturing","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","include custom client hardware cursor on top of the frame","","Client-side API of this protocol","Server-side API of this protocol","","an opened toplevel","list and control opened apps","","","","","","","","","activate the toplevel","the toplevel is active","app-id change","request that the toplevel be closed","this toplevel has been destroyed","destroy the zwlr_foreign_toplevel_handle_v1 object","all information about the toplevel has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the toplevel is fullscreen","the provided rectangle is invalid","the toplevel is maximized","the toplevel is minimized","toplevel entered an output","toplevel left an output","parent change","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","request that the toplevel be fullscreened","requests that the toplevel be maximized","requests that the toplevel be minimized","the rectangle which represents the toplevel","types of states on the toplevel","the toplevel state changed","title change","request that the toplevel be unfullscreened","requests that the toplevel be unmaximized","requests that the toplevel be unminimized","an opened toplevel","activate the toplevel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","request that the toplevel be closed","","","","destroy the zwlr_foreign_toplevel_handle_v1 object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","request that the toplevel be fullscreened","requests that the toplevel be maximized","requests that the toplevel be minimized","the rectangle which represents the toplevel","","","","","","","","","","","","","","","","","","","","","request that the toplevel be unfullscreened","requests that the toplevel be unmaximized","requests that the toplevel be unminimized","","","","","","","","","","","","","","","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the toplevel manager","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a toplevel has been created","list and control opened apps","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","stop sending events","","","","","","","","","","","","","","","an opened toplevel","list and control opened apps","","","","","","","","","activate the toplevel","the toplevel is active","app-id change","request that the toplevel be closed","this toplevel has been destroyed","destroy the zwlr_foreign_toplevel_handle_v1 object","all information about the toplevel has been sent","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the toplevel is fullscreen","the provided rectangle is invalid","the toplevel is maximized","the toplevel is minimized","toplevel entered an output","toplevel left an output","parent change","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","request that the toplevel be fullscreened","requests that the toplevel be maximized","requests that the toplevel be minimized","the rectangle which represents the toplevel","types of states on the toplevel","the toplevel state changed","title change","request that the toplevel be unfullscreened","requests that the toplevel be unmaximized","requests that the toplevel be unminimized","an opened toplevel","app-id change","","","","","","","","","","","","","","","","","","","","","","","","","","","","this toplevel has been destroyed","","","","all information about the toplevel has been sent","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","toplevel entered an output","toplevel left an output","parent change","","","","","the toplevel state changed","title change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the toplevel manager","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","a toplevel has been created","list and control opened apps","","","","","","","","","","","","","","","","","","","the compositor has finished with the toplevel manager","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","a toplevel has been created","","","","","","","","","","","","","","Client-side API of this protocol","Server-side API of this protocol","","manager to create per-output gamma controls","adjust gamma tables for an output","","","","","","","","destroy the manager","","get a gamma control for an output","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to create per-output gamma controls","","","","","","","","","","","","","","","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get a gamma control for an output","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","destroy this control","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","object no longer valid","size of gamma ramps","invalid gamma tables","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the gamma table","adjust gamma tables for an output","","","","","","","","","","","","","","","","","","","","","","","","","destroy this control","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","set the gamma table","","","","","","","","","","","","","","","","","","number of elements in a ramp","gamma table file descriptor","","manager to create per-output gamma controls","adjust gamma tables for an output","","","","","","","","destroy the manager","","get a gamma control for an output","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to create per-output gamma controls","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","destroy this control","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","object no longer valid","size of gamma ramps","invalid gamma tables","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set the gamma table","adjust gamma tables for an output","","","","","","","","","","","","","","","","","","","","","","","","","","","object no longer valid","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","size of gamma ramps","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","number of elements in a ramp","gamma table file descriptor","","Client-side API of this protocol","Server-side API of this protocol","","inhibits input events to other clients","inhibits input to other clients","","","","","","","an input inhibitor is already in use on the compositor","","","inhibit input to other clients","The wire opcode for this request","The minimal object version supporting this request","","inhibits input events to other clients","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","inhibit input to other clients","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","destroy the input inhibitor object","","The wire opcode for this request","The minimal object version supporting this request","","inhibits input to other clients","","","","","","","","","","","","","","","","","","destroy the input inhibitor object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","inhibits input events to other clients","inhibits input to other clients","","","","","","","an input inhibitor is already in use on the compositor","","","inhibit input to other clients","The wire opcode for this request","The minimal object version supporting this request","","inhibits input events to other clients","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","destroy the input inhibitor object","","The wire opcode for this request","The minimal object version supporting this request","","inhibits input to other clients","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","Client-side API of this protocol","Server-side API of this protocol","","create surfaces that are layers of the desktop","layer metadata interface","","","","","","","","wl_surface has a buffer attached or committed","","","destroy the layer_shell object","","","create a layer_surface from a surface","layer value is invalid","available layers for surfaces","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","wl_surface has another role","","create surfaces that are layers of the desktop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the layer_shell object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","create a layer_surface from a surface","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","layer to add this surface to","namespace for the layer surface","","","ack a configure event","","the bottom edge of the anchor rectangle","surface should be closed","suggest a surface change","destroy the layer_surface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","request exclusive keyboard focus","assign this layer_surface as an xdg_popup parent","anchor bitfield is invalid","keyboard interactivity is invalid","size is invalid","provided surface state is invalid","types of keyboard interaction possible for a layer shell …","the left edge of the anchor rectangle","no keyboard focus is possible","request regular keyboard focus semantics","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the right edge of the anchor rectangle","configures the anchor point of the surface","configures the exclusive geometry of this surface","requests keyboard events","change the layer of the surface","sets a margin from the anchor point","sets the size of the surface","the top edge of the anchor rectangle","layer metadata interface","ack a configure event","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","destroy the layer_surface","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","assign this layer_surface as an xdg_popup parent","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","configures the anchor point of the surface","configures the exclusive geometry of this surface","requests keyboard events","change the layer of the surface","sets a margin from the anchor point","sets the size of the surface","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","layer to move this surface to","","","","the serial from the configure event","","","","","create surfaces that are layers of the desktop","layer metadata interface","","","","","","","","wl_surface has a buffer attached or committed","","","destroy the layer_shell object","","","create a layer_surface from a surface","layer value is invalid","available layers for surfaces","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","wl_surface has another role","","create surfaces that are layers of the desktop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","layer to add this surface to","namespace for the layer surface","","","ack a configure event","","the bottom edge of the anchor rectangle","surface should be closed","suggest a surface change","destroy the layer_surface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","request exclusive keyboard focus","assign this layer_surface as an xdg_popup parent","anchor bitfield is invalid","keyboard interactivity is invalid","size is invalid","provided surface state is invalid","types of keyboard interaction possible for a layer shell …","the left edge of the anchor rectangle","no keyboard focus is possible","request regular keyboard focus semantics","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the right edge of the anchor rectangle","configures the anchor point of the surface","configures the exclusive geometry of this surface","requests keyboard events","change the layer of the surface","sets a margin from the anchor point","sets the size of the surface","the top edge of the anchor rectangle","layer metadata interface","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","surface should be closed","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","suggest a surface change","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","layer to move this surface to","","","","the serial from the configure event","","","","","Client-side API of this protocol","Server-side API of this protocol","","head configuration","output configuration","output device","output device configuration manager","output mode","","","","","","","","","","","","","","","","","","","","property has already been set","","","invalid enum value used in the set_adaptive_sync request","mode is invalid","mode doesn’t belong to head","scale negative or zero","transform value outside enum","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","enable/disable adaptive sync","set a custom mode","set the mode","set the position","set the scale","set the transform","head configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","enable/disable adaptive sync","set a custom mode","set the mode","set the position","set the scale","set the transform","","","","","","","","","","","","","","","","","","height of the mode in hardware units","","vertical refresh rate in mHz or zero","","","","width of the mode in hardware units","x position in the global compositor space","y position in the global compositor space","head has been configured twice","request sent after configuration has been applied or tested","apply the configuration","configuration has been cancelled","destroy the output configuration","disable a head","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enable and configure a head","","","configuration changes failed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","configuration changes succeeded","test the configuration","head has not been configured","output configuration","apply the configuration","","","","","","","","","","","","","","","","","","","","","","","","","destroy the output configuration","disable a head","enable and configure a head","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","test the configuration","","","","","","","","","","","","","","","","","","the head to be enabled","the head to be disabled","current adaptive sync state","","current mode","head description","adaptive sync is disabled","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","adaptive sync is enabled","head is enabled or disabled","","the head has disappeared","head manufacturer","introduce a mode","head model","head name","head physical size","current position","The wire opcode for this request","The minimal object version supporting this request","destroy the head object","","current scale","head serial number","current transformation","output device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","destroy the head object","","","","","","","","","","","","","","","","","","","","","zero if disabled, non-zero if enabled","height in millimeters of the output","","","","","","","","","","width in millimeters of the output","x position within the global compositor space","y position within the global compositor space","create a new output configuration object","sent all information about current configuration","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the manager","introduce a new head","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","output device configuration manager","","","","","","","","","","","","","","","","","create a new output configuration object","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","stop sending events","","","","","","","","","","","","","","current configuration serial","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the mode has disappeared","mode is preferred","The wire opcode for this request","The minimal object version supporting this request","mode refresh rate","destroy the mode object","","mode size","output mode","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","destroy the mode object","","","","","","","","","","","","","","","height of the mode in hardware units","vertical refresh rate in mHz","width of the mode in hardware units","","head configuration","output configuration","output device","output device configuration manager","output mode","","","","","","","","","","","","","","","","","","","","property has already been set","","","invalid enum value used in the set_adaptive_sync request","mode is invalid","mode doesn’t belong to head","scale negative or zero","transform value outside enum","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","enable/disable adaptive sync","set a custom mode","set the mode","set the position","set the scale","set the transform","head configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","height of the mode in hardware units","","vertical refresh rate in mHz or zero","","","","width of the mode in hardware units","x position in the global compositor space","y position in the global compositor space","head has been configured twice","request sent after configuration has been applied or tested","apply the configuration","configuration has been cancelled","destroy the output configuration","disable a head","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enable and configure a head","","","configuration changes failed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","configuration changes succeeded","test the configuration","head has not been configured","output configuration","","","","","","","","","","","","","","","","","","configuration has been cancelled","","","","","","","","","","configuration changes failed","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","configuration changes succeeded","","","","","","","","","","","","","","","","","","the head to be enabled","the head to be disabled","a new object to configure the head","current adaptive sync state","","current mode","head description","adaptive sync is disabled","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","adaptive sync is enabled","head is enabled or disabled","","the head has disappeared","head manufacturer","introduce a mode","head model","head name","head physical size","current position","The wire opcode for this request","The minimal object version supporting this request","destroy the head object","","current scale","head serial number","current transformation","output device","current adaptive sync state","","","","","","","","","","","","","","","","","","","","","","","current mode","","head description","head is enabled or disabled","","","","the head has disappeared","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","head manufacturer","introduce a mode","head model","head name","","Get the opcode number of this message","Get the opcode number of this message","","","head physical size","current position","current scale","","head serial number","","","current transformation","","","","","","","","","","","","","","","","","zero if disabled, non-zero if enabled","height in millimeters of the output","","","","","","","","","","width in millimeters of the output","x position within the global compositor space","y position within the global compositor space","create a new output configuration object","sent all information about current configuration","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the compositor has finished with the manager","introduce a new head","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","stop sending events","output device configuration manager","","","","","","","","","","","","","","","","","sent all information about current configuration","","","the compositor has finished with the manager","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","introduce a new head","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","current configuration serial","","","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","the mode has disappeared","mode is preferred","The wire opcode for this request","The minimal object version supporting this request","mode refresh rate","destroy the mode object","","mode size","output mode","","","","","","","","","","","","","","","","","","","the mode has disappeared","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","mode is preferred","mode refresh rate","","mode size","","","","","","","","","","","","","height of the mode in hardware units","vertical refresh rate in mHz","width of the mode in hardware units","","Client-side API of this protocol","Server-side API of this protocol","","manager to create per-output power management","adjust power management mode for an output","","","","","","","","destroy the manager","","get a power management for an output","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to create per-output power management","","","","","","","","","","","","","","","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","get a power management for an output","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","destroy this power management","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","object no longer valid","nonexistent power save mode","","Report a power management mode change","Output is turned off.","Output is turned on, no power saving","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","Set an outputs power save mode","adjust power management mode for an output","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy this power management","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","Set an outputs power save mode","","","","","","","","","","","","","","","","","","","","","","","the output’s new power management mode","the power save mode to set","","manager to create per-output power management","adjust power management mode for an output","","","","","","","","destroy the manager","","get a power management for an output","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to create per-output power management","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","destroy this power management","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","object no longer valid","nonexistent power save mode","","Report a power management mode change","Output is turned off.","Output is turned on, no power saving","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","Set an outputs power save mode","adjust power management mode for an output","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object no longer valid","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Report a power management mode change","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","the output’s new power management mode","the power save mode to set","","Client-side API of this protocol","Server-side API of this protocol","","a frame ready for copy","manager to inform clients and begin capturing","","","","","","","","the object has already been used to copy a wl_buffer","wl_shm buffer information","all buffer types reported","copy the frame","copy the frame when it’s damaged","carries the coordinates of the damaged region","delete this object, used or not","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","frame copy failed","","frame flags","buffer attributes are invalid","linux-dmabuf buffer information","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","indicates frame is available for reading","","contents are y-inverted","a frame ready for copy","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","copy the frame","copy the frame when it’s damaged","","delete this object, used or not","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","frame flags","buffer format","fourcc pixel format","buffer height","current height","buffer height","buffer stride","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","buffer width","current width","buffer width","damaged x coordinates","damaged y coordinates","","","capture an output","capture an output’s region","destroy the manager","","The wire opcode for this request","The wire opcode for this request","The minimal object version supporting this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to inform clients and begin capturing","","","","","","","","","","","","","","","capture an output","capture an output’s region","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","composite cursor onto the frame","composite cursor onto the frame","","","","","a frame ready for copy","manager to inform clients and begin capturing","","","","","","","","the object has already been used to copy a wl_buffer","wl_shm buffer information","all buffer types reported","copy the frame","copy the frame when it’s damaged","carries the coordinates of the damaged region","delete this object, used or not","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","frame copy failed","","frame flags","buffer attributes are invalid","linux-dmabuf buffer information","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","indicates frame is available for reading","","contents are y-inverted","a frame ready for copy","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","wl_shm buffer information","all buffer types reported","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","carries the coordinates of the damaged region","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","frame copy failed","frame flags","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","linux-dmabuf buffer information","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","indicates frame is available for reading","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","frame flags","buffer format","fourcc pixel format","buffer height","current height","buffer height","buffer stride","nanoseconds part of the timestamp","high 32 bits of the seconds part of the timestamp","low 32 bits of the seconds part of the timestamp","buffer width","current width","buffer width","damaged x coordinates","damaged y coordinates","","","capture an output","capture an output’s region","destroy the manager","","The wire opcode for this request","The wire opcode for this request","The minimal object version supporting this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","manager to inform clients and begin capturing","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","composite cursor onto the frame","composite cursor onto the frame","","","","","Client-side API of this protocol","Server-side API of this protocol","","virtual pointer manager","virtual pointer","","","","","","","Create a new virtual pointer","Create a new virtual pointer","destroy the virtual pointer manager","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","virtual pointer manager","","","","","","","","","","","","","","","","","Create a new virtual pointer","Create a new virtual pointer","","destroy the virtual pointer manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","axis event","axis click event","axis source event","axis stop event","button event","destroy the virtual pointer object","","","end of a pointer event sequence","client sent invalid axis enumeration value","client sent invalid axis source enumeration value","pointer relative motion event","pointer absolute motion event","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","virtual pointer","","","","","","","","","axis event","axis click event","axis source event","axis stop event","","","","","","","","","","","button event","","","","","","","destroy the virtual pointer object","","","","","","","","end of a pointer event sequence","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","pointer relative motion event","pointer absolute motion event","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","axis type","the axis stopped with this event","axis type","source of the axis event","button that produced the event","number of steps","displacement on the x-axis","displacement on the y-axis","physical state of the button","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","length of vector in touchpad coordinates","length of vector in touchpad coordinates","position on the x-axis","extent of the x-axis","position on the y-axis","extent of the y-axis","","virtual pointer manager","virtual pointer","","","","","","","Create a new virtual pointer","Create a new virtual pointer","destroy the virtual pointer manager","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","virtual pointer manager","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","axis event","axis click event","axis source event","axis stop event","button event","destroy the virtual pointer object","","","end of a pointer event sequence","client sent invalid axis enumeration value","client sent invalid axis source enumeration value","pointer relative motion event","pointer absolute motion event","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","virtual pointer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","axis type","the axis stopped with this event","axis type","source of the axis event","button that produced the event","number of steps","displacement on the x-axis","displacement on the y-axis","physical state of the button","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","length of vector in touchpad coordinates","length of vector in touchpad coordinates","position on the x-axis","extent of the x-axis","position on the y-axis","extent of the y-axis"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,15,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,16,15,15,5,0,5,15,16,2,5,15,16,2,2,5,15,16,2,2,5,15,16,2,5,2,5,2,5,2,2,5,2,2,5,15,16,2,5,15,16,2,2,5,2,2,2,2,5,15,16,2,5,15,16,2,5,15,16,2,5,15,16,2,2,15,16,2,5,2,2,2,2,5,2,5,5,15,16,2,5,15,16,2,5,15,16,2,2,2,253,254,255,256,257,39,39,0,39,0,0,0,0,0,0,0,0,39,40,36,39,40,36,36,39,40,36,36,39,40,36,36,36,36,36,36,36,36,39,40,36,39,40,36,36,36,36,36,36,36,39,40,36,39,40,36,39,40,36,39,40,36,36,39,40,36,36,36,36,39,40,36,39,40,36,39,40,36,36,36,258,43,0,0,0,44,0,0,0,0,43,0,0,43,44,42,43,44,42,42,43,44,42,42,43,44,42,42,42,42,42,42,42,43,44,42,43,44,42,42,42,42,42,42,43,44,42,43,44,42,43,44,42,43,44,42,42,43,44,42,42,42,42,42,43,44,42,43,44,42,43,44,42,42,42,259,260,260,48,47,0,0,0,0,0,0,46,47,0,0,0,0,0,48,0,46,47,48,32,46,47,48,32,32,46,47,48,32,32,46,47,48,32,46,32,46,32,46,32,32,46,32,32,46,47,48,32,46,47,48,32,32,46,32,32,32,32,46,47,48,32,46,47,48,32,46,47,48,32,46,47,48,32,32,32,47,48,32,46,32,32,46,32,46,46,47,48,32,46,47,48,32,46,47,48,32,32,32,261,261,262,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,54,0,0,0,0,0,0,0,0,0,0,55,55,0,0,0,0,0,0,0,55,54,54,51,0,51,54,55,49,51,54,55,49,51,54,55,49,49,51,54,55,49,51,49,51,49,51,49,49,51,49,49,49,51,54,55,49,51,54,55,49,49,49,51,49,49,49,51,54,55,49,51,54,55,49,51,54,55,49,51,54,55,49,49,54,55,49,51,49,49,49,51,49,51,51,54,55,49,51,54,55,49,51,54,55,49,49,49,263,264,265,266,267,61,61,0,61,0,0,0,0,0,0,0,0,61,62,60,61,62,60,61,62,60,60,61,62,60,60,60,60,60,60,61,62,60,61,62,60,60,60,60,60,60,61,62,60,61,62,60,61,62,60,61,62,60,60,61,62,60,60,60,61,62,60,61,62,60,61,62,60,60,60,268,269,269,63,0,0,0,64,0,0,0,0,63,0,0,63,64,52,63,64,52,63,64,52,52,63,64,52,52,52,52,52,52,63,64,52,63,64,52,52,52,52,52,52,63,64,52,63,64,52,63,64,52,63,64,52,52,52,63,64,52,52,52,63,64,52,63,64,52,63,64,52,52,52,270,271,271,68,67,0,0,0,0,0,0,66,67,0,0,0,0,0,68,0,66,67,68,65,66,67,68,65,66,67,68,65,65,66,67,68,65,65,66,65,66,65,66,65,66,65,65,66,67,68,65,66,67,68,65,65,65,66,65,65,65,66,67,68,65,66,67,68,65,66,67,68,65,66,67,68,65,65,67,68,65,66,65,65,66,65,66,66,67,68,65,66,67,68,65,66,67,68,65,65,65,272,272,273,0,0,0,0,0,0,0,0,0,0,0,0,0,73,0,72,0,0,0,0,0,0,0,0,0,0,73,73,71,0,0,73,0,71,71,70,0,70,71,72,73,69,70,71,72,73,69,69,70,71,72,73,69,69,70,71,72,73,69,70,71,69,70,71,69,70,71,69,69,70,71,69,69,70,71,72,73,69,70,71,72,73,69,69,70,71,69,69,69,69,70,71,72,73,69,70,71,72,73,69,70,71,72,73,69,70,71,72,73,69,69,72,73,69,70,71,69,69,70,71,69,70,70,71,71,72,73,69,70,71,72,73,69,70,71,72,73,69,69,69,274,275,274,274,274,275,274,274,274,275,274,274,275,276,275,275,277,277,277,274,77,77,0,0,0,0,0,0,0,77,78,74,77,78,74,74,77,78,74,74,77,78,74,74,74,74,74,74,74,74,77,78,74,77,78,74,74,74,74,74,74,77,78,74,77,78,74,77,78,74,77,78,74,74,77,78,74,74,74,74,77,78,74,77,78,74,77,78,74,74,74,278,278,0,0,0,0,0,0,0,0,0,0,83,0,82,0,0,0,0,0,0,0,0,0,0,83,83,80,0,0,83,0,80,80,81,0,81,80,82,83,79,81,80,82,83,79,81,80,82,83,79,79,81,80,82,83,79,79,81,80,79,81,80,79,81,80,79,81,80,79,79,81,80,82,83,79,79,81,80,82,83,79,79,79,81,80,79,79,79,81,80,82,83,79,81,80,82,83,79,81,80,82,83,79,81,80,82,83,79,79,79,82,83,79,81,80,79,79,81,80,79,81,81,80,80,82,83,79,81,80,82,83,79,81,80,82,83,79,79,79,279,280,279,279,279,280,279,279,279,280,279,279,280,281,280,280,282,282,282,279,85,85,0,0,0,0,0,0,0,85,86,84,85,86,84,85,86,84,84,85,86,84,84,84,84,84,84,85,86,84,85,86,84,84,84,84,84,84,85,86,84,85,86,84,85,86,84,85,86,84,84,85,86,84,84,84,85,86,84,85,86,84,85,86,84,84,84,283,283,283,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,88,91,90,91,90,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,89,88,88,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,90,90,90,0,91,91,90,90,90,0,87,88,89,90,91,87,88,89,90,91,87,87,88,89,90,91,87,87,88,89,90,91,87,88,89,87,88,89,87,87,88,89,87,87,88,89,87,87,88,89,90,91,87,88,89,90,91,87,87,88,89,87,87,87,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,87,90,91,87,88,89,87,87,87,87,87,87,88,89,87,88,88,89,89,90,91,87,88,89,90,91,87,88,89,90,91,87,87,87,87,87,87,284,285,286,287,288,289,290,291,292,290,290,290,290,0,0,0,0,0,95,0,0,0,94,95,0,94,95,93,94,95,93,93,94,95,93,93,94,95,93,93,93,93,93,93,94,95,93,94,95,93,93,93,93,93,93,94,95,93,94,95,93,94,95,93,94,95,93,93,94,95,93,93,93,93,93,94,95,93,94,95,93,94,95,93,93,93,293,0,0,0,0,0,0,0,0,0,0,0,99,97,100,99,100,99,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,98,97,97,100,100,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,99,99,99,0,100,100,99,99,99,0,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,96,97,98,99,100,96,97,98,96,97,98,96,96,97,98,96,96,97,98,96,96,97,98,99,100,96,97,98,99,100,96,96,96,97,98,96,96,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,97,98,99,100,96,96,99,100,96,96,96,96,97,98,96,96,96,97,98,96,97,97,98,98,99,100,96,97,98,99,100,96,97,98,99,100,96,96,96,294,295,296,297,298,299,300,301,302,300,300,300,300,0,0,0,0,0,106,0,0,0,105,106,0,105,106,104,105,106,104,105,106,104,104,105,106,104,104,104,104,104,104,104,105,106,104,105,106,104,104,104,104,104,104,105,106,104,105,106,104,105,106,104,105,106,104,104,105,106,104,104,104,104,105,106,104,105,106,104,105,106,104,104,104,303,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,108,0,0,0,0,0,0,108,109,107,108,109,107,107,108,109,107,107,108,109,107,107,107,107,107,107,107,108,109,107,108,109,107,107,107,107,107,107,107,108,109,107,108,109,107,108,109,107,108,109,107,107,108,109,107,107,107,107,108,109,107,108,109,107,108,109,107,107,107,304,112,0,0,0,0,0,0,113,113,111,0,0,0,0,0,112,0,111,112,113,110,111,112,113,110,110,111,112,113,110,110,111,112,113,110,111,110,111,110,111,110,110,111,110,110,111,112,113,110,111,112,113,110,110,111,110,110,110,110,111,112,113,110,111,112,113,110,111,112,113,110,111,112,113,110,110,112,113,110,111,110,110,110,111,110,111,111,112,113,110,111,112,113,110,111,112,113,110,110,110,305,306,0,0,0,0,0,0,0,0,0,0,115,0,115,0,0,0,0,0,0,115,116,114,115,116,114,115,116,114,114,115,116,114,114,114,114,114,114,115,116,114,115,116,114,114,114,114,114,114,115,116,114,115,116,114,115,116,114,115,116,114,114,115,116,114,114,114,115,116,114,115,116,114,115,116,114,114,114,307,307,119,0,0,0,0,0,0,120,120,118,0,0,0,0,0,119,0,118,119,120,117,118,119,120,117,118,119,120,117,117,118,119,120,117,118,117,118,117,118,117,118,117,117,117,118,119,120,117,118,119,120,117,117,117,117,118,117,117,117,118,119,120,117,118,119,120,117,118,119,120,117,118,119,120,117,117,119,120,117,118,117,118,117,118,118,119,120,117,118,119,120,117,118,119,120,117,117,117,308,309,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,123,0,0,0,0,122,123,124,121,122,123,124,121,121,122,123,124,121,121,122,123,124,121,122,121,122,121,122,121,122,121,121,122,123,124,121,122,123,124,121,121,121,122,121,121,121,121,122,123,124,121,122,123,124,121,122,123,124,121,122,123,124,121,121,123,124,121,122,121,121,122,121,122,122,123,124,121,122,123,124,121,122,123,124,121,121,121,126,0,0,0,0,0,126,127,125,126,127,125,125,126,127,125,125,126,127,125,125,125,125,125,125,125,126,127,125,126,127,125,125,125,125,125,125,126,127,125,126,127,125,126,127,125,126,127,125,125,126,127,125,125,125,125,126,127,125,126,127,125,126,127,125,125,125,0,0,0,0,0,0,0,0,0,129,0,0,130,0,0,0,0,129,130,131,128,129,130,131,128,129,130,131,128,128,129,130,131,128,129,128,129,128,129,128,129,128,128,129,130,131,128,129,130,131,128,128,128,129,128,128,128,129,130,131,128,129,130,131,128,129,130,131,128,129,130,131,128,128,130,131,128,129,128,129,128,129,129,130,131,128,129,130,131,128,129,130,131,128,128,128,310,133,0,0,0,0,0,133,134,132,133,134,132,133,134,132,132,133,134,132,132,132,132,132,132,133,134,132,133,134,132,132,132,132,132,132,133,134,132,133,134,132,133,134,132,133,134,132,132,133,134,132,132,132,133,134,132,133,134,132,133,134,132,132,132,0,0,0,0,0,0,0,0,0,0,0,0,0,136,137,137,138,0,0,138,136,0,137,0,0,0,0,0,136,137,0,136,137,138,139,135,136,137,138,139,135,135,136,137,138,139,135,135,136,137,138,139,135,136,137,135,136,137,135,136,137,135,135,136,137,135,135,136,137,138,139,135,136,137,138,139,135,135,135,136,137,135,135,135,135,136,137,138,139,135,136,137,138,139,135,136,137,138,139,135,136,137,138,139,135,135,138,139,135,136,137,135,135,136,137,135,136,136,137,137,138,139,135,136,137,138,139,135,136,137,138,139,135,135,135,311,311,311,311,146,0,141,147,147,146,0,0,0,0,0,0,142,146,143,143,143,143,0,141,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,146,146,146,146,146,146,141,0,140,141,141,142,143,141,146,147,140,142,143,141,146,147,140,140,141,141,141,141,141,141,141,141,141,142,143,141,146,147,140,140,142,143,141,146,147,140,142,143,141,140,142,143,141,140,142,143,141,141,141,141,140,140,141,141,141,141,142,143,141,140,140,141,142,143,141,141,141,141,141,146,147,140,142,143,141,146,147,140,141,141,141,141,141,141,141,140,141,141,141,140,142,143,141,140,140,140,141,141,140,141,141,141,141,142,143,141,146,147,140,142,143,141,146,147,140,142,143,141,146,147,140,142,143,141,146,147,140,141,141,141,141,141,141,141,141,141,141,140,146,147,140,142,143,141,141,140,140,141,141,140,140,140,140,140,140,141,141,141,141,142,143,141,140,141,141,142,142,143,143,141,141,146,147,140,142,143,141,146,147,140,142,143,141,146,147,140,141,141,140,140,312,312,312,313,314,315,316,317,314,318,314,319,314,315,320,0,0,0,0,0,0,0,0,0,0,153,154,154,155,0,0,155,153,0,154,0,0,0,0,0,153,154,0,153,154,155,156,152,153,154,155,156,152,153,154,155,156,152,152,153,154,155,156,152,153,154,152,153,154,152,153,154,152,153,154,152,152,153,154,155,156,152,153,154,155,156,152,152,152,153,154,152,152,152,153,154,155,156,152,153,154,155,156,152,153,154,155,156,152,153,154,155,156,152,152,155,156,152,153,154,152,153,154,152,153,153,154,154,155,156,152,153,154,155,156,152,153,154,155,156,152,152,152,321,321,321,321,321,161,0,157,162,162,161,0,0,0,0,0,0,159,161,160,160,160,160,0,157,159,159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,161,161,161,161,161,161,157,0,157,157,159,160,157,161,162,158,159,160,157,161,162,158,157,157,157,157,157,157,157,157,157,159,160,157,161,162,158,158,159,160,157,161,162,158,159,160,157,158,159,160,157,158,158,159,160,157,157,158,157,157,158,157,157,157,157,159,160,157,158,158,157,159,160,157,157,157,157,157,161,162,158,159,160,157,161,162,158,157,157,157,157,157,157,157,158,157,157,157,158,159,160,157,158,158,157,157,158,157,157,157,157,159,160,157,161,162,158,159,160,157,161,162,158,159,160,157,161,162,158,159,160,157,161,162,158,157,157,157,157,157,157,157,157,157,157,158,161,162,158,159,160,157,157,158,157,157,157,157,157,157,159,160,157,158,157,157,159,159,160,160,157,157,161,162,158,159,160,157,161,162,158,159,160,157,161,162,158,157,157,158,158,322,322,322,323,324,325,326,327,324,328,324,329,324,325,330,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,0,0,164,164,164,164,164,0,0,0,0,0,0,0,0,0,0,0,0,0,165,165,165,165,165,165,0,164,165,166,163,164,165,166,163,163,164,165,166,163,163,164,165,166,163,164,163,164,163,164,163,164,163,163,164,165,166,163,164,165,166,163,163,164,163,163,163,163,164,165,166,163,164,165,166,163,164,165,166,163,164,165,166,163,163,165,166,163,164,163,163,163,163,163,163,163,163,164,163,164,164,165,166,163,164,165,166,163,164,165,166,163,163,163,331,332,331,333,334,335,331,336,336,172,172,174,175,174,174,0,0,0,0,0,0,174,0,0,175,0,0,0,0,0,0,0,0,0,0,0,175,174,172,0,171,172,174,175,171,172,174,175,171,171,172,174,175,171,171,172,174,175,171,172,171,172,171,172,171,171,171,171,172,171,171,172,174,175,171,172,174,175,171,171,172,171,171,171,171,172,174,175,171,172,174,175,171,172,174,175,171,172,174,175,171,171,174,175,171,172,171,171,171,172,171,172,172,174,175,171,172,174,175,171,172,174,175,171,171,171,337,338,177,0,177,177,167,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,167,177,0,177,177,177,177,177,177,177,0,0,176,0,177,177,177,0,167,176,177,173,167,176,177,173,173,167,176,177,173,173,167,176,177,173,167,173,167,173,167,173,167,173,173,167,176,177,173,167,176,177,173,173,167,173,173,173,173,167,176,177,173,167,176,177,173,167,176,177,173,167,176,177,173,173,176,177,173,167,173,173,173,167,173,167,167,176,177,173,167,176,177,173,167,176,177,173,173,173,339,340,341,342,343,344,345,346,347,348,349,350,341,351,351,179,180,0,0,0,0,0,0,0,180,180,0,0,0,0,0,179,0,179,180,178,179,180,178,178,179,180,178,178,179,180,178,178,178,178,178,178,178,179,180,178,179,180,178,178,178,178,178,178,179,180,178,179,180,178,179,180,178,179,180,178,178,179,180,178,178,178,178,178,179,180,178,179,180,178,179,180,178,178,178,352,353,354,0,0,0,0,0,0,0,0,0,182,182,0,0,182,181,0,182,0,181,182,168,181,182,168,168,181,182,168,168,181,182,168,168,168,168,168,168,181,182,168,181,182,168,168,168,168,168,168,181,182,168,181,182,168,181,182,168,181,182,168,168,181,182,168,168,168,168,168,181,182,168,181,182,168,181,182,168,168,168,355,356,355,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0,184,184,184,184,184,0,0,0,0,0,0,0,0,0,0,0,0,0,185,185,185,185,185,185,0,184,185,186,183,184,185,186,183,184,185,186,183,183,184,185,186,183,184,183,184,183,184,183,184,183,183,184,185,186,183,184,185,186,183,183,183,184,183,183,183,184,185,186,183,184,185,186,183,184,185,186,183,184,185,186,183,183,185,186,183,184,183,184,183,184,184,185,186,183,184,185,186,183,184,185,186,183,183,183,357,358,357,359,360,361,357,362,362,188,188,189,190,189,189,0,0,0,0,0,0,189,0,0,190,0,0,0,0,0,0,0,0,0,0,0,190,189,188,0,188,189,190,187,188,189,190,187,188,189,190,187,187,188,189,190,187,187,188,187,188,187,188,187,188,187,187,187,188,189,190,187,188,189,190,187,187,187,188,187,187,187,188,189,190,187,188,189,190,187,188,189,190,187,188,189,190,187,187,189,190,187,188,187,187,188,187,188,188,189,190,187,188,189,190,187,188,189,190,187,187,187,363,364,363,195,0,195,195,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,195,0,195,195,195,195,195,195,195,0,0,194,0,195,195,195,0,191,192,194,195,191,192,194,195,191,192,194,195,191,191,192,194,195,191,192,191,192,191,192,191,191,191,191,192,191,191,191,192,194,195,191,192,194,195,191,191,191,192,191,191,191,192,194,195,191,192,194,195,191,192,194,195,191,192,194,195,191,191,191,191,191,191,194,195,191,192,191,191,191,191,191,192,191,191,192,192,194,195,191,192,194,195,191,192,194,195,191,191,191,365,366,367,368,369,370,371,372,373,374,375,376,367,377,377,198,199,0,0,0,0,0,0,0,199,199,0,0,0,0,0,198,0,198,199,197,198,199,197,198,199,197,197,198,199,197,197,197,197,197,197,197,197,198,199,197,198,199,197,197,197,197,197,197,197,198,199,197,198,199,197,198,199,197,198,199,197,197,198,199,197,197,197,198,199,197,198,199,197,198,199,197,197,197,378,379,380,380,0,0,0,0,0,0,0,0,0,201,201,0,0,201,200,0,201,0,200,201,193,200,201,193,200,201,193,193,200,201,193,193,193,193,193,193,193,200,201,193,200,201,193,193,193,193,193,193,200,201,193,200,201,193,200,201,193,200,201,193,193,200,201,193,193,193,193,193,193,200,201,193,200,201,193,200,201,193,193,193,381,382,381,0,0,0,0,0,0,0,0,0,0,0,0,0,203,0,203,0,0,0,0,0,0,203,204,202,203,204,202,202,203,204,202,202,203,204,202,202,202,202,202,202,202,203,204,202,203,204,202,202,202,202,202,202,202,203,204,202,203,204,202,203,204,202,203,204,202,202,203,204,202,202,202,202,203,204,202,203,204,202,203,204,202,202,202,383,208,0,0,0,0,0,0,209,207,0,209,206,206,0,0,0,0,0,208,0,206,207,208,209,205,206,207,208,209,205,205,206,207,208,209,205,205,206,207,208,209,205,206,207,205,206,207,205,206,207,205,205,206,207,205,205,206,207,208,209,205,206,207,208,209,205,205,206,207,205,205,205,205,206,207,208,209,205,206,207,208,209,205,206,207,208,209,205,206,207,208,209,205,205,208,209,205,206,207,205,205,205,206,207,205,206,206,207,207,208,209,205,206,207,208,209,205,206,207,208,209,205,205,205,384,385,0,0,0,0,0,0,0,0,0,0,211,0,211,0,0,0,0,0,0,211,212,210,211,212,210,211,212,210,210,211,212,210,210,210,210,210,210,211,212,210,211,212,210,210,210,210,210,210,211,212,210,211,212,210,211,212,210,211,212,210,210,211,212,210,210,210,211,212,210,211,212,210,211,212,210,210,210,386,386,216,0,0,0,0,0,0,217,215,0,217,214,214,0,0,0,0,0,216,0,214,215,216,217,213,214,215,216,217,213,214,215,216,217,213,213,214,215,216,217,213,214,215,213,214,215,213,214,215,213,214,215,213,213,213,214,215,216,217,213,214,215,216,217,213,213,213,214,215,213,213,213,214,215,216,217,213,214,215,216,217,213,214,215,216,217,213,214,215,216,217,213,213,213,216,217,213,214,215,213,214,215,213,214,214,215,215,216,217,213,214,215,216,217,213,214,215,216,217,213,213,213,387,388,0,0,0,0,0,0,0,0,0,0,0,0,0,220,223,223,222,222,223,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,0,223,220,223,0,0,0,0,0,0,223,0,218,0,218,218,220,218,222,223,219,220,218,222,223,219,219,218,218,218,218,218,218,218,218,218,220,218,222,223,219,219,220,218,222,223,219,220,218,219,220,218,219,220,218,218,218,218,219,219,219,219,218,218,218,218,220,218,219,219,218,220,218,218,218,218,218,222,223,219,220,218,222,223,219,218,218,218,218,218,218,218,219,218,218,218,220,218,219,219,219,218,218,219,218,218,218,218,220,218,222,223,219,220,218,222,223,219,220,218,222,223,219,220,218,222,223,219,218,218,218,218,218,218,218,218,218,218,219,222,223,219,220,218,218,219,219,218,218,218,218,218,218,220,218,219,218,218,220,220,218,218,222,223,219,220,218,222,223,219,220,218,222,223,219,218,218,219,219,389,390,391,390,392,391,390,393,393,393,390,392,391,392,392,394,395,225,225,225,0,0,0,0,0,0,0,0,0,225,226,224,225,226,224,224,225,226,224,224,225,226,224,224,224,224,224,224,224,224,224,225,226,224,225,226,224,224,224,224,224,224,225,226,224,225,226,224,225,226,224,225,226,224,224,225,226,224,224,224,224,225,226,224,225,226,224,225,226,224,224,224,396,397,396,397,396,396,396,396,0,0,0,0,0,0,0,0,0,0,230,232,232,231,231,232,231,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,0,232,230,232,0,0,0,0,0,0,232,0,227,0,227,227,230,227,231,232,228,230,227,231,232,228,227,227,227,227,227,227,227,227,227,230,227,231,232,228,228,230,227,231,232,228,228,228,230,227,228,230,227,228,230,227,227,227,227,228,228,227,227,227,227,230,227,228,228,227,228,228,230,227,227,227,227,227,231,232,228,230,227,231,232,228,227,227,227,227,227,227,227,228,227,227,227,228,230,227,228,228,227,227,228,227,227,227,227,230,227,231,232,228,230,227,231,232,228,230,227,231,232,228,230,227,231,232,228,227,227,227,227,227,227,227,227,227,228,227,228,231,232,228,230,228,227,227,228,227,227,227,227,227,227,230,227,228,227,227,230,230,227,227,231,232,228,230,227,231,232,228,230,227,231,232,228,227,227,228,228,398,399,400,399,401,400,399,402,402,402,399,401,400,401,401,403,404,234,234,234,0,0,0,0,0,0,0,0,0,234,235,233,234,235,233,234,235,233,233,234,235,233,233,233,233,233,233,234,235,233,234,235,233,233,233,233,233,233,234,235,233,234,235,233,234,235,233,234,235,233,233,234,235,233,233,233,234,235,233,234,235,233,234,235,233,233,233,405,406,406,405,406,405,406,406,406,406,0,0,0,0,0,0,0,0,0,0,0,0,238,238,238,0,0,0,0,0,0,0,0,0,238,239,236,238,239,236,236,238,239,236,236,238,239,236,236,236,236,236,236,236,236,236,238,239,236,238,239,236,236,236,236,236,236,238,239,236,238,239,236,238,239,236,238,239,236,236,238,239,236,236,236,236,238,239,236,238,239,236,238,239,236,236,236,407,408,407,244,244,244,244,244,244,0,0,244,243,243,244,244,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,243,244,245,237,243,244,245,237,237,237,237,237,237,243,244,245,237,237,243,244,245,237,237,243,237,243,237,243,237,237,243,237,237,243,244,245,237,237,243,244,245,237,237,243,237,237,237,237,243,244,245,237,243,244,245,237,243,244,245,237,243,244,245,237,237,237,237,244,245,237,243,237,237,243,237,243,243,244,245,237,243,244,245,237,243,244,245,237,237,237,409,410,411,412,413,411,414,414,413,414,415,413,409,410,411,409,411,415,415,415,415,0,0,0,0,0,0,0,0,0,247,247,247,0,0,0,0,0,0,0,0,0,247,248,246,247,248,246,247,248,246,246,247,248,246,246,246,246,246,246,247,248,246,247,248,246,246,246,246,246,246,247,248,246,247,248,246,247,248,246,247,248,246,246,247,248,246,246,246,247,248,246,247,248,246,247,248,246,246,246,416,417,417,416,417,251,251,251,251,251,251,0,0,251,250,250,251,251,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,251,252,249,250,251,252,249,250,251,252,249,249,250,251,252,249,250,249,250,249,250,249,250,249,249,250,251,252,249,250,251,252,249,249,249,250,249,249,249,250,251,252,249,250,251,252,249,250,251,252,249,250,251,252,249,249,251,252,249,250,249,250,249,250,250,251,252,249,250,251,252,249,250,251,252,249,249,249,418,419,420,421,422,420,423,423,422,423,424,422,418,419,420,418,420,424,424,424,424],"f":"```````````````````````````````````````````````````````````{cb{}}0000000{df}{ce{}{}}00{dh}11111{jj}{dd}{{ce}l{}{}}0{{jj}n}{d{{A`{c}}}{AbAd}}{dl}{{jj}Af}{{d{Ah{d}}}Af}{{dd}Af}{{jAj}Al}{{AnAj}Al}{{B`Aj}Al}{{dAj}Al}{cc{}}000{{Bbh}{{Bf{dBd}}}}{{jc}lBh}{{dc}lBh}{dh}{fd}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{d{{A`{{Bn{Cb}}}}}}{AnCd}{B`Cd}{{Bb{Ch{hCf}}}{{Bf{{Cj{dc}}Cl}}}{}}{{jj}{{A`{n}}}}{{dc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{dc}{{Bf{lBd}}}{}}{{d{A`{D`}}}l}0;;{c{{Bf{e}}}{}{}}{Db{{Bf{jl}}}}1111111{cDd{}}000{dDb}{{dBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````{cb{}}00000{Dhf}{ce{}{}}0{Dhh}1111{DhDh}{{ce}l{}{}}{{Dh{Dj{e}}c}D`{AbAd}{{Dl{D`c}}}}{Dh{{A`{c}}}{AbAd}}{Dhl}{{Dh{Ah{Dh}}}Af}{{DhDh}Af}{{DnAj}Al}{{E`Aj}Al}{{DhAj}Al}{cc{}}00{{Bbh}{{Bf{DhBd}}}}{{DhEb{Dj{e}}c}d{AbAd}{{Dl{dc}}}}{{Dhc}lBh}>{fDh}{{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Dh{{A`{{Bn{Cb}}}}}}{DnCd}{E`Cd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Dhc}}Cl}}}{}}{{Dhc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Dhc}{{Bf{lBd}}}{}}9{c{{Bf{e}}}{}{}}00000{cDd{}}00{DhDb}{{DhBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````{cb{}}00000{Edf}???{Edh}{ce{}{}}00{EdEd}{{ce}l{}{}}{Ed{{A`{c}}}{AbAd}}{Edl}{{EdEd}Af}{{Ed{Ah{Ed}}}Af}{{EfAj}Al}{{EhAj}Al}{{EdAj}Al}{cc{}}00{{Bbh}{{Bf{EdBd}}}}{{Edc}lBh}={fEd}{{}Bj}>>>{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Ed{{A`{{Bn{Cb}}}}}}{EfCd}{EhCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Edc}}Cl}}}{}}{{EdEjDf}l}{{Edc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Edc}{{Bf{lBd}}}{}}{ce{}{}}{c{{Bf{e}}}{}{}}00000{cDd{}}00{EdDb}{{EdBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}````````````````````{cb{}}0000000{D`f}666{D`h}77777{ElEl}{D`D`}{{ce}l{}{}}0{{ElEl}n}{D`{{A`{c}}}{AbAd}}{D`l}{{ElEl}Af}{{D`{Ah{D`}}}Af}{{D`D`}Af}{{ElAj}Al}{{EnAj}Al}{{F`Aj}Al}{{D`Aj}Al}{cc{}}000{{Bbh}{{Bf{D`Bd}}}}{{Elc}lBh}{{D`c}lBh}{D`h}{fD`}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{D`{{A`{{Bn{Cb}}}}}}{{D`Ej}l}{EnCd}{F`Cd}{{Bb{Ch{hCf}}}{{Bf{{Cj{D`c}}Cl}}}{}}{{ElEl}{{A`{n}}}}{{D`c{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{D`c}{{Bf{lBd}}}{}};;{Db{{Bf{Ell}}}}{c{{Bf{e}}}{}{}}0000000{cDd{}}000{D`Db}{{D`Bbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````````````````````````````````````{cb{}}0000000{ce{}{}}00{FbFd}11111{FfFf}{FbFb}{{ce}l{}{}}0{{FfFf}n}{Fb{{A`{c}}}{}}{{FbFh}l}{{FfFf}Af}{{FbFb}Af}{{Fb{Fj{Fb}}}Af}{Fbl}{{FfAj}Al}{{FlAj}Al}{{FnAj}Al}{{FbAj}Al}{cc{}}000{{G`Fd}{{Bf{FbGb}}}}{FbGd}{{Ffc}lBh}{{Fbc}lBh}{FbFd}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{Fb{{A`{{Bn{b}}}}}}{FlCd}{FnCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{Fbc}}Gf}}}{}}{{FfFf}{{A`{n}}}}{{Fb{A`{Fh}}}l}0{{Fbc}{{Bf{lGb}}}{}}::{c{{Bf{e}}}{}{}}{Db{{Bf{Ffl}}}}1111111{cDd{}}000{FbDb}{{FbG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}`````````````````{cb{}}00000{ce{}{}}00{GhFd}111{GhGh}{{ce}l{}{}}{Gh{{A`{c}}}{}}{{GhGh}Af}{{Gh{Fj{Gh}}}Af}{{GjAj}Al}{{GlAj}Al}{{GhAj}Al}{cc{}}00{{G`Fd}{{Bf{GhGb}}}}{GhGd}{{Ghc}lBh}<{{}Bj}>>>{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Gh{{A`{{Bn{b}}}}}}{GjCd}{GlCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{Ghc}}Gf}}}{}}{{Ghc}{{Bf{lGb}}}{}}{ce{}{}}{c{{Bf{e}}}{}{}}00000{cDd{}}00{GhDb}{{GhG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}```````````````{cb{}}00000555{FhFd}666{FhFh}{{ce}l{}{}}{Fh{{A`{c}}}{}}{{Fh{Fj{Fh}}}Af}{{FhFh}Af}{{GnAj}Al}{{H`Aj}Al}{{FhAj}Al}{cc{}}00{{G`Fd}{{Bf{FhGb}}}}{FhGd}{{Fhc}lBh}<{{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Fh{{A`{{Bn{b}}}}}}{{FhEj}l}{GnCd}{H`Cd}{{G`{Ch{FdCf}}}{{Bf{{Cj{Fhc}}Gf}}}{}}{{Fhc}{{Bf{lGb}}}{}}9{c{{Bf{e}}}{}{}}00000{cDd{}}00{FhDb}{{FhG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}````````````````````{cb{}}0000000>>>{HbFd}?????{Hbl}{HdHd}{HbHb}{{ce}l{}{}}0{{HdHd}n}{Hb{{A`{c}}}{}}{{HdHd}Af}{{HbHb}Af}{{Hb{Fj{Hb}}}Af}{{HdAj}Al}{{HfAj}Al}{{HhAj}Al}{{HbAj}Al}{cc{}}000{{G`Fd}{{Bf{HbGb}}}}{HbGd}{{Hdc}lBh}{{Hbc}lBh}{HbFd}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{Hb{{A`{{Bn{b}}}}}}{HfCd}{HhCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{Hbc}}Gf}}}{}}{{HdHd}{{A`{n}}}}{{HbEjDf}l}{{Hbc}{{Bf{lGb}}}{}}::{c{{Bf{e}}}{}{}}{Db{{Bf{Hdl}}}}1111111{cDd{}}000{HbDb}{{HbG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}````````````````````````````````````````{cb{}}000000000{Hjf}{ce{}{}}0000{Hjh}11111{HlHl}{HnHn}{HjHj}{{ce}l{}{}}00{{HlHl}n}{{HnHn}n}{Hj{{A`{c}}}{AbAd}}{Hjl}{{HlHl}Af}{{HnHn}Af}{{HjHj}Af}{{Hj{Ah{Hj}}}Af}{{HlAj}Al}{{HnAj}Al}{{I`Aj}Al}{{IbAj}Al}{{HjAj}Al}{cc{}}0000{{Bbh}{{Bf{HjBd}}}}{{Hlc}lBh}{{Hnc}lBh}{{Hjc}lBh}{Hjh}{fHj}{{}Bj}{ce{}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{{Bn{c}}}{{Bn{b}}}{}}0000{{{C`{c}}}{{C`{b}}}{}}0000{Hj{{A`{{Bn{Cb}}}}}}{I`Cd}{IbCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Hjc}}Cl}}}{}}{{HlHl}{{A`{n}}}}{{HnHn}{{A`{n}}}}{{Hjc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Hjc}{{Bf{lBd}}}{}};;;{c{{Bf{e}}}{}{}}{Db{{Bf{Hll}}}}1{Db{{Bf{Hnl}}}}22222222{cDd{}}0000{HjDb}{{HjBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````````````````{cb{}}00000{Idf}{ce{}{}}0{Idh}1111{{IdIfIh{Dj{e}}c}Hj{AbAd}{{Dl{Hjc}}}}{IdId}{{ce}l{}{}}{Id{{A`{c}}}{AbAd}}{Idl}{{Id{Ah{Id}}}Af}{{IdId}Af}{{IjAj}Al}{{IlAj}Al}{{IdAj}Al}{cc{}}00{{Bbh}{{Bf{IdBd}}}}{{Idc}lBh}={fId}{{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Id{{A`{{Bn{Cb}}}}}}{IjCd}{IlCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Idc}}Cl}}}{}}{{Idc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Idc}{{Bf{lBd}}}{}}9{c{{Bf{e}}}{}{}}00000{cDd{}}00{IdDb}{{IdBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}````````````````````````````````````{cb{}}000000000>>>>{InFd}??????{{InJ`}l}{JbJb}{J`J`}{InIn}{{ce}l{}{}}00{{JbJb}n}{{J`J`}n}{In{{A`{c}}}{}}{{JbJb}Af}{{J`J`}Af}{{In{Fj{In}}}Af}{{InIn}Af}{{JbAj}Al}{{J`Aj}Al}{{JdAj}Al}{{JfAj}Al}{{InAj}Al}{{InDbDbDbDbDbJbDbDbDbDb}l}{cc{}}0000{{G`Fd}{{Bf{InGb}}}}{InGd}{{Jbc}lBh}{{J`c}lBh}{{Inc}lBh}{InFd}{{}Bj}{ce{}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{{Bn{c}}}{{Bn{b}}}{}}0000{{{C`{c}}}{{C`{b}}}{}}0000{{InDbDfDbDbDbDb}l}{In{{A`{{Bn{b}}}}}}{JdCd}{JfCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{Inc}}Gf}}}{}}{{JbJb}{{A`{n}}}}{{J`J`}{{A`{n}}}}{{InDbDbDb}l}{{Inc}{{Bf{lGb}}}{}}<<<{Db{{Bf{Jbl}}}}{c{{Bf{e}}}{}{}}{Db{{Bf{J`l}}}}111111111{cDd{}}0000{InDb}{{InG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}`````````````````````````````{cb{}}00000{ce{}{}}0{JhFd}1111{JhJh}{{ce}l{}{}}{Jh{{A`{c}}}{}}{{JhJh}Af}{{Jh{Fj{Jh}}}Af}{{JjAj}Al}{{JlAj}Al}{{JhAj}Al}{cc{}}00{{G`Fd}{{Bf{JhGb}}}}{JhGd}{{Jhc}lBh}<{{}Bj}>>>{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Jh{{A`{{Bn{b}}}}}}{JjCd}{JlCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{Jhc}}Gf}}}{}}{{Jhc}{{Bf{lGb}}}{}}{ce{}{}}{c{{Bf{e}}}{}{}}00000{cDd{}}00{JhDb}{{JhG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}`````````````````````````````````````````````````````````````````````````````````{{JnEb}l}{cb{}}000000000{Jnf}7777{Jnh}888888{K`K`}{KbKb}{JnJn}{{ce}l{}{}}00{Jnl}{{K`K`}n}{{KbKb}n}{Jn{{A`{c}}}{AbAd}}3{{K`K`}Af}{{KbKb}Af}{{JnJn}Af}{{Jn{Ah{Jn}}}Af}{{K`Aj}Al}{{KbAj}Al}{{KdAj}Al}{{KfAj}Al}{{JnAj}Al}{cc{}}0000{{Bbh}{{Bf{JnBd}}}}{{K`c}lBh}{{Kbc}lBh}{{Jnc}lBh}{Jnh}{fJn}{{}Bj}{ce{}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{{Bn{c}}}{{Bn{b}}}{}}0000{{{C`{c}}}{{C`{b}}}{}}0000{Jn{{A`{{Bn{Cb}}}}}}{KdCd}{KfCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Jnc}}Cl}}}{}}{{K`K`}{{A`{n}}}}{{KbKb}{{A`{n}}}}{{Jnc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Jnc}{{Bf{lBd}}}{}}{{Jn{A`{Ih}}}l}{Jnl}0{{JnKhIfIfIfIf}l}>>>{c{{Bf{e}}}{}{}}{Db{{Bf{K`l}}}}{Db{{Bf{Kbl}}}}222222222{cDd{}}0000555{JnDb}{{JnBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````````````{cb{}}00000{Kjf}{ce{}{}}00{Kjh}111{KjKj}{{ce}l{}{}}{Kj{{A`{c}}}{AbAd}}{{KjKj}Af}{{Kj{Ah{Kj}}}Af}{{KlAj}Al}{{KnAj}Al}{{KjAj}Al}{cc{}}00{{Bbh}{{Bf{KjBd}}}}{{Kjc}lBh};{fKj}{{}Bj}>>>{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Kj{{A`{{Bn{Cb}}}}}}{KlCd}{KnCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Kjc}}Cl}}}{}}{{Kjc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Kjc}{{Bf{lBd}}}{}}{Kjl}{ce{}{}}{c{{Bf{e}}}{}{}}00000{cDd{}}00{KjDb}{{KjBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}````````````````````````````````````````````````````````````````````````````{{L`Ej}l}{cb{}}00000000066666{L`Fd}77777{LbLb}{LdLd}{L`L`}{{ce}l{}{}}00{L`l}{{LbLb}n}{{LdLd}n}{L`{{A`{c}}}{}}3{{LbLb}Af}{{LdLd}Af}{{L`{Fj{L`}}}Af}{{L`L`}Af}{{LbAj}Al}{{LdAj}Al}{{LfAj}Al}{{LhAj}Al}{{L`Aj}Al}{cc{}}0000{{G`Fd}{{Bf{L`Gb}}}}{L`Gd}{{Lbc}lBh}{{Ldc}lBh}{{L`c}lBh}{L`Fd}{{}Bj}{ce{}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{{Bn{c}}}{{Bn{b}}}{}}0000{{{C`{c}}}{{C`{b}}}{}}0000{L`{{A`{{Bn{b}}}}}}{LfCd}{LhCd}{{L`Lj}l}0{{L`{A`{L`}}}l}{{G`{Ch{FdCf}}}{{Bf{{Cj{L`c}}Gf}}}{}}{{LbLb}{{A`{n}}}}{{LdLd}{{A`{n}}}}{{L`c}{{Bf{lGb}}}{}}{{L`{Ln{Ll}}}l}{{L`Ej}l}>>>{c{{Bf{e}}}{}{}}{Db{{Bf{Lbl}}}}{Db{{Bf{Ldl}}}}222222222{cDd{}}0000{L`Db}{{L`G`c}{{Bf{{Ch{FdDf}}Gb}}}{}}`````````````````````````{cb{}}00000{ce{}{}}0{M`Fd}1111{M`M`}{{ce}l{}{}}{M`{{A`{c}}}{}}{{M`{Fj{M`}}}Af}{{M`M`}Af}{M`l}{{MbAj}Al}{{MdAj}Al}{{M`Aj}Al}{cc{}}00{{G`Fd}{{Bf{M`Gb}}}}{M`Gd}{{M`c}lBh}={{}Bj}???{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{M`{{A`{{Bn{b}}}}}}{MbCd}{MdCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{M`c}}Gf}}}{}}{{M`c}{{Bf{lGb}}}{}}{ce{}{}}{{M`L`}l}{c{{Bf{e}}}{}{}}00000{cDd{}}00{M`Db}{{M`G`c}{{Bf{{Ch{FdDf}}Gb}}}{}}```````````````````````{cb{}}00000{Mff}777{Mfh}888{MfMf}{{ce}l{}{}}{Mf{{A`{c}}}{AbAd}}{Mfl}{{Mf{Ah{Mf}}}Af}{{MfMf}Af}{{MhAj}Al}{{MjAj}Al}{{MfAj}Al}{cc{}}00{{Bbh}{{Bf{MfBd}}}}{{MfIh{Dj{e}}c}Ml{AbAd}{{Dl{Mlc}}}}{{Mfc}lBh}={fMf}{{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Mf{{A`{{Bn{Cb}}}}}}{MhCd}{MjCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Mfc}}Cl}}}{}}{{Mfc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Mfc}{{Bf{lBd}}}{}}9{c{{Bf{e}}}{}{}}00000{cDd{}}00{MfDb}{{MfBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}``````````````````{cb{}}0000000{Mlf}???{Mlh}{ce{}{}}0000{MnMn}{MlMl}{{ce}l{}{}}0{{MnMn}n}{Ml{{A`{c}}}{AbAd}}{Mll}{{MnMn}Af}{{Ml{Ah{Ml}}}Af}{{MlMl}Af}{{MnAj}Al}{{N`Aj}Al}{{NbAj}Al}{{MlAj}Al}{cc{}}000{{Bbh}{{Bf{MlBd}}}}{{Mnc}lBh}{{Mlc}lBh}{Mlh}{fMl}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{Ml{{A`{{Bn{Cb}}}}}}{N`Cd}{NbCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Mlc}}Cl}}}{}}{{MnMn}{{A`{n}}}}{{Mlc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Mlc}{{Bf{lBd}}}{}}{{MlDf}l};;{Db{{Bf{Mnl}}}}{c{{Bf{e}}}{}{}}0000000{cDd{}}000{MlDb}{{MlBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````````{cb{}}00000{ce{}{}}00{NdFd}111{NdNd}{{ce}l{}{}}{Nd{{A`{c}}}{}}{{Nd{Fj{Nd}}}Af}{{NdNd}Af}{{NfAj}Al}{{NhAj}Al}{{NdAj}Al}{cc{}}00{{G`Fd}{{Bf{NdGb}}}}{NdGd}{{Ndc}lBh}<{{}Bj}>>>{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Nd{{A`{{Bn{b}}}}}}{NfCd}{NhCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{Ndc}}Gf}}}{}}{{Ndc}{{Bf{lGb}}}{}}{ce{}{}}{c{{Bf{e}}}{}{}}00000{cDd{}}00{NdDb}{{NdG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}```````````````````{cb{}}00000005555{NjFd}6666{NlNl}{NjNj}{{ce}l{}{}}0{{NlNl}n}{Nj{{A`{c}}}{}}{{NlNl}Af}{{NjNj}Af}{{Nj{Fj{Nj}}}Af}{Njl}{{NlAj}Al}{{NnAj}Al}{{O`Aj}Al}{{NjAj}Al}{cc{}}000{{G`Fd}{{Bf{NjGb}}}}{{NjDb}l}{NjGd}{{Nlc}lBh}{{Njc}lBh}{NjFd}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{Nj{{A`{{Bn{b}}}}}}{NnCd}{O`Cd}{{G`{Ch{FdCf}}}{{Bf{{Cj{Njc}}Gf}}}{}}{{NlNl}{{A`{n}}}}{{Njc}{{Bf{lGb}}}{}}99{Db{{Bf{Nll}}}}{c{{Bf{e}}}{}{}}0000000{cDd{}}000{NjDb}{{NjG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}``````````````````````{cb{}}0000000{Obf}{ce{}{}}00{Obh}11111{OdOd}{ObOb}{{ce}l{}{}}0{{OdOd}n}{Ob{{A`{c}}}{AbAd}}{{OdOd}Af}{{Ob{Ah{Ob}}}Af}{{ObOb}Af}{{OdAj}Al}{{OfAj}Al}{{OhAj}Al}{{ObAj}Al}{cc{}}000{{Bbh}{{Bf{ObBd}}}}{{Ob{Dj{e}}c}Oj{AbAd}{{Dl{Ojc}}}}{{Odc}lBh}{{Obc}lBh}{Obh}{fOb}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{Ob{{A`{{Bn{Cb}}}}}}{OfCd}{OhCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Obc}}Cl}}}{}}{{OdOd}{{A`{n}}}}{{Obc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Obc}{{Bf{lBd}}}{}}::{c{{Bf{e}}}{}{}}{Db{{Bf{Odl}}}}1111111{cDd{}}000{ObDb}{{ObBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}``````{cb{}}00000{Ojf}{ce{}{}}0{Ojh}1111{OjOj}{{ce}l{}{}}{Oj{{A`{c}}}{AbAd}}{Ojl}{{OjOj}Af}{{Oj{Ah{Oj}}}Af}{{OlAj}Al}{{OnAj}Al}{{OjAj}Al}{cc{}}00{{Bbh}{{Bf{OjBd}}}}{{Ojc}lBh}<{fOj}{{}Bj}???{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Oj{{A`{{Bn{Cb}}}}}}{OlCd}{OnCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Ojc}}Cl}}}{}}{{Ojc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Ojc}{{Bf{lBd}}}{}}{ce{}{}}{c{{Bf{e}}}{}{}}00000{cDd{}}00{OjDb}{{OjBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````{cb{}}0000000555{A`Fd}66666{AbAb}{A`A`}{{ce}l{}{}}0{{AbAb}n}{A`{{A`{c}}}{}}{{AbAb}Af}{{A`{Fj{A`}}}Af}{{A`A`}Af}{{AbAj}Al}{{AdAj}Al}{{AfAj}Al}{{A`Aj}Al}{cc{}}000{{G`Fd}{{Bf{A`Gb}}}}{A`Gd}{{Abc}lBh}{{A`c}lBh}{A`Fd}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{A`{{A`{{Bn{b}}}}}}{AdCd}{AfCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{A`c}}Gf}}}{}}{{AbAb}{{A`{n}}}}{{A`c}{{Bf{lGb}}}{}}99{Db{{Bf{Abl}}}}{c{{Bf{e}}}{}{}}0000000{cDd{}}000{A`Db}{{A`G`c}{{Bf{{Ch{FdDf}}Gb}}}{}}```````{cb{}}00000???{AhFd}{ce{}{}}00{AhAh}{{ce}l{}{}}{Ah{{A`{c}}}{}}{{AhAh}Af}{{Ah{Fj{Ah}}}Af}{{AjAj}Al}{{AlAj}Al}{{AhAj}Al}{cc{}}00{{G`Fd}{{Bf{AhGb}}}}{AhGd}{{Ahc}lBh}={{}Bj}==={{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{Ah{{A`{{Bn{b}}}}}}{AjCd}{AlCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{Ahc}}Gf}}}{}}{{Ahc}{{Bf{lGb}}}{}}{ce{}{}}{c{{Bf{e}}}{}{}}00000{cDd{}}00{AhDb}{{AhG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}```````````````````````````````{cb{}}000000000{Anf}6666{Anh}777777{AA`AA`}{AAbAAb}{AnAn}{{ce}l{}{}}00{{AA`AA`}n}{{AAbAAb}n}{An{{A`{c}}}{AbAd}}{Anl}{{AA`AA`}Af}{{AAbAAb}Af}{{AnAn}Af}{{An{Ah{An}}}Af}{{AA`Aj}Al}{{AAbAj}Al}{{AAdAj}Al}{{AAfAj}Al}{{AnAj}Al}{cc{}}0000{{Bbh}{{Bf{AnBd}}}}{{AnKh{A`{Ih}}AAbEj{Dj{e}}c}AAh{AbAd}{{Dl{AAhc}}}}{{AA`c}lBh}{{AAbc}lBh}{{Anc}lBh}{Anh}{fAn}{{}Bj}{ce{}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{{Bn{c}}}{{Bn{b}}}{}}0000{{{C`{c}}}{{C`{b}}}{}}0000{An{{A`{{Bn{Cb}}}}}}{AAdCd}{AAfCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{Anc}}Cl}}}{}}{{AA`AA`}{{A`{n}}}}{{AAbAAb}{{A`{n}}}}{{Anc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{Anc}{{Bf{lBd}}}{}};;;{Db{{Bf{AA`l}}}}{c{{Bf{e}}}{}{}}0{Db{{Bf{AAbl}}}}11111111{cDd{}}0000{AnDb}{{AnBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}``````````````````````````````````````````````````````{{AAhDb}l}{{}AAj}0{cb{}}00000000000{AAhf}{{AAjAAj}AAj}{{AAjAAj}l}10{AAjDb}0021{ce{}{}}00000{AAhh}111111{AAlAAl}{AAnAAn}{AAjAAj}{AAhAAh}{{ce}l{}{}}000{{AAlAAl}n}{{AAnAAn}n}44{{AAjAAj}Af}0{AAh{{A`{c}}}{AbAd}}{AAhl}>>{{}AAj}0{{AAlAAl}Af}{{AAnAAn}Af}5{{AAh{Ah{AAh}}}Af}{{AAhAAh}Af}{{AAjc}l{{ABb{}{{AB`{AAj}}}}}}{{AAlAj}Al}{{AAnAj}Al}{{AAjAj}Al}0000{{ABdAj}Al}{{ABfAj}Al}{{AAhAj}Al}{cc{}}00000{Db{{A`{AAj}}}}0{DbAAj}0000{{Bbh}{{Bf{AAhBd}}}}{cAAj{{ABb{}{{AB`{AAj}}}}}}{ABh{{A`{AAj}}}}0{{AAhABj}l}{{AAlc}lBh}{{AAnc}lBh}{{AAjc}lBh}{{AAhc}lBh}{AAhh}{fAAh}{{AAjAAj}l}0{{}Bj}{{AAjAAj}AAj}0{{AAjAAj}Af}0{ce{}{}}00000{{{Bl{c}}}{{Bl{b}}}{}}00000{{{Bn{c}}}{{Bn{b}}}{}}00000{{{C`{c}}}{{C`{b}}}{}}00000{AAjc{}}{AAjAf}000{AAj{{ABl{AAj}}}}0{AAj{{ABn{AAj}}}}0{AAjAAj}{AAh{{A`{{Bn{Cb}}}}}}{ABdCd}{ABfCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AAhc}}Cl}}}{}}{{AAlAAl}{{A`{n}}}}{{AAnAAn}{{A`{n}}}}{{AAjAAj}l}0{{AAhc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AAhc}{{Bf{lBd}}}{}}{{AAjAAjAf}l}0{{AAhAAj}l}{{AAhIf}l}{{AAhAAl}l}{{AAhAAb}l}{{AAhIfIfIfIf}l}{{AAhDbDb}l}{{AAjAAj}AAj}:00{ce{}{}}000;;{c{{Bf{e}}}{}{}}{Db{{Bf{AAll}}}}{Db{{Bf{AAnl}}}}2{Db{{Bf{AAjl}}}}3333333333{cDd{}}0000066{AAhDb}{{AAhBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}```````````````````````````````````````````{cb{}}00000000088888{AC`Fd}99999{ACbACb}{ACdACd}{AC`AC`}{{ce}l{}{}}00{{ACbACb}n}{{ACdACd}n}{AC`{{A`{c}}}{}}{{ACbACb}Af}{{ACdACd}Af}{{AC`{Fj{AC`}}}Af}{{AC`AC`}Af}{{ACbAj}Al}{{ACdAj}Al}{{ACfAj}Al}{{AChAj}Al}{{AC`Aj}Al}{cc{}}0000{{G`Fd}{{Bf{AC`Gb}}}}{AC`Gd}{{ACbc}lBh}{{ACdc}lBh}{{AC`c}lBh}{AC`Fd}{{}Bj}{ce{}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{{Bn{c}}}{{Bn{b}}}{}}0000{{{C`{c}}}{{C`{b}}}{}}0000{AC`{{A`{{Bn{b}}}}}}{ACfCd}{AChCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AC`c}}Gf}}}{}}{{ACbACb}{{A`{n}}}}{{ACdACd}{{A`{n}}}}{{AC`c}{{Bf{lGb}}}{}}:::{c{{Bf{e}}}{}{}}{Db{{Bf{ACbl}}}}1{Db{{Bf{ACdl}}}}22222222{cDd{}}0000{AC`Db}{{AC`G`c}{{Bf{{Ch{FdDf}}Gb}}}{}}```````````````````````````````````````````````````````{{}ACj}0{cb{}}00000000000{{ACjACj}ACj}{{ACjACj}l}10{ACjDb}0021{ce{}{}}0000{AClFd}1111111{ACnACn}{AD`AD`}{ACjACj}{AClACl}{{ce}l{}{}}000{ACll}{{ACnACn}n}{{AD`AD`}n}55{{AClDbDbDb}l}{{ACjACj}Af}0{ACl{{A`{c}}}{}}??{{}ACj}0{{ACnACn}Af}{{AD`AD`}Af}4{{AClACl}Af}{{ACl{Fj{ACl}}}Af}{{ACjc}l{{ABb{}{{AB`{ACj}}}}}}{{ACnAj}Al}{{AD`Aj}Al}{{ACjAj}Al}0000{{ADbAj}Al}{{ADdAj}Al}{{AClAj}Al}{cc{}}00000{Db{{A`{ACj}}}}0{DbACj}0000{{G`Fd}{{Bf{AClGb}}}}{cACj{{ABb{}{{AB`{ACj}}}}}}{ABh{{A`{ACj}}}}0{AClGd}{{ACnc}lBh}{{AD`c}lBh}{{ACjc}lBh}{{AClc}lBh}{AClFd}{{ACjACj}l}0{{}Bj}{{ACjACj}ACj}0{{ACjACj}Af}0{ce{}{}}00000{{{Bl{c}}}{{Bl{b}}}{}}00000{{{Bn{c}}}{{Bn{b}}}{}}00000{{{C`{c}}}{{C`{b}}}{}}00000{ACjc{}}{ACjAf}000{ACj{{ABl{ACj}}}}0{ACj{{ABn{ACj}}}}0{ACjACj}{ACl{{A`{{Bn{b}}}}}}{ADbCd}{ADdCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AClc}}Gf}}}{}}{{ACnACn}{{A`{n}}}}{{AD`AD`}{{A`{n}}}}{{ACjACj}l}0{{AClc}{{Bf{lGb}}}{}}{{ACjACjAf}l}0{{ACjACj}ACj}300{ce{}{}}00044{c{{Bf{e}}}{}{}}{Db{{Bf{ACnl}}}}{Db{{Bf{AD`l}}}}22{Db{{Bf{ACjl}}}}333333333{cDd{}}0000066{AClDb}{{AClG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}```````````````````````````````````````````````````````````````````````{cb{}}0000000{ADff}9999{ADfh}::::{ADhADh}{ADfADf}{{ce}l{}{}}0{{ADhADh}n}{ADf{{A`{c}}}{AbAd}}{{ADhADh}Af}{{ADf{Ah{ADf}}}Af}{{ADfADf}Af}{{ADhAj}Al}{{ADjAj}Al}{{ADlAj}Al}{{ADfAj}Al}{cc{}}000{{Bbh}{{Bf{ADfBd}}}}{{ADhc}lBh}{{ADfc}lBh}{ADfh}{fADf}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{ADf{{A`{{Bn{Cb}}}}}}{ADjCd}{ADlCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{ADfc}}Cl}}}{}}{{ADhADh}{{A`{n}}}}{{ADfc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{ADfc}{{Bf{lBd}}}{}}{{ADfADn}l}{{ADfIfIfIf}l}{{ADfAE`}l}{{ADfIfIf}l}{{ADfAEb}l}{{ADfAEd}l}{ce{}{}}0{c{{Bf{e}}}{}{}}{Db{{Bf{ADhl}}}}1111111{cDd{}}000{ADfDb}{{ADfBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}````````````````````````````````````````{AEfl}{cb{}}0000000{AEff}8888{AEfh}9999{AEhAEh}{AEfAEf}{{ce}l{}{}}0{{AEhAEh}n}{AEf{{A`{c}}}{AbAd}}8{{AEfAEj}l}{{AEfAEj{Dj{e}}c}ADf{AbAd}{{Dl{ADfc}}}}{{AEhAEh}Af}{{AEf{Ah{AEf}}}Af}{{AEfAEf}Af}{{AEhAj}Al}{{AElAj}Al}{{AEnAj}Al}{{AEfAj}Al}{cc{}}000{{Bbh}{{Bf{AEfBd}}}}{{AEhc}lBh}{{AEfc}lBh}{AEfh}{fAEf}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{AEf{{A`{{Bn{Cb}}}}}}{AElCd}{AEnCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AEfc}}Cl}}}{}}{{AEhAEh}{{A`{n}}}}{{AEfc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AEfc}{{Bf{lBd}}}{}}{AEfl};;{Db{{Bf{AEhl}}}}{c{{Bf{e}}}{}{}}0000000{cDd{}}000{AEfDb}{{AEfBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````````````````````````````````````````{cb{}}0000000{AEjf}{ce{}{}}000{AEjh}1111{ADnADn}{AEjAEj}{{ce}l{}{}}0{{ADnADn}n}{AEj{{A`{c}}}{AbAd}}{{ADnADn}Af}{{AEj{Ah{AEj}}}Af}{{AEjAEj}Af}{{ADnAj}Al}{{AF`Aj}Al}{{AFbAj}Al}{{AEjAj}Al}{cc{}}000{{Bbh}{{Bf{AEjBd}}}}{{ADnc}lBh}{{AEjc}lBh}{AEjh}{fAEj}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{AEj{{A`{{Bn{Cb}}}}}}{AF`Cd}{AFbCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AEjc}}Cl}}}{}}{{ADnADn}{{A`{n}}}}{AEjl}{{AEjc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AEjc}{{Bf{lBd}}}{}};;{Db{{Bf{ADnl}}}}{c{{Bf{e}}}{}{}}0000000{cDd{}}000{AEjDb}{{AEjBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````````````````````{cb{}}00000{AFdf}{ce{}{}}0{AFdh}1111{AFdAFd}{{ce}l{}{}}{{AFdDb{Dj{e}}c}AEf{AbAd}{{Dl{AEfc}}}}{AFd{{A`{c}}}{AbAd}}{{AFdAFd}Af}{{AFd{Ah{AFd}}}Af}{{AFfAj}Al}{{AFhAj}Al}{{AFdAj}Al}{cc{}}00{{Bbh}{{Bf{AFdBd}}}}{{AFdc}lBh}<{fAFd}{{}Bj}???{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{AFd{{A`{{Bn{Cb}}}}}}{AFfCd}{AFhCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AFdc}}Cl}}}{}}{{AFdc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AFdc}{{Bf{lBd}}}{}}{AFdl}{ce{}{}}{c{{Bf{e}}}{}{}}00000{cDd{}}00{AFdDb}{{AFdBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````````{cb{}}00000{AE`f}666{AE`h}777{AE`AE`}{{ce}l{}{}}{AE`{{A`{c}}}{AbAd}}{{AE`{Ah{AE`}}}Af}{{AE`AE`}Af}{{AFjAj}Al}{{AFlAj}Al}{{AE`Aj}Al}{cc{}}00{{Bbh}{{Bf{AE`Bd}}}}{{AE`c}lBh};{fAE`}{{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{AE`{{A`{{Bn{Cb}}}}}}{AFjCd}{AFlCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AE`c}}Cl}}}{}}{AE`l}{{AE`c{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AE`c}{{Bf{lBd}}}{}}:{c{{Bf{e}}}{}{}}00000{cDd{}}00{AE`Db}{{AE`Bbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}````````````````````````````````````````````````````````{cb{}}0000000???{AFnFd}{ce{}{}}0000{AG`AG`}{AFnAFn}{{ce}l{}{}}0{{AG`AG`}n}{AFn{{A`{c}}}{}}{{AG`AG`}Af}{{AFnAFn}Af}{{AFn{Fj{AFn}}}Af}{{AG`Aj}Al}{{AGbAj}Al}{{AGdAj}Al}{{AFnAj}Al}{cc{}}000{{G`Fd}{{Bf{AFnGb}}}}{AFnGd}{{AG`c}lBh}{{AFnc}lBh}{AFnFd}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{AFn{{A`{{Bn{b}}}}}}{AGbCd}{AGdCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AFnc}}Gf}}}{}}{{AG`AG`}{{A`{n}}}}{{AFnc}{{Bf{lGb}}}{}}99{Db{{Bf{AG`l}}}}{c{{Bf{e}}}{}{}}0000000{cDd{}}000{AFnDb}{{AFnG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}````````````````````````````````````````{cb{}}0000000???{AGfFd}{ce{}{}}0000{AGfl}{AGhAGh}{AGfAGf}{{ce}l{}{}}0{{AGhAGh}n}{AGf{{A`{c}}}{}}{{AGhAGh}Af}{{AGf{Fj{AGf}}}Af}{{AGfAGf}Af}8{{AGhAj}Al}{{AGjAj}Al}{{AGlAj}Al}{{AGfAj}Al}{cc{}}000{{G`Fd}{{Bf{AGfGb}}}}{AGfGd}{{AGhc}lBh}{{AGfc}lBh}{AGfFd}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{AGf{{A`{{Bn{b}}}}}}{AGjCd}{AGlCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AGfc}}Gf}}}{}}{{AGhAGh}{{A`{n}}}}{{AGfc}{{Bf{lGb}}}{}}{AGfl}::{Db{{Bf{AGhl}}}}{c{{Bf{e}}}{}{}}0000000{cDd{}}000{AGfDb}{{AGfG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}``````````````````````````````````````````````````````{{AGnAH`}l}{cb{}}0000000{ce{}{}}000{AGnFd}1111{AH`AH`}{AGnAGn}{{ce}l{}{}}0{{AH`AH`}n}{{AGnAHb}l}{AGn{{A`{c}}}{}}{{AGnEj}l}{{AGnIf}l}{{AH`AH`}Af}{{AGnAGn}Af}{{AGn{Fj{AGn}}}Af}{AGnl}{{AH`Aj}Al}{{AHdAj}Al}{{AHfAj}Al}{{AGnAj}Al}{cc{}}000{{G`Fd}{{Bf{AGnGb}}}}{AGnGd}{{AH`c}lBh}{{AGnc}lBh}{AGnFd}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{{AGnEj}l}{{AGnAHb}l}11{AGn{{A`{{Bn{b}}}}}}{AHdCd}{AHfCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AGnc}}Gf}}}{}}{{AH`AH`}{{A`{n}}}}{{AGnIfIf}l}0{{AGnAEb}l}{{AGnc}{{Bf{lGb}}}{}}9=={{AGnAHh}l}{Db{{Bf{AH`l}}}}{c{{Bf{e}}}{}{}}0000000{cDd{}}000{AGnDb}{{AGnG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}`````````````````````````````````{cb{}}00000{ce{}{}}0{AHjFd}1111{AHjAHj}{{ce}l{}{}}{AHj{{A`{c}}}{}}{{AHjDb}l}{{AHjAHj}Af}{{AHj{Fj{AHj}}}Af}{AHjl}{{AHlAj}Al}{{AHnAj}Al}{{AHjAj}Al}{cc{}}00{{G`Fd}{{Bf{AHjGb}}}}{AHjGd}{{AHjc}lBh}{{AHjAGn}l}?{{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{AHj{{A`{{Bn{b}}}}}}{AHlCd}{AHnCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AHjc}}Gf}}}{}}{{AHjc}{{Bf{lGb}}}{}}8{c{{Bf{e}}}{}{}}00000{cDd{}}00{AHjDb}{{AHjG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}``````````````````````{cb{}}00000==={AHbFd}>>>{AHbAHb}{{ce}l{}{}}{AHb{{A`{c}}}{}}{{AHbAHb}Af}{{AHb{Fj{AHb}}}Af}{AHbl}{{AI`Aj}Al}{{AIbAj}Al}{{AHbAj}Al}{cc{}}00{{G`Fd}{{Bf{AHbGb}}}}{AHbGd}{{AHbc}lBh}={{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{AHb{{A`{{Bn{b}}}}}}{AI`Cd}{AIbCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AHbc}}Gf}}}{}}{AHbl}{{AHbIf}l}{{AHbc}{{Bf{lGb}}}{}}{{AHbIfIf}l};{c{{Bf{e}}}{}{}}00000{cDd{}}00{AHbDb}{{AHbG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}`````````````````````````{cb{}}00000{AIdf}{ce{}{}}00{AIdh}111{AIdAId}{{ce}l{}{}}{AId{{A`{c}}}{AbAd}}{AIdl}{{AIdAId}Af}{{AId{Ah{AId}}}Af}{{AIfAj}Al}{{AIhAj}Al}{{AIdAj}Al}{cc{}}00{{Bbh}{{Bf{AIdBd}}}}{{AIdIh{Dj{e}}c}AIj{AbAd}{{Dl{AIjc}}}}{{AIdc}lBh}={fAId}{{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{AId{{A`{{Bn{Cb}}}}}}{AIfCd}{AIhCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AIdc}}Cl}}}{}}{{AIdc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AIdc}{{Bf{lBd}}}{}}9{c{{Bf{e}}}{}{}}00000{cDd{}}00{AIdDb}{{AIdBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````````{cb{}}000000000{AIjf}?????{AIjh}{ce{}{}}0000{AIlAIl}{AInAIn}{AIjAIj}{{ce}l{}{}}00{{AIlAIl}n}{{AInAIn}n}{AIj{{A`{c}}}{AbAd}}{AIjl}{{AIlAIl}Af}{{AInAIn}Af}{{AIjAIj}Af}{{AIj{Ah{AIj}}}Af}{{AIlAj}Al}{{AInAj}Al}{{AJ`Aj}Al}{{AJbAj}Al}{{AIjAj}Al}{cc{}}0000{{Bbh}{{Bf{AIjBd}}}}{{AIlc}lBh}{{AInc}lBh}{{AIjc}lBh}{AIjh}{fAIj}{{}Bj}{ce{}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{{Bn{c}}}{{Bn{b}}}{}}0000{{{C`{c}}}{{C`{b}}}{}}0000{AIj{{A`{{Bn{Cb}}}}}}{AJ`Cd}{AJbCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AIjc}}Cl}}}{}}{{AIlAIl}{{A`{n}}}}{{AInAIn}{{A`{n}}}}{{AIjc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AIjc}{{Bf{lBd}}}{}}{{AIjAIl}l}<<<{Db{{Bf{AIll}}}}{c{{Bf{e}}}{}{}}{Db{{Bf{AInl}}}}111111111{cDd{}}0000{AIjDb}{{AIjBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````````{cb{}}00000{ce{}{}}00{AJdFd}111{AJdAJd}{{ce}l{}{}}{AJd{{A`{c}}}{}}{{AJd{Fj{AJd}}}Af}{{AJdAJd}Af}{{AJfAj}Al}{{AJhAj}Al}{{AJdAj}Al}{cc{}}00{{G`Fd}{{Bf{AJdGb}}}}{AJdGd}{{AJdc}lBh}<{{}Bj}>>>{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{AJd{{A`{{Bn{b}}}}}}{AJfCd}{AJhCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AJdc}}Gf}}}{}}{{AJdc}{{Bf{lGb}}}{}}{ce{}{}}{c{{Bf{e}}}{}{}}00000{cDd{}}00{AJdDb}{{AJdG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}``````````````````````{cb{}}0000000005555{AJjFd}666666{AJlAJl}{AJnAJn}{AJjAJj}{{ce}l{}{}}00{{AJlAJl}n}{{AJnAJn}n}{AJj{{A`{c}}}{}}{{AJlAJl}Af}{{AJnAJn}Af}{{AJj{Fj{AJj}}}Af}{{AJjAJj}Af}{AJjl}{{AJlAj}Al}{{AJnAj}Al}{{AK`Aj}Al}{{AKbAj}Al}{{AJjAj}Al}{cc{}}0000{{G`Fd}{{Bf{AJjGb}}}}{AJjGd}{{AJlc}lBh}{{AJnc}lBh}{{AJjc}lBh}{AJjFd}{{}Bj}{ce{}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{{Bn{c}}}{{Bn{b}}}{}}0000{{{C`{c}}}{{C`{b}}}{}}0000{{AJjAJl}l}{AJj{{A`{{Bn{b}}}}}}{AK`Cd}{AKbCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AJjc}}Gf}}}{}}{{AJlAJl}{{A`{n}}}}{{AJnAJn}{{A`{n}}}}{{AJjc}{{Bf{lGb}}}{}};;;{Db{{Bf{AJll}}}}{c{{Bf{e}}}{}{}}0{Db{{Bf{AJnl}}}}11111111{cDd{}}0000{AJjDb}{{AJjG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}`````````````````````````````````````````````````````{{}AKd}0{cb{}}000000000{AKff}{{AKdAKd}AKd}{{AKdAKd}l}10{AKdDb}0021{ce{}{}}000{AKfh}111111{AKhAKh}{AKdAKd}{AKfAKf}{{ce}l{}{}}00{{AKhAKh}n}33{{AKdAKd}Af}0{{AKfAKj}l}0{AKf{{A`{c}}}{AbAd}}{AKfl}=={{}AKd}0{{AKhAKh}Af}5{{AKf{Ah{AKf}}}Af}{{AKfAKf}Af}{{AKdc}l{{ABb{}{{AB`{AKd}}}}}}{{AKhAj}Al}{{AKdAj}Al}0000{{AKlAj}Al}{{AKnAj}Al}{{AKfAj}Al}{cc{}}0000{Db{{A`{AKd}}}}0{DbAKd}0000{{Bbh}{{Bf{AKfBd}}}}{cAKd{{ABb{}{{AB`{AKd}}}}}}{ABh{{A`{AKd}}}}0{{AKhc}lBh}{{AKdc}lBh}{{AKfc}lBh}{AKfh}{fAKf}{{AKdAKd}l}0{{}Bj}{{AKdAKd}AKd}0{{AKdAKd}Af}0{ce{}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{{Bn{c}}}{{Bn{b}}}{}}0000{{{C`{c}}}{{C`{b}}}{}}0000{AKdc{}}{AKdAf}000{AKd{{ABl{AKd}}}}0{AKd{{ABn{AKd}}}}0{AKdAKd}{AKf{{A`{{Bn{Cb}}}}}}{AKlCd}{AKnCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AKfc}}Cl}}}{}}{{AKhAKh}{{A`{n}}}}{{AKdAKd}l}0{{AKfc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AKfc}{{Bf{lBd}}}{}}{{AKdAKdAf}l}0{{AKdAKd}AKd}400{ce{}{}}0055{Db{{Bf{AKhl}}}}{c{{Bf{e}}}{}{}}0{Db{{Bf{AKdl}}}}11111111{cDd{}}000055{AKfDb}{{AKfBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}`````````````````````````````{cb{}}00000{AL`f}88{AL`h}9999{{AL`IfIh{Dj{e}}c}AKf{AbAd}{{Dl{AKfc}}}}{{AL`IfIhIfIfIfIf{Dj{e}}c}AKf{AbAd}{{Dl{AKfc}}}}{AL`AL`}{{ce}l{}{}}{AL`{{A`{c}}}{AbAd}}{AL`l}{{AL`AL`}Af}{{AL`{Ah{AL`}}}Af}{{ALbAj}Al}{{ALdAj}Al}{{AL`Aj}Al}{cc{}}00{{Bbh}{{Bf{AL`Bd}}}}{{AL`c}lBh}>{fAL`}{{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{AL`{{A`{{Bn{Cb}}}}}}{ALbCd}{ALdCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AL`c}}Cl}}}{}}{{AL`c{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AL`c}{{Bf{lBd}}}{}}9{c{{Bf{e}}}{}{}}00000{cDd{}}00{AL`Db}{{AL`Bbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}````````````````````````````````````````````````````````{{}ALf}0{cb{}}000000000{{ALfALf}ALf}{{ALfALf}l}10{ALfDb}0021{ce{}{}}000{ALhFd}111111{{ALhALjDbDbDb}l}{ALhl}{ALlALl}{ALfALf}{ALhALh}{{ce}l{}{}}00{{ALlALl}n}33{{ALfALf}Af}0{{ALhDbDbDbDb}l}{ALh{{A`{c}}}{}}>>{{}ALf}0{{ALlALl}Af}4{{ALhALh}Af}{{ALh{Fj{ALh}}}Af}{{ALfc}l{{ABb{}{{AB`{ALf}}}}}}={{ALhALf}l}{{ALlAj}Al}{{ALfAj}Al}0000{{ALnAj}Al}{{AM`Aj}Al}{{ALhAj}Al}{cc{}}0000{Db{{A`{ALf}}}}0{DbALf}0000{{G`Fd}{{Bf{ALhGb}}}}{cALf{{ABb{}{{AB`{ALf}}}}}}{ABh{{A`{ALf}}}}0{ALhGd}{{ALlc}lBh}{{ALfc}lBh}{{ALhc}lBh}{ALhFd}{{ALfALf}l}0{{}Bj}{{ALfALf}ALf}0{{ALfALf}Af}0{ce{}{}}0000{{{Bl{c}}}{{Bl{b}}}{}}0000{{{Bn{c}}}{{Bn{b}}}{}}0000{{{C`{c}}}{{C`{b}}}{}}0000{ALfc{}}{ALfAf}000{ALf{{ABl{ALf}}}}0{ALf{{ABn{ALf}}}}0{{ALhDbDbDb}l}{ALfALf}{ALh{{A`{{Bn{b}}}}}}{ALnCd}{AM`Cd}{{G`{Ch{FdCf}}}{{Bf{{Cj{ALhc}}Gf}}}{}}{{ALlALl}{{A`{n}}}}6{{ALfALf}l}0{{ALhc}{{Bf{lGb}}}{}}{{ALfALfAf}l}0{{ALfALf}ALf}300{ce{}{}}0044{c{{Bf{e}}}{}{}}{Db{{Bf{ALll}}}}{Db{{Bf{ALfl}}}}222222222{cDd{}}000055{ALhDb}{{ALhG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}`````````````````````````````{cb{}}00000777{AMbFd}888{AMbAMb}{{ce}l{}{}}{AMb{{A`{c}}}{}}{{AMb{Fj{AMb}}}Af}{{AMbAMb}Af}{{AMdAj}Al}{{AMfAj}Al}{{AMbAj}Al}{cc{}}00{{G`Fd}{{Bf{AMbGb}}}}{AMbGd}{{AMbc}lBh}<{{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{AMb{{A`{{Bn{b}}}}}}{AMdCd}{AMfCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AMbc}}Gf}}}{}}{{AMbc}{{Bf{lGb}}}{}}8{c{{Bf{e}}}{}{}}00000{cDd{}}00{AMbDb}{{AMbG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}``````````````````````````````````{cb{}}00000{AMhf}>>{AMhh}????{AMhAMh}{{ce}l{}{}}{{AMh{A`{Eb}}{Dj{e}}c}AMj{AbAd}{{Dl{AMjc}}}}{{AMh{A`{Eb}}{A`{Ih}}{Dj{e}}c}AMj{AbAd}{{Dl{AMjc}}}}{AMh{{A`{c}}}{AbAd}}{AMhl}{{AMhAMh}Af}{{AMh{Ah{AMh}}}Af}{{AMlAj}Al}{{AMnAj}Al}{{AMhAj}Al}{cc{}}00{{Bbh}{{Bf{AMhBd}}}}{{AMhc}lBh}>{fAMh}{{}Bj}{ce{}{}}00{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{AMh{{A`{{Bn{Cb}}}}}}{AMlCd}{AMnCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AMhc}}Cl}}}{}}{{AMhc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AMhc}{{Bf{lBd}}}{}}9{c{{Bf{e}}}{}{}}00000{cDd{}}00{AMhDb}{{AMhBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}````````````````````````````````````{cb{}}0000000{{AMjDbAN`AEb}l}{{AMjDbAN`AEbIf}l}{{AMjANb}l}{{AMjDbAN`}l}{AMjf}{ce{}{}}000{AMjh}1111{{AMjDbDbANd}l}{ANfANf}{AMjAMj}{{ce}l{}{}}0{{ANfANf}n}{AMj{{A`{c}}}{AbAd}}{AMjl}{{ANfANf}Af}{{AMj{Ah{AMj}}}Af}{{AMjAMj}Af}{{ANfAj}Al}{{ANhAj}Al}{{ANjAj}Al}{{AMjAj}Al}7{cc{}}000{{Bbh}{{Bf{AMjBd}}}}{{ANfc}lBh}{{AMjc}lBh}{AMjh}{fAMj}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{{AMjDbAEbAEb}l}{{AMjDbDbDbDbDb}l}{AMj{{A`{{Bn{Cb}}}}}}{ANhCd}{ANjCd}{{Bb{Ch{hCf}}}{{Bf{{Cj{AMjc}}Cl}}}{}}{{ANfANf}{{A`{n}}}}{{AMjc{Bn{Cb}}}{{Bf{eBd}}}{}Cn}{{AMjc}{{Bf{lBd}}}{}}<<{c{{Bf{e}}}{}{}}{Db{{Bf{ANfl}}}}1111111{cDd{}}000{AMjDb}{{AMjBbc}{{Bf{{Cj{{Ch{hDf}}{A`{{Cj{BjDb}}}}}}Bd}}}{}}``````````````````````````````````````````{cb{}}00000{ce{}{}}0{ANlFd}1111{ANlANl}{{ce}l{}{}}{ANl{{A`{c}}}{}}{{ANlANl}Af}{{ANl{Fj{ANl}}}Af}{{ANnAj}Al}{{AO`Aj}Al}{{ANlAj}Al}{cc{}}00{{G`Fd}{{Bf{ANlGb}}}}{ANlGd}{{ANlc}lBh}<{{}Bj}>>>{{{Bl{c}}}{{Bl{b}}}{}}00{{{Bn{c}}}{{Bn{b}}}{}}00{{{C`{c}}}{{C`{b}}}{}}00{ANl{{A`{{Bn{b}}}}}}{ANnCd}{AO`Cd}{{G`{Ch{FdCf}}}{{Bf{{Cj{ANlc}}Gf}}}{}}{{ANlc}{{Bf{lGb}}}{}}{ce{}{}}{c{{Bf{e}}}{}{}}00000{cDd{}}00{ANlDb}{{ANlG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}``````````````````````````````````````{cb{}}0000000555{AObFd}66666{AOdAOd}{AObAOb}{{ce}l{}{}}0{{AOdAOd}n}{AOb{{A`{c}}}{}}{{AOdAOd}Af}{{AObAOb}Af}{{AOb{Fj{AOb}}}Af}{{AOdAj}Al}{{AOfAj}Al}{{AOhAj}Al}{{AObAj}Al}{cc{}}000{{G`Fd}{{Bf{AObGb}}}}{AObGd}{{AOdc}lBh}{{AObc}lBh}{AObFd}{{}Bj}{ce{}{}}000{{{Bl{c}}}{{Bl{b}}}{}}000{{{Bn{c}}}{{Bn{b}}}{}}000{{{C`{c}}}{{C`{b}}}{}}000{AOb{{A`{{Bn{b}}}}}}{AOfCd}{AOhCd}{{G`{Ch{FdCf}}}{{Bf{{Cj{AObc}}Gf}}}{}}{{AOdAOd}{{A`{n}}}}{{AObc}{{Bf{lGb}}}{}}99{Db{{Bf{AOdl}}}}{c{{Bf{e}}}{}{}}0000000{cDd{}}000{AObDb}{{AObG`c}{{Bf{{Ch{FdDf}}Gb}}}{}}`````````````````````","c":[],"p":[[10,"Any",5925],[5,"ZwlrDataControlDeviceV1",33],[5,"WeakBackend",5926],[5,"ObjectId",5926],[6,"Error",33],[1,"unit"],[6,"Ordering",5927],[6,"Option",5928],[10,"Send",5929],[10,"Sync",5929],[1,"bool"],[5,"Weak",5930],[5,"Formatter",5931],[8,"Result",5931],[6,"Request",33],[6,"Event",33],[5,"Connection",5932],[5,"InvalidId",5933],[6,"Result",5934],[10,"Hasher",5935],[5,"Interface",5936],[5,"Box",5937],[5,"Arc",5938],[5,"Rc",5939],[10,"ObjectData",5926],[1,"u16"],[5,"OwnedFd",5940],[5,"Message",5936],[1,"tuple"],[6,"DispatchError",5930],[10,"Proxy",5930],[5,"ZwlrDataControlSourceV1",301],[1,"u32"],[5,"TypeId",5925],[5,"BorrowedFd",5940],[5,"ZwlrDataControlManagerV1",148],[5,"QueueHandle",5941],[10,"Dispatch",5941],[6,"Request",148],[6,"Event",148],[5,"WlSeat",5942],[5,"ZwlrDataControlOfferV1",224],[6,"Request",224],[6,"Event",224],[5,"String",5943],[6,"Error",301],[6,"Request",301],[6,"Event",301],[5,"ZwlrDataControlDeviceV1",424],[5,"ObjectId",5944],[6,"Error",424],[5,"ZwlrDataControlOfferV1",611],[5,"Weak",5945],[6,"Request",424],[6,"Event",424],[5,"DisplayHandle",5946],[5,"InvalidId",5947],[5,"WeakHandle",5944],[6,"DispatchError",5945],[5,"ZwlrDataControlManagerV1",538],[6,"Request",538],[6,"Event",538],[6,"Request",611],[6,"Event",611],[5,"ZwlrDataControlSourceV1",685],[6,"Error",685],[6,"Request",685],[6,"Event",685],[5,"ZwlrExportDmabufFrameV1",799],[6,"Flags",799],[6,"CancelReason",799],[6,"Request",799],[6,"Event",799],[5,"ZwlrExportDmabufManagerV1",946],[1,"i32"],[5,"WlOutput",5948],[6,"Request",946],[6,"Event",946],[5,"ZwlrExportDmabufFrameV1",1029],[6,"CancelReason",1029],[6,"Flags",1029],[6,"Request",1029],[6,"Event",1029],[5,"ZwlrExportDmabufManagerV1",1177],[6,"Request",1177],[6,"Event",1177],[5,"ZwlrForeignToplevelHandleV1",1261],[6,"State",1261],[6,"Error",1261],[6,"Request",1261],[6,"Event",1261],[5,"WlSurface",5949],[5,"ZwlrForeignToplevelManagerV1",1450],[6,"Request",1450],[6,"Event",1450],[5,"ZwlrForeignToplevelHandleV1",1535],[6,"State",1535],[6,"Error",1535],[6,"Request",1535],[6,"Event",1535],[5,"WlOutput",5950],[1,"u8"],[5,"Vec",5951],[5,"ZwlrForeignToplevelManagerV1",1720],[6,"Request",1720],[6,"Event",1720],[5,"ZwlrGammaControlManagerV1",1806],[6,"Request",1806],[6,"Event",1806],[5,"ZwlrGammaControlV1",1878],[6,"Error",1878],[6,"Request",1878],[6,"Event",1878],[5,"ZwlrGammaControlManagerV1",1990],[6,"Request",1990],[6,"Event",1990],[5,"ZwlrGammaControlV1",2059],[6,"Error",2059],[6,"Request",2059],[6,"Event",2059],[5,"ZwlrInputInhibitManagerV1",2171],[6,"Error",2171],[6,"Request",2171],[6,"Event",2171],[5,"ZwlrInputInhibitorV1",2261],[6,"Request",2261],[6,"Event",2261],[5,"ZwlrInputInhibitManagerV1",2337],[6,"Error",2337],[6,"Request",2337],[6,"Event",2337],[5,"ZwlrInputInhibitorV1",2425],[6,"Request",2425],[6,"Event",2425],[5,"ZwlrLayerShellV1",2502],[6,"Error",2502],[6,"Layer",2502],[6,"Request",2502],[6,"Event",2502],[5,"ZwlrLayerSurfaceV1",2628],[5,"Anchor",2628],[6,"KeyboardInteractivity",2628],[6,"Error",2628],[17,"Item"],[10,"IntoIterator",5952],[6,"Request",2628],[6,"Event",2628],[1,"str"],[5,"XdgPopup",5953],[5,"Iter",5954],[5,"IterNames",5954],[5,"ZwlrLayerShellV1",2895],[6,"Error",2895],[6,"Layer",2895],[6,"Request",2895],[6,"Event",2895],[5,"Anchor",3018],[5,"ZwlrLayerSurfaceV1",3018],[6,"KeyboardInteractivity",3018],[6,"Error",3018],[6,"Request",3018],[6,"Event",3018],[5,"ZwlrOutputConfigurationHeadV1",3294],[6,"Error",3294],[6,"Request",3294],[6,"Event",3294],[6,"AdaptiveSyncState",3537],[5,"ZwlrOutputModeV1",3768],[1,"f64"],[6,"Transform",5948],[5,"ZwlrOutputConfigurationV1",3418],[6,"Error",3418],[5,"ZwlrOutputHeadV1",3537],[6,"Request",3418],[6,"Event",3418],[6,"Request",3537],[6,"Event",3537],[5,"ZwlrOutputManagerV1",3685],[6,"Request",3685],[6,"Event",3685],[6,"Request",3768],[6,"Event",3768],[5,"ZwlrOutputConfigurationHeadV1",3875],[6,"Error",3875],[6,"Request",3875],[6,"Event",3875],[5,"ZwlrOutputConfigurationV1",3991],[6,"Error",3991],[6,"Request",3991],[6,"Event",3991],[5,"ZwlrOutputHeadV1",4107],[6,"AdaptiveSyncState",4107],[5,"ZwlrOutputModeV1",4349],[6,"Request",4107],[6,"Event",4107],[6,"Transform",5950],[5,"ZwlrOutputManagerV1",4266],[6,"Request",4266],[6,"Event",4266],[6,"Request",4349],[6,"Event",4349],[5,"ZwlrOutputPowerManagerV1",4445],[6,"Request",4445],[6,"Event",4445],[5,"ZwlrOutputPowerV1",4517],[6,"Mode",4517],[6,"Error",4517],[6,"Request",4517],[6,"Event",4517],[5,"ZwlrOutputPowerManagerV1",4653],[6,"Request",4653],[6,"Event",4653],[5,"ZwlrOutputPowerV1",4722],[6,"Mode",4722],[6,"Error",4722],[6,"Request",4722],[6,"Event",4722],[5,"Flags",4859],[5,"ZwlrScreencopyFrameV1",4859],[6,"Error",4859],[5,"WlBuffer",5955],[6,"Request",4859],[6,"Event",4859],[5,"ZwlrScreencopyManagerV1",5079],[6,"Request",5079],[6,"Event",5079],[5,"Flags",5172],[5,"ZwlrScreencopyFrameV1",5172],[6,"Format",5956],[6,"Error",5172],[6,"Request",5172],[6,"Event",5172],[5,"ZwlrScreencopyManagerV1",5394],[6,"Request",5394],[6,"Event",5394],[5,"ZwlrVirtualPointerManagerV1",5486],[5,"ZwlrVirtualPointerV1",5564],[6,"Request",5486],[6,"Event",5486],[6,"Axis",5957],[6,"AxisSource",5957],[6,"ButtonState",5957],[6,"Error",5564],[6,"Request",5564],[6,"Event",5564],[5,"ZwlrVirtualPointerManagerV1",5717],[6,"Request",5717],[6,"Event",5717],[5,"ZwlrVirtualPointerV1",5792],[6,"Error",5792],[6,"Request",5792],[6,"Event",5792],[15,"DataOffer",143],[15,"Selection",143],[15,"PrimarySelection",143],[15,"SetSelection",146],[15,"SetPrimarySelection",146],[15,"GetDataDevice",223],[15,"Offer",298],[15,"Receive",299],[15,"Send",401],[15,"Offer",403],[15,"DataOffer",533],[15,"Selection",533],[15,"PrimarySelection",533],[15,"SetSelection",536],[15,"SetPrimarySelection",536],[15,"CreateDataSource",608],[15,"GetDataDevice",608],[15,"Offer",682],[15,"Receive",683],[15,"Send",783],[15,"Offer",785],[15,"Frame",926],[15,"Object",926],[15,"Cancel",926],[15,"Ready",926],[15,"CaptureOutput",1017],[15,"Frame",1157],[15,"Object",1157],[15,"Cancel",1157],[15,"Ready",1157],[15,"CaptureOutput",1244],[15,"AppId",1437],[15,"OutputEnter",1437],[15,"OutputLeave",1437],[15,"Parent",1437],[15,"State",1437],[15,"Title",1437],[15,"SetRectangle",1443],[15,"SetFullscreen",1443],[15,"Activate",1443],[15,"Toplevel",1523],[15,"AppId",1707],[15,"OutputEnter",1707],[15,"OutputLeave",1707],[15,"Parent",1707],[15,"State",1707],[15,"Title",1707],[15,"SetRectangle",1713],[15,"SetFullscreen",1713],[15,"Activate",1713],[15,"Toplevel",1792],[15,"GetGammaControl",1877],[15,"GammaSize",1978],[15,"SetGamma",1979],[15,"GetGammaControl",2057],[15,"GammaSize",2157],[15,"SetGamma",2158],[15,"GetInhibitor",2424],[15,"GetLayerSurface",2624],[15,"Configure",2870],[15,"SetAnchor",2873],[15,"SetMargin",2873],[15,"SetSize",2873],[15,"SetKeyboardInteractivity",2873],[15,"SetLayer",2873],[15,"GetPopup",2873],[15,"AckConfigure",2873],[15,"SetExclusiveZone",2873],[15,"GetLayerSurface",3013],[15,"Configure",3251],[15,"SetAnchor",3254],[15,"SetMargin",3254],[15,"SetSize",3254],[15,"SetKeyboardInteractivity",3254],[15,"SetLayer",3254],[15,"GetPopup",3254],[15,"AckConfigure",3254],[15,"SetExclusiveZone",3254],[15,"SetCustomMode",3409],[15,"SetMode",3409],[15,"SetScale",3409],[15,"SetAdaptiveSync",3409],[15,"SetTransform",3409],[15,"SetPosition",3409],[15,"EnableHead",3535],[15,"DisableHead",3535],[15,"Description",3670],[15,"Enabled",3670],[15,"PhysicalSize",3670],[15,"Make",3670],[15,"Mode",3670],[15,"CurrentMode",3670],[15,"Model",3670],[15,"Name",3670],[15,"Scale",3670],[15,"SerialNumber",3670],[15,"AdaptiveSync",3670],[15,"Transform",3670],[15,"Position",3670],[15,"Head",3765],[15,"Done",3765],[15,"CreateConfiguration",3767],[15,"Size",3847],[15,"Refresh",3847],[15,"SetCustomMode",3982],[15,"SetMode",3982],[15,"SetScale",3982],[15,"SetAdaptiveSync",3982],[15,"SetTransform",3982],[15,"SetPosition",3982],[15,"EnableHead",4104],[15,"DisableHead",4104],[15,"Description",4251],[15,"Enabled",4251],[15,"PhysicalSize",4251],[15,"Make",4251],[15,"Mode",4251],[15,"CurrentMode",4251],[15,"Model",4251],[15,"Name",4251],[15,"Scale",4251],[15,"SerialNumber",4251],[15,"AdaptiveSync",4251],[15,"Transform",4251],[15,"Position",4251],[15,"Head",4345],[15,"Done",4345],[15,"CreateConfiguration",4347],[15,"Size",4429],[15,"Refresh",4429],[15,"GetOutputPower",4516],[15,"Mode",4641],[15,"SetMode",4642],[15,"GetOutputPower",4720],[15,"Mode",4844],[15,"SetMode",4845],[15,"Flags",5062],[15,"Buffer",5062],[15,"LinuxDmabuf",5062],[15,"Damage",5062],[15,"Ready",5062],[15,"Copy",5077],[15,"CopyWithDamage",5077],[15,"CaptureOutputRegion",5154],[15,"CaptureOutput",5154],[15,"Flags",5377],[15,"Buffer",5377],[15,"LinuxDmabuf",5377],[15,"Damage",5377],[15,"Ready",5377],[15,"Copy",5392],[15,"CopyWithDamage",5392],[15,"CaptureOutput",5464],[15,"CaptureOutputRegion",5464],[15,"CreateVirtualPointerWithOutput",5561],[15,"CreateVirtualPointer",5561],[15,"Axis",5687],[15,"AxisStop",5687],[15,"AxisDiscrete",5687],[15,"AxisSource",5687],[15,"Button",5687],[15,"Motion",5687],[15,"MotionAbsolute",5687],[15,"CreateVirtualPointer",5787],[15,"CreateVirtualPointerWithOutput",5787],[15,"Axis",5904],[15,"AxisStop",5904],[15,"AxisDiscrete",5904],[15,"AxisSource",5904],[15,"Button",5904],[15,"Motion",5904],[15,"MotionAbsolute",5904]],"b":[[85,"impl-PartialEq%3CWeak%3CZwlrDataControlDeviceV1%3E%3E-for-ZwlrDataControlDeviceV1"],[86,"impl-PartialEq-for-ZwlrDataControlDeviceV1"],[179,"impl-PartialEq%3CWeak%3CZwlrDataControlManagerV1%3E%3E-for-ZwlrDataControlManagerV1"],[180,"impl-PartialEq-for-ZwlrDataControlManagerV1"],[254,"impl-PartialEq-for-ZwlrDataControlOfferV1"],[255,"impl-PartialEq%3CWeak%3CZwlrDataControlOfferV1%3E%3E-for-ZwlrDataControlOfferV1"],[344,"impl-PartialEq%3CWeak%3CZwlrDataControlSourceV1%3E%3E-for-ZwlrDataControlSourceV1"],[345,"impl-PartialEq-for-ZwlrDataControlSourceV1"],[475,"impl-PartialEq-for-ZwlrDataControlDeviceV1"],[476,"impl-PartialEq%3CWeak%3CZwlrDataControlDeviceV1%3E%3E-for-ZwlrDataControlDeviceV1"],[566,"impl-PartialEq-for-ZwlrDataControlManagerV1"],[567,"impl-PartialEq%3CWeak%3CZwlrDataControlManagerV1%3E%3E-for-ZwlrDataControlManagerV1"],[639,"impl-PartialEq%3CWeak%3CZwlrDataControlOfferV1%3E%3E-for-ZwlrDataControlOfferV1"],[640,"impl-PartialEq-for-ZwlrDataControlOfferV1"],[727,"impl-PartialEq-for-ZwlrDataControlSourceV1"],[728,"impl-PartialEq%3CWeak%3CZwlrDataControlSourceV1%3E%3E-for-ZwlrDataControlSourceV1"],[857,"impl-PartialEq-for-ZwlrExportDmabufFrameV1"],[858,"impl-PartialEq%3CWeak%3CZwlrExportDmabufFrameV1%3E%3E-for-ZwlrExportDmabufFrameV1"],[974,"impl-PartialEq%3CWeak%3CZwlrExportDmabufManagerV1%3E%3E-for-ZwlrExportDmabufManagerV1"],[975,"impl-PartialEq-for-ZwlrExportDmabufManagerV1"],[1086,"impl-PartialEq%3CWeak%3CZwlrExportDmabufFrameV1%3E%3E-for-ZwlrExportDmabufFrameV1"],[1087,"impl-PartialEq-for-ZwlrExportDmabufFrameV1"],[1202,"impl-PartialEq-for-ZwlrExportDmabufManagerV1"],[1203,"impl-PartialEq%3CWeak%3CZwlrExportDmabufManagerV1%3E%3E-for-ZwlrExportDmabufManagerV1"],[1361,"impl-PartialEq-for-ZwlrForeignToplevelHandleV1"],[1362,"impl-PartialEq%3CWeak%3CZwlrForeignToplevelHandleV1%3E%3E-for-ZwlrForeignToplevelHandleV1"],[1479,"impl-PartialEq-for-ZwlrForeignToplevelManagerV1"],[1480,"impl-PartialEq%3CWeak%3CZwlrForeignToplevelManagerV1%3E%3E-for-ZwlrForeignToplevelManagerV1"],[1634,"impl-PartialEq%3CWeak%3CZwlrForeignToplevelHandleV1%3E%3E-for-ZwlrForeignToplevelHandleV1"],[1635,"impl-PartialEq-for-ZwlrForeignToplevelHandleV1"],[1748,"impl-PartialEq%3CWeak%3CZwlrForeignToplevelManagerV1%3E%3E-for-ZwlrForeignToplevelManagerV1"],[1749,"impl-PartialEq-for-ZwlrForeignToplevelManagerV1"],[1833,"impl-PartialEq%3CWeak%3CZwlrGammaControlManagerV1%3E%3E-for-ZwlrGammaControlManagerV1"],[1834,"impl-PartialEq-for-ZwlrGammaControlManagerV1"],[1921,"impl-PartialEq%3CWeak%3CZwlrGammaControlV1%3E%3E-for-ZwlrGammaControlV1"],[1922,"impl-PartialEq-for-ZwlrGammaControlV1"],[2015,"impl-PartialEq%3CWeak%3CZwlrGammaControlManagerV1%3E%3E-for-ZwlrGammaControlManagerV1"],[2016,"impl-PartialEq-for-ZwlrGammaControlManagerV1"],[2100,"impl-PartialEq-for-ZwlrGammaControlV1"],[2101,"impl-PartialEq%3CWeak%3CZwlrGammaControlV1%3E%3E-for-ZwlrGammaControlV1"],[2204,"impl-PartialEq%3CWeak%3CZwlrInputInhibitManagerV1%3E%3E-for-ZwlrInputInhibitManagerV1"],[2205,"impl-PartialEq-for-ZwlrInputInhibitManagerV1"],[2285,"impl-PartialEq-for-ZwlrInputInhibitorV1"],[2286,"impl-PartialEq%3CWeak%3CZwlrInputInhibitorV1%3E%3E-for-ZwlrInputInhibitorV1"],[2369,"impl-PartialEq%3CWeak%3CZwlrInputInhibitManagerV1%3E%3E-for-ZwlrInputInhibitManagerV1"],[2370,"impl-PartialEq-for-ZwlrInputInhibitManagerV1"],[2447,"impl-PartialEq-for-ZwlrInputInhibitorV1"],[2448,"impl-PartialEq%3CWeak%3CZwlrInputInhibitorV1%3E%3E-for-ZwlrInputInhibitorV1"],[2554,"impl-PartialEq-for-ZwlrLayerShellV1"],[2555,"impl-PartialEq%3CWeak%3CZwlrLayerShellV1%3E%3E-for-ZwlrLayerShellV1"],[2679,"impl-Anchor"],[2680,"impl-Anchor"],[2698,"impl-Anchor"],[2699,"impl-Flags-for-Anchor"],[2700,"impl-Anchor"],[2726,"impl-Anchor"],[2727,"impl-Anchor"],[2728,"impl-Anchor"],[2729,"impl-Anchor"],[2732,"impl-Anchor"],[2733,"impl-Anchor"],[2734,"impl-Anchor"],[2735,"impl-Anchor"],[2739,"impl-PartialEq%3CWeak%3CZwlrLayerSurfaceV1%3E%3E-for-ZwlrLayerSurfaceV1"],[2740,"impl-PartialEq-for-ZwlrLayerSurfaceV1"],[2744,"impl-Binary-for-Anchor"],[2745,"impl-UpperHex-for-Anchor"],[2746,"impl-LowerHex-for-Anchor"],[2747,"impl-Debug-for-Anchor"],[2748,"impl-Octal-for-Anchor"],[2758,"impl-Anchor"],[2759,"impl-Anchor"],[2760,"impl-Anchor"],[2761,"impl-Flags-for-Anchor"],[2762,"impl-Anchor"],[2763,"impl-Anchor"],[2764,"impl-Anchor"],[2767,"impl-Anchor"],[2768,"impl-Anchor"],[2776,"impl-Anchor"],[2777,"impl-Anchor"],[2779,"impl-Anchor"],[2780,"impl-Anchor"],[2781,"impl-Anchor"],[2782,"impl-Anchor"],[2808,"impl-Anchor"],[2809,"impl-Anchor"],[2810,"impl-Anchor"],[2811,"impl-Anchor"],[2812,"impl-Anchor"],[2813,"impl-Anchor"],[2814,"impl-Anchor"],[2815,"impl-Anchor"],[2823,"impl-Anchor"],[2824,"impl-Anchor"],[2827,"impl-Anchor"],[2828,"impl-Anchor"],[2837,"impl-Anchor"],[2838,"impl-Anchor"],[2843,"impl-Anchor"],[2844,"impl-Anchor"],[2866,"impl-Anchor"],[2867,"impl-Anchor"],[2945,"impl-PartialEq%3CWeak%3CZwlrLayerShellV1%3E%3E-for-ZwlrLayerShellV1"],[2946,"impl-PartialEq-for-ZwlrLayerShellV1"],[3068,"impl-Anchor"],[3069,"impl-Anchor"],[3086,"impl-Flags-for-Anchor"],[3087,"impl-Anchor"],[3088,"impl-Anchor"],[3115,"impl-Anchor"],[3116,"impl-Anchor"],[3118,"impl-Anchor"],[3119,"impl-Anchor"],[3121,"impl-Anchor"],[3122,"impl-Anchor"],[3123,"impl-Anchor"],[3124,"impl-Anchor"],[3128,"impl-PartialEq-for-ZwlrLayerSurfaceV1"],[3129,"impl-PartialEq%3CWeak%3CZwlrLayerSurfaceV1%3E%3E-for-ZwlrLayerSurfaceV1"],[3133,"impl-Binary-for-Anchor"],[3134,"impl-LowerHex-for-Anchor"],[3135,"impl-Octal-for-Anchor"],[3136,"impl-UpperHex-for-Anchor"],[3137,"impl-Debug-for-Anchor"],[3147,"impl-Anchor"],[3148,"impl-Anchor"],[3149,"impl-Anchor"],[3150,"impl-Anchor"],[3151,"impl-Flags-for-Anchor"],[3152,"impl-Anchor"],[3153,"impl-Anchor"],[3156,"impl-Anchor"],[3157,"impl-Anchor"],[3164,"impl-Anchor"],[3165,"impl-Anchor"],[3167,"impl-Anchor"],[3168,"impl-Anchor"],[3169,"impl-Anchor"],[3170,"impl-Anchor"],[3196,"impl-Anchor"],[3197,"impl-Anchor"],[3198,"impl-Anchor"],[3199,"impl-Anchor"],[3200,"impl-Anchor"],[3201,"impl-Anchor"],[3202,"impl-Anchor"],[3203,"impl-Anchor"],[3211,"impl-Anchor"],[3212,"impl-Anchor"],[3214,"impl-Anchor"],[3215,"impl-Anchor"],[3218,"impl-Anchor"],[3219,"impl-Anchor"],[3224,"impl-Anchor"],[3225,"impl-Anchor"],[3247,"impl-Anchor"],[3248,"impl-Anchor"],[3347,"impl-PartialEq%3CWeak%3CZwlrOutputConfigurationHeadV1%3E%3E-for-ZwlrOutputConfigurationHeadV1"],[3348,"impl-PartialEq-for-ZwlrOutputConfigurationHeadV1"],[3478,"impl-PartialEq%3CWeak%3CZwlrOutputConfigurationV1%3E%3E-for-ZwlrOutputConfigurationV1"],[3479,"impl-PartialEq-for-ZwlrOutputConfigurationV1"],[3613,"impl-PartialEq%3CWeak%3CZwlrOutputHeadV1%3E%3E-for-ZwlrOutputHeadV1"],[3614,"impl-PartialEq-for-ZwlrOutputHeadV1"],[3721,"impl-PartialEq-for-ZwlrOutputManagerV1"],[3722,"impl-PartialEq%3CWeak%3CZwlrOutputManagerV1%3E%3E-for-ZwlrOutputManagerV1"],[3803,"impl-PartialEq%3CWeak%3CZwlrOutputModeV1%3E%3E-for-ZwlrOutputModeV1"],[3804,"impl-PartialEq-for-ZwlrOutputModeV1"],[3927,"impl-PartialEq-for-ZwlrOutputConfigurationHeadV1"],[3928,"impl-PartialEq%3CWeak%3CZwlrOutputConfigurationHeadV1%3E%3E-for-ZwlrOutputConfigurationHeadV1"],[4047,"impl-PartialEq%3CWeak%3CZwlrOutputConfigurationV1%3E%3E-for-ZwlrOutputConfigurationV1"],[4048,"impl-PartialEq-for-ZwlrOutputConfigurationV1"],[4186,"impl-PartialEq-for-ZwlrOutputHeadV1"],[4187,"impl-PartialEq%3CWeak%3CZwlrOutputHeadV1%3E%3E-for-ZwlrOutputHeadV1"],[4301,"impl-PartialEq-for-ZwlrOutputManagerV1"],[4302,"impl-PartialEq%3CWeak%3CZwlrOutputManagerV1%3E%3E-for-ZwlrOutputManagerV1"],[4383,"impl-PartialEq-for-ZwlrOutputModeV1"],[4384,"impl-PartialEq%3CWeak%3CZwlrOutputModeV1%3E%3E-for-ZwlrOutputModeV1"],[4472,"impl-PartialEq-for-ZwlrOutputPowerManagerV1"],[4473,"impl-PartialEq%3CWeak%3CZwlrOutputPowerManagerV1%3E%3E-for-ZwlrOutputPowerManagerV1"],[4571,"impl-PartialEq-for-ZwlrOutputPowerV1"],[4572,"impl-PartialEq%3CWeak%3CZwlrOutputPowerV1%3E%3E-for-ZwlrOutputPowerV1"],[4678,"impl-PartialEq%3CWeak%3CZwlrOutputPowerManagerV1%3E%3E-for-ZwlrOutputPowerManagerV1"],[4679,"impl-PartialEq-for-ZwlrOutputPowerManagerV1"],[4774,"impl-PartialEq%3CWeak%3CZwlrOutputPowerV1%3E%3E-for-ZwlrOutputPowerV1"],[4775,"impl-PartialEq-for-ZwlrOutputPowerV1"],[4897,"impl-Flags"],[4898,"impl-Flags"],[4914,"impl-Flags"],[4915,"impl-Flags"],[4916,"impl-Flags-for-Flags"],[4937,"impl-Flags"],[4938,"impl-Flags"],[4939,"impl-Flags"],[4940,"impl-Flags"],[4945,"impl-Flags"],[4946,"impl-Flags"],[4947,"impl-Flags"],[4948,"impl-Flags"],[4951,"impl-PartialEq%3CWeak%3CZwlrScreencopyFrameV1%3E%3E-for-ZwlrScreencopyFrameV1"],[4952,"impl-PartialEq-for-ZwlrScreencopyFrameV1"],[4955,"impl-LowerHex-for-Flags"],[4956,"impl-Debug-for-Flags"],[4957,"impl-Binary-for-Flags"],[4958,"impl-UpperHex-for-Flags"],[4959,"impl-Octal-for-Flags"],[4968,"impl-Flags"],[4969,"impl-Flags"],[4970,"impl-Flags-for-Flags"],[4971,"impl-Flags"],[4972,"impl-Flags"],[4973,"impl-Flags"],[4974,"impl-Flags"],[4977,"impl-Flags"],[4978,"impl-Flags"],[4984,"impl-Flags"],[4985,"impl-Flags"],[4987,"impl-Flags"],[4988,"impl-Flags"],[4989,"impl-Flags"],[4990,"impl-Flags"],[5012,"impl-Flags"],[5013,"impl-Flags"],[5014,"impl-Flags"],[5015,"impl-Flags"],[5016,"impl-Flags"],[5017,"impl-Flags"],[5018,"impl-Flags"],[5019,"impl-Flags"],[5026,"impl-Flags"],[5027,"impl-Flags"],[5030,"impl-Flags"],[5031,"impl-Flags"],[5034,"impl-Flags"],[5035,"impl-Flags"],[5039,"impl-Flags"],[5040,"impl-Flags"],[5058,"impl-Flags"],[5059,"impl-Flags"],[5111,"impl-PartialEq-for-ZwlrScreencopyManagerV1"],[5112,"impl-PartialEq%3CWeak%3CZwlrScreencopyManagerV1%3E%3E-for-ZwlrScreencopyManagerV1"],[5210,"impl-Flags"],[5211,"impl-Flags"],[5226,"impl-Flags"],[5227,"impl-Flags-for-Flags"],[5228,"impl-Flags"],[5251,"impl-Flags"],[5252,"impl-Flags"],[5253,"impl-Flags"],[5254,"impl-Flags"],[5257,"impl-Flags"],[5258,"impl-Flags"],[5259,"impl-Flags"],[5260,"impl-Flags"],[5263,"impl-PartialEq-for-ZwlrScreencopyFrameV1"],[5264,"impl-PartialEq%3CWeak%3CZwlrScreencopyFrameV1%3E%3E-for-ZwlrScreencopyFrameV1"],[5269,"impl-Binary-for-Flags"],[5270,"impl-LowerHex-for-Flags"],[5271,"impl-UpperHex-for-Flags"],[5272,"impl-Debug-for-Flags"],[5273,"impl-Octal-for-Flags"],[5282,"impl-Flags"],[5283,"impl-Flags"],[5284,"impl-Flags"],[5285,"impl-Flags"],[5286,"impl-Flags-for-Flags"],[5287,"impl-Flags"],[5288,"impl-Flags"],[5291,"impl-Flags"],[5292,"impl-Flags"],[5298,"impl-Flags"],[5299,"impl-Flags"],[5301,"impl-Flags"],[5302,"impl-Flags"],[5303,"impl-Flags"],[5304,"impl-Flags"],[5326,"impl-Flags"],[5327,"impl-Flags"],[5328,"impl-Flags"],[5329,"impl-Flags"],[5330,"impl-Flags"],[5331,"impl-Flags"],[5332,"impl-Flags"],[5333,"impl-Flags"],[5342,"impl-Flags"],[5343,"impl-Flags"],[5345,"impl-Flags"],[5346,"impl-Flags"],[5349,"impl-Flags"],[5350,"impl-Flags"],[5354,"impl-Flags"],[5355,"impl-Flags"],[5373,"impl-Flags"],[5374,"impl-Flags"],[5422,"impl-PartialEq%3CWeak%3CZwlrScreencopyManagerV1%3E%3E-for-ZwlrScreencopyManagerV1"],[5423,"impl-PartialEq-for-ZwlrScreencopyManagerV1"],[5518,"impl-PartialEq-for-ZwlrVirtualPointerManagerV1"],[5519,"impl-PartialEq%3CWeak%3CZwlrVirtualPointerManagerV1%3E%3E-for-ZwlrVirtualPointerManagerV1"],[5628,"impl-PartialEq%3CWeak%3CZwlrVirtualPointerV1%3E%3E-for-ZwlrVirtualPointerV1"],[5629,"impl-PartialEq-for-ZwlrVirtualPointerV1"],[5745,"impl-PartialEq-for-ZwlrVirtualPointerManagerV1"],[5746,"impl-PartialEq%3CWeak%3CZwlrVirtualPointerManagerV1%3E%3E-for-ZwlrVirtualPointerManagerV1"],[5849,"impl-PartialEq-for-ZwlrVirtualPointerV1"],[5850,"impl-PartialEq%3CWeak%3CZwlrVirtualPointerV1%3E%3E-for-ZwlrVirtualPointerV1"]]}],\
["wayland_scanner",{"doc":"Wayland protocol code-generation machinnery","t":"QQQ","n":["generate_client_code","generate_interfaces","generate_server_code"],"q":[[0,"wayland_scanner"]],"d":["Proc-macro for generating client-side API associated with …","Proc-macro for generating low-level interfaces associated …","Proc-macro for generating server-side API associated with …"],"i":[0,0,0],"f":"```","c":[],"p":[],"b":[]}],\
["wayland_server",{"doc":"Interface for interacting with the Wayland protocol, …","t":"PPGFFKGFFRKPFFPRKFPPPGFNNNNNNNNNNNNNNNNNNNNNNNNNNCNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNCNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMMOOOFKFPFGKFFGFPPKFPFNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNCNNMNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNJGGGPPPPPPSPPFFFPPPPPFFPPPPPPGFPOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNONNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOHNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOUFFCCCCCCCCCCCCCCCCCCCCCJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJPSSGSSPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPSSGGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOPPGSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPPSSSSSSSSSSSSPGGPPSSSSSSPGPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOTTPFGPTTSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPPSSSSSSGGPPPPPPSSSSSSSSSSPGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOPPPPPSSSSSSSSSSSSGGPPPSSSSSSGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOSSSSSSSSSSSSPGPGPGPPPPSSPPPGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOTPPSSSSSSSSSSSSGPPPPPPPFPPPPTSSPGPGGPPPFPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOGPPGPGPPPPGPSSSSSSSSSSSSSSSSSSSSSSPGGPPPPPPPPSSSSPPGPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPPGSSSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOPFSSSSGGPPPTPPTSSSSSSSSPGTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOGGPSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOTTTPPPSSSSSSGPGTTPTPPPSSSSSSSSSSSSSSSSSSSSGFPTPPPPPPPPTTTFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSGGGPPPPPPPPPPPPPPPPPPPPPSSGPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOPPGSSSSSSGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOPPPGGPSSSSGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPGGPPSSSSSSSSSSSSGPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOPPPPPPSSSSSSSSPGGPPPPPPPPPSSSSSSSSSSSSSSSSSSSSSSGPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOPPSSSSSSSSSSSSSSGPPPSSPGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOO","n":["AlreadyInUse","BadMessage","BindError","Client","DataInit","Dispatch","DispatchError","Display","DisplayHandle","Event","GlobalDispatch","Io","ListeningSocket","New","PermissionDenied","Request","Resource","ResourceData","RuntimeDirNotSet","Unknown","Value","WEnum","Weak","accept","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_fd","as_fd","as_raw_fd","backend","backend","backend_handle","bind","bind","bind_absolute","bind_auto","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_view","can_view","client","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_global","create_resource","create_resource_from_objdata","custom_init","data","delegate_dispatch","delegate_global_dispatch","destroyed","destroyed","destroyed","disable_global","dispatch_clients","downgrade","drop","eq","eq","eq","eq","flush_clients","flush_clients","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_id","get_client","get_credentials","get_data","get_object_data","handle","handle","hash","id","id","id","init","insert_client","interface","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_result","is_alive","kill","new","object_data","object_from_protocol_id","object_info","parse_request","post_error","post_error","post_error","protocol","remove_global","request","request","send_event","send_event","socket_name","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udata","upgrade","version","write_event","interface","opcode","sender_id","Backend","ClientData","ClientId","ConnectionClosed","Credentials","DisconnectReason","GlobalHandler","GlobalId","Handle","InitError","InvalidId","Io","NoWaylandLib","ObjectData","ObjectId","ProtocolError","WeakHandle","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_view","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_global","create_object","debug","debug","debug","destroyed","disable_global","disconnected","dispatch_all_clients","dispatch_single_client","downcast","downcast","downcast","downcast_arc","downcast_arc","downcast_arc","downcast_mut","downcast_mut","downcast_mut","downcast_rc","downcast_rc","downcast_rc","downcast_ref","downcast_ref","downcast_ref","downgrade","eq","eq","eq","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_client","get_client_credentials","get_client_data","get_global_handler","get_object_data","get_object_data_any","gid","global_info","handle","hash","hash","hash","initialized","insert_client","interface","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is","is","is","is_null","kill_client","new","null","object_for_protocol_id","object_info","pid","poll_fd","post_error","protocol","protocol_id","remove_global","request","same_client_as","send_event","set_object_data","smallvec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","upgrade","with_all_clients","with_all_objects_for","ANONYMOUS_INTERFACE","AllowNull","Argument","ArgumentType","Array","Array","Fd","Fd","Fixed","Fixed","INLINE_ARGS","Int","Int","Interface","Message","MessageDesc","NewId","NewId","No","Object","Object","ObjectInfo","ProtocolError","Str","Str","Uint","Uint","Unknown","Value","WEnum","WEnumError","Yes","a","arg_interfaces","args","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_ptr","child_interface","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","eq","eq","eq","eq","event_count","events","events","f","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_type","h","i","id","interface","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_destructor","map_fd","message","n","name","name","name","name","o","object_id","object_interface","opcode","request_count","requests","requests","s","same_interface","same_type","sender_id","signature","signature","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","u","version","version","version","wl_argument","wl_interface","wl_message","__interfaces","wl_buffer","wl_callback","wl_compositor","wl_data_device","wl_data_device_manager","wl_data_offer","wl_data_source","wl_keyboard","wl_output","wl_pointer","wl_region","wl_seat","wl_shell","wl_shell_surface","wl_shm","wl_shm_pool","wl_subcompositor","wl_subsurface","wl_surface","wl_touch","WL_BUFFER_INTERFACE","WL_CALLBACK_INTERFACE","WL_COMPOSITOR_INTERFACE","WL_DATA_DEVICE_INTERFACE","WL_DATA_DEVICE_MANAGER_INTERFACE","WL_DATA_OFFER_INTERFACE","WL_DATA_SOURCE_INTERFACE","WL_DISPLAY_INTERFACE","WL_KEYBOARD_INTERFACE","WL_OUTPUT_INTERFACE","WL_POINTER_INTERFACE","WL_REGION_INTERFACE","WL_REGISTRY_INTERFACE","WL_SEAT_INTERFACE","WL_SHELL_INTERFACE","WL_SHELL_SURFACE_INTERFACE","WL_SHM_INTERFACE","WL_SHM_POOL_INTERFACE","WL_SUBCOMPOSITOR_INTERFACE","WL_SUBSURFACE_INTERFACE","WL_SURFACE_INTERFACE","WL_TOUCH_INTERFACE","wl_buffer_events","wl_buffer_interface","wl_buffer_requests","wl_callback_events","wl_callback_interface","wl_compositor_interface","wl_compositor_requests","wl_data_device_events","wl_data_device_interface","wl_data_device_manager_interface","wl_data_device_manager_requests","wl_data_device_requests","wl_data_offer_events","wl_data_offer_interface","wl_data_offer_requests","wl_data_source_events","wl_data_source_interface","wl_data_source_requests","wl_display_events","wl_display_interface","wl_display_requests","wl_keyboard_events","wl_keyboard_interface","wl_keyboard_requests","wl_output_events","wl_output_interface","wl_output_requests","wl_pointer_events","wl_pointer_interface","wl_pointer_requests","wl_region_interface","wl_region_requests","wl_registry_events","wl_registry_interface","wl_registry_requests","wl_seat_events","wl_seat_interface","wl_seat_requests","wl_shell_interface","wl_shell_requests","wl_shell_surface_events","wl_shell_surface_interface","wl_shell_surface_requests","wl_shm_events","wl_shm_interface","wl_shm_pool_interface","wl_shm_pool_requests","wl_shm_requests","wl_subcompositor_interface","wl_subcompositor_requests","wl_subsurface_interface","wl_subsurface_requests","wl_surface_events","wl_surface_interface","wl_surface_requests","wl_touch_events","wl_touch_interface","wl_touch_requests","Destroy","EVT_RELEASE_OPCODE","EVT_RELEASE_SINCE","Event","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","Release","Request","WlBuffer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","release","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","Done","EVT_DONE_OPCODE","EVT_DONE_SINCE","Event","Request","WlCallback","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","done","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","callback_data","CreateRegion","CreateSurface","Event","REQ_CREATE_REGION_OPCODE","REQ_CREATE_REGION_SINCE","REQ_CREATE_SURFACE_OPCODE","REQ_CREATE_SURFACE_SINCE","Request","WlCompositor","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","id","id","DataOffer","Drop","EVT_DATA_OFFER_OPCODE","EVT_DATA_OFFER_SINCE","EVT_DROP_OPCODE","EVT_DROP_SINCE","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","EVT_SELECTION_OPCODE","EVT_SELECTION_SINCE","Enter","Error","Event","Leave","Motion","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_SELECTION_OPCODE","REQ_SET_SELECTION_SINCE","REQ_START_DRAG_OPCODE","REQ_START_DRAG_SINCE","Release","Request","Role","Selection","SetSelection","StartDrag","WlDataDevice","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","data_offer","drop","enter","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leave","motion","object_data","opcode","opcode","parse_request","partial_cmp","selection","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","id","id","id","serial","surface","time","x","x","y","y","icon","origin","serial","serial","source","source","Ask","Copy","CreateDataSource","DndAction","Event","GetDataDevice","Move","None","REQ_CREATE_DATA_SOURCE_OPCODE","REQ_CREATE_DATA_SOURCE_SINCE","REQ_GET_DATA_DEVICE_OPCODE","REQ_GET_DATA_DEVICE_SINCE","Request","WlDataDeviceManager","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","contains","data","difference","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_id","from_iter","from_name","handle","hash","hash","id","insert","interface","intersection","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_empty","iter","iter_names","not","object_data","opcode","opcode","parse_request","remove","send_event","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","version","write_event","id","id","seat","Accept","Action","Destroy","EVT_ACTION_OPCODE","EVT_ACTION_SINCE","EVT_OFFER_OPCODE","EVT_OFFER_SINCE","EVT_SOURCE_ACTIONS_OPCODE","EVT_SOURCE_ACTIONS_SINCE","Error","Event","Finish","InvalidAction","InvalidActionMask","InvalidFinish","InvalidOffer","Offer","REQ_ACCEPT_OPCODE","REQ_ACCEPT_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FINISH_OPCODE","REQ_FINISH_SINCE","REQ_RECEIVE_OPCODE","REQ_RECEIVE_SINCE","REQ_SET_ACTIONS_OPCODE","REQ_SET_ACTIONS_SINCE","Receive","Request","SetActions","SourceActions","WlDataOffer","action","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","offer","opcode","opcode","parse_request","partial_cmp","send_event","source_actions","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","dnd_action","mime_type","source_actions","dnd_actions","fd","mime_type","mime_type","preferred_action","serial","Action","Cancelled","Destroy","DndDropPerformed","DndFinished","EVT_ACTION_OPCODE","EVT_ACTION_SINCE","EVT_CANCELLED_OPCODE","EVT_CANCELLED_SINCE","EVT_DND_DROP_PERFORMED_OPCODE","EVT_DND_DROP_PERFORMED_SINCE","EVT_DND_FINISHED_OPCODE","EVT_DND_FINISHED_SINCE","EVT_SEND_OPCODE","EVT_SEND_SINCE","EVT_TARGET_OPCODE","EVT_TARGET_SINCE","Error","Event","InvalidActionMask","InvalidSource","Offer","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_OFFER_OPCODE","REQ_OFFER_SINCE","REQ_SET_ACTIONS_OPCODE","REQ_SET_ACTIONS_SINCE","Request","Send","SetActions","Target","WlDataSource","action","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancelled","clone","clone","clone_into","clone_into","cmp","data","dnd_drop_performed","dnd_finished","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send","send_event","target","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","dnd_action","fd","mime_type","mime_type","dnd_actions","mime_type","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_KEYMAP_OPCODE","EVT_KEYMAP_SINCE","EVT_KEY_OPCODE","EVT_KEY_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MODIFIERS_OPCODE","EVT_MODIFIERS_SINCE","EVT_REPEAT_INFO_OPCODE","EVT_REPEAT_INFO_SINCE","Enter","Event","Key","KeyState","Keymap","KeymapFormat","Leave","Modifiers","NoKeymap","Pressed","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Released","RepeatInfo","Request","WlKeyboard","XkbV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","enter","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_id","handle","hash","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","keymap","leave","modifiers","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","repeat_info","send_event","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","delay","fd","format","group","key","keys","mods_depressed","mods_latched","mods_locked","rate","serial","serial","serial","serial","size","state","surface","surface","time","Current","Description","Done","EVT_DESCRIPTION_OPCODE","EVT_DESCRIPTION_SINCE","EVT_DONE_OPCODE","EVT_DONE_SINCE","EVT_GEOMETRY_OPCODE","EVT_GEOMETRY_SINCE","EVT_MODE_OPCODE","EVT_MODE_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","EVT_SCALE_OPCODE","EVT_SCALE_SINCE","Event","Flipped","Flipped180","Flipped270","Flipped90","Geometry","HorizontalBgr","HorizontalRgb","Mode","Mode","Name","None","Normal","Preferred","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Scale","Subpixel","Transform","Unknown","VerticalBgr","VerticalRgb","WlOutput","_180","_270","_90","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","data","description","difference","done","empty","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_id","from_iter","from_name","geometry","handle","hash","hash","hash","hash","id","insert","interface","intersection","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_empty","iter","iter_names","mode","name","not","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","remove","scale","send_event","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","version","write_event","description","factor","flags","height","make","model","name","physical_height","physical_width","refresh","subpixel","transform","width","x","y","Axis","Axis","AxisDiscrete","AxisRelativeDirection","AxisRelativeDirection","AxisSource","AxisSource","AxisStop","AxisValue120","Button","ButtonState","Continuous","EVT_AXIS_DISCRETE_OPCODE","EVT_AXIS_DISCRETE_SINCE","EVT_AXIS_OPCODE","EVT_AXIS_RELATIVE_DIRECTION_OPCODE","EVT_AXIS_RELATIVE_DIRECTION_SINCE","EVT_AXIS_SINCE","EVT_AXIS_SOURCE_OPCODE","EVT_AXIS_SOURCE_SINCE","EVT_AXIS_STOP_OPCODE","EVT_AXIS_STOP_SINCE","EVT_AXIS_VALUE120_OPCODE","EVT_AXIS_VALUE120_SINCE","EVT_BUTTON_OPCODE","EVT_BUTTON_SINCE","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","Enter","Error","Event","Finger","Frame","HorizontalScroll","Identical","Inverted","Leave","Motion","Pressed","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","REQ_SET_CURSOR_OPCODE","REQ_SET_CURSOR_SINCE","Release","Released","Request","Role","SetCursor","VerticalScroll","Wheel","WheelTilt","WlPointer","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","axis","axis_discrete","axis_relative_direction","axis_source","axis_stop","axis_value120","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","data","enter","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from","from","from","from_id","handle","hash","hash","hash","hash","hash","hash","id","interface","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leave","motion","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","send_event","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","write_event","axis","axis","axis","axis","axis","axis_source","button","direction","discrete","serial","serial","serial","state","surface","surface","surface_x","surface_x","surface_y","surface_y","time","time","time","time","value","value120","hotspot_x","hotspot_y","serial","surface","Add","Destroy","Event","REQ_ADD_OPCODE","REQ_ADD_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_SUBTRACT_OPCODE","REQ_SUBTRACT_SINCE","Request","Subtract","WlRegion","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","height","height","width","width","x","x","y","y","Capabilities","Capability","EVT_CAPABILITIES_OPCODE","EVT_CAPABILITIES_SINCE","EVT_NAME_OPCODE","EVT_NAME_SINCE","Error","Event","GetKeyboard","GetPointer","GetTouch","Keyboard","MissingCapability","Name","Pointer","REQ_GET_KEYBOARD_OPCODE","REQ_GET_KEYBOARD_SINCE","REQ_GET_POINTER_OPCODE","REQ_GET_POINTER_SINCE","REQ_GET_TOUCH_OPCODE","REQ_GET_TOUCH_SINCE","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Touch","WlSeat","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","data","difference","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_id","from_iter","from_name","handle","hash","hash","hash","id","insert","interface","intersection","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_all","is_empty","iter","iter_names","name","not","object_data","opcode","opcode","parse_request","partial_cmp","remove","send_event","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","version","write_event","capabilities","name","id","id","id","Error","Event","GetShellSurface","REQ_GET_SHELL_SURFACE_OPCODE","REQ_GET_SHELL_SURFACE_SINCE","Request","Role","WlShell","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","id","surface","Bottom","BottomLeft","BottomRight","Configure","Default","Driver","EVT_CONFIGURE_OPCODE","EVT_CONFIGURE_SINCE","EVT_PING_OPCODE","EVT_PING_SINCE","EVT_POPUP_DONE_OPCODE","EVT_POPUP_DONE_SINCE","Event","Fill","FullscreenMethod","Inactive","Left","Move","None","Ping","Pong","PopupDone","REQ_MOVE_OPCODE","REQ_MOVE_SINCE","REQ_PONG_OPCODE","REQ_PONG_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","REQ_SET_CLASS_OPCODE","REQ_SET_CLASS_SINCE","REQ_SET_FULLSCREEN_OPCODE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_OPCODE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_POPUP_OPCODE","REQ_SET_POPUP_SINCE","REQ_SET_TITLE_OPCODE","REQ_SET_TITLE_SINCE","REQ_SET_TOPLEVEL_OPCODE","REQ_SET_TOPLEVEL_SINCE","REQ_SET_TRANSIENT_OPCODE","REQ_SET_TRANSIENT_SINCE","Request","Resize","Resize","Right","Scale","SetClass","SetFullscreen","SetMaximized","SetPopup","SetTitle","SetToplevel","SetTransient","Top","TopLeft","TopRight","Transient","WlShellSurface","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","complement","configure","contains","contains","data","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_id","from_iter","from_iter","from_name","from_name","handle","hash","hash","hash","hash","id","insert","insert","interface","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","not","object_data","opcode","opcode","parse_request","partial_cmp","ping","popup_done","remove","remove","send_event","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","version","write_event","edges","height","serial","width","class_","edges","flags","flags","framerate","method","output","output","parent","parent","seat","seat","seat","serial","serial","serial","serial","title","x","x","y","y","Abgr1555","Abgr16161616","Abgr16161616f","Abgr2101010","Abgr4444","Abgr8888","Argb1555","Argb16161616","Argb16161616f","Argb2101010","Argb4444","Argb8888","Axbxgxrx106106106106","Ayuv","Bgr233","Bgr565","Bgr565A8","Bgr888","Bgr888A8","Bgra1010102","Bgra4444","Bgra5551","Bgra8888","Bgrx1010102","Bgrx4444","Bgrx5551","Bgrx8888","Bgrx8888A8","C8","CreatePool","EVT_FORMAT_OPCODE","EVT_FORMAT_SINCE","Error","Event","Format","Format","Gr1616","Gr88","InvalidFd","InvalidFormat","InvalidStride","Nv12","Nv15","Nv16","Nv21","Nv24","Nv42","Nv61","P010","P012","P016","P210","Q401","Q410","R16","R8","REQ_CREATE_POOL_OPCODE","REQ_CREATE_POOL_SINCE","Request","Rg1616","Rg88","Rgb332","Rgb565","Rgb565A8","Rgb888","Rgb888A8","Rgba1010102","Rgba4444","Rgba5551","Rgba8888","Rgbx1010102","Rgbx4444","Rgbx5551","Rgbx8888","Rgbx8888A8","Uyvy","Vuy101010","Vuy888","Vyuy","WlShm","X0l0","X0l2","Xbgr1555","Xbgr16161616","Xbgr16161616f","Xbgr2101010","Xbgr4444","Xbgr8888","Xbgr8888A8","Xrgb1555","Xrgb16161616","Xrgb16161616f","Xrgb2101010","Xrgb4444","Xrgb8888","Xrgb8888A8","Xvyu1216161616","Xvyu16161616","Xvyu2101010","Xyuv8888","Y0l0","Y0l2","Y210","Y212","Y216","Y410","Y412","Y416","Yuv410","Yuv411","Yuv420","Yuv42010bit","Yuv4208bit","Yuv422","Yuv444","Yuyv","Yvu410","Yvu411","Yvu420","Yvu422","Yvu444","Yvyu","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","data","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from_id","handle","hash","hash","hash","id","interface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","partial_cmp","send_event","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","write_event","format","fd","id","size","CreateBuffer","Destroy","Event","REQ_CREATE_BUFFER_OPCODE","REQ_CREATE_BUFFER_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_RESIZE_OPCODE","REQ_RESIZE_SINCE","Request","Resize","WlShmPool","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","data","eq","eq","fmt","fmt","fmt","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","send_event","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","write_event","format","height","id","offset","size","stride","width","BadParent","BadSurface","Destroy","Error","Event","GetSubsurface","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_GET_SUBSURFACE_OPCODE","REQ_GET_SUBSURFACE_SINCE","Request","WlSubcompositor","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","id","parent","surface","BadSurface","Destroy","Error","Event","PlaceAbove","PlaceBelow","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_PLACE_ABOVE_OPCODE","REQ_PLACE_ABOVE_SINCE","REQ_PLACE_BELOW_OPCODE","REQ_PLACE_BELOW_SINCE","REQ_SET_DESYNC_OPCODE","REQ_SET_DESYNC_SINCE","REQ_SET_POSITION_OPCODE","REQ_SET_POSITION_SINCE","REQ_SET_SYNC_OPCODE","REQ_SET_SYNC_SINCE","Request","SetDesync","SetPosition","SetSync","WlSubsurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","object_data","opcode","opcode","parse_request","partial_cmp","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","sibling","sibling","x","y","Attach","Commit","Damage","DamageBuffer","DefunctRoleObject","Destroy","EVT_ENTER_OPCODE","EVT_ENTER_SINCE","EVT_LEAVE_OPCODE","EVT_LEAVE_SINCE","EVT_PREFERRED_BUFFER_SCALE_OPCODE","EVT_PREFERRED_BUFFER_SCALE_SINCE","EVT_PREFERRED_BUFFER_TRANSFORM_OPCODE","EVT_PREFERRED_BUFFER_TRANSFORM_SINCE","Enter","Error","Event","Frame","InvalidOffset","InvalidScale","InvalidSize","InvalidTransform","Leave","Offset","PreferredBufferScale","PreferredBufferTransform","REQ_ATTACH_OPCODE","REQ_ATTACH_SINCE","REQ_COMMIT_OPCODE","REQ_COMMIT_SINCE","REQ_DAMAGE_BUFFER_OPCODE","REQ_DAMAGE_BUFFER_SINCE","REQ_DAMAGE_OPCODE","REQ_DAMAGE_SINCE","REQ_DESTROY_OPCODE","REQ_DESTROY_SINCE","REQ_FRAME_OPCODE","REQ_FRAME_SINCE","REQ_OFFSET_OPCODE","REQ_OFFSET_SINCE","REQ_SET_BUFFER_SCALE_OPCODE","REQ_SET_BUFFER_SCALE_SINCE","REQ_SET_BUFFER_TRANSFORM_OPCODE","REQ_SET_BUFFER_TRANSFORM_SINCE","REQ_SET_INPUT_REGION_OPCODE","REQ_SET_INPUT_REGION_SINCE","REQ_SET_OPAQUE_REGION_OPCODE","REQ_SET_OPAQUE_REGION_SINCE","Request","SetBufferScale","SetBufferTransform","SetInputRegion","SetOpaqueRegion","WlSurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","enter","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_id","handle","hash","hash","id","interface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leave","object_data","opcode","opcode","parse_request","partial_cmp","preferred_buffer_scale","preferred_buffer_transform","send_event","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","write_event","factor","output","output","transform","buffer","callback","height","height","region","region","scale","transform","width","width","x","x","x","x","y","y","y","y","Cancel","Down","EVT_CANCEL_OPCODE","EVT_CANCEL_SINCE","EVT_DOWN_OPCODE","EVT_DOWN_SINCE","EVT_FRAME_OPCODE","EVT_FRAME_SINCE","EVT_MOTION_OPCODE","EVT_MOTION_SINCE","EVT_ORIENTATION_OPCODE","EVT_ORIENTATION_SINCE","EVT_SHAPE_OPCODE","EVT_SHAPE_SINCE","EVT_UP_OPCODE","EVT_UP_SINCE","Event","Frame","Motion","Orientation","REQ_RELEASE_OPCODE","REQ_RELEASE_SINCE","Release","Request","Shape","Up","WlTouch","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone_into","data","down","eq","eq","fmt","fmt","fmt","frame","from","from","from","from_id","handle","hash","id","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","motion","object_data","opcode","opcode","orientation","parse_request","send_event","shape","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","up","version","write_event","id","id","id","id","id","major","minor","orientation","serial","serial","surface","time","time","time","x","x","y","y"],"q":[[0,"wayland_server"],[255,"wayland_server::DispatchError"],[258,"wayland_server::backend"],[508,"wayland_server::backend::protocol"],[773,"wayland_server::protocol"],[794,"wayland_server::protocol::__interfaces"],[874,"wayland_server::protocol::wl_buffer"],[942,"wayland_server::protocol::wl_callback"],[1007,"wayland_server::protocol::wl_callback::Event"],[1008,"wayland_server::protocol::wl_compositor"],[1075,"wayland_server::protocol::wl_compositor::Request"],[1077,"wayland_server::protocol::wl_data_device"],[1194,"wayland_server::protocol::wl_data_device::Event"],[1204,"wayland_server::protocol::wl_data_device::Request"],[1210,"wayland_server::protocol::wl_data_device_manager"],[1341,"wayland_server::protocol::wl_data_device_manager::Request"],[1344,"wayland_server::protocol::wl_data_offer"],[1458,"wayland_server::protocol::wl_data_offer::Event"],[1461,"wayland_server::protocol::wl_data_offer::Request"],[1467,"wayland_server::protocol::wl_data_source"],[1585,"wayland_server::protocol::wl_data_source::Event"],[1589,"wayland_server::protocol::wl_data_source::Request"],[1591,"wayland_server::protocol::wl_keyboard"],[1727,"wayland_server::protocol::wl_keyboard::Event"],[1746,"wayland_server::protocol::wl_output"],[1954,"wayland_server::protocol::wl_output::Event"],[1969,"wayland_server::protocol::wl_pointer"],[2201,"wayland_server::protocol::wl_pointer::Event"],[2226,"wayland_server::protocol::wl_pointer::Request"],[2230,"wayland_server::protocol::wl_region"],[2300,"wayland_server::protocol::wl_region::Request"],[2308,"wayland_server::protocol::wl_seat"],[2475,"wayland_server::protocol::wl_seat::Event"],[2477,"wayland_server::protocol::wl_seat::Request"],[2480,"wayland_server::protocol::wl_shell"],[2567,"wayland_server::protocol::wl_shell::Request"],[2569,"wayland_server::protocol::wl_shell_surface"],[2828,"wayland_server::protocol::wl_shell_surface::Event"],[2832,"wayland_server::protocol::wl_shell_surface::Request"],[2854,"wayland_server::protocol::wl_shm"],[3077,"wayland_server::protocol::wl_shm::Event"],[3078,"wayland_server::protocol::wl_shm::Request"],[3081,"wayland_server::protocol::wl_shm_pool"],[3151,"wayland_server::protocol::wl_shm_pool::Request"],[3158,"wayland_server::protocol::wl_subcompositor"],[3249,"wayland_server::protocol::wl_subcompositor::Request"],[3252,"wayland_server::protocol::wl_subsurface"],[3354,"wayland_server::protocol::wl_subsurface::Request"],[3358,"wayland_server::protocol::wl_surface"],[3495,"wayland_server::protocol::wl_surface::Event"],[3499,"wayland_server::protocol::wl_surface::Request"],[3517,"wayland_server::protocol::wl_touch"],[3609,"wayland_server::protocol::wl_touch::Event"],[3627,"std::os::unix::net::stream"],[3628,"core::option"],[3629,"std::io::error"],[3630,"core::any"],[3631,"std::os::fd::owned"],[3632,"std::os::fd::raw"],[3633,"core::result"],[3634,"std::ffi::os_str"],[3635,"core::convert"],[3636,"std::path"],[3637,"core::iter::traits::collect"],[3638,"core::clone"],[3639,"core::marker"],[3640,"core::marker"],[3641,"core::cmp"],[3642,"core::fmt"],[3643,"core::fmt"],[3644,"alloc::boxed"],[3645,"alloc::rc"],[3646,"std::os::fd::owned"],[3647,"core::error"],[3648,"core::any"],[3649,"alloc::ffi::c_str"],[3650,"core::ops::function"],[3651,"std::os::fd::raw"],[3652,"bitflags::iter"]],"d":["The requested socket name is already in use","The received message does not match the specification for …","Error that can occur when trying to bind a <code>ListeningSocket</code>","A struct representing a Wayland client connected to your …","Helper to initialize client-created objects","A trait which provides an implementation for handling a …","An error generated if an illegal request was received from …","The Wayland display","A handle to the Wayland display","The event enum for this interface","A trait which provides an implementation for handling …","Some other IO error occured","An utility representing a unix socket on which your …","A newly created object that needs to be initialized. See …","The application was not able to create a file in …","The request enum for this interface","Trait representing a Wayland interface","The <code>ObjectData</code> implementation that is internally used by …","The Environment variable <code>XDG_RUNTIME_DIR</code> is not set","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","A weak handle to a Wayland object","Try to accept a new connection to the listening socket","","","","","","","","","","","","","","","","","","","","","","","Provides fd from <code>Backend::poll_fd</code> for polling.","Returns a file descriptor that may be polled for readiness.","Returns a file descriptor that may be polled for readiness.","Backend reexports","Access the underlying <code>Backend</code> of this <code>Display</code>","Returns the underlying <code>Handle</code> from <code>wayland-backend</code>.","Called when a client has bound this global.","Attempt to bind a listening socket with given name","Attempt to bind a listening socket with given name","Attempt to bind a listening socket from a sequence of names","","","","","","","","","","","","","","","","","","","","","","","Checks if the global should be advertised to some client.","Checks if the global should be advertised to some client.","The client owning this object","","","","","","","","","Create a new protocol global","Create a new Wayland object in the protocol state of this …","Create a new Wayland object in the protocol state of this …","Set a custom <code>ObjectData</code> for this object","Access the user-data associated with this object","A helper macro which delegates a set of <code>Dispatch</code> …","A helper macro which delegates a set of <code>GlobalDispatch</code> …","Called when the object this user data is associated with …","Called when the object this user data is associated with …","","Disable this global","Dispatch all requests received from clients to their …","Creates a weak handle to this object","","","","","","Flush outgoing buffers into their respective sockets.","Flush outgoing buffers into their respective sockets.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>DisplayHandle</code> using a <code>Handle</code> from <code>wayland-backend</code>…","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs an enum from the integer format used by the …","Returns the argument unchanged.","Returns the argument unchanged.","Create an object resource from its ID","Retrieve the <code>Client</code> which owns the object represented by …","Access the pid/uid/gid of this client","Access the data associated to this client","Access the object data associated with this object","Access the backend handle associated with this object","Retrieve a <code>DisplayHandle</code> for this <code>Display</code>.","","The ID of this object","The backend <code>ClientId</code> of this client","The underlying <code>ObjectId</code>","Initialize an object by assigning it its user-data","Insert a new client in your <code>Display</code>","The interface description","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this <code>WEnum</code> into a result","Checks if the Wayland object associated with this proxy is …","Kill this client by triggering a protocol error","Create a new Wayland display","Access the raw data associated with this object.","Attempt to retrieve an object from this client’s …","Access the protocol information for a Wayland object","Parse a event for this object","Trigger a protocol error on this object","Post an error on an uninitialized object.","Trigger a protocol error on this object","Generated protocol definitions","Remove this global","Called when a request from a client is processed.","","Send an event to this object","Send an event to given Wayland object","Returns the name of the listening socket.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user-data associated with this object","Try to upgrade with weak handle back into a full resource.","The version of this object","Serialize an event for this object","The interface of the target object","The opcode number","The id of the target object","A backend object that represents the state of a wayland …","A trait representing your data associated to a client","An ID representing a Wayland client","The connection has been closed by the server or client.","Holds the client credentials","Describes why a client has been disconnected from the …","A trait representing the handling of new bound globals","An Id representing a global","Main handle of a backend to the Wayland protocol","An error type representing the failure to initialize a …","An error generated when trying to act on an invalid …","Initialized failed due to an underlying I/O error","The wayland system library could not be loaded","A trait representing your data associated to an object","An ID representing a Wayland object","The server has sent the client a protocol error, …","A weak reference to a <code>Handle</code>","","","","","","","","","","","","","","","","","","","","","A global has been bound","","","","","","","","","","","","","","","","","","","","","Check if given client is allowed to interact with given …","","","","","","","","","","","","","","","","Creates a global of the specified interface and version …","Create a new object for given client","Helper for forwarding a Debug implementation of your …","Helper for forwarding a Debug implementation of your …","Helper for forwarding a Debug implementation of your …","Notification that the object has been destroyed and is no …","Disables a global object that is currently active.","Notification that the client is disconnected","Dispatches all pending messages from all clients.","Dispatches all pending messages from the specified client.","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns a mutable reference to the object within the trait …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Returns a reference to the object within the trait object …","Get a <code>WeakHandle</code> from this handle","","","","Flushes pending events destined for a client.","Flushes pending events destined for a client.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the id of the client which owns the object.","Retrive the <code>Credentials</code> of a client","Returns the data associated with a client.","Returns the handler which manages the visibility and …","Returns the data associated with an object.","Returns the data associated with an object as a <code>dyn Any</code>","gid of the client","Returns information about a global.","Returns a handle which represents the server side state of …","","","","Notification that the client was initialized","Initializes a connection with a client.","Returns the interface of this object.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns true if the trait object wraps an object of type …","Returns whether this object is a null object.","Kills the connection to a client.","Initialize a new Wayland backend","Returns an object id that represents a null object.","Retrieve the <code>ObjectId</code> for a wayland object given its …","Get the detailed protocol information about a wayland …","pid of the client","Returns the underlying file descriptor.","Posts a protocol error on an object. This will also …","Types and utilities for manipulating the Wayland protocol","Return the protocol-level numerical ID of this object","Removes a global object and free its ressources.","Dispatch a request for the associated object","Check if two object IDs are associated with the same client","Send an event to the client","Sets the data associated with some object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uid of the client","Try to upgrade this weak handle to a <code>Handle</code>","Invokes a closure for all clients connected to this server","Invokes a closure for all objects owned by a client.","Special interface representing an anonymous object","Describes whether an argument may have a null value.","Enum of possible argument of the protocol","Enum of possible argument types as recognized by the wire","<code>Vec&lt;u8&gt;</code>","<code>Vec&lt;u8&gt;</code>","A file descriptor argument. Represented by a <code>RawFd</code>.","A file descriptor argument. Represented by a <code>RawFd</code>.","A signed fixed point number with 1/256 precision","A signed fixed point number with 1/256 precision","Number of arguments that are stocked inline in a <code>Message</code> …","An integer argument. Represented by a <code>i32</code>.","An integer argument. Represented by a <code>i32</code>.","Description of wayland interface.","Represents a message that has been sent from some object.","Wire metadata of a given message","Id of a newly created wayland object","Id of a newly created wayland object","Null values are forbidden.","Id of a wayland object","Id of a wayland object","Description of the protocol-level information of an object","A protocol error","A string. This is represented as a <code>CString</code> in a message.","CString","An unsigned integer argument. Represented by a <code>u32</code>.","An unsigned integer argument. Represented by a <code>u32</code>.","The stored value does not match one defined by the …","The interpreted value","An enum value in the protocol.","Error representing an unknown numeric variant for a <code>WEnum</code>","Null values are allowed.","","The interfaces passed into this message as arguments.","The arguments of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A C representation of this interface that may be used to …","The child interface created from this message.","","","","","","","","","","","","","","","","","The error code associated with the error","","","","","","","A list that describes every event this interface supports.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve the type of a given argument instance","","","The protocol ID","The interface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this message is a destructor","Map some closure on all Fd contained in this message, to …","The message sent by the server describing the error","","","","The name of the interface.","Name of this message","","The id of the object that caused the error","The interface of the object that caused the error","The opcode of the message.","","","A list that describes every request this interface …","","Returns true if the two interfaces are the same.","Returns true if the type of the argument is the same.","The id of the object that sent the message.","","Signature of the message","Minimum required version of the interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum supported version of the interface.","The version","","","","","content for a wl_surface","callback object","the compositor singleton","data transfer device","data transfer interface","offer to transfer data","offer to transfer data","keyboard input device","compositor output region","pointer input device","region interface","group of input devices","create desktop-style surfaces","desktop-style metadata interface","shared memory support","a shared memory pool","sub-surface compositing","sub-surface interface to a wl_surface","an onscreen surface","touchscreen input device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy a buffer","The wire opcode for this event","The minimal object version supporting this event","","The wire opcode for this request","The minimal object version supporting this request","compositor releases buffer","","content for a wl_surface","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","compositor releases buffer","","","","","","","","","","","","","","done event","The wire opcode for this event","The minimal object version supporting this event","","","callback object","","","","","","","","","","","","","","","","","done event","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","request-specific data for the callback","create new region","create new surface","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","the compositor singleton","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","the new surface","the new region","introduce a new wl_data_offer","end drag-and-drop session successfully","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","initiate drag-and-drop session","","","end drag-and-drop session","drag-and-drop session motion","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","destroy data device","","given wl_surface has another role","advertise new selection","copy data to the selection","start drag-and-drop operation","data transfer device","","","","","","","","","","","","","","","","","","","","","","","","introduce a new wl_data_offer","end drag-and-drop session successfully","initiate drag-and-drop session","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","end drag-and-drop session","drag-and-drop session motion","","Get the opcode number of this message","Get the opcode number of this message","","","advertise new selection","","","","","","","","","","","","","","","","","","","the new data_offer object","source data_offer object","selection data_offer object","serial number of the enter event","client surface entered","timestamp with millisecond granularity","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","drag-and-drop icon surface","surface where the drag originates","serial number of the implicit grab on the origin","serial number of the event that triggered this request","data source for the eventual transfer","data source for the selection","ask action","copy action","create a new data source","drag and drop actions","","create a new data device","move action","no action","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","data transfer interface","Get a flags value with all known bits set.","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","data source to create","data device to create","seat associated with the data device","accept one of the offered mime types","notify the selected action","destroy data offer","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","the offer will no longer be used","action argument has an invalid value","action mask contains invalid values","finish request was called untimely","offer doesn’t accept this request","advertise offered mime type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","request that the data is transferred","","set the available/preferred drag-and-drop actions","notify the source-side available actions","offer to transfer data","notify the selected action","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","advertise offered mime type","Get the opcode number of this message","Get the opcode number of this message","","","","notify the source-side available actions","","","","","","","","","","","","","","","","","","action selected by the compositor","offered mime type","actions offered by the data source","actions supported by the destination client","file descriptor for data transfer","mime type accepted by the client","mime type desired by receiver","action preferred by the destination client","serial number of the accept request","notify the selected action","selection was cancelled","destroy the data source","the drag-and-drop operation physically finished","the drag-and-drop operation concluded","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","","action mask contains invalid values","source doesn’t accept this request","add an offered mime type","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","send the data","set the available drag-and-drop actions","a target accepts an offered mime type","offer to transfer data","notify the selected action","","","","","","","","","","","","","","","","","","selection was cancelled","","","","","","","the drag-and-drop operation physically finished","the drag-and-drop operation concluded","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","send the data","","a target accepts an offered mime type","","","","","","","","","","","","","","","","","","action selected by the compositor","file descriptor for the data","mime type accepted by the target","mime type for the data","actions supported by the data source","mime type offered by the data source","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enter event","","key event","physical key state","keyboard mapping","keyboard mapping format","leave event","modifier and group state","no keymap; client must understand how to interpret the raw …","key is pressed","The wire opcode for this request","The minimal object version supporting this request","release the keyboard object","key is not pressed","repeat rate and delay","","keyboard input device","libxkbcommon compatible, null-terminated string; to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","enter event","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","key event","keyboard mapping","leave event","modifier and group state","","Get the opcode number of this message","Get the opcode number of this message","","","","repeat rate and delay","","","","","","","","","","","","","","","","","","","","","","","","delay in milliseconds since key down until repeating starts","keymap file descriptor","keymap format","keyboard layout","key that produced the event","the currently pressed keys","depressed modifiers","latched modifiers","locked modifiers","the rate of repeating keys in characters per second","serial number of the enter event","serial number of the leave event","serial number of the key event","serial number of the modifiers event","keymap size, in bytes","physical state of the key","surface gaining keyboard focus","surface that lost keyboard focus","timestamp with millisecond granularity","indicates this is the current mode","human-readable description of this output","sent all information about output","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","180 degree flip around a vertical axis","flip and rotate 180 degrees counter-clockwise","flip and rotate 270 degrees counter-clockwise","flip and rotate 90 degrees counter-clockwise","properties of the output","horizontal BGR","horizontal RGB","mode information","advertise available modes for the output","name of this output","no geometry","no transform","indicates this is the preferred mode","The wire opcode for this request","The minimal object version supporting this request","release the output object","","output scaling properties","subpixel geometry information","transform from framebuffer to output","unknown geometry","vertical BGR","vertical RGB","compositor output region","180 degrees counter-clockwise","270 degrees counter-clockwise","90 degrees counter-clockwise","Get a flags value with all known bits set.","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","human-readable description of this output","The intersection of a source flags value with the …","sent all information about output","Get a flags value with all bits unset.","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","properties of the output","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","advertise available modes for the output","name of this output","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","","The intersection of a source flags value with the …","output scaling properties","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","output description","scaling factor of output","bitfield of mode flags","height of the mode in hardware units","textual description of the manufacturer","textual description of the model","output name","height in millimeters of the output","width in millimeters of the output","vertical refresh rate in mHz","subpixel orientation of the output","transform that maps framebuffer to output","width of the mode in hardware units","x position within the global compositor space","y position within the global compositor space","axis types","axis event","axis click event","axis relative direction","axis relative physical direction event","axis source types","axis source event","axis stop event","axis high-resolution scroll event","pointer button event","physical button state","continuous coordinate space","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The wire opcode for this event","The minimal object version supporting this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","enter event","","","finger on a touch surface","end of a pointer event sequence","horizontal axis","physical motion matches axis direction","physical motion is the inverse of the axis direction","leave event","pointer motion event","the button is pressed","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","release the pointer object","the button is not pressed","","given wl_surface has another role","set the pointer surface","vertical axis","a physical wheel rotation","a physical wheel tilt","pointer input device","","","","","","","","","","","","","","","","","axis event","axis click event","axis relative physical direction event","axis source event","axis stop event","axis high-resolution scroll event","","","","","","","","","","","","","","","","","","pointer button event","","","","","","","","","","","","","","","","","","","enter event","","","","","","","","","","","","","","","","end of a pointer event sequence","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","leave event","pointer motion event","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","axis type","the axis stopped with this event","axis type","axis type","axis type","source of the axis event","button that produced the event","physical direction relative to axis motion","number of steps","serial number of the enter event","serial number of the leave event","serial number of the button event","physical state of the button","surface entered by the pointer","surface left by the pointer","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","length of vector in surface-local coordinate space","scroll distance as fraction of 120","surface-local x coordinate","surface-local y coordinate","serial number of the enter event","pointer surface","add rectangle to region","destroy region","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","subtract rectangle from region","region interface","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","rectangle height","rectangle height","rectangle width","rectangle width","region-local x coordinate","region-local x coordinate","region-local y coordinate","region-local y coordinate","seat capabilities changed","seat capability bitmask","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","wl_seat error values","","return keyboard object","return pointer object","return touch object","the seat has one or more keyboards","get_pointer, get_keyboard or get_touch called on seat …","unique identifier for this seat","the seat has pointer devices","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","release the seat object","","the seat has touch devices","group of input devices","Get a flags value with all known bits set.","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","seat capabilities changed","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","unique identifier for this seat","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","capabilities of the seat","seat identifier","seat pointer","seat keyboard","seat touch interface","","","create a shell surface from a surface","The wire opcode for this request","The minimal object version supporting this request","","given wl_surface has another role","create desktop-style surfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","shell surface to create","surface to be given the shell surface role","bottom edge","bottom and left edges","bottom and right edges","suggest resize","no preference, apply default policy","switch output mode to the smallest mode that can fit the …","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","no upscaling, center on output and add black borders to …","different method to set the surface fullscreen","do not set keyboard focus","left edge","start an interactive move","no edge","ping client","respond to a ping event","popup interaction is done","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","edge values for resizing","start an interactive resize","right edge","scale, preserve the surface’s aspect ratio and center on …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","top edge","top and left edges","top and right edges","details of transient behaviour","desktop-style metadata interface","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","suggest resize","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Get the opcode number of this message","Get the opcode number of this message","","","ping client","popup interaction is done","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","how the surface was resized","new height of the surface","serial number of the ping","new width of the surface","surface class","which edge or corner is being dragged","transient surface behavior","transient surface behavior","framerate in mHz","method for resolving size conflict","output on which the surface is to be fullscreen","output on which the surface is to be maximized","parent surface","parent surface","seat whose pointer is used","seat whose pointer is used","seat whose pointer is used","serial number of the ping event","serial number of the implicit grab on the pointer","serial number of the implicit grab on the pointer","serial number of the implicit grab on the pointer","surface title","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …","[63:0] A:B:G:R 16:16:16:16 little endian","[63:0] A:B:G:R 16:16:16:16 little endian","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …","[63:0] A:R:G:B 16:16:16:16 little endian","[63:0] A:R:G:B 16:16:16:16 little endian","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian","[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …","8-bit BGR format, [7:0] B:G:R 2:3:3","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian","","24-bit BGR format, [23:0] B:G:R little endian","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian","","8-bit color index format, [7:0] C","create a shm pool","The wire opcode for this event","The minimal object version supporting this event","wl_shm error values","","pixel formats","pixel format description","[31:0] G:R 16:16 little endian","[15:0] G:R 8:8 little endian","mmapping the file descriptor failed","buffer format is not known","invalid size or stride during pool or buffer creation","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane","2x2 subsampled Cr:Cb plane","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane","non-subsampled Cr:Cb plane","non-subsampled Cb:Cr plane","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane","2x2 subsampled Cr:Cb plane 10 bits per channel","2x2 subsampled Cr:Cb plane 12 bits per channel","2x2 subsampled Cr:Cb plane 16 bits per channel","2x1 subsampled Cr:Cb plane, 10 bit per channel","","","[15:0] R little endian","[7:0] R","The wire opcode for this request","The minimal object version supporting this request","","[31:0] R:G 16:16 little endian","[15:0] R:G 8:8 little endian","8-bit RGB format, [7:0] R:G:B 3:3:2","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian","","24-bit RGB format, [23:0] R:G:B little endian","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …","Y followed by U then V, 10:10:10. Non-linear modifier only","[23:0] Cr:Cb:Y 8:8:8 little endian","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …","shared memory support","[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …","[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …","[63:0] x:B:G:R 16:16:16:16 little endian","[63:0] x:B:G:R 16:16:16:16 little endian","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian","","[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] X:Cr:Y:Cb 16:16:16:16 little endian","[31:0] X:Cr:Y:Cb 2:10:10:10 little endian","[31:0] X:Y:Cb:Cr 8:8:8:8 little endian","[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …","[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …","[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …","[31:0] A:Cr:Y:Cb 2:10:10:10 little endian","[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] A:Cr:Y:Cb 16:16:16:16 little endian","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …","","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pixel format description","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","","","","","","","buffer pixel format","file descriptor for the pool","pool to create","pool size, in bytes","create a buffer from the pool","destroy the pool","","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","change the size of the pool mapping","a shared memory pool","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","buffer pixel format","buffer height, in pixels","buffer to create","buffer byte offset within the pool","new size of the pool, in bytes","number of bytes from the beginning of one row to the …","buffer width, in pixels","the to-be sub-surface parent is invalid","the to-be sub-surface is invalid","unbind from the subcompositor interface","","","give a surface the role sub-surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","sub-surface compositing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","the new sub-surface object ID","the parent surface","the surface to be turned into a sub-surface","wl_surface is not a sibling or the parent","remove sub-surface interface","","","restack the sub-surface","restack the sub-surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","sub-surface interface to a wl_surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Get the opcode number of this message","Get the opcode number of this message","","","","","","","","","","","","","","","","","","","","","the reference surface","the reference surface","x coordinate in the parent surface","y coordinate in the parent surface","set the surface contents","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","surface was destroyed before its role object","delete surface","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","surface enters an output","wl_surface error values","","request a frame throttling hint","buffer offset is invalid","buffer scale value is invalid","buffer size is invalid","buffer transform value is invalid","surface leaves an output","set the surface contents offset","preferred buffer scale for the surface","preferred buffer transform for the surface","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","The wire opcode for this request","The minimal object version supporting this request","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","an onscreen surface","","","","","","","","","","","","","","","","","","","","","","","","surface enters an output","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","surface leaves an output","","Get the opcode number of this message","Get the opcode number of this message","","","preferred buffer scale for the surface","preferred buffer transform for the surface","","","","","","","","","","","","","","","","","","","preferred scaling factor","output entered by the surface","output left by the surface","preferred transform","buffer of surface contents","callback object for the frame request","height of damage rectangle","height of damage rectangle","opaque region of the surface","input region of the surface","positive scale for interpreting buffer contents","transform for interpreting buffer contents","width of damage rectangle","width of damage rectangle","surface-local x coordinate","surface-local x coordinate","buffer-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate","buffer-local y coordinate","surface-local y coordinate","touch session cancelled","touch down event and beginning of a touch sequence","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","The wire opcode for this event","The minimal object version supporting this event","","end of touch frame event","update of touch point coordinates","update orientation of touch point","The wire opcode for this request","The minimal object version supporting this request","release the touch object","","update shape of touch point","end of a touch event sequence","touchscreen input device","","","","","","","","","","","","","","touch session cancelled","","","","touch down event and beginning of a touch sequence","","","","","","end of touch frame event","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","update of touch point coordinates","","Get the opcode number of this message","Get the opcode number of this message","update orientation of touch point","","","update shape of touch point","","","","","","","","","","","end of a touch event sequence","","","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","the unique ID of this touch point","length of the major axis in surface-local coordinates","length of the minor axis in surface-local coordinates","angle between major axis and positive surface y-axis in …","serial number of the touch down event","serial number of the touch up event","surface touched","timestamp with millisecond granularity","timestamp with millisecond granularity","timestamp with millisecond granularity","surface-local x coordinate","surface-local x coordinate","surface-local y coordinate","surface-local y coordinate"],"i":[17,48,0,0,0,0,0,0,0,16,0,17,0,0,17,16,0,0,17,29,29,0,0,1,12,40,13,14,6,10,1,17,29,48,31,12,40,13,14,6,10,1,17,29,48,31,6,1,1,0,6,10,175,1,1,1,12,40,13,14,6,10,1,17,29,48,31,12,40,13,14,6,10,1,17,29,48,31,175,175,16,12,10,29,31,12,10,29,31,10,12,12,14,16,0,0,42,42,40,10,6,16,1,12,29,31,31,6,10,12,40,13,14,6,10,1,17,17,29,48,48,31,12,40,13,14,6,10,10,1,17,29,29,48,31,16,10,12,12,10,16,6,31,16,12,31,14,10,16,12,40,13,14,6,10,1,17,29,48,31,12,40,13,14,6,10,1,17,29,48,31,12,40,13,14,6,10,1,17,29,48,31,12,40,13,14,6,10,1,17,29,48,31,29,16,12,6,16,12,10,16,16,14,10,0,10,42,40,16,10,1,17,12,10,29,31,17,48,12,40,13,14,6,10,1,17,29,48,31,12,40,13,14,6,10,1,17,29,48,31,12,40,13,14,6,10,1,17,29,48,31,40,31,16,16,176,176,176,0,0,0,69,0,0,0,0,0,0,0,59,59,0,0,69,0,41,39,33,11,52,9,59,36,69,50,41,39,33,11,52,9,59,36,69,50,68,41,39,33,11,52,9,59,36,69,50,41,39,33,11,52,9,59,36,69,50,68,59,41,39,33,11,52,36,50,41,39,33,11,52,36,50,11,11,37,68,51,37,11,51,9,9,37,68,51,37,68,51,37,68,51,37,68,51,37,68,51,11,41,39,33,11,9,37,68,51,41,41,39,33,11,52,9,59,59,36,36,69,50,41,39,33,11,52,9,59,36,69,50,11,11,11,11,11,11,50,11,9,41,39,33,51,11,41,41,39,33,11,52,9,59,36,69,50,41,39,33,11,52,9,59,36,69,50,41,39,33,11,52,9,59,36,69,50,41,39,33,11,52,9,59,36,69,50,37,68,51,41,11,9,41,11,11,50,9,11,0,41,11,37,41,11,11,0,41,39,33,11,52,36,50,41,59,36,41,39,33,11,52,9,59,36,69,50,41,39,33,11,52,9,59,36,69,50,41,39,33,11,52,9,59,36,69,50,50,52,11,11,0,0,0,0,76,77,76,77,76,77,0,76,77,0,0,0,76,77,75,76,77,0,0,76,77,76,77,29,29,0,0,75,177,78,62,178,80,177,75,76,77,54,78,60,58,62,57,178,80,177,75,76,77,54,78,60,58,62,57,178,80,177,75,76,77,54,78,60,58,62,57,178,80,177,75,76,77,54,78,60,58,62,57,54,78,75,76,77,78,60,58,62,57,75,76,77,78,60,58,62,57,58,75,76,77,62,80,80,54,177,80,75,76,77,77,54,54,78,60,58,58,62,57,57,178,80,177,75,76,77,54,78,60,58,62,57,77,177,177,60,60,178,80,177,75,76,77,54,78,60,58,62,57,178,80,177,75,76,77,54,78,60,58,62,57,80,75,76,77,54,78,60,58,62,57,178,80,177,75,76,77,54,78,60,58,62,57,78,62,58,177,178,80,54,78,177,58,58,62,80,80,54,177,0,76,62,178,78,78,75,76,77,78,60,58,62,57,77,54,58,57,178,80,177,75,76,77,54,78,60,58,62,57,178,80,177,75,76,77,54,78,60,58,62,57,178,80,177,75,76,77,54,78,60,58,62,57,178,177,80,54,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,0,0,85,0,0,84,85,83,84,85,83,84,85,83,83,84,85,83,83,83,83,83,83,84,85,83,84,85,83,83,83,83,83,83,84,85,83,84,85,83,84,85,83,84,85,83,83,84,85,83,83,83,83,84,85,83,84,85,83,84,85,83,83,83,89,0,0,0,0,0,88,89,87,88,89,87,88,89,87,87,88,89,87,87,87,87,87,87,87,88,89,87,88,89,87,87,87,87,87,87,88,89,87,88,89,87,88,89,87,88,89,87,87,88,89,87,87,87,88,89,87,88,89,87,88,89,87,87,87,179,91,91,0,0,0,0,0,0,0,91,92,90,91,92,90,91,92,90,90,91,92,90,90,90,90,90,90,91,92,90,91,92,90,90,90,90,90,90,91,92,90,91,92,90,91,92,90,91,92,90,90,91,92,90,90,90,91,92,90,91,92,90,91,92,90,90,90,180,181,100,100,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,100,100,0,0,0,0,0,0,99,0,94,100,99,99,0,94,99,100,93,94,99,100,93,94,99,100,93,93,94,99,100,93,94,93,94,93,94,93,93,93,93,94,93,93,94,99,100,93,94,99,100,93,93,93,94,93,93,93,94,99,100,93,94,99,100,93,94,99,100,93,94,99,100,93,93,93,93,99,100,93,94,93,93,94,93,94,94,99,100,93,94,99,100,93,94,99,100,93,93,93,182,183,184,183,183,185,183,185,183,185,186,186,186,187,186,187,101,101,103,0,0,103,101,101,0,0,0,0,0,0,101,101,103,104,102,101,103,104,102,101,101,101,101,101,101,101,101,101,103,104,102,102,101,103,104,102,101,102,101,102,101,101,102,101,101,101,102,102,101,101,101,101,101,101,103,104,102,101,103,104,102,101,101,101,101,102,101,101,102,101,102,102,101,102,101,101,101,103,104,102,101,103,104,102,101,103,104,102,101,103,104,102,101,101,101,101,101,101,102,103,104,102,101,102,101,101,101,101,101,102,101,101,101,103,104,102,101,103,104,102,101,103,104,102,101,102,102,188,189,189,108,109,108,0,0,0,0,0,0,0,0,108,107,107,107,107,109,0,0,0,0,0,0,0,0,0,0,108,0,108,109,0,96,107,108,109,96,107,108,109,96,107,108,109,96,96,107,108,109,96,107,96,107,96,107,96,107,96,96,107,108,109,96,107,108,109,96,96,96,107,96,96,96,107,108,109,96,107,108,109,96,107,108,109,96,107,108,109,96,96,96,108,109,96,107,96,96,107,96,107,107,108,109,96,107,108,109,96,107,108,109,96,96,96,190,191,192,193,194,195,194,193,195,113,113,112,113,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,112,0,0,0,0,0,0,0,113,112,113,0,110,111,112,113,110,111,112,113,110,111,112,113,110,110,111,112,113,110,110,111,110,111,110,111,110,110,110,111,110,110,111,112,113,110,111,112,113,110,110,110,111,110,110,110,111,112,113,110,111,112,113,110,111,112,113,110,111,112,113,110,110,112,113,110,111,110,110,110,111,110,111,111,112,113,110,111,112,113,110,111,112,113,110,110,110,196,197,198,197,199,200,0,0,0,0,0,0,0,0,0,0,0,0,120,0,120,0,120,0,120,120,115,116,0,0,119,116,120,0,0,115,115,116,119,120,114,115,116,119,120,114,115,116,119,120,114,114,115,116,119,120,114,115,116,114,115,116,114,115,116,114,114,115,116,114,114,115,116,119,120,114,115,116,119,120,114,114,114,115,116,114,114,114,115,116,119,120,114,115,116,119,120,114,115,116,119,120,114,115,116,119,120,114,114,114,114,114,114,119,120,114,115,116,114,114,115,116,114,115,115,116,116,119,120,114,115,116,119,120,114,115,116,119,120,114,114,114,201,202,202,203,204,205,203,203,203,201,205,206,204,203,202,204,205,206,204,121,126,126,0,0,0,0,0,0,0,0,0,0,0,0,0,124,124,124,124,126,123,123,0,126,126,123,124,121,0,0,125,0,126,0,0,123,123,123,0,124,124,124,121,123,124,121,125,126,122,123,124,121,125,126,122,121,121,121,121,121,121,121,121,123,124,121,125,126,122,122,123,124,121,125,126,122,123,124,121,122,123,124,121,122,123,124,121,121,122,122,121,122,121,123,124,121,122,122,121,123,124,121,121,121,121,121,125,126,122,123,124,121,125,126,122,121,121,121,121,122,121,121,122,122,123,124,121,122,122,121,122,121,121,123,124,121,125,126,122,123,124,121,125,126,122,123,124,121,125,126,122,123,124,121,125,126,122,121,121,121,121,121,122,122,121,122,125,126,122,123,124,121,122,122,121,121,121,121,123,124,121,122,121,123,123,124,124,121,121,125,126,122,123,124,121,125,126,122,123,124,121,125,126,122,121,122,122,207,208,209,209,210,210,211,210,210,209,210,210,209,210,210,0,134,134,0,134,0,134,134,134,134,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,134,0,0,130,134,128,129,129,134,134,131,0,0,0,0,133,131,0,132,133,128,130,130,0,132,131,128,130,129,133,134,127,132,131,128,130,129,133,134,127,127,127,127,127,127,127,132,131,128,130,129,133,134,127,127,132,131,128,130,129,133,134,127,127,132,131,128,130,129,127,132,131,128,130,129,127,132,131,128,130,129,127,127,132,131,128,130,129,127,127,132,131,128,130,129,133,134,127,127,132,131,128,130,129,133,134,127,127,127,132,131,128,130,129,127,127,127,132,131,128,130,129,133,134,127,132,131,128,130,129,133,134,127,132,131,128,130,129,133,134,127,132,131,128,130,129,133,134,127,127,127,127,133,134,127,132,131,128,130,129,127,132,131,128,130,129,127,132,132,131,131,128,128,130,130,129,129,133,134,127,132,131,128,130,129,133,134,127,132,131,128,130,129,133,134,127,127,127,212,213,214,215,216,217,218,216,214,219,220,218,218,219,220,219,221,219,221,221,218,212,213,212,215,222,222,222,222,136,136,0,0,0,0,0,0,0,0,136,0,136,137,135,136,137,135,136,137,135,135,136,137,135,135,135,135,135,135,136,137,135,136,137,135,135,135,135,135,135,136,137,135,136,137,135,136,137,135,136,137,135,135,136,137,135,135,135,136,137,135,136,137,135,136,137,135,135,135,223,224,223,224,223,224,223,224,142,0,0,0,0,0,0,0,141,141,141,138,140,142,138,0,0,0,0,0,0,0,0,141,0,138,0,138,138,140,141,142,139,138,140,141,142,139,138,138,138,138,138,138,138,138,138,140,141,142,139,139,138,140,141,142,139,139,138,140,139,138,140,139,140,138,138,139,138,138,138,140,139,139,138,138,138,138,138,138,140,141,142,139,138,140,141,142,139,138,138,138,138,139,138,138,139,138,140,139,139,138,139,138,138,138,140,141,142,139,138,140,141,142,139,138,140,141,142,139,138,140,141,142,139,138,138,138,138,138,139,138,139,141,142,139,140,138,139,138,138,138,138,138,140,139,138,138,138,140,140,141,142,139,138,140,141,142,139,138,140,141,142,139,138,139,139,225,226,227,228,229,0,0,145,0,0,0,144,0,144,145,146,143,144,145,146,143,144,145,146,143,143,144,145,146,143,144,143,144,143,144,143,144,143,143,144,145,146,143,144,145,146,143,143,143,144,143,143,143,144,145,146,143,144,145,146,143,144,145,146,143,144,145,146,143,143,145,146,143,144,143,144,143,144,144,145,146,143,144,145,146,143,144,145,146,143,143,143,230,230,147,147,147,152,150,150,0,0,0,0,0,0,0,150,0,148,147,151,147,152,151,152,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,147,150,151,151,151,151,151,151,151,147,147,147,0,0,147,148,147,148,150,151,152,149,147,148,150,151,152,149,147,148,147,148,147,148,147,148,147,147,148,148,147,148,147,148,147,148,150,151,152,149,149,147,148,150,151,152,149,147,148,150,149,147,148,150,149,150,147,148,149,147,148,149,147,148,147,148,147,148,150,149,149,147,148,147,147,147,147,147,148,148,148,148,148,150,151,152,149,147,148,150,151,152,149,147,148,147,147,148,148,147,148,149,147,148,147,148,149,147,148,150,149,149,147,148,149,147,148,147,148,147,148,150,151,152,149,147,148,150,151,152,149,147,148,150,151,152,149,147,148,150,151,152,149,147,148,147,148,147,148,147,148,147,148,147,148,149,151,152,149,150,149,149,147,148,149,147,148,147,148,147,148,147,148,147,148,150,149,147,148,147,147,148,148,150,150,151,152,149,147,148,150,151,152,149,147,148,150,151,152,149,147,148,149,149,231,231,232,231,233,234,235,236,237,237,237,238,235,236,239,234,236,240,239,234,236,241,235,236,235,236,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,156,0,0,0,0,0,157,155,155,154,154,154,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,0,0,0,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,0,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,154,155,156,157,153,154,155,156,157,153,154,155,156,157,153,153,154,155,156,157,153,154,155,153,154,155,153,154,155,153,154,155,153,153,154,155,156,157,153,153,154,155,156,157,153,153,153,154,155,153,153,153,154,155,156,157,153,154,155,156,157,153,154,155,156,157,153,154,155,156,157,153,153,156,157,153,154,155,153,154,155,153,154,154,155,155,156,157,153,154,155,156,157,153,154,155,156,157,153,153,153,242,243,243,243,159,159,0,0,0,0,0,0,0,0,159,0,159,160,158,159,160,158,159,160,158,158,159,160,158,158,158,158,158,158,159,160,158,159,160,158,158,158,158,158,158,159,160,158,159,160,158,159,160,158,159,160,158,158,159,160,158,158,158,159,160,158,159,160,158,159,160,158,158,158,244,244,244,244,245,244,244,162,162,163,0,0,163,0,0,0,0,0,0,162,163,164,161,162,163,164,161,162,163,164,161,161,162,163,164,161,162,161,162,161,162,161,162,161,161,162,163,164,161,162,163,164,161,161,161,162,161,161,161,162,163,164,161,162,163,164,161,162,163,164,161,162,163,164,161,161,163,164,161,162,161,162,161,162,162,163,164,161,162,163,164,161,162,163,164,161,161,161,246,246,246,166,167,0,0,167,167,0,0,0,0,0,0,0,0,0,0,0,0,0,167,167,167,0,166,167,168,165,166,167,168,165,166,167,168,165,165,166,167,168,165,166,165,166,165,166,165,166,165,165,166,167,168,165,166,167,168,165,165,165,166,165,165,165,166,167,168,165,166,167,168,165,166,167,168,165,166,167,168,165,165,167,168,165,166,165,166,165,166,166,167,168,165,166,167,168,165,166,167,168,165,165,165,247,248,249,249,170,170,170,170,169,170,0,0,0,0,0,0,0,0,171,0,0,170,169,169,169,169,171,170,171,171,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,170,170,0,169,170,171,97,169,170,171,97,169,170,171,97,97,169,170,171,97,169,97,169,97,169,97,97,169,97,97,169,170,171,97,169,170,171,97,97,97,169,97,97,97,169,170,171,97,169,170,171,97,169,170,171,97,169,170,171,97,97,97,170,171,97,169,97,97,97,169,97,169,169,170,171,97,169,170,171,97,169,170,171,97,97,97,250,251,252,253,254,255,256,257,258,259,260,261,256,257,254,256,257,262,254,256,257,262,174,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,174,174,0,0,173,0,174,174,0,173,174,172,173,174,172,173,174,172,172,173,174,172,172,172,172,172,172,172,172,173,174,172,172,173,174,172,172,172,172,172,172,173,174,172,173,174,172,173,174,172,173,174,172,172,172,173,174,172,172,172,172,172,173,174,172,173,174,172,173,174,172,172,172,172,263,264,265,266,267,266,266,267,263,264,263,263,264,265,263,265,263,265],"f":"```````````````````````{b{{h{{f{d}}}}}}{cj{}}000000000000000000000{{{l{c}}}n{}}{bn}{bA`}`{{{l{c}}}{{Ab{c}}}{}}{AdAf}{{cAdAh{Aj{e}}g{Al{c}}}An{}B`{}}{c{{Bd{bBb}}}{{Bh{Bf}}}}{Bj{{Bd{bBb}}}}{{Blc}{{Bd{bBb}}}{{Cb{}{{Bn{C`}}}}}}{ce{}{}}000000000000000000000{{Ahc}Cd{}}0{{{B`{}{{Cf{c}}{Ch{e}}}}}{{f{Ah}}}{}{}}{AhAh}{AdAd}{{{Cj{c}}}{{Cj{c}}}Cl}{{{Cn{c}}}{{Cn{c}}}Cl}{{ce}An{}{}}000{{AdD`c}Db{DdDf}}{{AhAdD`c}{{Bd{eDh}}}{DdDf}B`}{{AhAdD`{Dl{Dj}}}{{Bd{cDh}}}B`}{{{Al{c}}{Aj{e}}{Dl{Dj}}}e{}B`}{{{B`{}{{Cf{c}}{Ch{e}}}}}{{f{g}}}{}{}{}}``{{cDneg}An{}B`{}}0{{{Dl{{E`{ce}}}}AfgDnEb}AnB`{DdDf}{{Ed{ce}}}}{{AdDb}An}{{{l{c}}c}{{h{C`}}}{}}{{{B`{}{{Cf{c}}{Ch{e}}}}}{{Cn{{B`{}{{Cf{c}}{Ch{e}}}}}}}{}{}}{bAn}{{AhAh}Cd}{{{Cj{c}}{Cj{c}}}CdEf}{{{Cn{c}}{Cn{c}}}Cd{}}{{{Cn{c}}c}CdB`}{{{l{c}}}{{h{An}}}{}}{Ad{{h{An}}}}{{AhEh}Ej}{{{E`{ce}}Eh}EjElEl}{{{Aj{c}}Eh}EjEl}{{{Al{c}}Eh}EjEl}{{{l{c}}Eh}EjEl}{{AdEh}Ej}{{bEh}Ej}{{BbEh}Ej}0{{{Cj{c}}Eh}{{Bd{AnEn}}}El}{{F`Eh}Ej}0{{{Cn{c}}Eh}EjEl}{cc{}}00000{AfAd}111{D`{{Cj{c}}}{{Fb{D`}}}}22{{AdEb}{{Bd{{B`{}{{Cf{c}}{Ch{e}}}}Dh}}}{}{}}{{AdEb}{{Bd{AhDh}}}}{{AhAd}{{Bd{FdDh}}}}{Ah{{f{c}}}Ff}{{AdEb}{{Bd{{Dl{j}}Dh}}}}{{{B`{}{{Cf{c}}{Ch{e}}}}}Fh{}{}}{{{l{c}}}Ad{}}{{{Cn{c}}e}An{}Fj}{{{B`{}{{Cf{c}}{Ch{e}}}}}Eb{}{}}{AhDn}{{{Cn{c}}}EbB`}{{{Al{g}}{Aj{c}}e}cB`{DdDf}{{Ed{ce}}}}{{Add{Dl{Ff}}}{{h{Ah}}}}{{}Fl}{ce{}{}}0000000000{{{Fn{c}}}{{Fn{j}}}{}}0000000000{{{Dl{c}}}{{Dl{j}}}{}}0000000000{{{G`{c}}}{{G`{j}}}{}}0000000000{{{Cj{c}}}{{Bd{cGb}}}{}}{{{B`{}{{Cf{c}}{Ch{e}}}}}Cd{}{}}{{AhAdGd}An}{{}{{Bd{{l{c}}Gf}}}{}}{{{B`{}{{Cf{c}}{Ch{e}}}}}{{f{{Dl{j}}}}}{}{}}{{AhAdD`}{{Bd{cDh}}}B`}{{AdEb}{{Bd{GhDh}}}}{{Ad{Gl{EbGj}}}{{Bd{{Gn{{B`{}{{Cf{c}}{Ch{e}}}}e}}F`}}}{}{}}{{{B`{}{{Cf{c}}{Ch{e}}}}gi}An{}{}{{H`{D`}}}{{H`{Hb}}}}{{{Al{c}}{Aj{e}}gi}An{}B`{{H`{D`}}}{{H`{Hb}}}}{{AdcD`Hb}AnB`}`{{AdDb}An}{{cAhegAd{Al{c}}}An{}B`{}}{{{Dl{{E`{ce}}}}AfgDn{Gl{EbGj}}}{{f{{Dl{Dj}}}}}B`{DdDf}{{Ed{ce}}}}{{{B`{}{{Cf{c}}{Ch{e}}}}c}{{Bd{AnDh}}}{}{}}{{Adc}{{Bd{AnDh}}}B`}{b{{f{Bf}}}}{Bb{{f{Hd}}}}{ce{}{}}000{cHb{}}0{c{{Bd{e}}}{}{}}000000000000000000000{cHf{}}0000000000`{{{Cn{c}}}{{Bd{cDh}}}B`}{{{B`{}{{Cf{c}}{Ch{e}}}}}D`{}{}}{{{B`{}{{Cf{c}}{Ch{e}}}}Adc}{{Bd{{Gl{Ebn}}Dh}}}{}{}}````````````````````{cj{}}0000000000000000000{{{Dl{Hh}}AfcDnDbEb}{{Dl{Dj}}}{}}88888888888888888888{{HhDn{Dl{Ff}}Db}Cd}{Gf{{f{Hd}}}}{EbEb}{DnDn}{DbDb}{AfAf}{FhFh}{DhDh}{FdFd}{{ce}An{}{}}000000{{AfFlD`{Dl{Hh}}}Db}{{AfDnFlD`{Dl{Dj}}}{{Bd{EbDh}}}}{{DjEh}{{Bd{AnEn}}}}{{HhEh}{{Bd{AnEn}}}}{{FfEh}{{Bd{AnEn}}}}{{{Dl{Dj}}AfcDnEb}An{}}{{AfDb}An}{{FfDnHj}An}{{{Ab{c}}c}{{Bd{C`Hl}}}{}}{{{Ab{c}}cDn}{{Bd{C`Hl}}}{}}{{{Fn{Dj}}}{{Bd{{Fn{e}}{Fn{Dj}}}}}j{{Dj{c}}}}{{{Fn{Hh}}}{{Bd{{Fn{e}}{Fn{Hh}}}}}j{{Hh{c}}}}{{{Fn{Ff}}}{{Bd{{Fn{c}}{Fn{Ff}}}}}Ff}{{{Dl{Dj}}}{{Bd{{Dl{e}}{Dl{Dj}}}}}j{{Dj{c}}jDdDf}}{{{Dl{Hh}}}{{Bd{{Dl{e}}{Dl{Hh}}}}}j{{Hh{c}}jDdDf}}{{{Dl{Ff}}}{{Bd{{Dl{c}}{Dl{Ff}}}}}{FfjDdDf}}{Dj{{f{e}}}j{{Dj{c}}}}{Hh{{f{e}}}j{{Hh{c}}}}{Ff{{f{c}}}Ff}{{{G`{Dj}}}{{Bd{{G`{e}}{G`{Dj}}}}}j{{Dj{c}}}}{{{G`{Hh}}}{{Bd{{G`{e}}{G`{Hh}}}}}j{{Hh{c}}}}{{{G`{Ff}}}{{Bd{{G`{c}}{G`{Ff}}}}}Ff}543{AfFh}{{EbEb}Cd}{{DnDn}Cd}{{DbDb}Cd}{{Af{f{Dn}}}{{Bd{AnHl}}}}{{{Ab{c}}{f{Dn}}}{{Bd{AnHl}}}{}}{{DjEh}{{Bd{AnEn}}}}{{HhEh}{{Bd{AnEn}}}}{{FfEh}{{Bd{AnEn}}}}{{EbEh}{{Bd{AnEn}}}}0{{DnEh}{{Bd{AnEn}}}}{{DbEh}{{Bd{AnEn}}}}{{AfEh}{{Bd{AnEn}}}}{{FhEh}{{Bd{AnEn}}}}{{{Ab{c}}Eh}{{Bd{AnEn}}}El}{{GfEh}{{Bd{AnEn}}}}0{{DhEh}{{Bd{AnEn}}}}0{{HjEh}{{Bd{AnEn}}}}{{FdEh}{{Bd{AnEn}}}}{cc{}}000000000{{AfEb}{{Bd{DnDh}}}}{{AfDn}{{Bd{FdDh}}}}{{AfDn}{{Bd{{Dl{Ff}}Dh}}}}{{AfDb}{{Bd{{Dl{Hh}}Dh}}}}{{AfEb}{{Bd{{Dl{Dj}}Dh}}}}{{AfEb}{{Bd{{Dl{j}}Dh}}}}`{{AfDb}{{Bd{HnDh}}}}{{{Ab{c}}}Af{}}{{Ebc}AnFj}{{Dnc}AnFj}{{Dbc}AnFj}{{FfDn}An}{{Afd{Dl{Ff}}}{{Bd{DnHl}}}}{EbFl}{ce{}{}}000000000{{{Fn{c}}}{{Fn{j}}}{}}000000000{{{Dl{c}}}{{Dl{j}}}{}}000000000{{{G`{c}}}{{G`{j}}}{}}000000000{DjCd}{HhCd}{FfCd}{EbCd}{{AfDnHj}An}{{}{{Bd{{Ab{c}}Gf}}}{}}{{}Eb}{{AfDnFlD`}{{Bd{EbDh}}}}{{AfEb}{{Bd{GhDh}}}}`{{{Ab{c}}}n{}}{{AfEbD`I`}An}`{EbD`}{{AfDb}An}{{{Dl{Dj}}AfcDn{Gl{EbGj}}}{{f{{Dl{Dj}}}}}{}}{{EbEb}Cd}{{Af{Gl{EbIb}}}{{Bd{AnDh}}}}{{AfEb{Dl{Dj}}}{{Bd{AnDh}}}}`{ce{}{}}000000{cHb{}}00{c{{Bd{e}}}{}{}}0000000000000000000{cHf{}}000000000`{Fh{{f{Af}}}}{{Afc}An{{Id{Dn}}}}{{AfDnc}{{Bd{AnDh}}}{{Id{Eb}}}}```````````````````````````````````{cj{}}00000000000000000000000777777777777777777777777``{IfIf}{IhIh}{{{Ij{ce}}}{{Ij{ce}}}ClCl}{IlIl}{GhGh}{GdGd}{{{Gl{ce}}}{{Gl{ce}}}ClCl}{GbGb}{{ce}An{}{}}0000000`{{IfIf}Cd}{{IhIh}Cd}{{{Ij{ce}}{Ij{ce}}}CdEfIn}{{{Gl{ce}}{Gl{ce}}}CdEfIn}````{{J`Eh}{{Bd{AnEn}}}}{{IfEh}{{Bd{AnEn}}}}{{IhEh}{{Bd{AnEn}}}}{{{Ij{ce}}Eh}{{Bd{AnEn}}}JbIn}{{{Ij{ce}}Eh}{{Bd{AnEn}}}ElEl}{{FlEh}{{Bd{AnEn}}}}0{{IlEh}{{Bd{AnEn}}}}{{GhEh}{{Bd{AnEn}}}}{{GdEh}{{Bd{AnEn}}}}0{{{Gl{ce}}Eh}{{Bd{AnEn}}}ElEl}{{GbEh}{{Bd{AnEn}}}}0{cc{}}00000000000{{{Ij{ce}}}Ih{}{}}````{ce{}{}}00000000000{{{Fn{c}}}{{Fn{j}}}{}}00000000000{{{Dl{c}}}{{Dl{j}}}{}}000000000{{{G`{c}}}{{G`{j}}}{}}00000000000`{{{Gl{ce}}i}{{Gl{cg}}}{}{}{}{{Id{e}{{Jd{g}}}}}}``````````````{{FlFl}Cd}{{IhIh}Cd}````66666666{cHb{}}000{c{{Bd{e}}}{}{}}00000000000000000000000{cHf{}}00000000000``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{cj{}}00000::{JfEb};;;;{JfJf}{{ce}An{}{}}{Jf{{f{c}}}{}}{{Jf{Cn{Jf}}}Cd}{{JfJf}Cd}{{JhEh}Ej}{{JjEh}Ej}{{JfEh}Ej}{cc{}}00{{AdEb}{{Bd{JfDh}}}}{JfFh}{{Jfc}AnFj}<{{}Fl}{ce{}{}}00{{{Fn{c}}}{{Fn{j}}}{}}00{{{Dl{c}}}{{Dl{j}}}{}}00{{{G`{c}}}{{G`{j}}}{}}00{Jf{{f{{Dl{j}}}}}}{JhJl}{JjJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Jfc}}F`}}}{}}{JfAn}{{Jfc}{{Bd{AnDh}}}{}}9{c{{Bd{e}}}{}{}}00000{cHf{}}00{JfD`}{{JfAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}``````{cj{}}00000>>>{JnEb}???{JnJn}{{ce}An{}{}}{Jn{{f{c}}}{}}{{JnD`}An}{{JnJn}Cd}{{Jn{Cn{Jn}}}Cd}{{K`Eh}Ej}{{KbEh}Ej}{{JnEh}Ej}{cc{}}00{{AdEb}{{Bd{JnDh}}}}{JnFh}{{Jnc}AnFj}={{}Fl}{ce{}{}}00{{{Fn{c}}}{{Fn{j}}}{}}00{{{Dl{c}}}{{Dl{j}}}{}}00{{{G`{c}}}{{G`{j}}}{}}00{Jn{{f{{Dl{j}}}}}}{K`Jl}{KbJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Jnc}}F`}}}{}}{{Jnc}{{Bd{AnDh}}}{}}8{c{{Bd{e}}}{}{}}00000{cHf{}}00{JnD`}{{JnAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}``````````{cj{}}00000=={KdEb}>>>>{KdKd}{{ce}An{}{}}{Kd{{f{c}}}{}}{{Kd{Cn{Kd}}}Cd}{{KdKd}Cd}{{KfEh}Ej}{{KhEh}Ej}{{KdEh}Ej}{cc{}}00{{AdEb}{{Bd{KdDh}}}}{KdFh}{{Kdc}AnFj}<{{}Fl}{ce{}{}}00{{{Fn{c}}}{{Fn{j}}}{}}00{{{Dl{c}}}{{Dl{j}}}{}}00{{{G`{c}}}{{G`{j}}}{}}00{Kd{{f{{Dl{j}}}}}}{KfJl}{KhJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Kdc}}F`}}}{}}{{Kdc}{{Bd{AnDh}}}{}}8{c{{Bd{e}}}{}{}}00000{cHf{}}00{KdD`}{{KdAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}``````````````````````````````````{cj{}}0000000==={KjEb}>>>>>{KlKl}{KjKj}{{ce}An{}{}}0{{KlKl}Kn}{Kj{{f{c}}}{}}{{KjL`}An}{KjAn}{{KjD`LbLdLd{f{L`}}}An}{{KlKl}Cd}{{Kj{Cn{Kj}}}Cd}{{KjKj}Cd}{{KlEh}Ej}{{LfEh}Ej}{{LhEh}Ej}{{KjEh}Ej}{cc{}}000{{AdEb}{{Bd{KjDh}}}}{KjFh}{{Klc}AnFj}{{Kjc}AnFj}{KjEb}{{}Fl}{ce{}{}}000{{{Fn{c}}}{{Fn{j}}}{}}000{{{Dl{c}}}{{Dl{j}}}{}}000{{{G`{c}}}{{G`{j}}}{}}000{KjAn}{{KjD`LdLd}An}{Kj{{f{{Dl{j}}}}}}{LfJl}{LhJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Kjc}}F`}}}{}}{{KlKl}{{f{Kn}}}}{{Kj{f{L`}}}An}{{Kjc}{{Bd{AnDh}}}{}}<<{c{{Bd{e}}}{}{}}{D`{{Bd{KlAn}}}}1111111{cHf{}}000{KjD`}{{KjAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}``````````````````````````````{{}Lj}{cj{}}0000000{{LjLj}Lj}{{LjLj}An}10{LjD`}021{ce{}{}}000{LlEb}1111{LjLj}{LlLl}{{ce}An{}{}}02{{LjLj}Cd}{Ll{{f{c}}}{}}9;1{{Ll{Cn{Ll}}}Cd}{{LlLl}Cd}{{Ljc}An{{Cb{}{{Bn{Lj}}}}}}{{LjEh}Ej}0000{{LnEh}Ej}{{M`Eh}Ej}{{LlEh}Ej}{cc{}}000{D`{{f{Lj}}}}{D`Lj}00{{AdEb}{{Bd{LlDh}}}}{cLj{{Cb{}{{Bn{Lj}}}}}}{Bl{{f{Lj}}}}{LlFh}{{Ljc}AnFj}{{Llc}AnFj}{LlEb}{{LjLj}An}{{}Fl}{{LjLj}Lj}{{LjLj}Cd}{ce{}{}}000{{{Fn{c}}}{{Fn{j}}}{}}000{{{Dl{c}}}{{Dl{j}}}{}}000{{{G`{c}}}{{G`{j}}}{}}000{Ljc{}}{LjCd}0{Lj{{Mb{Lj}}}}{Lj{{Md{Lj}}}}{LjLj}{Ll{{f{{Dl{j}}}}}}{LnJl}{M`Jl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Llc}}F`}}}{}}{{LjLj}An}{{Llc}{{Bd{AnDh}}}{}}{{LjLjCd}An}{{LjLj}Lj}30{ce{}{}}04{D`{{Bd{LjAn}}}}{c{{Bd{e}}}{}{}}0000000{cHf{}}0004{LlD`}{{LlAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}```````````````````````````````````{{L`Lj}An}{cj{}}00000007777{L`Eb}8888{MfMf}{L`L`}{{ce}An{}{}}0{{MfMf}Kn}{L`{{f{c}}}{}}{{MfMf}Cd}{{L`{Cn{L`}}}Cd}{{L`L`}Cd}{{MfEh}Ej}{{MhEh}Ej}{{MjEh}Ej}{{L`Eh}Ej}{cc{}}000{{AdEb}{{Bd{L`Dh}}}}{L`Fh}{{Mfc}AnFj}{{L`c}AnFj}{L`Eb}{{}Fl}{ce{}{}}000{{{Fn{c}}}{{Fn{j}}}{}}000{{{Dl{c}}}{{Dl{j}}}{}}000{{{G`{c}}}{{G`{j}}}{}}000{L`{{f{{Dl{j}}}}}}{{L`Hb}An}{MhJl}{MjJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{L`c}}F`}}}{}}{{MfMf}{{f{Kn}}}}{{L`c}{{Bd{AnDh}}}{}}{{L`Lj}An};;{D`{{Bd{MfAn}}}}{c{{Bd{e}}}{}{}}0000000{cHf{}}000{L`D`}{{L`Adc}{{Bd{{Gl{Ebn}}Dh}}}{}}``````````````````````````````````````````{{MlLj}An}{cj{}}0000000{ce{}{}}00{MlEb}11111{MlAn}{MnMn}{MlMl}{{ce}An{}{}}0{{MnMn}Kn}{Ml{{f{c}}}{}}55{{MnMn}Cd}{{Ml{Cn{Ml}}}Cd}{{MlMl}Cd}{{MnEh}Ej}{{N`Eh}Ej}{{NbEh}Ej}{{MlEh}Ej}{cc{}}000{{AdEb}{{Bd{MlDh}}}}{MlFh}{{Mnc}AnFj}{{Mlc}AnFj}{MlEb}{{}Fl}{ce{}{}}000{{{Fn{c}}}{{Fn{j}}}{}}000{{{Dl{c}}}{{Dl{j}}}{}}000{{{G`{c}}}{{G`{j}}}{}}000{Ml{{f{{Dl{j}}}}}}{N`Jl}{NbJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Mlc}}F`}}}{}}{{MnMn}{{f{Kn}}}}{{MlHbn}An}{{Mlc}{{Bd{AnDh}}}{}}{{Ml{f{Hb}}}An};;{c{{Bd{e}}}{}{}}{D`{{Bd{MnAn}}}}1111111{cHf{}}000{MlD`}{{MlAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}````````````````````````````````````{cj{}}000000000{ce{}{}}000{NdEb}111111{NfNf}{NhNh}{NdNd}{{ce}An{}{}}00{{NfNf}Kn}{{NhNh}Kn}{Nd{{f{c}}}{}}{{NdD`Lb{Nl{Nj}}}An}{{NfNf}Cd}{{NhNh}Cd}{{NdNd}Cd}{{Nd{Cn{Nd}}}Cd}{{NfEh}Ej}{{NhEh}Ej}{{NnEh}Ej}{{O`Eh}Ej}{{NdEh}Ej}{cc{}}0000{{AdEb}{{Bd{NdDh}}}}{NdFh}{{Nfc}AnFj}{{Nhc}AnFj}{{Ndc}AnFj}{NdEb}{{}Fl}{ce{}{}}0000{{{Fn{c}}}{{Fn{j}}}{}}0000{{{Dl{c}}}{{Dl{j}}}{}}0000{{{G`{c}}}{{G`{j}}}{}}0000{{NdD`D`D`Nh}An}{{NdNfnD`}An}{{NdD`Lb}An}{{NdD`D`D`D`D`}An}{Nd{{f{{Dl{j}}}}}}{NnJl}{O`Jl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Ndc}}F`}}}{}}{{NfNf}{{f{Kn}}}}{{NhNh}{{f{Kn}}}}{{NdIbIb}An}{{Ndc}{{Bd{AnDh}}}{}}???{D`{{Bd{NfAn}}}}{c{{Bd{e}}}{}{}}{D`{{Bd{NhAn}}}}111111111{cHf{}}0000{NdD`}{{NdAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}``````````````````````````````````````````````````````````````{{}Ob}{cj{}}00000000000{{ObOb}Ob}{{ObOb}An}10{ObD`}021{ce{}{}}0000{OdEb}1111111{OfOf}{OhOh}{ObOb}{OdOd}{{ce}An{}{}}000{{OfOf}Kn}{{OhOh}Kn}4{{ObOb}Cd}{Od{{f{c}}}{}}{{OdHb}An}>{OdAn}{{}Ob}{{OfOf}Cd}{{OhOh}Cd}6{{Od{Cn{Od}}}Cd}{{OdOd}Cd}{{Obc}An{{Cb{}{{Bn{Ob}}}}}}{{OfEh}Ej}{{OhEh}Ej}{{ObEh}Ej}0000{{OjEh}Ej}{{OlEh}Ej}{{OdEh}Ej}{cc{}}00000{D`{{f{Ob}}}}{D`Ob}00{{AdEb}{{Bd{OdDh}}}}{cOb{{Cb{}{{Bn{Ob}}}}}}{Bl{{f{Ob}}}}{{OdIbIbIbIbOfHbHbOh}An}{OdFh}{{Ofc}AnFj}{{Ohc}AnFj}{{Obc}AnFj}{{Odc}AnFj}{OdEb}{{ObOb}An}{{}Fl}{{ObOb}Ob}{{ObOb}Cd}{ce{}{}}00000{{{Fn{c}}}{{Fn{j}}}{}}00000{{{Dl{c}}}{{Dl{j}}}{}}00000{{{G`{c}}}{{G`{j}}}{}}00000{Obc{}}{ObCd}0{Ob{{Mb{Ob}}}}{Ob{{Md{Ob}}}}{{OdObIbIbIb}An}{{OdHb}An}{ObOb}{Od{{f{{Dl{j}}}}}}{OjJl}{OlJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Odc}}F`}}}{}}{{OfOf}{{f{Kn}}}}{{OhOh}{{f{Kn}}}}{{ObOb}An}{{OdIb}An}{{Odc}{{Bd{AnDh}}}{}}{{ObObCd}An}{{ObOb}Ob}40{ce{}{}}0005{D`{{Bd{OfAn}}}}{c{{Bd{e}}}{}{}}{D`{{Bd{OhAn}}}}11{D`{{Bd{ObAn}}}}222222222{cHf{}}000006{OdD`}{{OdAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}`````````````````````````````````````````````````````````````````````````{cj{}}000000000000000{{OnD`A`Ld}An}{{OnA`Ib}An}{{OnA`Ab}An}{{OnAd}An}{{OnD`A`}An}3========{OnEb}>>>>>>>>{{OnD`D`D`Af}An}{AhAh}{AfAf}{A`A`}{AdAd}{AbAb}{OnOn}{{ce}An{}{}}00000{{AhAh}Kn}{{AfAf}Kn}{{A`A`}Kn}{{AdAd}Kn}{{AbAb}Kn}{On{{f{c}}}{}}{{OnD`LbLdLd}An}{{AhAh}Cd}{{AfAf}Cd}{{A`A`}Cd}{{AdAd}Cd}{{AbAb}Cd}{{On{Cn{On}}}Cd}{{OnOn}Cd}{{AhEh}Ej}{{AfEh}Ej}{{A`Eh}Ej}{{AdEh}Ej}{{AbEh}Ej}{{AjEh}Ej}{{AlEh}Ej}{{OnEh}Ej}{OnAn}{cc{}}0000000{{AdEb}{{Bd{OnDh}}}}{OnFh}{{Ahc}AnFj}{{Afc}AnFj}{{A`c}AnFj}{{Adc}AnFj}{{Abc}AnFj}{{Onc}AnFj}{OnEb}{{}Fl}{ce{}{}}0000000{{{Fn{c}}}{{Fn{j}}}{}}0000000{{{Dl{c}}}{{Dl{j}}}{}}0000000{{{G`{c}}}{{G`{j}}}{}}0000000{{OnD`Lb}An}{{OnD`LdLd}An}{On{{f{{Dl{j}}}}}}{AjJl}{AlJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Onc}}F`}}}{}}{{AhAh}{{f{Kn}}}}{{AfAf}{{f{Kn}}}}{{A`A`}{{f{Kn}}}}{{AdAd}{{f{Kn}}}}{{AbAb}{{f{Kn}}}}{{Onc}{{Bd{AnDh}}}{}}??????{c{{Bd{e}}}{}{}}{D`{{Bd{AhAn}}}}{D`{{Bd{AfAn}}}}2{D`{{Bd{A`An}}}}33{D`{{Bd{AdAn}}}}4{D`{{Bd{AbAn}}}}55555555555{cHf{}}0000000{OnD`}{{OnAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}`````````````````````````````````````````{cj{}}00000{ce{}{}}00{AnEb}111{AnAn}{{ce}An{}{}}{An{{f{c}}}{}}{{An{Cn{An}}}Cd}{{AnAn}Cd}{{AA`Eh}Ej}{{AAbEh}Ej}{{AnEh}Ej}{cc{}}00{{AdEb}{{Bd{AnDh}}}}{AnFh}{{Anc}AnFj}<{{}Fl}>>>{{{Fn{c}}}{{Fn{j}}}{}}00{{{Dl{c}}}{{Dl{j}}}{}}00{{{G`{c}}}{{G`{j}}}{}}00{An{{f{{Dl{j}}}}}}{AA`Jl}{AAbJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Anc}}F`}}}{}}{{Anc}{{Bd{AnDh}}}{}}{ce{}{}}{c{{Bd{e}}}{}{}}00000{cHf{}}00{AnD`}{{AnAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}```````````````````````````````````{{}AAd}{cj{}}000000000{{AAdAAd}AAd}{{AAdAAd}An}10{AAdD`}0219999{AAfEb}::::::{{AAfAAd}An}{AAdAAd}{AAhAAh}{AAfAAf}{{ce}An{}{}}00{{AAhAAh}Kn}4{{AAdAAd}Cd}{AAf{{f{c}}}{}};=1{{AAhAAh}Cd}{{AAf{Cn{AAf}}}Cd}{{AAfAAf}Cd}{{AAdc}An{{Cb{}{{Bn{AAd}}}}}}{{AAdEh}Ej}0000{{AAhEh}Ej}{{AAjEh}Ej}{{AAlEh}Ej}{{AAfEh}Ej}{cc{}}0000{D`{{f{AAd}}}}{D`AAd}00{{AdEb}{{Bd{AAfDh}}}}{cAAd{{Cb{}{{Bn{AAd}}}}}}{Bl{{f{AAd}}}}{AAfFh}{{AAdc}AnFj}{{AAhc}AnFj}{{AAfc}AnFj}{AAfEb}{{AAdAAd}An}{{}Fl}{{AAdAAd}AAd}{{AAdAAd}Cd}{ce{}{}}0000{{{Fn{c}}}{{Fn{j}}}{}}0000{{{Dl{c}}}{{Dl{j}}}{}}0000{{{G`{c}}}{{G`{j}}}{}}0000{AAdc{}}{AAdCd}0{AAd{{Mb{AAd}}}}{AAd{{Md{AAd}}}}{{AAfHb}An}{AAdAAd}{AAf{{f{{Dl{j}}}}}}{AAjJl}{AAlJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{AAfc}}F`}}}{}}{{AAhAAh}{{f{Kn}}}}{{AAdAAd}An}{{AAfc}{{Bd{AnDh}}}{}}{{AAdAAdCd}An}{{AAdAAd}AAd}30{ce{}{}}004{D`{{Bd{AAdAn}}}}{c{{Bd{e}}}{}{}}{D`{{Bd{AAhAn}}}}111111111{cHf{}}00005{AAfD`}{{AAfAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}`````````````{cj{}}0000000777{AAnEb}88888{AB`AB`}{AAnAAn}{{ce}An{}{}}0{{AB`AB`}Kn}{AAn{{f{c}}}{}}{{AB`AB`}Cd}{{AAnAAn}Cd}{{AAn{Cn{AAn}}}Cd}{{AB`Eh}Ej}{{ABbEh}Ej}{{ABdEh}Ej}{{AAnEh}Ej}{cc{}}000{{AdEb}{{Bd{AAnDh}}}}{AAnFh}{{AB`c}AnFj}{{AAnc}AnFj}{AAnEb}{{}Fl}{ce{}{}}000{{{Fn{c}}}{{Fn{j}}}{}}000{{{Dl{c}}}{{Dl{j}}}{}}000{{{G`{c}}}{{G`{j}}}{}}000{AAn{{f{{Dl{j}}}}}}{ABbJl}{ABdJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{AAnc}}F`}}}{}}{{AB`AB`}{{f{Kn}}}}{{AAnc}{{Bd{AnDh}}}{}}99{D`{{Bd{AB`An}}}}{c{{Bd{e}}}{}{}}0000000{cHf{}}000{AAnD`}{{AAnAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}`````````````````````````````````````````````````````````````{{}ABf}{{}ABh}{cj{}}00000000000{{ABfABf}ABf}{{ABhABh}ABh}{{ABfABf}An}{{ABhABh}An}3210{ABfD`}0{ABhD`}05432{ce{}{}}0000{ABjEb}1111111{ABfABf}{ABhABh}{ABlABl}{ABjABj}{{ce}An{}{}}000{{ABlABl}Kn}54{{ABjABfIbIb}An}{{ABfABf}Cd}{{ABhABh}Cd}{ABj{{f{c}}}{}}{{ABfABf}ABf}{{ABhABh}ABh}{{}ABf}{{}ABh}65{{ABlABl}Cd}{{ABjABj}Cd}{{ABj{Cn{ABj}}}Cd}{{ABfc}An{{Cb{}{{Bn{ABf}}}}}}{{ABhc}An{{Cb{}{{Bn{ABh}}}}}}{{ABfEh}Ej}0000{{ABhEh}Ej}0000{{ABlEh}Ej}{{ABnEh}Ej}{{AC`Eh}Ej}{{ABjEh}Ej}{cc{}}00000{D`{{f{ABf}}}}{D`{{f{ABh}}}}{D`ABf}0{D`ABh}010{{AdEb}{{Bd{ABjDh}}}}{cABf{{Cb{}{{Bn{ABf}}}}}}{cABh{{Cb{}{{Bn{ABh}}}}}}{Bl{{f{ABf}}}}{Bl{{f{ABh}}}}{ABjFh}{{ABfc}AnFj}{{ABhc}AnFj}{{ABlc}AnFj}{{ABjc}AnFj}{ABjEb}{{ABfABf}An}{{ABhABh}An}{{}Fl}{{ABfABf}ABf}{{ABhABh}ABh}{{ABfABf}Cd}{{ABhABh}Cd}{ce{}{}}00000{{{Fn{c}}}{{Fn{j}}}{}}00000{{{Dl{c}}}{{Dl{j}}}{}}00000{{{G`{c}}}{{G`{j}}}{}}00000{ABfc{}}{ABhc{}}{ABfCd}{ABhCd}10{ABf{{Mb{ABf}}}}{ABh{{Mb{ABh}}}}{ABf{{Md{ABf}}}}{ABh{{Md{ABh}}}}{ABfABf}{ABhABh}{ABj{{f{{Dl{j}}}}}}{ABnJl}{AC`Jl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{ABjc}}F`}}}{}}{{ABlABl}{{f{Kn}}}}{{ABjD`}An}{ABjAn}{{ABfABf}An}{{ABhABh}An}{{ABjc}{{Bd{AnDh}}}{}}{{ABfABfCd}An}{{ABhABhCd}An}{{ABfABf}ABf}{{ABhABh}ABh}6510{ce{}{}}00076{D`{{Bd{ABfAn}}}}{c{{Bd{e}}}{}{}}0{D`{{Bd{ABhAn}}}}1{D`{{Bd{ABlAn}}}}222222222{cHf{}}0000076{ABjD`}{{ABjAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{cj{}}0000000008888{ACbEb}999999{ACdACd}{ACfACf}{ACbACb}{{ce}An{}{}}00{{ACdACd}Kn}{{ACfACf}Kn}{ACb{{f{c}}}{}}{{ACdACd}Cd}{{ACfACf}Cd}{{ACb{Cn{ACb}}}Cd}{{ACbACb}Cd}{{ACdEh}Ej}{{ACfEh}Ej}{{AChEh}Ej}{{ACjEh}Ej}{{ACbEh}Ej}{{ACbACf}An}{cc{}}0000{{AdEb}{{Bd{ACbDh}}}}{ACbFh}{{ACdc}AnFj}{{ACfc}AnFj}{{ACbc}AnFj}{ACbEb}{{}Fl}{ce{}{}}0000{{{Fn{c}}}{{Fn{j}}}{}}0000{{{Dl{c}}}{{Dl{j}}}{}}0000{{{G`{c}}}{{G`{j}}}{}}0000{ACb{{f{{Dl{j}}}}}}{AChJl}{ACjJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{ACbc}}F`}}}{}}{{ACdACd}{{f{Kn}}}}{{ACfACf}{{f{Kn}}}}{{ACbc}{{Bd{AnDh}}}{}}:::{c{{Bd{e}}}{}{}}{D`{{Bd{ACdAn}}}}{D`{{Bd{ACfAn}}}}222222222{cHf{}}0000{ACbD`}{{ACbAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}````````````````{cj{}}00000{ce{}{}}0{AClEb}1111{AClACl}{{ce}An{}{}}{ACl{{f{c}}}{}}{{ACl{Cn{ACl}}}Cd}{{AClACl}Cd}{{ACnEh}Ej}{{AD`Eh}Ej}{{AClEh}Ej}{cc{}}00{{AdEb}{{Bd{AClDh}}}}{AClFh}{{AClc}AnFj}<{{}Fl}>>>{{{Fn{c}}}{{Fn{j}}}{}}00{{{Dl{c}}}{{Dl{j}}}{}}00{{{G`{c}}}{{G`{j}}}{}}00{ACl{{f{{Dl{j}}}}}}{ACnJl}{AD`Jl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{AClc}}F`}}}{}}{{AClc}{{Bd{AnDh}}}{}}{ce{}{}}{c{{Bd{e}}}{}{}}00000{cHf{}}00{AClD`}{{AClAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}```````````````````{cj{}}0000000555{ADbEb}66666{ADdADd}{ADbADb}{{ce}An{}{}}0{{ADdADd}Kn}{ADb{{f{c}}}{}}{{ADdADd}Cd}{{ADbADb}Cd}{{ADb{Cn{ADb}}}Cd}{{ADdEh}Ej}{{ADfEh}Ej}{{ADhEh}Ej}{{ADbEh}Ej}{cc{}}000{{AdEb}{{Bd{ADbDh}}}}{ADbFh}{{ADdc}AnFj}{{ADbc}AnFj}{ADbEb}{{}Fl}{ce{}{}}000{{{Fn{c}}}{{Fn{j}}}{}}000{{{Dl{c}}}{{Dl{j}}}{}}000{{{G`{c}}}{{G`{j}}}{}}000{ADb{{f{{Dl{j}}}}}}{ADfJl}{ADhJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{ADbc}}F`}}}{}}{{ADdADd}{{f{Kn}}}}{{ADbc}{{Bd{AnDh}}}{}}99{c{{Bd{e}}}{}{}}{D`{{Bd{ADdAn}}}}1111111{cHf{}}000{ADbD`}{{ADbAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}``````````````````````````{cj{}}0000000???{ADjEb}{ce{}{}}0000{ADlADl}{ADjADj}{{ce}An{}{}}0{{ADlADl}Kn}{ADj{{f{c}}}{}}{{ADlADl}Cd}{{ADj{Cn{ADj}}}Cd}{{ADjADj}Cd}{{ADlEh}Ej}{{ADnEh}Ej}{{AE`Eh}Ej}{{ADjEh}Ej}{cc{}}000{{AdEb}{{Bd{ADjDh}}}}{ADjFh}{{ADlc}AnFj}{{ADjc}AnFj}{ADjEb}{{}Fl}{ce{}{}}000{{{Fn{c}}}{{Fn{j}}}{}}000{{{Dl{c}}}{{Dl{j}}}{}}000{{{G`{c}}}{{G`{j}}}{}}000{ADj{{f{{Dl{j}}}}}}{ADnJl}{AE`Jl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{ADjc}}F`}}}{}}{{ADlADl}{{f{Kn}}}}{{ADjc}{{Bd{AnDh}}}{}}99{D`{{Bd{ADlAn}}}}{c{{Bd{e}}}{}{}}0000000{cHf{}}000{ADjD`}{{ADjAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}``````````````````````````````````````````````````````````{cj{}}0000000????{LbEb}{ce{}{}}000{AEbAEb}{LbLb}{{ce}An{}{}}0{{AEbAEb}Kn}{Lb{{f{c}}}{}}{{LbOd}An}{{AEbAEb}Cd}{{LbLb}Cd}{{Lb{Cn{Lb}}}Cd}{{AEbEh}Ej}{{AEdEh}Ej}{{AEfEh}Ej}{{LbEh}Ej}{cc{}}000{{AdEb}{{Bd{LbDh}}}}{LbFh}{{AEbc}AnFj}{{Lbc}AnFj}{LbEb}{{}Fl}{ce{}{}}000{{{Fn{c}}}{{Fn{j}}}{}}000{{{Dl{c}}}{{Dl{j}}}{}}000{{{G`{c}}}{{G`{j}}}{}}000{{LbOd}An}{Lb{{f{{Dl{j}}}}}}{AEdJl}{AEfJl}{{Ad{Gl{EbGj}}}{{Bd{{Gn{Lbc}}F`}}}{}}{{AEbAEb}{{f{Kn}}}}{{LbIb}An}{{LbOh}An}{{Lbc}{{Bd{AnDh}}}{}}<<{c{{Bd{e}}}{}{}}{D`{{Bd{AEbAn}}}}1111111{cHf{}}000{LbD`}{{LbAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}`````````````````````````````````````````````````{cj{}}00000{ce{}{}}00{AEhEb}111{AEhAn}{AEhAEh}{{ce}An{}{}}{AEh{{f{c}}}{}}{{AEhD`D`LbIbLdLd}An}{{AEhAEh}Cd}{{AEh{Cn{AEh}}}Cd}{{AEjEh}Ej}{{AElEh}Ej}{{AEhEh}Ej}9{cc{}}00{{AdEb}{{Bd{AEhDh}}}}{AEhFh}{{AEhc}AnFj}>{{}Fl}{ce{}{}}00{{{Fn{c}}}{{Fn{j}}}{}}00{{{Dl{c}}}{{Dl{j}}}{}}00{{{G`{c}}}{{G`{j}}}{}}00{{AEhD`IbLdLd}An}{AEh{{f{{Dl{j}}}}}}{AEjJl}{AElJl}{{AEhIbLd}An}{{Ad{Gl{EbGj}}}{{Bd{{Gn{AEhc}}F`}}}{}}{{AEhc}{{Bd{AnDh}}}{}}{{AEhIbLdLd}An};{c{{Bd{e}}}{}{}}00000{cHf{}}00{{AEhD`D`Ib}An}{AEhD`}{{AEhAdc}{{Bd{{Gl{Ebn}}Dh}}}{}}``````````````````","c":[],"p":[[5,"ListeningSocket",0],[5,"UnixStream",3627],[6,"Option",3628],[8,"Result",3629],[10,"Any",3630],[5,"Display",0],[5,"BorrowedFd",3631],[8,"RawFd",3632],[5,"Backend",258],[5,"DisplayHandle",0],[5,"Handle",258],[5,"Client",0],[5,"New",0],[5,"DataInit",0],[1,"unit"],[10,"Resource",0],[6,"BindError",0],[6,"Result",3633],[5,"OsStr",3634],[10,"AsRef",3635],[5,"PathBuf",3636],[1,"str"],[17,"Item"],[1,"usize"],[10,"IntoIterator",3637],[1,"bool"],[17,"Event"],[17,"Request"],[6,"WEnum",0],[10,"Clone",3638],[5,"Weak",0],[1,"u32"],[5,"GlobalId",258],[10,"Send",3639],[10,"Sync",3639],[5,"InvalidId",258],[10,"ObjectData",258],[5,"Arc",3640],[5,"ClientId",258],[5,"ResourceData",0],[5,"ObjectId",258],[10,"Dispatch",0],[10,"PartialEq",3641],[5,"Formatter",3642],[8,"Result",3642],[10,"Debug",3642],[5,"Error",3642],[6,"DispatchError",0],[10,"TryFrom",3635],[5,"Credentials",258],[10,"ClientData",258],[5,"WeakHandle",258],[10,"Hasher",3643],[5,"Interface",508],[5,"Box",3644],[5,"Rc",3645],[5,"WEnumError",508],[5,"ProtocolError",508],[6,"InitError",258],[5,"ObjectInfo",508],[5,"OwnedFd",3631],[5,"Message",508],[1,"tuple"],[10,"Into",3635],[5,"String",3646],[10,"Error",3647],[5,"TypeId",3630],[10,"GlobalHandler",258],[6,"DisconnectReason",258],[5,"Error",3629],[5,"GlobalInfo",3648],[5,"CString",3649],[1,"i32"],[10,"FnMut",3650],[6,"AllowNull",508],[6,"ArgumentType",508],[6,"Argument",508],[5,"MessageDesc",508],[10,"AsRawFd",3632],[5,"wl_interface",508],[10,"Display",3642],[17,"Output"],[5,"WlBuffer",874],[6,"Request",874],[6,"Event",874],[1,"u16"],[5,"WlCallback",942],[6,"Request",942],[6,"Event",942],[5,"WlCompositor",1008],[6,"Request",1008],[6,"Event",1008],[5,"WlDataDevice",1077],[6,"Error",1077],[6,"Ordering",3641],[5,"WlDataOffer",1344],[5,"WlSurface",3358],[1,"f64"],[6,"Request",1077],[6,"Event",1077],[5,"DndAction",1210],[5,"WlDataDeviceManager",1210],[6,"Request",1210],[6,"Event",1210],[5,"Iter",3651],[5,"IterNames",3651],[6,"Error",1344],[6,"Request",1344],[6,"Event",1344],[5,"WlDataSource",1467],[6,"Error",1467],[6,"Request",1467],[6,"Event",1467],[5,"WlKeyboard",1591],[6,"KeymapFormat",1591],[6,"KeyState",1591],[1,"u8"],[5,"Vec",3652],[6,"Request",1591],[6,"Event",1591],[5,"Mode",1746],[5,"WlOutput",1746],[6,"Subpixel",1746],[6,"Transform",1746],[6,"Request",1746],[6,"Event",1746],[5,"WlPointer",1969],[6,"Axis",1969],[6,"AxisRelativeDirection",1969],[6,"AxisSource",1969],[6,"ButtonState",1969],[6,"Error",1969],[6,"Request",1969],[6,"Event",1969],[5,"WlRegion",2230],[6,"Request",2230],[6,"Event",2230],[5,"Capability",2308],[5,"WlSeat",2308],[6,"Error",2308],[6,"Request",2308],[6,"Event",2308],[5,"WlShell",2480],[6,"Error",2480],[6,"Request",2480],[6,"Event",2480],[5,"Resize",2569],[5,"Transient",2569],[5,"WlShellSurface",2569],[6,"FullscreenMethod",2569],[6,"Request",2569],[6,"Event",2569],[5,"WlShm",2854],[6,"Error",2854],[6,"Format",2854],[6,"Request",2854],[6,"Event",2854],[5,"WlShmPool",3081],[6,"Request",3081],[6,"Event",3081],[5,"WlSubcompositor",3158],[6,"Error",3158],[6,"Request",3158],[6,"Event",3158],[5,"WlSubsurface",3252],[6,"Error",3252],[6,"Request",3252],[6,"Event",3252],[6,"Error",3358],[6,"Request",3358],[6,"Event",3358],[5,"WlTouch",3517],[6,"Request",3517],[6,"Event",3517],[10,"GlobalDispatch",0],[15,"BadMessage",255],[20,"wl_argument",508],[5,"wl_message",508],[15,"Done",1007],[15,"CreateSurface",1075],[15,"CreateRegion",1075],[15,"DataOffer",1194],[15,"Enter",1194],[15,"Selection",1194],[15,"Motion",1194],[15,"StartDrag",1204],[15,"SetSelection",1204],[15,"CreateDataSource",1341],[15,"GetDataDevice",1341],[15,"Action",1458],[15,"Offer",1458],[15,"SourceActions",1458],[15,"SetActions",1461],[15,"Receive",1461],[15,"Accept",1461],[15,"Action",1585],[15,"Send",1585],[15,"Target",1585],[15,"SetActions",1589],[15,"Offer",1589],[15,"RepeatInfo",1727],[15,"Keymap",1727],[15,"Modifiers",1727],[15,"Key",1727],[15,"Enter",1727],[15,"Leave",1727],[15,"Description",1954],[15,"Scale",1954],[15,"Mode",1954],[15,"Geometry",1954],[15,"Name",1954],[15,"Axis",2201],[15,"AxisStop",2201],[15,"AxisDiscrete",2201],[15,"AxisValue120",2201],[15,"AxisRelativeDirection",2201],[15,"AxisSource",2201],[15,"Button",2201],[15,"Enter",2201],[15,"Leave",2201],[15,"Motion",2201],[15,"SetCursor",2226],[15,"Add",2300],[15,"Subtract",2300],[15,"Capabilities",2475],[15,"Name",2475],[15,"GetPointer",2477],[15,"GetKeyboard",2477],[15,"GetTouch",2477],[15,"GetShellSurface",2567],[15,"Configure",2828],[15,"Ping",2828],[15,"SetClass",2832],[15,"Resize",2832],[15,"SetTransient",2832],[15,"SetPopup",2832],[15,"SetFullscreen",2832],[15,"SetMaximized",2832],[15,"Move",2832],[15,"Pong",2832],[15,"SetTitle",2832],[15,"Format",3077],[15,"CreatePool",3078],[15,"CreateBuffer",3151],[15,"Resize",3151],[15,"GetSubsurface",3249],[15,"PlaceAbove",3354],[15,"PlaceBelow",3354],[15,"SetPosition",3354],[15,"PreferredBufferScale",3495],[15,"Enter",3495],[15,"Leave",3495],[15,"PreferredBufferTransform",3495],[15,"Attach",3499],[15,"Frame",3499],[15,"Damage",3499],[15,"DamageBuffer",3499],[15,"SetOpaqueRegion",3499],[15,"SetInputRegion",3499],[15,"SetBufferScale",3499],[15,"SetBufferTransform",3499],[15,"Offset",3499],[15,"Down",3609],[15,"Up",3609],[15,"Motion",3609],[15,"Shape",3609],[15,"Orientation",3609]],"b":[[105,"impl-PartialEq-for-Weak%3CI%3E"],[106,"impl-PartialEq%3CI%3E-for-Weak%3CI%3E"],[116,"impl-Debug-for-BindError"],[117,"impl-Display-for-BindError"],[119,"impl-Display-for-DispatchError"],[120,"impl-Debug-for-DispatchError"],[366,"impl-Debug-for-ObjectId"],[367,"impl-Display-for-ObjectId"],[373,"impl-Display-for-InitError"],[374,"impl-Debug-for-InitError"],[375,"impl-Display-for-InvalidId"],[376,"impl-Debug-for-InvalidId"],[621,"impl-Display-for-Argument%3CId,+Fd%3E"],[622,"impl-Debug-for-Argument%3CId,+Fd%3E"],[623,"impl-Display-for-Interface"],[624,"impl-Debug-for-Interface"],[627,"impl-Display-for-ProtocolError"],[628,"impl-Debug-for-ProtocolError"],[630,"impl-Debug-for-WEnumError"],[631,"impl-Display-for-WEnumError"],[899,"impl-PartialEq%3CWeak%3CWlBuffer%3E%3E-for-WlBuffer"],[900,"impl-PartialEq-for-WlBuffer"],[965,"impl-PartialEq-for-WlCallback"],[966,"impl-PartialEq%3CWeak%3CWlCallback%3E%3E-for-WlCallback"],[1033,"impl-PartialEq%3CWeak%3CWlCompositor%3E%3E-for-WlCompositor"],[1034,"impl-PartialEq-for-WlCompositor"],[1136,"impl-PartialEq%3CWeak%3CWlDataDevice%3E%3E-for-WlDataDevice"],[1137,"impl-PartialEq-for-WlDataDevice"],[1237,"impl-Flags-for-DndAction"],[1238,"impl-DndAction"],[1260,"impl-PartialEq%3CWeak%3CWlDataDeviceManager%3E%3E-for-WlDataDeviceManager"],[1261,"impl-PartialEq-for-WlDataDeviceManager"],[1263,"impl-Binary-for-DndAction"],[1264,"impl-LowerHex-for-DndAction"],[1265,"impl-Debug-for-DndAction"],[1266,"impl-UpperHex-for-DndAction"],[1267,"impl-Octal-for-DndAction"],[1276,"impl-DndAction"],[1277,"impl-Flags-for-DndAction"],[1401,"impl-PartialEq%3CWeak%3CWlDataOffer%3E%3E-for-WlDataOffer"],[1402,"impl-PartialEq-for-WlDataOffer"],[1528,"impl-PartialEq%3CWeak%3CWlDataSource%3E%3E-for-WlDataSource"],[1529,"impl-PartialEq-for-WlDataSource"],[1654,"impl-PartialEq-for-WlKeyboard"],[1655,"impl-PartialEq%3CWeak%3CWlKeyboard%3E%3E-for-WlKeyboard"],[1806,"impl-Mode"],[1807,"impl-Flags-for-Mode"],[1843,"impl-PartialEq%3CWeak%3CWlOutput%3E%3E-for-WlOutput"],[1844,"impl-PartialEq-for-WlOutput"],[1848,"impl-Debug-for-Mode"],[1849,"impl-Octal-for-Mode"],[1850,"impl-Binary-for-Mode"],[1851,"impl-UpperHex-for-Mode"],[1852,"impl-LowerHex-for-Mode"],[1863,"impl-Flags-for-Mode"],[1864,"impl-Mode"],[2091,"impl-PartialEq%3CWeak%3CWlPointer%3E%3E-for-WlPointer"],[2092,"impl-PartialEq-for-WlPointer"],[2258,"impl-PartialEq%3CWeak%3CWlRegion%3E%3E-for-WlRegion"],[2259,"impl-PartialEq-for-WlRegion"],[2350,"impl-Capability"],[2351,"impl-Flags-for-Capability"],[2380,"impl-PartialEq%3CWeak%3CWlSeat%3E%3E-for-WlSeat"],[2381,"impl-PartialEq-for-WlSeat"],[2383,"impl-Octal-for-Capability"],[2384,"impl-LowerHex-for-Capability"],[2385,"impl-Binary-for-Capability"],[2386,"impl-UpperHex-for-Capability"],[2387,"impl-Debug-for-Capability"],[2398,"impl-Capability"],[2399,"impl-Flags-for-Capability"],[2512,"impl-PartialEq-for-WlShell"],[2513,"impl-PartialEq%3CWeak%3CWlShell%3E%3E-for-WlShell"],[2650,"impl-Resize"],[2651,"impl-Flags-for-Resize"],[2652,"impl-Flags-for-Transient"],[2653,"impl-Transient"],[2693,"impl-PartialEq-for-WlShellSurface"],[2694,"impl-PartialEq%3CWeak%3CWlShellSurface%3E%3E-for-WlShellSurface"],[2697,"impl-Octal-for-Resize"],[2698,"impl-UpperHex-for-Resize"],[2699,"impl-Debug-for-Resize"],[2700,"impl-Binary-for-Resize"],[2701,"impl-LowerHex-for-Resize"],[2702,"impl-Binary-for-Transient"],[2703,"impl-UpperHex-for-Transient"],[2704,"impl-LowerHex-for-Transient"],[2705,"impl-Octal-for-Transient"],[2706,"impl-Debug-for-Transient"],[2719,"impl-Resize"],[2720,"impl-Flags-for-Resize"],[2721,"impl-Transient"],[2722,"impl-Flags-for-Transient"],[3008,"impl-PartialEq%3CWeak%3CWlShm%3E%3E-for-WlShm"],[3009,"impl-PartialEq-for-WlShm"],[3109,"impl-PartialEq%3CWeak%3CWlShmPool%3E%3E-for-WlShmPool"],[3110,"impl-PartialEq-for-WlShmPool"],[3194,"impl-PartialEq-for-WlSubcompositor"],[3195,"impl-PartialEq%3CWeak%3CWlSubcompositor%3E%3E-for-WlSubcompositor"],[3299,"impl-PartialEq%3CWeak%3CWlSubsurface%3E%3E-for-WlSubsurface"],[3300,"impl-PartialEq-for-WlSubsurface"],[3437,"impl-PartialEq-for-WlSurface"],[3438,"impl-PartialEq%3CWeak%3CWlSurface%3E%3E-for-WlSurface"],[3562,"impl-PartialEq-for-WlTouch"],[3563,"impl-PartialEq%3CWeak%3CWlTouch%3E%3E-for-WlTouch"]]}],\
["wayland_sys",{"doc":"FFI bindings to the wayland system libraries.","t":"CCQCNNNNNNNNNNNNNNNNNNNNNGGGOONNNNNNNNNNOOOONNNNNNOONNNNNOOOOOOOOOOONNNNNNNNNNNNNNNOOOUFIHHIHHFFIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNGIGIGIIIIGGIFIGIGF","n":["client","common","ffi_dispatch","server","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_display","wl_event_queue","wl_proxy","a","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","event_count","events","f","fmt","from","from","from","from","from","h","i","into","into","into","into","into","n","name","name","next","o","prev","request_count","requests","s","signature","size","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","u","version","wl_argument","wl_array","wl_dispatcher_func_t","wl_fixed_from_double","wl_fixed_from_int","wl_fixed_t","wl_fixed_to_double","wl_fixed_to_int","wl_interface","wl_list","wl_log_func_t","wl_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","link","listener_list","notify","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wl_client","wl_client_for_each_resource_iterator_func_t","wl_display","wl_display_global_filter_func_t","wl_event_loop","wl_event_loop_fd_func_t","wl_event_loop_idle_func_t","wl_event_loop_signal_func_t","wl_event_loop_timer_func_t","wl_event_source","wl_global","wl_global_bind_func_t","wl_listener","wl_notify_func_t","wl_resource","wl_resource_destroy_func_t","wl_shm_buffer","wl_signal"],"q":[[0,"wayland_sys"],[4,"wayland_sys::client"],[28,"wayland_sys::common"],[98,"wayland_sys::server"],[182,"core::result"],[183,"core::any"],[184,"core::fmt"],[185,"core::fmt"]],"d":["Bindings to the client library <code>libwayland-client.so</code>","Various types and functions that are used by both the …","","Bindings to the client library <code>libwayland-server.so</code>","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,0,0,0,12,13,14,3,15,13,12,14,3,15,13,12,13,3,3,12,3,14,3,15,13,12,12,12,14,3,15,13,12,12,14,3,15,12,15,3,3,12,14,13,14,3,15,13,12,14,3,15,13,12,14,3,15,13,12,14,12,3,0,0,0,0,0,0,0,0,0,0,0,0,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,23,24,23,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,16,17,18,19,20,21,22,23,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"````{ce{}{}}00000{cc{}}00111{c{{b{e}}}{}{}}00000{cd{}}00`````3333333333````{{fh}j}33333``44444```````````222222222211111``````{ln}{A`n}`{nl}{nA`}````888888888888888888777777777888888888```666666666666666666555555555``````````````````","c":[],"p":[[6,"Result",182],[5,"TypeId",183],[5,"wl_interface",28],[5,"Formatter",184],[8,"Result",184],[1,"f64"],[8,"wl_fixed_t",28],[1,"i32"],[6,"wl_proxy",4],[6,"wl_display",4],[6,"wl_event_queue",4],[20,"wl_argument",28],[5,"wl_array",28],[5,"wl_message",28],[5,"wl_list",28],[6,"wl_client",98],[6,"wl_display",98],[6,"wl_event_loop",98],[6,"wl_event_source",98],[6,"wl_global",98],[6,"wl_resource",98],[6,"wl_shm_buffer",98],[5,"wl_listener",98],[5,"wl_signal",98]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
