searchState.loadedDescShard("io_lifetimes", 0, "Experimental new types and traits to replace the <code>Raw</code> …\nA trait to borrow the file descriptor from an underlying …\nA portable trait to borrow a reference from an underlying …\nA portable trait to borrow a reference from an underlying …\nA borrowed file descriptor.\nA reference to a filelike object.\nA reference to a socketlike object.\nA trait to express the ability to construct an object from …\nA portable trait to express the ability to construct an …\nA portable trait to express the ability to construct an …\nA trait to express the ability to consume an object and …\nA portable trait to express the ability to consume an …\nA portable trait to express the ability to consume an …\nAn owned file descriptor.\nAn owned filelike object.\nAn owned socketlike object.\nBorrows the file descriptor.\nBorrows the reference.\nReturn a borrowing view of a resource which dereferences …\nBorrows the reference.\nReturn a borrowing view of a resource which dereferences …\nReturn a <code>BorrowedFd</code> holding the given raw file descriptor.\nTakes ownership of a <code>ChildStderr</code>’s file descriptor.\nTakes ownership of a <code>ChildStdout</code>’s file descriptor.\nReturns the argument unchanged.\nTakes ownership of a <code>File</code>’s underlying file descriptor.\nTakes ownership of a <code>ChildStdin</code>’s file descriptor.\nTakes ownership of a <code>TcpStream</code>’s socket file descriptor.\nTakes ownership of a <code>TcpListener</code>’s socket file …\nTakes ownership of a <code>UnixListener</code>’s socket file …\nTakes ownership of a <code>UnixDatagram</code>’s socket file …\nTakes ownership of a <code>UdpSocket</code>’s file descriptor.\nTakes ownership of a <code>UnixStream</code>’s socket file descriptor.\nReturns the argument unchanged.\nConstructs a new instance of <code>Self</code> from the given file …\nConstructs a new instance of <code>Self</code> from the given filelike …\nConstructs a new instance of <code>Self</code> from the given file …\nConstructs a new instance of <code>Self</code> from the given file …\nConstructs a new instance of <code>Self</code> from the given filelike …\nConstructs a new instance of <code>Self</code> from the given …\nConstructs a new instance of <code>Self</code> from the given raw file …\nConstructs a new instance of <code>Self</code> from the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this object, returning the underlying file …\nConsumes this object, returning the underlying filelike …\nConsumes this object, returning the underlying socketlike …\nPortability abstractions over <code>Raw*</code>.\nCreates a new <code>OwnedFd</code> instance that shares the same …\nCreates a new <code>OwnedFd</code> instance that shares the same …\nTyped views using temporary objects.\nA portable trait to obtain the raw value of an underlying …\nThis is a portability abstraction over Unix-like <code>AsRawFd</code> …\nThis is a portability abstraction over Unix-like <code>FromRawFd</code> …\nThis is a portability abstraction over Unix-like <code>FromRawFd</code> …\nThis is a portability abstraction over Unix-like <code>IntoRawFd</code> …\nThis is a portability abstraction over Unix-like <code>IntoRawFd</code> …\nA raw filelike object.\nA raw socketlike object.\nReturns the raw value.\nReturns the raw value.\nConstructs <code>Self</code> from the raw value.\nConstructs <code>Self</code> from the raw value.\nReturns the raw value.\nReturns the raw value.\nA non-owning view of a resource which dereferences to a …\nDeclare that a type is safe to use in a <code>FilelikeView</code>.\nA non-owning view of a resource which dereferences to a …\nDeclare that a type is safe to use in a <code>SocketlikeView</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a temporary <code>Target</code> from raw and wrap it in a …\nConstruct a temporary <code>Target</code> from raw and wrap it in a …")